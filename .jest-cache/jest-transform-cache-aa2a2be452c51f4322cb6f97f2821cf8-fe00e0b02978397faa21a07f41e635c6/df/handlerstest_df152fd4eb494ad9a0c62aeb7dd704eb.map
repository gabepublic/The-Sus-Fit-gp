{"version":3,"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/__tests__/test/mocks/handlers.test.ts"],"sourcesContent":["import { handlers } from '@/test/mocks/handlers'\nimport { http, HttpResponse } from 'msw'\nimport { setupServer } from 'msw/node'\n\n// Create a test server\nconst server = setupServer(...handlers)\n\nbeforeAll(() => server.listen())\nafterEach(() => server.resetHandlers())\nafterAll(() => server.close())\n\ndescribe('mock handlers', () => {\n  it('has the correct number of handlers', () => {\n    expect(handlers).toHaveLength(4)\n  })\n\n  it('handles Claude API requests', async () => {\n    const response = await fetch('https://api.anthropic.com/v1/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'claude-3-sonnet-20240229',\n        messages: [{ role: 'user', content: 'Hello' }],\n      }),\n    })\n\n    const data = await response.json()\n\n    expect(response.status).toBe(200)\n    expect(data).toHaveProperty('id', 'msg_test123')\n    expect(data).toHaveProperty('type', 'message')\n    expect(data).toHaveProperty('role', 'assistant')\n    expect(data.content[0]).toHaveProperty('text', 'This is a mock response from Claude API')\n    expect(data).toHaveProperty('model', 'claude-3-sonnet-20240229')\n  })\n\n  it('handles Pinecone upsert requests', async () => {\n    const response = await fetch('https://api.pinecone.io/v1/indexes/test-index/vectors/upsert', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        vectors: [{ id: 'test-vector', values: [1, 2, 3] }],\n      }),\n    })\n\n    const data = await response.json()\n\n    expect(response.status).toBe(200)\n    expect(data).toHaveProperty('upsertedCount', 1)\n  })\n\n  it('handles Pinecone query requests', async () => {\n    const response = await fetch('https://api.pinecone.io/v1/indexes/test-index/vectors/query', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        vector: [1, 2, 3],\n        topK: 5,\n      }),\n    })\n\n    const data = await response.json()\n\n    expect(response.status).toBe(200)\n    expect(data).toHaveProperty('matches')\n    expect(data.matches).toHaveLength(1)\n    expect(data.matches[0]).toHaveProperty('id', 'test-vector-1')\n    expect(data.matches[0]).toHaveProperty('score', 0.9)\n    expect(data.matches[0].metadata).toHaveProperty('text', 'This is a test vector')\n  })\n\n  it('handles OpenAI API requests', async () => {\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'gpt-3.5-turbo',\n        messages: [{ role: 'user', content: 'Hello' }],\n      }),\n    })\n\n    const data = await response.json()\n\n    expect(response.status).toBe(200)\n    expect(data).toHaveProperty('id', 'chatcmpl-test123')\n    expect(data).toHaveProperty('object', 'chat.completion')\n    expect(data).toHaveProperty('model', 'gpt-3.5-turbo')\n    expect(data.choices[0].message).toHaveProperty('content', 'This is a mock response from OpenAI API')\n    expect(data.choices[0]).toHaveProperty('finish_reason', 'stop')\n  })\n\n  it('handles different Pinecone index names', async () => {\n    const response = await fetch('https://api.pinecone.io/v1/indexes/another-index/vectors/upsert', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        vectors: [{ id: 'test-vector', values: [1, 2, 3] }],\n      }),\n    })\n\n    const data = await response.json()\n\n    expect(response.status).toBe(200)\n    expect(data).toHaveProperty('upsertedCount', 1)\n  })\n\n  it('returns proper HTTP response structure', async () => {\n    const response = await fetch('https://api.anthropic.com/v1/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'claude-3-sonnet-20240229',\n        messages: [{ role: 'user', content: 'Hello' }],\n      }),\n    })\n\n    expect(response).toBeInstanceOf(Response)\n    expect(response.headers.get('content-type')).toContain('application/json')\n  })\n\n  it('handles requests with different payloads', async () => {\n    const response = await fetch('https://api.openai.com/v1/chat/completions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        model: 'gpt-4',\n        messages: [\n          { role: 'system', content: 'You are a helpful assistant' },\n          { role: 'user', content: 'What is 2+2?' },\n        ],\n        temperature: 0.7,\n      }),\n    })\n\n    const data = await response.json()\n\n    expect(response.status).toBe(200)\n    expect(data).toHaveProperty('choices')\n    expect(data.choices).toHaveLength(1)\n  })\n}) "],"names":["server","setupServer","handlers","beforeAll","listen","afterEach","resetHandlers","afterAll","close","describe","it","expect","toHaveLength","response","fetch","method","headers","body","JSON","stringify","model","messages","role","content","data","json","status","toBe","toHaveProperty","vectors","id","values","vector","topK","matches","metadata","choices","message","toBeInstanceOf","Response","get","toContain","temperature"],"mappings":"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"}