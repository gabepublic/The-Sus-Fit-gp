{"version":3,"names":["HeroImageWithButton","src","alt","className","priority","cov_mtm2vnmap","b","overlayButton","f","adjustedLeftPercent","setAdjustedLeftPercent","s","_react","useState","position","leftPercent","buttonScale","setButtonScale","isButtonReady","setIsButtonReady","containerRef","useRef","imageRef","buttonSizes","sm","md","lg","calculateButtonPositionAndSize","useCallback","baseLeftPercent","parseFloat","replace","current","image","renderedImageHeight","clientHeight","positionAdjustment","scale","newLeftPercent","window","screenWidth","innerWidth","handleImageLoad","setTimeout","useEffect","timeoutId","clearTimeout","handleResize","addEventListener","removeEventListener","shouldShowButton","_jsxruntime","jsx","_utils","cn","jsxs","ref","_image","default","fill","sizes","onLoad","style","transform","transformOrigin","onClick","disabled","size","left","top","topPercent","background","border","boxShadow"],"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/components/ui/hero-image-with-button.tsx"],"sourcesContent":["\"use client\"\n\nimport Image from \"next/image\"\nimport { cn } from \"@/lib/utils\"\nimport { useEffect, useState, useRef, useCallback } from \"react\"\n\ninterface OverlayButtonProps {\n    onClick: () => void\n    position: { leftPercent: string; topPercent: string }\n    className?: string\n    size?: 'sm' | 'md' | 'lg'\n    disabled?: boolean\n}\n\ninterface HeroImageProps {\n    src: string\n    alt: string\n    className?: string\n    priority?: boolean\n    overlayButton?: OverlayButtonProps | null\n}\n\nexport function HeroImageWithButton({\n                                        src,\n                                        alt,\n                                        className,\n                                        priority = true,\n                                        overlayButton\n                                    }: HeroImageProps) {\n    const [adjustedLeftPercent, setAdjustedLeftPercent] = useState(\n        overlayButton?.position.leftPercent || '41.65%'\n    )\n    const [buttonScale, setButtonScale] = useState(1)\n    const [isButtonReady, setIsButtonReady] = useState(false)\n    const containerRef = useRef<HTMLDivElement>(null)\n    const imageRef = useRef<HTMLImageElement>(null)\n\n    const buttonSizes = {\n        sm: 'w-6 h-6',\n        md: 'w-8 h-8',\n        lg: 'w-10 h-10'\n    }\n\n    const calculateButtonPositionAndSize = useCallback(() => {\n        if (!overlayButton) return\n\n        const baseLeftPercent = parseFloat(overlayButton.position.leftPercent.replace('%', ''))\n\n        // Try image-based calculation first\n        if (containerRef.current && imageRef.current) {\n            const image = imageRef.current\n            const renderedImageHeight = image.clientHeight\n\n\n            if (renderedImageHeight > 0) {\n                let positionAdjustment = 0\n                let scale = 1\n\n                if (renderedImageHeight < 500) {\n                    // Small camera image (laptop - 471px)\n                    positionAdjustment = 3.4   // Move button RIGHT\n                    scale = 0.67               // Scale button DOWN\n                } else if (renderedImageHeight < 600) {\n                    // Medium camera image (desktop - between 500-600px)\n                    positionAdjustment = 1.0  // Move button LEFT (negative)\n                    scale = 0.8                // Scale down slightly\n                } else {\n                    // Large camera image (27\" monitor - 634px+)\n                    positionAdjustment = 0     // Keep current position (perfect)\n                    scale = 1.0                // Keep full scale\n                }\n\n                const newLeftPercent = baseLeftPercent + positionAdjustment\n                setAdjustedLeftPercent(`${newLeftPercent}%`)\n                setButtonScale(scale)\n                setIsButtonReady(true) // Show button after calculations\n\n                // console.log('Height-based position & scale:', {\n                //     renderedImageHeight,\n                //     category: renderedImageHeight < 500 ? 'SMALL' : renderedImageHeight < 600 ? 'MEDIUM' : 'LARGE',\n                //     baseLeftPercent,\n                //     positionAdjustment,\n                //     newLeftPercent: newLeftPercent.toFixed(2),\n                //     buttonScale: scale,\n                //     finalScale: (1.5 * scale).toFixed(2)\n                // })\n                return\n            }\n        }\n\n        // Fallback: screen width\n        if (typeof window !== 'undefined') {\n            const screenWidth = window.innerWidth\n            let positionAdjustment = 0\n            let scale = 1\n\n            if (screenWidth < 1400) {\n                positionAdjustment = 6.0\n                scale = 0.67\n            } else if (screenWidth < 1800) {\n                positionAdjustment = -3.0  // Desktop adjustment\n                scale = 0.8\n            }\n\n            const newLeftPercent = baseLeftPercent + positionAdjustment\n            setAdjustedLeftPercent(`${newLeftPercent}%`)\n            setButtonScale(scale)\n        }\n    }, [overlayButton])\n\n\n    // Calculate position when image loads\n    const handleImageLoad = () => {\n        setTimeout(() => {\n            calculateButtonPositionAndSize()\n        }, 250)\n    }\n\n    // Initial calculation on mount\n    useEffect(() => {\n        calculateButtonPositionAndSize()\n        const timeoutId = setTimeout(calculateButtonPositionAndSize, 100)\n        return () => clearTimeout(timeoutId)\n    }, [overlayButton, calculateButtonPositionAndSize])\n\n    // Recalculate on window resize\n    useEffect(() => {\n        const handleResize = () => {\n            calculateButtonPositionAndSize()\n        }\n\n        window.addEventListener('resize', handleResize)\n        return () => window.removeEventListener('resize', handleResize)\n    }, [overlayButton, calculateButtonPositionAndSize])\n\n    // Always render button when overlayButton is provided, but apply disabled state\n    const shouldShowButton = overlayButton && isButtonReady\n\n    return (\n        <div className={cn(\n            \"relative w-full flex items-center justify-center\",\n            \"h-[50vh] min-h-[400px] max-h-[800px]\",\n            className\n        )}>\n            <div ref={containerRef} className=\"relative w-full h-full max-w-5xl\">\n                <Image\n                    ref={imageRef}\n                    src={src}\n                    alt={alt}\n                    fill\n                    priority={priority}\n                    className=\"object-contain drop-shadow-2xl\"\n                    sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 90vw, 80vw\"\n                    onLoad={handleImageLoad}\n                />\n\n                {/* Overlay Button - Only render when both images are uploaded */}\n                {shouldShowButton && (\n                    <div\n                        className=\"absolute inset-0\"\n                        style={{\n                            transform: 'scale(1.5)', // Keep this as it was\n                            transformOrigin: 'center center'\n                        }}\n                    >\n                        <button\n                            onClick={overlayButton.onClick}\n                            disabled={overlayButton.disabled}\n                            data-test=\"generate-button\"\n                                                                                            className={cn(\n                                    \"absolute z-[200] rounded-full pointer-events-auto\",\n                                    \"transition-all duration-150 ease-in-out\",\n                                overlayButton.disabled \n                                    ? \"cursor-not-allowed opacity-50\" \n                                    : \"hover:scale-110 active:scale-95 cursor-pointer\",\n                                buttonSizes[overlayButton.size || 'md'],\n                                overlayButton.className\n                            )}\n                            style={{\n                                left: adjustedLeftPercent,\n                                top: overlayButton.position.topPercent,\n                                transform: `translate(-50%, -50%) scale(${buttonScale})`,\n                                background: `\n                                    radial-gradient(circle at 35% 35%, rgba(255, 255, 255, 0.6) 0%, rgba(255, 255, 255, 0) 60%),\n                                    #D80E0E\n                                `,\n                                border: '2px solid #BF1212',\n                                boxShadow: `\n                                    0 15px 25px rgba(0, 0, 0, 0.4),\n                                    0 0 0 4px rgba(240, 228, 228, 0.5)\n                                `,\n                            }}\n                            aria-label=\"Camera capture button\"\n                        />\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n"],"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","ignoreList":[]}