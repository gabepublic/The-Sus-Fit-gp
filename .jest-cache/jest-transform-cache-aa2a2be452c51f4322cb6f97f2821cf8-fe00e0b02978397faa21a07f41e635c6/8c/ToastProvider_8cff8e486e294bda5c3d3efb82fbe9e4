11976fdc0e0f4ccfc59c9d6cbfd50df1
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    ToastProvider: function() {
        return ToastProvider;
    },
    useToast: function() {
        return useToast;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacttoast = /*#__PURE__*/ _interop_require_wildcard(require("@radix-ui/react-toast"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
// Create context
const ToastContext = /*#__PURE__*/ (0, _react.createContext)(undefined);
const useToast = ()=>{
    const context = (0, _react.useContext)(ToastContext);
    if (!context) {
        throw new Error('useToast must be used within a ToastProvider');
    }
    return context;
};
const ToastProvider = ({ children })=>{
    const [toasts, setToasts] = (0, _react.useState)([]);
    const showToast = (0, _react.useCallback)((message, variant = 'error')=>{
        const id = Math.random().toString(36).substr(2, 9);
        const newToast = {
            id,
            message,
            variant
        };
        setToasts((prev)=>[
                ...prev,
                newToast
            ]);
    }, []);
    const removeToast = (0, _react.useCallback)((id)=>{
        setToasts((prev)=>prev.filter((toast)=>toast.id !== id));
    }, []);
    // Get variant-specific styles
    const getVariantStyles = (variant)=>{
        switch(variant){
            case 'success':
                return 'bg-green-500 text-white border-green-600';
            case 'warning':
                return 'bg-yellow-500 text-white border-yellow-600';
            case 'info':
                return 'bg-blue-500 text-white border-blue-600';
            case 'error':
            default:
                return 'bg-red-500 text-white border-red-600';
        }
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(ToastContext.Provider, {
        value: {
            showToast
        },
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_reacttoast.Provider, {
            swipeDirection: "right",
            duration: 5000,
            children: [
                children,
                /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacttoast.Viewport, {
                    className: "fixed top-4 right-4 z-50 flex flex-col gap-2 w-full max-w-sm"
                }),
                toasts.map((toast)=>/*#__PURE__*/ (0, _jsxruntime.jsxs)(_reacttoast.Root, {
                        className: `
              flex items-center justify-between p-4 rounded-lg shadow-lg border
              ${getVariantStyles(toast.variant)}
              data-[state=open]:animate-slideDown
              data-[state=closed]:animate-slideUp
              data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)]
              data-[swipe=cancel]:translate-x-0
              data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)]
            `,
                        onOpenChange: (open)=>{
                            if (!open) {
                                removeToast(toast.id);
                            }
                        },
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "flex-1",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacttoast.Title, {
                                    className: "text-sm font-medium",
                                    children: toast.message
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)(_reacttoast.Close, {
                                className: "ml-4 text-white/80 hover:text-white transition-colors",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                                    width: "16",
                                    height: "16",
                                    viewBox: "0 0 16 16",
                                    fill: "none",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                        d: "M12 4L4 12M4 4L12 12",
                                        stroke: "currentColor",
                                        strokeWidth: "2",
                                        strokeLinecap: "round",
                                        strokeLinejoin: "round"
                                    })
                                })
                            })
                        ]
                    }, toast.id))
            ]
        })
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsc3RyZWV0ZXIvV2Vic3Rvcm1Qcm9qZWN0cy92aWJlLWNvZGluZy90aG9zZS1wZW9wbGUvVGhlLVN1cy1GaXQtZ3Avc3JjL2NvbXBvbmVudHMvVG9hc3RQcm92aWRlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgVG9hc3QgZnJvbSAnQHJhZGl4LXVpL3JlYWN0LXRvYXN0JztcblxuLy8gVG9hc3QgaXRlbSBpbnRlcmZhY2VcbmludGVyZmFjZSBUb2FzdEl0ZW0ge1xuICBpZDogc3RyaW5nO1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIHZhcmlhbnQ6ICdlcnJvcicgfCAnc3VjY2VzcycgfCAnaW5mbycgfCAnd2FybmluZyc7XG59XG5cbi8vIENvbnRleHQgaW50ZXJmYWNlXG5pbnRlcmZhY2UgVG9hc3RDb250ZXh0VHlwZSB7XG4gIHNob3dUb2FzdDogKG1lc3NhZ2U6IHN0cmluZywgdmFyaWFudD86IFRvYXN0SXRlbVsndmFyaWFudCddKSA9PiB2b2lkO1xufVxuXG4vLyBDcmVhdGUgY29udGV4dFxuY29uc3QgVG9hc3RDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxUb2FzdENvbnRleHRUeXBlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG4vLyBIb29rIHRvIHVzZSB0b2FzdCBjb250ZXh0XG5leHBvcnQgY29uc3QgdXNlVG9hc3QgPSAoKSA9PiB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KFRvYXN0Q29udGV4dCk7XG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlVG9hc3QgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIFRvYXN0UHJvdmlkZXInKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn07XG5cbi8vIFRvYXN0UHJvdmlkZXIgY29tcG9uZW50XG5pbnRlcmZhY2UgVG9hc3RQcm92aWRlclByb3BzIHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn1cblxuZXhwb3J0IGNvbnN0IFRvYXN0UHJvdmlkZXI6IFJlYWN0LkZDPFRvYXN0UHJvdmlkZXJQcm9wcz4gPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gIGNvbnN0IFt0b2FzdHMsIHNldFRvYXN0c10gPSB1c2VTdGF0ZTxUb2FzdEl0ZW1bXT4oW10pO1xuXG4gIGNvbnN0IHNob3dUb2FzdCA9IHVzZUNhbGxiYWNrKChtZXNzYWdlOiBzdHJpbmcsIHZhcmlhbnQ6IFRvYXN0SXRlbVsndmFyaWFudCddID0gJ2Vycm9yJykgPT4ge1xuICAgIGNvbnN0IGlkID0gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDkpO1xuICAgIGNvbnN0IG5ld1RvYXN0OiBUb2FzdEl0ZW0gPSB7IGlkLCBtZXNzYWdlLCB2YXJpYW50IH07XG4gICAgXG4gICAgc2V0VG9hc3RzKHByZXYgPT4gWy4uLnByZXYsIG5ld1RvYXN0XSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCByZW1vdmVUb2FzdCA9IHVzZUNhbGxiYWNrKChpZDogc3RyaW5nKSA9PiB7XG4gICAgc2V0VG9hc3RzKHByZXYgPT4gcHJldi5maWx0ZXIodG9hc3QgPT4gdG9hc3QuaWQgIT09IGlkKSk7XG4gIH0sIFtdKTtcblxuICAvLyBHZXQgdmFyaWFudC1zcGVjaWZpYyBzdHlsZXNcbiAgY29uc3QgZ2V0VmFyaWFudFN0eWxlcyA9ICh2YXJpYW50OiBUb2FzdEl0ZW1bJ3ZhcmlhbnQnXSkgPT4ge1xuICAgIHN3aXRjaCAodmFyaWFudCkge1xuICAgICAgY2FzZSAnc3VjY2Vzcyc6XG4gICAgICAgIHJldHVybiAnYmctZ3JlZW4tNTAwIHRleHQtd2hpdGUgYm9yZGVyLWdyZWVuLTYwMCc7XG4gICAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgICAgcmV0dXJuICdiZy15ZWxsb3ctNTAwIHRleHQtd2hpdGUgYm9yZGVyLXllbGxvdy02MDAnO1xuICAgICAgY2FzZSAnaW5mbyc6XG4gICAgICAgIHJldHVybiAnYmctYmx1ZS01MDAgdGV4dC13aGl0ZSBib3JkZXItYmx1ZS02MDAnO1xuICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuICdiZy1yZWQtNTAwIHRleHQtd2hpdGUgYm9yZGVyLXJlZC02MDAnO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxUb2FzdENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgc2hvd1RvYXN0IH19PlxuICAgICAgPFRvYXN0LlByb3ZpZGVyXG4gICAgICAgIHN3aXBlRGlyZWN0aW9uPVwicmlnaHRcIlxuICAgICAgICBkdXJhdGlvbj17NTAwMH1cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgICBcbiAgICAgICAgey8qIFRvYXN0IHZpZXdwb3J0ICovfVxuICAgICAgICA8VG9hc3QuVmlld3BvcnQgY2xhc3NOYW1lPVwiZml4ZWQgdG9wLTQgcmlnaHQtNCB6LTUwIGZsZXggZmxleC1jb2wgZ2FwLTIgdy1mdWxsIG1heC13LXNtXCIgLz5cbiAgICAgICAgXG4gICAgICAgIHsvKiBSZW5kZXIgdG9hc3RzICovfVxuICAgICAgICB7dG9hc3RzLm1hcCgodG9hc3QpID0+IChcbiAgICAgICAgICA8VG9hc3QuUm9vdFxuICAgICAgICAgICAga2V5PXt0b2FzdC5pZH1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17YFxuICAgICAgICAgICAgICBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gcC00IHJvdW5kZWQtbGcgc2hhZG93LWxnIGJvcmRlclxuICAgICAgICAgICAgICAke2dldFZhcmlhbnRTdHlsZXModG9hc3QudmFyaWFudCl9XG4gICAgICAgICAgICAgIGRhdGEtW3N0YXRlPW9wZW5dOmFuaW1hdGUtc2xpZGVEb3duXG4gICAgICAgICAgICAgIGRhdGEtW3N0YXRlPWNsb3NlZF06YW5pbWF0ZS1zbGlkZVVwXG4gICAgICAgICAgICAgIGRhdGEtW3N3aXBlPW1vdmVdOnRyYW5zbGF0ZS14LVt2YXIoLS1yYWRpeC10b2FzdC1zd2lwZS1tb3ZlLXgpXVxuICAgICAgICAgICAgICBkYXRhLVtzd2lwZT1jYW5jZWxdOnRyYW5zbGF0ZS14LTBcbiAgICAgICAgICAgICAgZGF0YS1bc3dpcGU9ZW5kXTp0cmFuc2xhdGUteC1bdmFyKC0tcmFkaXgtdG9hc3Qtc3dpcGUtZW5kLXgpXVxuICAgICAgICAgICAgYH1cbiAgICAgICAgICAgIG9uT3BlbkNoYW5nZT17KG9wZW4pID0+IHtcbiAgICAgICAgICAgICAgaWYgKCFvcGVuKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlVG9hc3QodG9hc3QuaWQpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC0xXCI+XG4gICAgICAgICAgICAgIDxUb2FzdC5UaXRsZSBjbGFzc05hbWU9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtXCI+XG4gICAgICAgICAgICAgICAge3RvYXN0Lm1lc3NhZ2V9XG4gICAgICAgICAgICAgIDwvVG9hc3QuVGl0bGU+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPFRvYXN0LkNsb3NlIGNsYXNzTmFtZT1cIm1sLTQgdGV4dC13aGl0ZS84MCBob3Zlcjp0ZXh0LXdoaXRlIHRyYW5zaXRpb24tY29sb3JzXCI+XG4gICAgICAgICAgICAgIDxzdmcgd2lkdGg9XCIxNlwiIGhlaWdodD1cIjE2XCIgdmlld0JveD1cIjAgMCAxNiAxNlwiIGZpbGw9XCJub25lXCI+XG4gICAgICAgICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgICAgICAgIGQ9XCJNMTIgNEw0IDEyTTQgNEwxMiAxMlwiXG4gICAgICAgICAgICAgICAgICBzdHJva2U9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg9XCIyXCJcbiAgICAgICAgICAgICAgICAgIHN0cm9rZUxpbmVjYXA9XCJyb3VuZFwiXG4gICAgICAgICAgICAgICAgICBzdHJva2VMaW5lam9pbj1cInJvdW5kXCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgICAgIDwvVG9hc3QuQ2xvc2U+XG4gICAgICAgICAgPC9Ub2FzdC5Sb290PlxuICAgICAgICApKX1cbiAgICAgIDwvVG9hc3QuUHJvdmlkZXI+XG4gICAgPC9Ub2FzdENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbIlRvYXN0UHJvdmlkZXIiLCJ1c2VUb2FzdCIsIlRvYXN0Q29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJ1bmRlZmluZWQiLCJjb250ZXh0IiwidXNlQ29udGV4dCIsIkVycm9yIiwiY2hpbGRyZW4iLCJ0b2FzdHMiLCJzZXRUb2FzdHMiLCJ1c2VTdGF0ZSIsInNob3dUb2FzdCIsInVzZUNhbGxiYWNrIiwibWVzc2FnZSIsInZhcmlhbnQiLCJpZCIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0ciIsIm5ld1RvYXN0IiwicHJldiIsInJlbW92ZVRvYXN0IiwiZmlsdGVyIiwidG9hc3QiLCJnZXRWYXJpYW50U3R5bGVzIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsIlRvYXN0Iiwic3dpcGVEaXJlY3Rpb24iLCJkdXJhdGlvbiIsIlZpZXdwb3J0IiwiY2xhc3NOYW1lIiwibWFwIiwiUm9vdCIsIm9uT3BlbkNoYW5nZSIsIm9wZW4iLCJkaXYiLCJUaXRsZSIsIkNsb3NlIiwic3ZnIiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiZmlsbCIsInBhdGgiLCJkIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7SUFrQ2FBLGFBQWE7ZUFBYkE7O0lBYkFDLFFBQVE7ZUFBUkE7Ozs7K0RBbkIyRDtvRUFDakQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWN2QixpQkFBaUI7QUFDakIsTUFBTUMsNkJBQWVDLElBQUFBLG9CQUFhLEVBQStCQztBQUcxRCxNQUFNSCxXQUFXO0lBQ3RCLE1BQU1JLFVBQVVDLElBQUFBLGlCQUFVLEVBQUNKO0lBQzNCLElBQUksQ0FBQ0csU0FBUztRQUNaLE1BQU0sSUFBSUUsTUFBTTtJQUNsQjtJQUNBLE9BQU9GO0FBQ1Q7QUFPTyxNQUFNTCxnQkFBOEMsQ0FBQyxFQUFFUSxRQUFRLEVBQUU7SUFDdEUsTUFBTSxDQUFDQyxRQUFRQyxVQUFVLEdBQUdDLElBQUFBLGVBQVEsRUFBYyxFQUFFO0lBRXBELE1BQU1DLFlBQVlDLElBQUFBLGtCQUFXLEVBQUMsQ0FBQ0MsU0FBaUJDLFVBQWdDLE9BQU87UUFDckYsTUFBTUMsS0FBS0MsS0FBS0MsTUFBTSxHQUFHQyxRQUFRLENBQUMsSUFBSUMsTUFBTSxDQUFDLEdBQUc7UUFDaEQsTUFBTUMsV0FBc0I7WUFBRUw7WUFBSUY7WUFBU0M7UUFBUTtRQUVuREwsVUFBVVksQ0FBQUEsT0FBUTttQkFBSUE7Z0JBQU1EO2FBQVM7SUFDdkMsR0FBRyxFQUFFO0lBRUwsTUFBTUUsY0FBY1YsSUFBQUEsa0JBQVcsRUFBQyxDQUFDRztRQUMvQk4sVUFBVVksQ0FBQUEsT0FBUUEsS0FBS0UsTUFBTSxDQUFDQyxDQUFBQSxRQUFTQSxNQUFNVCxFQUFFLEtBQUtBO0lBQ3RELEdBQUcsRUFBRTtJQUVMLDhCQUE4QjtJQUM5QixNQUFNVSxtQkFBbUIsQ0FBQ1g7UUFDeEIsT0FBUUE7WUFDTixLQUFLO2dCQUNILE9BQU87WUFDVCxLQUFLO2dCQUNILE9BQU87WUFDVCxLQUFLO2dCQUNILE9BQU87WUFDVCxLQUFLO1lBQ0w7Z0JBQ0UsT0FBTztRQUNYO0lBQ0Y7SUFFQSxxQkFDRSxxQkFBQ2IsYUFBYXlCLFFBQVE7UUFBQ0MsT0FBTztZQUFFaEI7UUFBVTtrQkFDeEMsY0FBQSxzQkFBQ2lCLFlBQU1GLFFBQVE7WUFDYkcsZ0JBQWU7WUFDZkMsVUFBVTs7Z0JBRVR2Qjs4QkFHRCxxQkFBQ3FCLFlBQU1HLFFBQVE7b0JBQUNDLFdBQVU7O2dCQUd6QnhCLE9BQU95QixHQUFHLENBQUMsQ0FBQ1Qsc0JBQ1gsc0JBQUNJLFlBQU1NLElBQUk7d0JBRVRGLFdBQVcsQ0FBQzs7Y0FFVixFQUFFUCxpQkFBaUJELE1BQU1WLE9BQU8sRUFBRTs7Ozs7O1lBTXBDLENBQUM7d0JBQ0RxQixjQUFjLENBQUNDOzRCQUNiLElBQUksQ0FBQ0EsTUFBTTtnQ0FDVGQsWUFBWUUsTUFBTVQsRUFBRTs0QkFDdEI7d0JBQ0Y7OzBDQUVBLHFCQUFDc0I7Z0NBQUlMLFdBQVU7MENBQ2IsY0FBQSxxQkFBQ0osWUFBTVUsS0FBSztvQ0FBQ04sV0FBVTs4Q0FDcEJSLE1BQU1YLE9BQU87OzswQ0FJbEIscUJBQUNlLFlBQU1XLEtBQUs7Z0NBQUNQLFdBQVU7MENBQ3JCLGNBQUEscUJBQUNRO29DQUFJQyxPQUFNO29DQUFLQyxRQUFPO29DQUFLQyxTQUFRO29DQUFZQyxNQUFLOzhDQUNuRCxjQUFBLHFCQUFDQzt3Q0FDQ0MsR0FBRTt3Q0FDRkMsUUFBTzt3Q0FDUEMsYUFBWTt3Q0FDWkMsZUFBYzt3Q0FDZEMsZ0JBQWU7Ozs7O3VCQTdCaEIxQixNQUFNVCxFQUFFOzs7O0FBc0N6QiJ9