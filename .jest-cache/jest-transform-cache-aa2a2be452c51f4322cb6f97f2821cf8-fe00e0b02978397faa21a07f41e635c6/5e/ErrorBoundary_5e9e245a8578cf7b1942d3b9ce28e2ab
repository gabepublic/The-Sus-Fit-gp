82fc13b0316616c0441c3be0798a05b9
'use client';
"use strict";

/* istanbul ignore next */
function cov_28pdawfymh() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/providers/ErrorBoundary.tsx";
  var hash = "3b5380cc71edb530b2737ed84fbeed924197750b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/providers/ErrorBoundary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 14,
          column: 56
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "7": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "8": {
        start: {
          line: 22,
          column: 50
        },
        end: {
          line: 22,
          column: 98
        }
      },
      "9": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "10": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "11": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 29
        }
      },
      "12": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 22
        }
      },
      "13": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 88
        }
      },
      "14": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 22
        }
      },
      "15": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 57
        }
      },
      "16": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 22
        }
      },
      "17": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 70
        }
      },
      "18": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 74,
          column: 7
        }
      },
      "19": {
        start: {
          line: 61,
          column: 63
        },
        end: {
          line: 65,
          column: 33
        }
      },
      "20": {
        start: {
          line: 62,
          column: 41
        },
        end: {
          line: 62,
          column: 66
        }
      },
      "21": {
        start: {
          line: 66,
          column: 51
        },
        end: {
          line: 66,
          column: 69
        }
      },
      "22": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "23": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 82,
          column: 15
        }
      },
      "24": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 10
        }
      },
      "25": {
        start: {
          line: 89,
          column: 30
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "26": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 103,
          column: 10
        }
      },
      "27": {
        start: {
          line: 106,
          column: 30
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "28": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 120,
          column: 11
        }
      },
      "29": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 55
        }
      },
      "30": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "31": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 78
        }
      },
      "32": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "33": {
        start: {
          line: 129,
          column: 38
        },
        end: {
          line: 129,
          column: 81
        }
      },
      "34": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 133,
          column: 15
        }
      },
      "35": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 20,
            column: 30
          }
        },
        loc: {
          start: {
            line: 20,
            column: 54
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 30
          },
          end: {
            line: 23,
            column: 31
          }
        },
        loc: {
          start: {
            line: 23,
            column: 40
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 61,
            column: 33
          }
        },
        loc: {
          start: {
            line: 61,
            column: 63
          },
          end: {
            line: 65,
            column: 33
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 37
          },
          end: {
            line: 62,
            column: 38
          }
        },
        loc: {
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 66
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 66,
            column: 46
          },
          end: {
            line: 66,
            column: 47
          }
        },
        loc: {
          start: {
            line: 66,
            column: 51
          },
          end: {
            line: 66,
            column: 69
          }
        },
        line: 66
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 77
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 78,
            column: 40
          },
          end: {
            line: 78,
            column: 41
          }
        },
        loc: {
          start: {
            line: 78,
            column: 44
          },
          end: {
            line: 83,
            column: 9
          }
        },
        line: 78
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 43
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 88
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 40
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 105
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 136,
            column: 5
          }
        },
        line: 127
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 22
          }
        }, {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 31,
            column: 22
          }
        }, {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 35,
            column: 22
          }
        }, {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 37,
            column: 70
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 57,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 22
          }
        }, {
          start: {
            line: 51,
            column: 40
          },
          end: {
            line: 57,
            column: 14
          }
        }],
        line: 51
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 70,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 66,
            column: 28
          }
        }, {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 70
          }
        }, {
          start: {
            line: 66,
            column: 88
          },
          end: {
            line: 70,
            column: 22
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 31
          }
        }, {
          start: {
            line: 94,
            column: 35
          },
          end: {
            line: 98,
            column: 13
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "7": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "8": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 128,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 128,
            column: 31
          }
        }, {
          start: {
            line: 128,
            column: 35
          },
          end: {
            line: 128,
            column: 51
          }
        }],
        line: 128
      },
      "9": {
        loc: {
          start: {
            line: 129,
            column: 38
          },
          end: {
            line: 129,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 38
          },
          end: {
            line: 129,
            column: 57
          }
        }, {
          start: {
            line: 129,
            column: 61
          },
          end: {
            line: 129,
            column: 81
          }
        }],
        line: 129
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/providers/ErrorBoundary.tsx"],
      sourcesContent: ["'use client';\n\nimport React from 'react';\nimport type { BusinessLayerError } from '../types/error.types';\nimport { \n  formatErrorForDisplay, \n  logAndClassifyError,\n  type ErrorRecoveryAction \n} from '../utils/errorHandling';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error?: BusinessLayerError;\n}\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n  fallback?: React.ComponentType<{ error: BusinessLayerError; resetError: () => void }>;\n  onError?: (error: BusinessLayerError, errorInfo: React.ErrorInfo) => void;\n}\n\nconst DefaultErrorFallback: React.FC<{ error: BusinessLayerError; resetError: () => void }> = ({ \n  error, \n  resetError \n}) => {\n  // Use comprehensive error handling to format the error\n  const { title, message, actions, canRetry } = formatErrorForDisplay(error);\n\n  const handleActionClick = (action: ErrorRecoveryAction) => {\n    switch (action.type) {\n      case 'retry':\n        resetError();\n        break;\n      case 'check_connection':\n        // Could open a help modal or redirect to network troubleshooting\n        window.open('https://support.google.com/chrome/answer/95669', '_blank');\n        break;\n      case 'contact_support':\n        // Could open support modal or redirect to support page\n        console.log('Contact support requested');\n        break;\n      default:\n        console.log(`Action not implemented: ${action.type}`);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-[200px] p-6 bg-red-50 border border-red-200 rounded-lg\">\n      <div className=\"text-red-600 text-lg font-semibold mb-2\">\n        {title}\n      </div>\n      <div className=\"text-red-500 text-sm mb-4 text-center max-w-md\">\n        {message}\n      </div>\n      {error.code && (\n        <div className=\"text-red-400 text-xs mb-4\">\n          Error Code: {error.code}\n        </div>\n      )}\n      \n      {/* Recovery Actions */}\n      <div className=\"flex flex-col gap-2 w-full max-w-sm\">\n        {actions.map((action, index) => (\n          <button\n            key={index}\n            onClick={() => handleActionClick(action)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors text-sm\"\n          >\n            {action.description}\n          </button>\n        ))}\n        \n        {/* Always show reset button if no other retry action */}\n        {canRetry && !actions.some(a => a.type === 'retry') && (\n          <button\n            onClick={resetError}\n            className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n          >\n            Try Again\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    const businessError: BusinessLayerError = {\n      name: error.name,\n      message: error.message,\n      code: 'COMPONENT_ERROR',\n      timestamp: new Date().toISOString(),\n      ...(('cause' in error) && { details: { cause: (error as Error & { cause?: unknown }).cause } }),\n    };\n\n    return {\n      hasError: true,\n      error: businessError,\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    const businessError: BusinessLayerError = {\n      name: error.name,\n      message: error.message,\n      code: 'COMPONENT_ERROR',\n      timestamp: new Date().toISOString(),\n      details: {\n        componentStack: errorInfo.componentStack,\n      },\n    };\n\n    // Use comprehensive error logging system\n    logAndClassifyError(businessError, {\n      errorBoundary: true,\n      componentStack: errorInfo.componentStack,\n      timestamp: new Date().toISOString()\n    });\n\n    this.props.onError?.(businessError, errorInfo);\n    \n    // Log to console in development for debugging\n    if (process.env.NODE_ENV === 'development') {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n  }\n\n  resetError = () => {\n    this.setState({ hasError: false, error: undefined });\n  };\n\n  render() {\n    if (this.state.hasError && this.state.error) {\n      const FallbackComponent = this.props.fallback || DefaultErrorFallback;\n      return <FallbackComponent error={this.state.error} resetError={this.resetError} />;\n    }\n\n    return this.props.children;\n  }\n}"],
      names: ["ErrorBoundary", "DefaultErrorFallback", "error", "resetError", "title", "message", "actions", "canRetry", "formatErrorForDisplay", "handleActionClick", "action", "type", "window", "open", "console", "log", "div", "className", "code", "map", "index", "button", "onClick", "description", "some", "a", "React", "Component", "constructor", "props", "setState", "hasError", "undefined", "state", "getDerivedStateFromError", "businessError", "name", "timestamp", "Date", "toISOString", "details", "cause", "componentDidCatch", "errorInfo", "componentStack", "logAndClassifyError", "errorBoundary", "onError", "process", "env", "NODE_ENV", "render", "FallbackComponent", "fallback", "children"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3b5380cc71edb530b2737ed84fbeed924197750b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28pdawfymh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_28pdawfymh();
cov_28pdawfymh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_28pdawfymh().s[1]++;
Object.defineProperty(exports, "ErrorBoundary", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_28pdawfymh().f[0]++;
    cov_28pdawfymh().s[2]++;
    return ErrorBoundary;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_28pdawfymh().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_28pdawfymh().s[4]++, _interop_require_default(require("react")));
const _errorHandling =
/* istanbul ignore next */
(cov_28pdawfymh().s[5]++, require("../utils/errorHandling"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_28pdawfymh().f[1]++;
  cov_28pdawfymh().s[6]++;
  return /* istanbul ignore next */(cov_28pdawfymh().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_28pdawfymh().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_28pdawfymh().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_28pdawfymh().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_28pdawfymh().s[7]++;
const DefaultErrorFallback = ({
  error,
  resetError
}) => {
  /* istanbul ignore next */
  cov_28pdawfymh().f[2]++;
  // Use comprehensive error handling to format the error
  const {
    title,
    message,
    actions,
    canRetry
  } =
  /* istanbul ignore next */
  (cov_28pdawfymh().s[8]++, (0, _errorHandling.formatErrorForDisplay)(error));
  /* istanbul ignore next */
  cov_28pdawfymh().s[9]++;
  const handleActionClick = action => {
    /* istanbul ignore next */
    cov_28pdawfymh().f[3]++;
    cov_28pdawfymh().s[10]++;
    switch (action.type) {
      case 'retry':
        /* istanbul ignore next */
        cov_28pdawfymh().b[2][0]++;
        cov_28pdawfymh().s[11]++;
        resetError();
        /* istanbul ignore next */
        cov_28pdawfymh().s[12]++;
        break;
      case 'check_connection':
        /* istanbul ignore next */
        cov_28pdawfymh().b[2][1]++;
        cov_28pdawfymh().s[13]++;
        // Could open a help modal or redirect to network troubleshooting
        window.open('https://support.google.com/chrome/answer/95669', '_blank');
        /* istanbul ignore next */
        cov_28pdawfymh().s[14]++;
        break;
      case 'contact_support':
        /* istanbul ignore next */
        cov_28pdawfymh().b[2][2]++;
        cov_28pdawfymh().s[15]++;
        // Could open support modal or redirect to support page
        console.log('Contact support requested');
        /* istanbul ignore next */
        cov_28pdawfymh().s[16]++;
        break;
      default:
        /* istanbul ignore next */
        cov_28pdawfymh().b[2][3]++;
        cov_28pdawfymh().s[17]++;
        console.log(`Action not implemented: ${action.type}`);
    }
  };
  /* istanbul ignore next */
  cov_28pdawfymh().s[18]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "flex flex-col items-center justify-center min-h-[200px] p-6 bg-red-50 border border-red-200 rounded-lg",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "text-red-600 text-lg font-semibold mb-2",
      children: title
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "text-red-500 text-sm mb-4 text-center max-w-md",
      children: message
    }),
    /* istanbul ignore next */
    (cov_28pdawfymh().b[3][0]++, error.code) &&
    /* istanbul ignore next */
    (cov_28pdawfymh().b[3][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "text-red-400 text-xs mb-4",
      children: ["Error Code: ", error.code]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex flex-col gap-2 w-full max-w-sm",
      children: [actions.map((action, index) => {
        /* istanbul ignore next */
        cov_28pdawfymh().f[4]++;
        cov_28pdawfymh().s[19]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: () => {
            /* istanbul ignore next */
            cov_28pdawfymh().f[5]++;
            cov_28pdawfymh().s[20]++;
            return handleActionClick(action);
          },
          className: "px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors text-sm",
          children: action.description
        }, index);
      }),
      /* istanbul ignore next */
      (cov_28pdawfymh().b[4][0]++, canRetry) &&
      /* istanbul ignore next */
      (cov_28pdawfymh().b[4][1]++, !actions.some(a => {
        /* istanbul ignore next */
        cov_28pdawfymh().f[6]++;
        cov_28pdawfymh().s[21]++;
        return a.type === 'retry';
      })) &&
      /* istanbul ignore next */
      (cov_28pdawfymh().b[4][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: resetError,
        className: "px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors",
        children: "Try Again"
      }))]
    })]
  });
};
class ErrorBoundary extends
/* istanbul ignore next */
(_react.default.Component) {
  constructor(props) {
    /* istanbul ignore next */
    cov_28pdawfymh().f[7]++;
    cov_28pdawfymh().s[22]++;
    super(props), this.resetError = () => {
      /* istanbul ignore next */
      cov_28pdawfymh().f[8]++;
      cov_28pdawfymh().s[23]++;
      this.setState({
        hasError: false,
        error: undefined
      });
    };
    /* istanbul ignore next */
    cov_28pdawfymh().s[24]++;
    this.state = {
      hasError: false
    };
  }
  static getDerivedStateFromError(error) {
    /* istanbul ignore next */
    cov_28pdawfymh().f[9]++;
    const businessError =
    /* istanbul ignore next */
    (cov_28pdawfymh().s[25]++, {
      name: error.name,
      message: error.message,
      code: 'COMPONENT_ERROR',
      timestamp: new Date().toISOString(),
      ...(
      /* istanbul ignore next */
      (cov_28pdawfymh().b[5][0]++, 'cause' in error) &&
      /* istanbul ignore next */
      (cov_28pdawfymh().b[5][1]++, {
        details: {
          cause: error.cause
        }
      }))
    });
    /* istanbul ignore next */
    cov_28pdawfymh().s[26]++;
    return {
      hasError: true,
      error: businessError
    };
  }
  componentDidCatch(error, errorInfo) {
    /* istanbul ignore next */
    cov_28pdawfymh().f[10]++;
    const businessError =
    /* istanbul ignore next */
    (cov_28pdawfymh().s[27]++, {
      name: error.name,
      message: error.message,
      code: 'COMPONENT_ERROR',
      timestamp: new Date().toISOString(),
      details: {
        componentStack: errorInfo.componentStack
      }
    });
    // Use comprehensive error logging system
    /* istanbul ignore next */
    cov_28pdawfymh().s[28]++;
    (0, _errorHandling.logAndClassifyError)(businessError, {
      errorBoundary: true,
      componentStack: errorInfo.componentStack,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_28pdawfymh().s[29]++;
    this.props.onError?.(businessError, errorInfo);
    // Log to console in development for debugging
    /* istanbul ignore next */
    cov_28pdawfymh().s[30]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_28pdawfymh().b[6][0]++;
      cov_28pdawfymh().s[31]++;
      console.error('ErrorBoundary caught an error:', error, errorInfo);
    } else
    /* istanbul ignore next */
    {
      cov_28pdawfymh().b[6][1]++;
    }
  }
  render() {
    /* istanbul ignore next */
    cov_28pdawfymh().f[11]++;
    cov_28pdawfymh().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_28pdawfymh().b[8][0]++, this.state.hasError) &&
    /* istanbul ignore next */
    (cov_28pdawfymh().b[8][1]++, this.state.error)) {
      /* istanbul ignore next */
      cov_28pdawfymh().b[7][0]++;
      const FallbackComponent =
      /* istanbul ignore next */
      (cov_28pdawfymh().s[33]++,
      /* istanbul ignore next */
      (cov_28pdawfymh().b[9][0]++, this.props.fallback) ||
      /* istanbul ignore next */
      (cov_28pdawfymh().b[9][1]++, DefaultErrorFallback));
      /* istanbul ignore next */
      cov_28pdawfymh().s[34]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(FallbackComponent, {
        error: this.state.error,
        resetError: this.resetError
      });
    } else
    /* istanbul ignore next */
    {
      cov_28pdawfymh().b[7][1]++;
    }
    cov_28pdawfymh().s[35]++;
    return this.props.children;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,