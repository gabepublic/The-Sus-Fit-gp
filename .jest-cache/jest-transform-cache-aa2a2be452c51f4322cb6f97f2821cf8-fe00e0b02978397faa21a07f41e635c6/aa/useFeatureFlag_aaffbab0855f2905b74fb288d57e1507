ce23a6adfa3edc5f8d50512660dcc6a2
// Feature Flag Hooks
// Custom React hooks for accessing feature flags with type safety and error handling
"use strict";

/* istanbul ignore next */
function cov_1uqq2xb7dm() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useFeatureFlag.ts";
  var hash = "c6350c3c8f43a08b381d39047adcc0d803f77b12";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useFeatureFlag.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 36
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 30
        }
      },
      "9": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 37
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 36
        }
      },
      "11": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "12": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 35
        }
      },
      "14": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 31
        }
      },
      "15": {
        start: {
          line: 48,
          column: 15
        },
        end: {
          line: 48,
          column: 31
        }
      },
      "16": {
        start: {
          line: 49,
          column: 28
        },
        end: {
          line: 49,
          column: 70
        }
      },
      "17": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "18": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "19": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 84
        }
      },
      "20": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 68
        }
      },
      "21": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "22": {
        start: {
          line: 59,
          column: 21
        },
        end: {
          line: 59,
          column: 41
        }
      },
      "23": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "24": {
        start: {
          line: 61,
          column: 22
        },
        end: {
          line: 61,
          column: 35
        }
      },
      "25": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 64,
          column: 29
        }
      },
      "26": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 30
        }
      },
      "27": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "28": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "29": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 44
        }
      },
      "30": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 28
        }
      },
      "31": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 33
        }
      },
      "32": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 46
        }
      },
      "33": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 31
        }
      },
      "34": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 41
        }
      },
      "35": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "36": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 45
        }
      },
      "37": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 45
        }
      },
      "38": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 45
        }
      },
      "39": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 68
        }
      },
      "40": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "41": {
        start: {
          line: 102,
          column: 22
        },
        end: {
          line: 102,
          column: 24
        }
      },
      "42": {
        start: {
          line: 103,
          column: 23
        },
        end: {
          line: 103,
          column: 25
        }
      },
      "43": {
        start: {
          line: 104,
          column: 27
        },
        end: {
          line: 104,
          column: 28
        }
      },
      "44": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "45": {
        start: {
          line: 106,
          column: 25
        },
        end: {
          line: 106,
          column: 45
        }
      },
      "46": {
        start: {
          line: 107,
          column: 33
        },
        end: {
          line: 107,
          column: 53
        }
      },
      "47": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 30
        }
      },
      "48": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "49": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 41
        }
      },
      "50": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 47
        }
      },
      "51": {
        start: {
          line: 111,
          column: 32
        },
        end: {
          line: 111,
          column: 47
        }
      },
      "52": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 54
        }
      },
      "53": {
        start: {
          line: 114,
          column: 38
        },
        end: {
          line: 114,
          column: 59
        }
      },
      "54": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 44
        }
      },
      "55": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 50
        }
      },
      "56": {
        start: {
          line: 116,
          column: 35
        },
        end: {
          line: 116,
          column: 50
        }
      },
      "57": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 60
        }
      },
      "58": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 127,
          column: 10
        }
      },
      "59": {
        start: {
          line: 135,
          column: 41
        },
        end: {
          line: 135,
          column: 62
        }
      },
      "60": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 149,
          column: 7
        }
      },
      "61": {
        start: {
          line: 137,
          column: 29
        },
        end: {
          line: 137,
          column: 69
        }
      },
      "62": {
        start: {
          line: 137,
          column: 48
        },
        end: {
          line: 137,
          column: 68
        }
      },
      "63": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 143,
          column: 10
        }
      },
      "64": {
        start: {
          line: 152,
          column: 41
        },
        end: {
          line: 152,
          column: 62
        }
      },
      "65": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 166,
          column: 7
        }
      },
      "66": {
        start: {
          line: 154,
          column: 30
        },
        end: {
          line: 154,
          column: 71
        }
      },
      "67": {
        start: {
          line: 154,
          column: 49
        },
        end: {
          line: 154,
          column: 70
        }
      },
      "68": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 160,
          column: 10
        }
      },
      "69": {
        start: {
          line: 169,
          column: 44
        },
        end: {
          line: 169,
          column: 70
        }
      },
      "70": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 181,
          column: 7
        }
      },
      "71": {
        start: {
          line: 170,
          column: 36
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "72": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 184,
          column: 68
        }
      },
      "73": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 191,
          column: 7
        }
      },
      "74": {
        start: {
          line: 185,
          column: 36
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "75": {
        start: {
          line: 194,
          column: 20
        },
        end: {
          line: 194,
          column: 68
        }
      },
      "76": {
        start: {
          line: 195,
          column: 4
        },
        end: {
          line: 206,
          column: 7
        }
      },
      "77": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "78": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 24
        }
      },
      "79": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "80": {
        start: {
          line: 209,
          column: 68
        },
        end: {
          line: 209,
          column: 119
        }
      },
      "81": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 233,
          column: 7
        }
      },
      "82": {
        start: {
          line: 211,
          column: 27
        },
        end: {
          line: 211,
          column: 40
        }
      },
      "83": {
        start: {
          line: 212,
          column: 24
        },
        end: {
          line: 212,
          column: 101
        }
      },
      "84": {
        start: {
          line: 213,
          column: 22
        },
        end: {
          line: 213,
          column: 67
        }
      },
      "85": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "86": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 137
        }
      },
      "87": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 223,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 16
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 14,
            column: 25
          }
        },
        loc: {
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 17,
            column: 32
          }
        },
        loc: {
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 20,
            column: 31
          }
        },
        loc: {
          start: {
            line: 20,
            column: 41
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 23,
            column: 27
          }
        },
        loc: {
          start: {
            line: 23,
            column: 37
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 21
          }
        },
        loc: {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 29,
            column: 28
          }
        },
        loc: {
          start: {
            line: 29,
            column: 38
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 32,
            column: 27
          }
        },
        loc: {
          start: {
            line: 32,
            column: 37
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 35,
            column: 28
          }
        },
        loc: {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 38,
            column: 27
          }
        },
        loc: {
          start: {
            line: 38,
            column: 37
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 26
          }
        },
        loc: {
          start: {
            line: 41,
            column: 36
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 44,
            column: 21
          },
          end: {
            line: 44,
            column: 22
          }
        },
        loc: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 51,
            column: 21
          },
          end: {
            line: 51,
            column: 22
          }
        },
        loc: {
          start: {
            line: 51,
            column: 43
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 51
      },
      "13": {
        name: "useFeatureFlag",
        decl: {
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 56,
            column: 23
          }
        },
        loc: {
          start: {
            line: 56,
            column: 43
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 56
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 58,
            column: 31
          },
          end: {
            line: 58,
            column: 32
          }
        },
        loc: {
          start: {
            line: 58,
            column: 35
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 58
      },
      "15": {
        name: "useFeatureFlagEnabled",
        decl: {
          start: {
            line: 90,
            column: 9
          },
          end: {
            line: 90,
            column: 30
          }
        },
        loc: {
          start: {
            line: 90,
            column: 58
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 90
      },
      "16": {
        name: "useFeatureFlagString",
        decl: {
          start: {
            line: 93,
            column: 9
          },
          end: {
            line: 93,
            column: 29
          }
        },
        loc: {
          start: {
            line: 93,
            column: 54
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 93
      },
      "17": {
        name: "useFeatureFlagNumber",
        decl: {
          start: {
            line: 96,
            column: 9
          },
          end: {
            line: 96,
            column: 29
          }
        },
        loc: {
          start: {
            line: 96,
            column: 53
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 96
      },
      "18": {
        name: "useFeatureFlags",
        decl: {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 99,
            column: 24
          }
        },
        loc: {
          start: {
            line: 99,
            column: 46
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 99
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 101,
            column: 31
          },
          end: {
            line: 101,
            column: 32
          }
        },
        loc: {
          start: {
            line: 101,
            column: 35
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 101
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 105,
            column: 21
          },
          end: {
            line: 105,
            column: 22
          }
        },
        loc: {
          start: {
            line: 105,
            column: 28
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 105
      },
      "21": {
        name: "useAnyFeatureFlagEnabled",
        decl: {
          start: {
            line: 134,
            column: 9
          },
          end: {
            line: 134,
            column: 33
          }
        },
        loc: {
          start: {
            line: 134,
            column: 40
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 134
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 136,
            column: 31
          },
          end: {
            line: 136,
            column: 32
          }
        },
        loc: {
          start: {
            line: 136,
            column: 35
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 136
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 137,
            column: 41
          },
          end: {
            line: 137,
            column: 42
          }
        },
        loc: {
          start: {
            line: 137,
            column: 48
          },
          end: {
            line: 137,
            column: 68
          }
        },
        line: 137
      },
      "24": {
        name: "useAllFeatureFlagsEnabled",
        decl: {
          start: {
            line: 151,
            column: 9
          },
          end: {
            line: 151,
            column: 34
          }
        },
        loc: {
          start: {
            line: 151,
            column: 41
          },
          end: {
            line: 167,
            column: 1
          }
        },
        line: 151
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 153,
            column: 31
          },
          end: {
            line: 153,
            column: 32
          }
        },
        loc: {
          start: {
            line: 153,
            column: 35
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 153
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 154,
            column: 42
          },
          end: {
            line: 154,
            column: 43
          }
        },
        loc: {
          start: {
            line: 154,
            column: 49
          },
          end: {
            line: 154,
            column: 70
          }
        },
        line: 154
      },
      "27": {
        name: "useFeatureFlagValue",
        decl: {
          start: {
            line: 168,
            column: 9
          },
          end: {
            line: 168,
            column: 28
          }
        },
        loc: {
          start: {
            line: 168,
            column: 63
          },
          end: {
            line: 182,
            column: 1
          }
        },
        line: 168
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 170,
            column: 31
          },
          end: {
            line: 170,
            column: 32
          }
        },
        loc: {
          start: {
            line: 170,
            column: 36
          },
          end: {
            line: 175,
            column: 9
          }
        },
        line: 170
      },
      "29": {
        name: "useFeatureFlagRefresh",
        decl: {
          start: {
            line: 183,
            column: 9
          },
          end: {
            line: 183,
            column: 30
          }
        },
        loc: {
          start: {
            line: 183,
            column: 33
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 183
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 185,
            column: 31
          },
          end: {
            line: 185,
            column: 32
          }
        },
        loc: {
          start: {
            line: 185,
            column: 36
          },
          end: {
            line: 189,
            column: 9
          }
        },
        line: 185
      },
      "31": {
        name: "useAllFeatureFlags",
        decl: {
          start: {
            line: 193,
            column: 9
          },
          end: {
            line: 193,
            column: 27
          }
        },
        loc: {
          start: {
            line: 193,
            column: 30
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 193
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 195,
            column: 31
          },
          end: {
            line: 195,
            column: 32
          }
        },
        loc: {
          start: {
            line: 195,
            column: 35
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 195
      },
      "33": {
        name: "useExperimentVariant",
        decl: {
          start: {
            line: 208,
            column: 9
          },
          end: {
            line: 208,
            column: 29
          }
        },
        loc: {
          start: {
            line: 208,
            column: 71
          },
          end: {
            line: 234,
            column: 1
          }
        },
        line: 208
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 210,
            column: 31
          },
          end: {
            line: 210,
            column: 32
          }
        },
        loc: {
          start: {
            line: 210,
            column: 35
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 210
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: 70,
            column: 15
          },
          end: {
            line: 74,
            column: 9
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 16
          }
        }, {
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 66,
            column: 32
          }
        }],
        line: 66
      },
      "3": {
        loc: {
          start: {
            line: 90,
            column: 36
          },
          end: {
            line: 90,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 90,
            column: 51
          },
          end: {
            line: 90,
            column: 56
          }
        }],
        line: 90
      },
      "4": {
        loc: {
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 93,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 93,
            column: 50
          },
          end: {
            line: 93,
            column: 52
          }
        }],
        line: 93
      },
      "5": {
        loc: {
          start: {
            line: 96,
            column: 35
          },
          end: {
            line: 96,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 96,
            column: 51
          }
        }],
        line: 96
      },
      "6": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 118,
            column: 13
          }
        }],
        line: 109
      },
      "7": {
        loc: {
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 109,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 109,
            column: 20
          }
        }, {
          start: {
            line: 109,
            column: 24
          },
          end: {
            line: 109,
            column: 36
          }
        }],
        line: 109
      },
      "8": {
        loc: {
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "9": {
        loc: {
          start: {
            line: 114,
            column: 38
          },
          end: {
            line: 114,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 38
          },
          end: {
            line: 114,
            column: 50
          }
        }, {
          start: {
            line: 114,
            column: 54
          },
          end: {
            line: 114,
            column: 59
          }
        }],
        line: 114
      },
      "10": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "11": {
        loc: {
          start: {
            line: 171,
            column: 19
          },
          end: {
            line: 171,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 31
          },
          end: {
            line: 171,
            column: 43
          }
        }, {
          start: {
            line: 171,
            column: 46
          },
          end: {
            line: 171,
            column: 59
          }
        }],
        line: 171
      },
      "12": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "13": {
        loc: {
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 75
          },
          end: {
            line: 212,
            column: 84
          }
        }, {
          start: {
            line: 212,
            column: 87
          },
          end: {
            line: 212,
            column: 101
          }
        }],
        line: 212
      },
      "14": {
        loc: {
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 34
          }
        }, {
          start: {
            line: 212,
            column: 38
          },
          end: {
            line: 212,
            column: 47
          }
        }, {
          start: {
            line: 212,
            column: 51
          },
          end: {
            line: 212,
            column: 72
          }
        }],
        line: 212
      },
      "15": {
        loc: {
          start: {
            line: 213,
            column: 22
          },
          end: {
            line: 213,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 22
          },
          end: {
            line: 213,
            column: 39
          }
        }, {
          start: {
            line: 213,
            column: 43
          },
          end: {
            line: 213,
            column: 67
          }
        }],
        line: 213
      },
      "16": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "17": {
        loc: {
          start: {
            line: 220,
            column: 28
          },
          end: {
            line: 220,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 28
          },
          end: {
            line: 220,
            column: 38
          }
        }, {
          start: {
            line: 220,
            column: 42
          },
          end: {
            line: 220,
            column: 51
          }
        }, {
          start: {
            line: 220,
            column: 55
          },
          end: {
            line: 220,
            column: 76
          }
        }],
        line: 220
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useFeatureFlag.ts"],
      sourcesContent: ["// Feature Flag Hooks\n// Custom React hooks for accessing feature flags with type safety and error handling\n\nimport { useMemo } from 'react';\nimport { useFeatureFlagContext } from '../providers/FeatureFlagContext';\nimport type {\n  FeatureFlag,\n  FeatureFlagValue,\n  UseFeatureFlagReturn,\n} from '../types/featureFlag.types';\n\n// Development logging utility\nconst logFlagUsage = (key: string, value: FeatureFlagValue, source: 'flag' | 'default') => {\n  if (process.env.NODE_ENV === 'development') {\n    console.debug(`[FeatureFlag] ${key}: ${JSON.stringify(value)} (${source})`);\n  }\n};\n\n/**\n * Hook to get a specific feature flag with type safety\n * @param key - Feature flag key\n * @param defaultValue - Fallback value if flag is not found or disabled\n * @returns Feature flag data with loading state and error handling\n */\nexport function useFeatureFlag<T extends FeatureFlagValue>(\n  key: string,\n  defaultValue?: T\n): UseFeatureFlagReturn<T> {\n  const context = useFeatureFlagContext();\n\n  return useMemo(() => {\n    const flag = context.getFlag<T>(key);\n    const isLoading = context.isLoading;\n    const error = context.error;\n\n    // Determine the final value\n    let value: T;\n    let isEnabled = false;\n    let source: 'flag' | 'default' = 'default';\n\n    if (flag && flag.enabled) {\n      value = flag.value as T;\n      isEnabled = Boolean(flag.value);\n      source = 'flag';\n    } else {\n      value = defaultValue as T;\n      isEnabled = Boolean(defaultValue);\n      source = 'default';\n    }\n\n    // Log usage in development\n    logFlagUsage(key, value, source);\n\n    return {\n      flag,\n      isEnabled,\n      value,\n      isLoading,\n      error,\n    };\n  }, [key, defaultValue, context]);\n}\n\n/**\n * Hook specifically for boolean feature flags\n * @param key - Feature flag key\n * @param defaultValue - Default boolean value (defaults to false)\n * @returns Boolean flag state with loading/error info\n */\nexport function useFeatureFlagEnabled(\n  key: string,\n  defaultValue = false\n): UseFeatureFlagReturn<boolean> {\n  return useFeatureFlag<boolean>(key, defaultValue);\n}\n\n/**\n * Hook for string feature flags\n * @param key - Feature flag key\n * @param defaultValue - Default string value\n * @returns String flag value with loading/error info\n */\nexport function useFeatureFlagString(\n  key: string,\n  defaultValue = ''\n): UseFeatureFlagReturn<string> {\n  return useFeatureFlag<string>(key, defaultValue);\n}\n\n/**\n * Hook for number feature flags\n * @param key - Feature flag key\n * @param defaultValue - Default number value\n * @returns Number flag value with loading/error info\n */\nexport function useFeatureFlagNumber(\n  key: string,\n  defaultValue = 0\n): UseFeatureFlagReturn<number> {\n  return useFeatureFlag<number>(key, defaultValue);\n}\n\n/**\n * Hook to get multiple feature flags at once\n * @param keys - Array of feature flag keys\n * @param defaultValues - Optional object with default values for each key\n * @returns Object containing all requested flags\n */\nexport function useFeatureFlags<T extends Record<string, FeatureFlagValue>>(\n  keys: string[],\n  defaultValues?: Partial<T>\n): {\n  flags: Record<string, FeatureFlag | undefined>;\n  values: Record<string, FeatureFlagValue>;\n  isLoading: boolean;\n  error: Error | null;\n  isAnyEnabled: boolean;\n  areAllEnabled: boolean;\n} {\n  const context = useFeatureFlagContext();\n\n  return useMemo(() => {\n    const flags: Record<string, FeatureFlag | undefined> = {};\n    const values: Record<string, FeatureFlagValue> = {};\n    let enabledCount = 0;\n\n    keys.forEach(key => {\n      const flag = context.getFlag(key);\n      const defaultValue = defaultValues?.[key];\n      \n      flags[key] = flag;\n      \n      if (flag && flag.enabled) {\n        values[key] = flag.value;\n        if (flag.value) enabledCount++;\n        logFlagUsage(key, flag.value, 'flag');\n      } else {\n        const fallbackValue = defaultValue ?? false;\n        values[key] = fallbackValue;\n        if (fallbackValue) enabledCount++;\n        logFlagUsage(key, fallbackValue, 'default');\n      }\n    });\n\n    return {\n      flags,\n      values,\n      isLoading: context.isLoading,\n      error: context.error,\n      isAnyEnabled: enabledCount > 0,\n      areAllEnabled: enabledCount === keys.length,\n    };\n  }, [keys, defaultValues, context]);\n}\n\n/**\n * Hook to check if any of the provided flags are enabled\n * @param keys - Array of feature flag keys to check\n * @returns True if any flag is enabled\n */\nexport function useAnyFeatureFlagEnabled(keys: string[]): {\n  isEnabled: boolean;\n  enabledFlags: string[];\n  isLoading: boolean;\n  error: Error | null;\n} {\n  const { values, isLoading, error } = useFeatureFlags(keys);\n\n  return useMemo(() => {\n    const enabledFlags = keys.filter(key => Boolean(values[key]));\n    \n    return {\n      isEnabled: enabledFlags.length > 0,\n      enabledFlags,\n      isLoading,\n      error,\n    };\n  }, [keys, values, isLoading, error]);\n}\n\n/**\n * Hook to check if all provided flags are enabled\n * @param keys - Array of feature flag keys to check\n * @returns True if all flags are enabled\n */\nexport function useAllFeatureFlagsEnabled(keys: string[]): {\n  isEnabled: boolean;\n  disabledFlags: string[];\n  isLoading: boolean;\n  error: Error | null;\n} {\n  const { values, isLoading, error } = useFeatureFlags(keys);\n\n  return useMemo(() => {\n    const disabledFlags = keys.filter(key => !Boolean(values[key]));\n    \n    return {\n      isEnabled: disabledFlags.length === 0,\n      disabledFlags,\n      isLoading,\n      error,\n    };\n  }, [keys, values, isLoading, error]);\n}\n\n/**\n * Hook for conditional feature flag usage with fallback behavior\n * @param key - Feature flag key\n * @param enabledValue - Value to return when flag is enabled\n * @param disabledValue - Value to return when flag is disabled\n * @returns The appropriate value based on flag state\n */\nexport function useFeatureFlagValue<T>(\n  key: string,\n  enabledValue: T,\n  disabledValue: T\n): {\n  value: T;\n  isEnabled: boolean;\n  isLoading: boolean;\n  error: Error | null;\n} {\n  const { isEnabled, isLoading, error } = useFeatureFlagEnabled(key);\n\n  return useMemo(() => ({\n    value: isEnabled ? enabledValue : disabledValue,\n    isEnabled,\n    isLoading,\n    error,\n  }), [isEnabled, enabledValue, disabledValue, isLoading, error]);\n}\n\n/**\n * Hook to refresh feature flags manually\n * @returns Function to refresh flags and loading state\n */\nexport function useFeatureFlagRefresh(): {\n  refresh: () => Promise<void>;\n  isRefreshing: boolean;\n  error: Error | null;\n} {\n  const context = useFeatureFlagContext();\n\n  return useMemo(() => ({\n    refresh: context.refreshFlags,\n    isRefreshing: context.isLoading,\n    error: context.error,\n  }), [context]);\n}\n\n/**\n * Development helper hook to get all available flags\n * Only works in development mode\n */\nexport function useAllFeatureFlags(): {\n  flags: Record<string, FeatureFlag>;\n  isLoading: boolean;\n  error: Error | null;\n} | null {\n  const context = useFeatureFlagContext();\n\n  return useMemo(() => {\n    if (process.env.NODE_ENV !== 'development') {\n      return null;\n    }\n\n    return {\n      flags: context.flags,\n      isLoading: context.isLoading,\n      error: context.error,\n    };\n  }, [context]);\n}\n\n/**\n * Hook for A/B testing scenarios\n * @param experimentKey - The experiment feature flag key\n * @param variants - Object mapping variant names to their values\n * @param defaultVariant - Default variant to use if flag is not found\n * @returns The variant value and metadata\n */\nexport function useExperimentVariant<T>(\n  experimentKey: string,\n  variants: Record<string, T>,\n  defaultVariant: string\n): {\n  variant: string;\n  value: T;\n  isInExperiment: boolean;\n  isLoading: boolean;\n  error: Error | null;\n} {\n  const { flag, value: flagValue, isEnabled, isLoading, error } = useFeatureFlagString(\n    experimentKey,\n    defaultVariant\n  );\n\n  return useMemo(() => {\n    const flagExists = Boolean(flag);\n    const variant = flagExists && isEnabled && flagValue in variants ? flagValue : defaultVariant;\n    const value = variants[variant] || variants[defaultVariant];\n\n    if (process.env.NODE_ENV === 'development') {\n      console.debug(`[Experiment] ${experimentKey}: variant=${variant}, value=${JSON.stringify(value)}, flagExists=${flagExists}`);\n    }\n\n    return {\n      variant,\n      value,\n      isInExperiment: flagExists && isEnabled && flagValue in variants,\n      isLoading,\n      error,\n    };\n  }, [experimentKey, variants, defaultVariant, flag, flagValue, isEnabled, isLoading, error]);\n}"],
      names: ["useAllFeatureFlags", "useAllFeatureFlagsEnabled", "useAnyFeatureFlagEnabled", "useExperimentVariant", "useFeatureFlag", "useFeatureFlagEnabled", "useFeatureFlagNumber", "useFeatureFlagRefresh", "useFeatureFlagString", "useFeatureFlagValue", "useFeatureFlags", "logFlagUsage", "key", "value", "source", "process", "env", "NODE_ENV", "console", "debug", "JSON", "stringify", "defaultValue", "context", "useFeatureFlagContext", "useMemo", "flag", "getFlag", "isLoading", "error", "isEnabled", "enabled", "Boolean", "keys", "defaultValues", "flags", "values", "enabledCount", "forEach", "fallbackValue", "isAnyEnabled", "areAllEnabled", "length", "enabledFlags", "filter", "disabledFlags", "enabledValue", "disabledValue", "refresh", "refreshFlags", "isRefreshing", "experimentKey", "variants", "defaultVariant", "flagValue", "flagExists", "variant", "isInExperiment"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c6350c3c8f43a08b381d39047adcc0d803f77b12"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uqq2xb7dm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uqq2xb7dm();
cov_1uqq2xb7dm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[0]++;
  cov_1uqq2xb7dm().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1uqq2xb7dm().s[3]++;
_export(exports, {
  useAllFeatureFlags: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[1]++;
    cov_1uqq2xb7dm().s[4]++;
    return useAllFeatureFlags;
  },
  useAllFeatureFlagsEnabled: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[2]++;
    cov_1uqq2xb7dm().s[5]++;
    return useAllFeatureFlagsEnabled;
  },
  useAnyFeatureFlagEnabled: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[3]++;
    cov_1uqq2xb7dm().s[6]++;
    return useAnyFeatureFlagEnabled;
  },
  useExperimentVariant: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[4]++;
    cov_1uqq2xb7dm().s[7]++;
    return useExperimentVariant;
  },
  useFeatureFlag: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[5]++;
    cov_1uqq2xb7dm().s[8]++;
    return useFeatureFlag;
  },
  useFeatureFlagEnabled: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[6]++;
    cov_1uqq2xb7dm().s[9]++;
    return useFeatureFlagEnabled;
  },
  useFeatureFlagNumber: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[7]++;
    cov_1uqq2xb7dm().s[10]++;
    return useFeatureFlagNumber;
  },
  useFeatureFlagRefresh: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[8]++;
    cov_1uqq2xb7dm().s[11]++;
    return useFeatureFlagRefresh;
  },
  useFeatureFlagString: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[9]++;
    cov_1uqq2xb7dm().s[12]++;
    return useFeatureFlagString;
  },
  useFeatureFlagValue: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[10]++;
    cov_1uqq2xb7dm().s[13]++;
    return useFeatureFlagValue;
  },
  useFeatureFlags: function () {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[11]++;
    cov_1uqq2xb7dm().s[14]++;
    return useFeatureFlags;
  }
});
const _react =
/* istanbul ignore next */
(cov_1uqq2xb7dm().s[15]++, require("react"));
const _FeatureFlagContext =
/* istanbul ignore next */
(cov_1uqq2xb7dm().s[16]++, require("../providers/FeatureFlagContext"));
// Development logging utility
/* istanbul ignore next */
cov_1uqq2xb7dm().s[17]++;
const logFlagUsage = (key, value, source) => {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[12]++;
  cov_1uqq2xb7dm().s[18]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().b[0][0]++;
    cov_1uqq2xb7dm().s[19]++;
    console.debug(`[FeatureFlag] ${key}: ${JSON.stringify(value)} (${source})`);
  } else
  /* istanbul ignore next */
  {
    cov_1uqq2xb7dm().b[0][1]++;
  }
};
function useFeatureFlag(key, defaultValue) {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[13]++;
  const context =
  /* istanbul ignore next */
  (cov_1uqq2xb7dm().s[20]++, (0, _FeatureFlagContext.useFeatureFlagContext)());
  /* istanbul ignore next */
  cov_1uqq2xb7dm().s[21]++;
  return (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[14]++;
    const flag =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[22]++, context.getFlag(key));
    const isLoading =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[23]++, context.isLoading);
    const error =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[24]++, context.error);
    // Determine the final value
    let value;
    let isEnabled =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[25]++, false);
    let source =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[26]++, 'default');
    /* istanbul ignore next */
    cov_1uqq2xb7dm().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().b[2][0]++, flag) &&
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().b[2][1]++, flag.enabled)) {
      /* istanbul ignore next */
      cov_1uqq2xb7dm().b[1][0]++;
      cov_1uqq2xb7dm().s[28]++;
      value = flag.value;
      /* istanbul ignore next */
      cov_1uqq2xb7dm().s[29]++;
      isEnabled = Boolean(flag.value);
      /* istanbul ignore next */
      cov_1uqq2xb7dm().s[30]++;
      source = 'flag';
    } else {
      /* istanbul ignore next */
      cov_1uqq2xb7dm().b[1][1]++;
      cov_1uqq2xb7dm().s[31]++;
      value = defaultValue;
      /* istanbul ignore next */
      cov_1uqq2xb7dm().s[32]++;
      isEnabled = Boolean(defaultValue);
      /* istanbul ignore next */
      cov_1uqq2xb7dm().s[33]++;
      source = 'default';
    }
    // Log usage in development
    /* istanbul ignore next */
    cov_1uqq2xb7dm().s[34]++;
    logFlagUsage(key, value, source);
    /* istanbul ignore next */
    cov_1uqq2xb7dm().s[35]++;
    return {
      flag,
      isEnabled,
      value,
      isLoading,
      error
    };
  }, [key, defaultValue, context]);
}
function useFeatureFlagEnabled(key, defaultValue =
/* istanbul ignore next */
(cov_1uqq2xb7dm().b[3][0]++, false)) {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[15]++;
  cov_1uqq2xb7dm().s[36]++;
  return useFeatureFlag(key, defaultValue);
}
function useFeatureFlagString(key, defaultValue =
/* istanbul ignore next */
(cov_1uqq2xb7dm().b[4][0]++, '')) {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[16]++;
  cov_1uqq2xb7dm().s[37]++;
  return useFeatureFlag(key, defaultValue);
}
function useFeatureFlagNumber(key, defaultValue =
/* istanbul ignore next */
(cov_1uqq2xb7dm().b[5][0]++, 0)) {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[17]++;
  cov_1uqq2xb7dm().s[38]++;
  return useFeatureFlag(key, defaultValue);
}
function useFeatureFlags(keys, defaultValues) {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[18]++;
  const context =
  /* istanbul ignore next */
  (cov_1uqq2xb7dm().s[39]++, (0, _FeatureFlagContext.useFeatureFlagContext)());
  /* istanbul ignore next */
  cov_1uqq2xb7dm().s[40]++;
  return (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[19]++;
    const flags =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[41]++, {});
    const values =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[42]++, {});
    let enabledCount =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[43]++, 0);
    /* istanbul ignore next */
    cov_1uqq2xb7dm().s[44]++;
    keys.forEach(key => {
      /* istanbul ignore next */
      cov_1uqq2xb7dm().f[20]++;
      const flag =
      /* istanbul ignore next */
      (cov_1uqq2xb7dm().s[45]++, context.getFlag(key));
      const defaultValue =
      /* istanbul ignore next */
      (cov_1uqq2xb7dm().s[46]++, defaultValues?.[key]);
      /* istanbul ignore next */
      cov_1uqq2xb7dm().s[47]++;
      flags[key] = flag;
      /* istanbul ignore next */
      cov_1uqq2xb7dm().s[48]++;
      if (
      /* istanbul ignore next */
      (cov_1uqq2xb7dm().b[7][0]++, flag) &&
      /* istanbul ignore next */
      (cov_1uqq2xb7dm().b[7][1]++, flag.enabled)) {
        /* istanbul ignore next */
        cov_1uqq2xb7dm().b[6][0]++;
        cov_1uqq2xb7dm().s[49]++;
        values[key] = flag.value;
        /* istanbul ignore next */
        cov_1uqq2xb7dm().s[50]++;
        if (flag.value) {
          /* istanbul ignore next */
          cov_1uqq2xb7dm().b[8][0]++;
          cov_1uqq2xb7dm().s[51]++;
          enabledCount++;
        } else
        /* istanbul ignore next */
        {
          cov_1uqq2xb7dm().b[8][1]++;
        }
        cov_1uqq2xb7dm().s[52]++;
        logFlagUsage(key, flag.value, 'flag');
      } else {
        /* istanbul ignore next */
        cov_1uqq2xb7dm().b[6][1]++;
        const fallbackValue =
        /* istanbul ignore next */
        (cov_1uqq2xb7dm().s[53]++,
        /* istanbul ignore next */
        (cov_1uqq2xb7dm().b[9][0]++, defaultValue) ??
        /* istanbul ignore next */
        (cov_1uqq2xb7dm().b[9][1]++, false));
        /* istanbul ignore next */
        cov_1uqq2xb7dm().s[54]++;
        values[key] = fallbackValue;
        /* istanbul ignore next */
        cov_1uqq2xb7dm().s[55]++;
        if (fallbackValue) {
          /* istanbul ignore next */
          cov_1uqq2xb7dm().b[10][0]++;
          cov_1uqq2xb7dm().s[56]++;
          enabledCount++;
        } else
        /* istanbul ignore next */
        {
          cov_1uqq2xb7dm().b[10][1]++;
        }
        cov_1uqq2xb7dm().s[57]++;
        logFlagUsage(key, fallbackValue, 'default');
      }
    });
    /* istanbul ignore next */
    cov_1uqq2xb7dm().s[58]++;
    return {
      flags,
      values,
      isLoading: context.isLoading,
      error: context.error,
      isAnyEnabled: enabledCount > 0,
      areAllEnabled: enabledCount === keys.length
    };
  }, [keys, defaultValues, context]);
}
function useAnyFeatureFlagEnabled(keys) {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[21]++;
  const {
    values,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_1uqq2xb7dm().s[59]++, useFeatureFlags(keys));
  /* istanbul ignore next */
  cov_1uqq2xb7dm().s[60]++;
  return (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[22]++;
    const enabledFlags =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[61]++, keys.filter(key => {
      /* istanbul ignore next */
      cov_1uqq2xb7dm().f[23]++;
      cov_1uqq2xb7dm().s[62]++;
      return Boolean(values[key]);
    }));
    /* istanbul ignore next */
    cov_1uqq2xb7dm().s[63]++;
    return {
      isEnabled: enabledFlags.length > 0,
      enabledFlags,
      isLoading,
      error
    };
  }, [keys, values, isLoading, error]);
}
function useAllFeatureFlagsEnabled(keys) {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[24]++;
  const {
    values,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_1uqq2xb7dm().s[64]++, useFeatureFlags(keys));
  /* istanbul ignore next */
  cov_1uqq2xb7dm().s[65]++;
  return (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[25]++;
    const disabledFlags =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[66]++, keys.filter(key => {
      /* istanbul ignore next */
      cov_1uqq2xb7dm().f[26]++;
      cov_1uqq2xb7dm().s[67]++;
      return !Boolean(values[key]);
    }));
    /* istanbul ignore next */
    cov_1uqq2xb7dm().s[68]++;
    return {
      isEnabled: disabledFlags.length === 0,
      disabledFlags,
      isLoading,
      error
    };
  }, [keys, values, isLoading, error]);
}
function useFeatureFlagValue(key, enabledValue, disabledValue) {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[27]++;
  const {
    isEnabled,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_1uqq2xb7dm().s[69]++, useFeatureFlagEnabled(key));
  /* istanbul ignore next */
  cov_1uqq2xb7dm().s[70]++;
  return (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[28]++;
    cov_1uqq2xb7dm().s[71]++;
    return {
      value: isEnabled ?
      /* istanbul ignore next */
      (cov_1uqq2xb7dm().b[11][0]++, enabledValue) :
      /* istanbul ignore next */
      (cov_1uqq2xb7dm().b[11][1]++, disabledValue),
      isEnabled,
      isLoading,
      error
    };
  }, [isEnabled, enabledValue, disabledValue, isLoading, error]);
}
function useFeatureFlagRefresh() {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[29]++;
  const context =
  /* istanbul ignore next */
  (cov_1uqq2xb7dm().s[72]++, (0, _FeatureFlagContext.useFeatureFlagContext)());
  /* istanbul ignore next */
  cov_1uqq2xb7dm().s[73]++;
  return (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[30]++;
    cov_1uqq2xb7dm().s[74]++;
    return {
      refresh: context.refreshFlags,
      isRefreshing: context.isLoading,
      error: context.error
    };
  }, [context]);
}
function useAllFeatureFlags() {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[31]++;
  const context =
  /* istanbul ignore next */
  (cov_1uqq2xb7dm().s[75]++, (0, _FeatureFlagContext.useFeatureFlagContext)());
  /* istanbul ignore next */
  cov_1uqq2xb7dm().s[76]++;
  return (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[32]++;
    cov_1uqq2xb7dm().s[77]++;
    if (process.env.NODE_ENV !== 'development') {
      /* istanbul ignore next */
      cov_1uqq2xb7dm().b[12][0]++;
      cov_1uqq2xb7dm().s[78]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1uqq2xb7dm().b[12][1]++;
    }
    cov_1uqq2xb7dm().s[79]++;
    return {
      flags: context.flags,
      isLoading: context.isLoading,
      error: context.error
    };
  }, [context]);
}
function useExperimentVariant(experimentKey, variants, defaultVariant) {
  /* istanbul ignore next */
  cov_1uqq2xb7dm().f[33]++;
  const {
    flag,
    value: flagValue,
    isEnabled,
    isLoading,
    error
  } =
  /* istanbul ignore next */
  (cov_1uqq2xb7dm().s[80]++, useFeatureFlagString(experimentKey, defaultVariant));
  /* istanbul ignore next */
  cov_1uqq2xb7dm().s[81]++;
  return (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_1uqq2xb7dm().f[34]++;
    const flagExists =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[82]++, Boolean(flag));
    const variant =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[83]++,
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().b[14][0]++, flagExists) &&
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().b[14][1]++, isEnabled) &&
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().b[14][2]++, flagValue in variants) ?
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().b[13][0]++, flagValue) :
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().b[13][1]++, defaultVariant));
    const value =
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().s[84]++,
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().b[15][0]++, variants[variant]) ||
    /* istanbul ignore next */
    (cov_1uqq2xb7dm().b[15][1]++, variants[defaultVariant]));
    /* istanbul ignore next */
    cov_1uqq2xb7dm().s[85]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1uqq2xb7dm().b[16][0]++;
      cov_1uqq2xb7dm().s[86]++;
      console.debug(`[Experiment] ${experimentKey}: variant=${variant}, value=${JSON.stringify(value)}, flagExists=${flagExists}`);
    } else
    /* istanbul ignore next */
    {
      cov_1uqq2xb7dm().b[16][1]++;
    }
    cov_1uqq2xb7dm().s[87]++;
    return {
      variant,
      value,
      isInExperiment:
      /* istanbul ignore next */
      (cov_1uqq2xb7dm().b[17][0]++, flagExists) &&
      /* istanbul ignore next */
      (cov_1uqq2xb7dm().b[17][1]++, isEnabled) &&
      /* istanbul ignore next */
      (cov_1uqq2xb7dm().b[17][2]++, flagValue in variants),
      isLoading,
      error
    };
  }, [experimentKey, variants, defaultVariant, flag, flagValue, isEnabled, isLoading, error]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,