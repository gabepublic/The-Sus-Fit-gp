f83eb1cf81a44a0a853cbf719d23e439
'use client';
"use strict";

/* istanbul ignore next */
function cov_2932cru4zt() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useTextOverlay.ts";
  var hash = "d1c5fb3069c1928e1df755b4f4b5fdbf0d533dcf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useTextOverlay.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 40
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "7": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "9": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 52
        }
      },
      "10": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 27,
          column: 93
        }
      },
      "11": {
        start: {
          line: 28,
          column: 30
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "12": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 95
        }
      },
      "13": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 87
        }
      },
      "15": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 59,
          column: 6
        }
      },
      "16": {
        start: {
          line: 38,
          column: 19
        },
        end: {
          line: 38,
          column: 31
        }
      },
      "17": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "18": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 55,
          column: 16
        }
      },
      "20": {
        start: {
          line: 48,
          column: 26
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "21": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 18
        }
      },
      "22": {
        start: {
          line: 60,
          column: 30
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "23": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 71,
          column: 16
        }
      },
      "24": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "25": {
        start: {
          line: 63,
          column: 55
        },
        end: {
          line: 70,
          column: 31
        }
      },
      "26": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "27": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 78,
          column: 16
        }
      },
      "28": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "29": {
        start: {
          line: 76,
          column: 58
        },
        end: {
          line: 76,
          column: 75
        }
      },
      "30": {
        start: {
          line: 80,
          column: 29
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "31": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 84,
          column: 16
        }
      },
      "32": {
        start: {
          line: 81,
          column: 26
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "33": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "34": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 94,
          column: 16
        }
      },
      "35": {
        start: {
          line: 87,
          column: 26
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "36": {
        start: {
          line: 89,
          column: 55
        },
        end: {
          line: 93,
          column: 31
        }
      },
      "37": {
        start: {
          line: 96,
          column: 29
        },
        end: {
          line: 105,
          column: 10
        }
      },
      "38": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 104,
          column: 16
        }
      },
      "39": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "40": {
        start: {
          line: 99,
          column: 55
        },
        end: {
          line: 103,
          column: 31
        }
      },
      "41": {
        start: {
          line: 106,
          column: 30
        },
        end: {
          line: 125,
          column: 6
        }
      },
      "42": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 82
        }
      },
      "43": {
        start: {
          line: 110,
          column: 32
        },
        end: {
          line: 110,
          column: 141
        }
      },
      "44": {
        start: {
          line: 110,
          column: 65
        },
        end: {
          line: 110,
          column: 80
        }
      },
      "45": {
        start: {
          line: 110,
          column: 95
        },
        end: {
          line: 110,
          column: 140
        }
      },
      "46": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "47": {
        start: {
          line: 112,
          column: 32
        },
        end: {
          line: 112,
          column: 78
        }
      },
      "48": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 120,
          column: 20
        }
      },
      "49": {
        start: {
          line: 114,
          column: 30
        },
        end: {
          line: 120,
          column: 17
        }
      },
      "50": {
        start: {
          line: 116,
          column: 53
        },
        end: {
          line: 119,
          column: 29
        }
      },
      "51": {
        start: {
          line: 126,
          column: 29
        },
        end: {
          line: 135,
          column: 6
        }
      },
      "52": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 82
        }
      },
      "53": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 132,
          column: 16
        }
      },
      "54": {
        start: {
          line: 128,
          column: 26
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "55": {
        start: {
          line: 136,
          column: 27
        },
        end: {
          line: 140,
          column: 6
        }
      },
      "56": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 65
        }
      },
      "57": {
        start: {
          line: 137,
          column: 46
        },
        end: {
          line: 137,
          column: 63
        }
      },
      "58": {
        start: {
          line: 141,
          column: 29
        },
        end: {
          line: 175,
          column: 6
        }
      },
      "59": {
        start: {
          line: 142,
          column: 24
        },
        end: {
          line: 142,
          column: 42
        }
      },
      "60": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 34
        }
      },
      "61": {
        start: {
          line: 143,
          column: 22
        },
        end: {
          line: 143,
          column: 34
        }
      },
      "62": {
        start: {
          line: 144,
          column: 22
        },
        end: {
          line: 144,
          column: 34
        }
      },
      "63": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 145,
          column: 30
        }
      },
      "64": {
        start: {
          line: 147,
          column: 26
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "65": {
        start: {
          line: 155,
          column: 34
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "66": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 170,
          column: 16
        }
      },
      "67": {
        start: {
          line: 163,
          column: 26
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "68": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 21
        }
      },
      "69": {
        start: {
          line: 176,
          column: 24
        },
        end: {
          line: 191,
          column: 10
        }
      },
      "70": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 190,
          column: 16
        }
      },
      "71": {
        start: {
          line: 177,
          column: 26
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "72": {
        start: {
          line: 179,
          column: 55
        },
        end: {
          line: 189,
          column: 31
        }
      },
      "73": {
        start: {
          line: 192,
          column: 27
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "74": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 58
        }
      },
      "75": {
        start: {
          line: 197,
          column: 27
        },
        end: {
          line: 210,
          column: 6
        }
      },
      "76": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 207,
          column: 16
        }
      },
      "77": {
        start: {
          line: 198,
          column: 26
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "78": {
        start: {
          line: 200,
          column: 51
        },
        end: {
          line: 205,
          column: 21
        }
      },
      "79": {
        start: {
          line: 211,
          column: 25
        },
        end: {
          line: 216,
          column: 10
        }
      },
      "80": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 215,
          column: 16
        }
      },
      "81": {
        start: {
          line: 212,
          column: 26
        },
        end: {
          line: 215,
          column: 13
        }
      },
      "82": {
        start: {
          line: 217,
          column: 24
        },
        end: {
          line: 222,
          column: 10
        }
      },
      "83": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 221,
          column: 16
        }
      },
      "84": {
        start: {
          line: 218,
          column: 26
        },
        end: {
          line: 221,
          column: 13
        }
      },
      "85": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 244,
          column: 6
        }
      },
      "86": {
        start: {
          line: 247,
          column: 46
        },
        end: {
          line: 247,
          column: 70
        }
      },
      "87": {
        start: {
          line: 248,
          column: 20
        },
        end: {
          line: 248,
          column: 65
        }
      },
      "88": {
        start: {
          line: 249,
          column: 37
        },
        end: {
          line: 251,
          column: 10
        }
      },
      "89": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 112
        }
      },
      "90": {
        start: {
          line: 252,
          column: 31
        },
        end: {
          line: 259,
          column: 10
        }
      },
      "91": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 258,
          column: 16
        }
      },
      "92": {
        start: {
          line: 253,
          column: 34
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "93": {
        start: {
          line: 260,
          column: 29
        },
        end: {
          line: 264,
          column: 6
        }
      },
      "94": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 29
        }
      },
      "95": {
        start: {
          line: 265,
          column: 31
        },
        end: {
          line: 270,
          column: 10
        }
      },
      "96": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 269,
          column: 11
        }
      },
      "97": {
        start: {
          line: 267,
          column: 49
        },
        end: {
          line: 267,
          column: 53
        }
      },
      "98": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 24
        }
      },
      "99": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 277,
          column: 6
        }
      },
      "100": {
        start: {
          line: 280,
          column: 38
        },
        end: {
          line: 280,
          column: 65
        }
      },
      "101": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 283,
          column: 10
        }
      },
      "102": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 27
        }
      },
      "103": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 286,
          column: 10
        }
      },
      "104": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 28
        }
      },
      "105": {
        start: {
          line: 287,
          column: 23
        },
        end: {
          line: 293,
          column: 6
        }
      },
      "106": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 290,
          column: 11
        }
      },
      "107": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 300,
          column: 6
        }
      },
      "108": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 297,
          column: 11
        }
      },
      "109": {
        start: {
          line: 301,
          column: 27
        },
        end: {
          line: 307,
          column: 6
        }
      },
      "110": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 304,
          column: 11
        }
      },
      "111": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 315,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 13,
            column: 31
          }
        },
        loc: {
          start: {
            line: 13,
            column: 41
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 20
          },
          end: {
            line: 16,
            column: 21
          }
        },
        loc: {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 20
          },
          end: {
            line: 19,
            column: 21
          }
        },
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "useTextOverlay",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 23
          }
        },
        loc: {
          start: {
            line: 26,
            column: 61
          },
          end: {
            line: 245,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 34,
            column: 48
          }
        },
        loc: {
          start: {
            line: 34,
            column: 51
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 37,
            column: 51
          },
          end: {
            line: 37,
            column: 52
          }
        },
        loc: {
          start: {
            line: 37,
            column: 61
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 37
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 18
          }
        },
        loc: {
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 55,
            column: 13
          }
        },
        line: 48
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 54
          },
          end: {
            line: 60,
            column: 55
          }
        },
        loc: {
          start: {
            line: 60,
            column: 74
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 60
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 61,
            column: 17
          },
          end: {
            line: 61,
            column: 18
          }
        },
        loc: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 71,
            column: 13
          }
        },
        line: 61
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 63,
            column: 44
          },
          end: {
            line: 63,
            column: 45
          }
        },
        loc: {
          start: {
            line: 63,
            column: 55
          },
          end: {
            line: 70,
            column: 31
          }
        },
        line: 63
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 73,
            column: 54
          },
          end: {
            line: 73,
            column: 55
          }
        },
        loc: {
          start: {
            line: 73,
            column: 60
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 73
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 74,
            column: 17
          },
          end: {
            line: 74,
            column: 18
          }
        },
        loc: {
          start: {
            line: 74,
            column: 26
          },
          end: {
            line: 78,
            column: 13
          }
        },
        line: 74
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 76,
            column: 47
          },
          end: {
            line: 76,
            column: 48
          }
        },
        loc: {
          start: {
            line: 76,
            column: 58
          },
          end: {
            line: 76,
            column: 75
          }
        },
        line: 76
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 80,
            column: 53
          },
          end: {
            line: 80,
            column: 54
          }
        },
        loc: {
          start: {
            line: 80,
            column: 59
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 80
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 81,
            column: 17
          },
          end: {
            line: 81,
            column: 18
          }
        },
        loc: {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 84,
            column: 13
          }
        },
        line: 81
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 86,
            column: 57
          },
          end: {
            line: 86,
            column: 58
          }
        },
        loc: {
          start: {
            line: 86,
            column: 72
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 86
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 87,
            column: 17
          },
          end: {
            line: 87,
            column: 18
          }
        },
        loc: {
          start: {
            line: 87,
            column: 26
          },
          end: {
            line: 94,
            column: 13
          }
        },
        line: 87
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 89,
            column: 44
          },
          end: {
            line: 89,
            column: 45
          }
        },
        loc: {
          start: {
            line: 89,
            column: 55
          },
          end: {
            line: 93,
            column: 31
          }
        },
        line: 89
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 96,
            column: 53
          },
          end: {
            line: 96,
            column: 54
          }
        },
        loc: {
          start: {
            line: 96,
            column: 67
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 96
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 97,
            column: 17
          },
          end: {
            line: 97,
            column: 18
          }
        },
        loc: {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 104,
            column: 13
          }
        },
        line: 97
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 99,
            column: 44
          },
          end: {
            line: 99,
            column: 45
          }
        },
        loc: {
          start: {
            line: 99,
            column: 55
          },
          end: {
            line: 103,
            column: 31
          }
        },
        line: 99
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 106,
            column: 54
          },
          end: {
            line: 106,
            column: 55
          }
        },
        loc: {
          start: {
            line: 106,
            column: 58
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 106
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 110,
            column: 54
          },
          end: {
            line: 110,
            column: 55
          }
        },
        loc: {
          start: {
            line: 110,
            column: 65
          },
          end: {
            line: 110,
            column: 80
          }
        },
        line: 110
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 110,
            column: 87
          },
          end: {
            line: 110,
            column: 88
          }
        },
        loc: {
          start: {
            line: 110,
            column: 95
          },
          end: {
            line: 110,
            column: 140
          }
        },
        line: 110
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 111,
            column: 32
          },
          end: {
            line: 111,
            column: 33
          }
        },
        loc: {
          start: {
            line: 111,
            column: 43
          },
          end: {
            line: 121,
            column: 9
          }
        },
        line: 111
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 114,
            column: 21
          },
          end: {
            line: 114,
            column: 22
          }
        },
        loc: {
          start: {
            line: 114,
            column: 30
          },
          end: {
            line: 120,
            column: 17
          }
        },
        line: 114
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 116,
            column: 48
          },
          end: {
            line: 116,
            column: 49
          }
        },
        loc: {
          start: {
            line: 116,
            column: 53
          },
          end: {
            line: 119,
            column: 29
          }
        },
        line: 116
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 126,
            column: 53
          },
          end: {
            line: 126,
            column: 54
          }
        },
        loc: {
          start: {
            line: 126,
            column: 57
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 126
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 128,
            column: 17
          },
          end: {
            line: 128,
            column: 18
          }
        },
        loc: {
          start: {
            line: 128,
            column: 26
          },
          end: {
            line: 132,
            column: 13
          }
        },
        line: 128
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 136,
            column: 51
          },
          end: {
            line: 136,
            column: 52
          }
        },
        loc: {
          start: {
            line: 136,
            column: 57
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 136
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 137,
            column: 35
          },
          end: {
            line: 137,
            column: 36
          }
        },
        loc: {
          start: {
            line: 137,
            column: 46
          },
          end: {
            line: 137,
            column: 63
          }
        },
        line: 137
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 141,
            column: 53
          },
          end: {
            line: 141,
            column: 54
          }
        },
        loc: {
          start: {
            line: 141,
            column: 59
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 141
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 163,
            column: 17
          },
          end: {
            line: 163,
            column: 18
          }
        },
        loc: {
          start: {
            line: 163,
            column: 26
          },
          end: {
            line: 170,
            column: 13
          }
        },
        line: 163
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 176,
            column: 48
          },
          end: {
            line: 176,
            column: 49
          }
        },
        loc: {
          start: {
            line: 176,
            column: 67
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 176
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 177,
            column: 17
          },
          end: {
            line: 177,
            column: 18
          }
        },
        loc: {
          start: {
            line: 177,
            column: 26
          },
          end: {
            line: 190,
            column: 13
          }
        },
        line: 177
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 179,
            column: 44
          },
          end: {
            line: 179,
            column: 45
          }
        },
        loc: {
          start: {
            line: 179,
            column: 55
          },
          end: {
            line: 189,
            column: 31
          }
        },
        line: 179
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 192,
            column: 51
          },
          end: {
            line: 192,
            column: 52
          }
        },
        loc: {
          start: {
            line: 192,
            column: 55
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 192
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 197,
            column: 51
          },
          end: {
            line: 197,
            column: 52
          }
        },
        loc: {
          start: {
            line: 197,
            column: 63
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 197
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 198,
            column: 17
          },
          end: {
            line: 198,
            column: 18
          }
        },
        loc: {
          start: {
            line: 198,
            column: 26
          },
          end: {
            line: 207,
            column: 13
          }
        },
        line: 198
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 200,
            column: 39
          },
          end: {
            line: 200,
            column: 40
          }
        },
        loc: {
          start: {
            line: 200,
            column: 51
          },
          end: {
            line: 205,
            column: 21
          }
        },
        line: 200
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 211,
            column: 49
          },
          end: {
            line: 211,
            column: 50
          }
        },
        loc: {
          start: {
            line: 211,
            column: 53
          },
          end: {
            line: 216,
            column: 5
          }
        },
        line: 211
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 212,
            column: 17
          },
          end: {
            line: 212,
            column: 18
          }
        },
        loc: {
          start: {
            line: 212,
            column: 26
          },
          end: {
            line: 215,
            column: 13
          }
        },
        line: 212
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 217,
            column: 48
          },
          end: {
            line: 217,
            column: 49
          }
        },
        loc: {
          start: {
            line: 217,
            column: 52
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 217
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 218,
            column: 17
          },
          end: {
            line: 218,
            column: 18
          }
        },
        loc: {
          start: {
            line: 218,
            column: 26
          },
          end: {
            line: 221,
            column: 13
          }
        },
        line: 218
      },
      "45": {
        name: "useTextPresets",
        decl: {
          start: {
            line: 246,
            column: 9
          },
          end: {
            line: 246,
            column: 23
          }
        },
        loc: {
          start: {
            line: 246,
            column: 26
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 246
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 249,
            column: 61
          },
          end: {
            line: 249,
            column: 62
          }
        },
        loc: {
          start: {
            line: 249,
            column: 105
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 249
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 252,
            column: 55
          },
          end: {
            line: 252,
            column: 56
          }
        },
        loc: {
          start: {
            line: 252,
            column: 70
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 252
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 253,
            column: 25
          },
          end: {
            line: 253,
            column: 26
          }
        },
        loc: {
          start: {
            line: 253,
            column: 34
          },
          end: {
            line: 258,
            column: 13
          }
        },
        line: 253
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 260,
            column: 53
          },
          end: {
            line: 260,
            column: 54
          }
        },
        loc: {
          start: {
            line: 260,
            column: 57
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 260
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 265,
            column: 55
          },
          end: {
            line: 265,
            column: 56
          }
        },
        loc: {
          start: {
            line: 265,
            column: 63
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 265
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 266,
            column: 25
          },
          end: {
            line: 266,
            column: 26
          }
        },
        loc: {
          start: {
            line: 266,
            column: 33
          },
          end: {
            line: 269,
            column: 9
          }
        },
        line: 266
      },
      "52": {
        name: "useInteractiveTextEditor",
        decl: {
          start: {
            line: 279,
            column: 9
          },
          end: {
            line: 279,
            column: 33
          }
        },
        loc: {
          start: {
            line: 279,
            column: 63
          },
          end: {
            line: 316,
            column: 1
          }
        },
        line: 279
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 281,
            column: 49
          },
          end: {
            line: 281,
            column: 50
          }
        },
        loc: {
          start: {
            line: 281,
            column: 53
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 281
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 284,
            column: 48
          },
          end: {
            line: 284,
            column: 49
          }
        },
        loc: {
          start: {
            line: 284,
            column: 52
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 284
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 287,
            column: 47
          },
          end: {
            line: 287,
            column: 48
          }
        },
        loc: {
          start: {
            line: 287,
            column: 55
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 287
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 294,
            column: 48
          },
          end: {
            line: 294,
            column: 49
          }
        },
        loc: {
          start: {
            line: 294,
            column: 57
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 294
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 301,
            column: 51
          },
          end: {
            line: 301,
            column: 52
          }
        },
        loc: {
          start: {
            line: 301,
            column: 63
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 301
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 63,
            column: 55
          },
          end: {
            line: 70,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 75
          },
          end: {
            line: 70,
            column: 21
          }
        }, {
          start: {
            line: 70,
            column: 24
          },
          end: {
            line: 70,
            column: 31
          }
        }],
        line: 63
      },
      "1": {
        loc: {
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 77,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 63
          },
          end: {
            line: 77,
            column: 67
          }
        }, {
          start: {
            line: 77,
            column: 70
          },
          end: {
            line: 77,
            column: 90
          }
        }],
        line: 77
      },
      "2": {
        loc: {
          start: {
            line: 89,
            column: 55
          },
          end: {
            line: 93,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 75
          },
          end: {
            line: 93,
            column: 21
          }
        }, {
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 93,
            column: 31
          }
        }],
        line: 89
      },
      "3": {
        loc: {
          start: {
            line: 99,
            column: 55
          },
          end: {
            line: 103,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 75
          },
          end: {
            line: 103,
            column: 21
          }
        }, {
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 31
          }
        }],
        line: 99
      },
      "4": {
        loc: {
          start: {
            line: 116,
            column: 53
          },
          end: {
            line: 119,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 75
          },
          end: {
            line: 119,
            column: 25
          }
        }, {
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 119,
            column: 29
          }
        }],
        line: 116
      },
      "5": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 143,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 143,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "6": {
        loc: {
          start: {
            line: 179,
            column: 55
          },
          end: {
            line: 189,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 75
          },
          end: {
            line: 189,
            column: 21
          }
        }, {
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 189,
            column: 31
          }
        }],
        line: 179
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useTextOverlay.ts"],
      sourcesContent: ["'use client';\n\n// Text Overlay React Hooks\n// React hooks for managing text overlays on canvas\n\nimport { useCallback, useRef, useState } from 'react';\nimport { useManagedCanvas, type ManagedCanvas } from '../providers/CanvasProvider';\nimport {\n  TextOverlayRenderer,\n  TextOverlayUtils,\n  createTextOverlayRenderer,\n  type TextOverlayConfig,\n  type TextMeasurement,\n  type TextStyle,\n  type TextPosition\n} from '../utils/textOverlay';\n\n/**\n * Text overlay item with unique ID\n */\nexport interface TextOverlayItem {\n  id: string;\n  config: TextOverlayConfig;\n  measurement?: TextMeasurement;\n  visible: boolean;\n  locked: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n/**\n * Text overlay manager state\n */\nexport interface TextOverlayState {\n  overlays: TextOverlayItem[];\n  activeOverlayId: string | null;\n  isEditing: boolean;\n}\n\n/**\n * Hook for managing text overlays on a canvas\n */\nexport function useTextOverlay(\n  canvasWidth: number,\n  canvasHeight: number,\n  canvasId?: string\n): {\n  canvas: ManagedCanvas;\n  renderer: TextOverlayRenderer;\n  overlays: TextOverlayItem[];\n  activeOverlayId: string | null;\n  isEditing: boolean;\n  addTextOverlay: (config: Omit<TextOverlayConfig, 'text'> & { text: string }) => string;\n  updateTextOverlay: (id: string, config: Partial<TextOverlayConfig>) => void;\n  removeTextOverlay: (id: string) => void;\n  setActiveOverlay: (id: string | null) => void;\n  setOverlayVisibility: (id: string, visible: boolean) => void;\n  setOverlayLocked: (id: string, locked: boolean) => void;\n  renderAllOverlays: () => void;\n  clearAllOverlays: () => void;\n  getOverlayById: (id: string) => TextOverlayItem | undefined;\n  duplicateOverlay: (id: string) => string | null;\n  moveOverlay: (id: string, newPosition: Partial<TextPosition>) => void;\n  exportOverlays: () => TextOverlayItem[];\n  importOverlays: (overlays: TextOverlayItem[]) => void;\n  startEditing: () => void;\n  stopEditing: () => void;\n} {\n  const canvas = useManagedCanvas(canvasWidth, canvasHeight, canvasId);\n  const [state, setState] = useState<TextOverlayState>({\n    overlays: [],\n    activeOverlayId: null,\n    isEditing: false\n  });\n\n  const rendererRef = useRef<TextOverlayRenderer>(createTextOverlayRenderer(canvas));\n\n  const generateId = useCallback(() => {\n    return `text-overlay-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }, []);\n\n  const addTextOverlay = useCallback((config: Omit<TextOverlayConfig, 'text'> & { text: string }): string => {\n    const id = generateId();\n    const now = new Date();\n    \n    const newOverlay: TextOverlayItem = {\n      id,\n      config: config as TextOverlayConfig,\n      visible: true,\n      locked: false,\n      createdAt: now,\n      updatedAt: now\n    };\n\n    setState(prev => ({\n      ...prev,\n      overlays: [...prev.overlays, newOverlay],\n      activeOverlayId: id\n    }));\n\n    return id;\n  }, [generateId]);\n\n  const updateTextOverlay = useCallback((id: string, configUpdate: Partial<TextOverlayConfig>) => {\n    setState(prev => ({\n      ...prev,\n      overlays: prev.overlays.map(overlay => \n        overlay.id === id \n          ? {\n              ...overlay,\n              config: { ...overlay.config, ...configUpdate },\n              updatedAt: new Date()\n            }\n          : overlay\n      )\n    }));\n  }, []);\n\n  const removeTextOverlay = useCallback((id: string) => {\n    setState(prev => ({\n      ...prev,\n      overlays: prev.overlays.filter(overlay => overlay.id !== id),\n      activeOverlayId: prev.activeOverlayId === id ? null : prev.activeOverlayId\n    }));\n  }, []);\n\n  const setActiveOverlay = useCallback((id: string | null) => {\n    setState(prev => ({ ...prev, activeOverlayId: id }));\n  }, []);\n\n  const setOverlayVisibility = useCallback((id: string, visible: boolean) => {\n    setState(prev => ({\n      ...prev,\n      overlays: prev.overlays.map(overlay =>\n        overlay.id === id ? { ...overlay, visible, updatedAt: new Date() } : overlay\n      )\n    }));\n  }, []);\n\n  const setOverlayLocked = useCallback((id: string, locked: boolean) => {\n    setState(prev => ({\n      ...prev,\n      overlays: prev.overlays.map(overlay =>\n        overlay.id === id ? { ...overlay, locked, updatedAt: new Date() } : overlay\n      )\n    }));\n  }, []);\n\n  const renderAllOverlays = useCallback(() => {\n    // Clear previous overlays\n    canvas.context.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);\n\n    // Render visible overlays in order\n    const visibleOverlays = state.overlays\n      .filter(overlay => overlay.visible)\n      .sort((a, b) => a.createdAt.getTime() - b.createdAt.getTime());\n\n    visibleOverlays.forEach(overlay => {\n      const measurement = rendererRef.current.renderText(overlay.config);\n      \n      // Update overlay with measurement\n      setState(prev => ({\n        ...prev,\n        overlays: prev.overlays.map(o => \n          o.id === overlay.id ? { ...o, measurement } : o\n        )\n      }));\n    });\n  }, [canvas, state.overlays]);\n\n  const clearAllOverlays = useCallback(() => {\n    canvas.context.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);\n    setState(prev => ({ ...prev, overlays: [], activeOverlayId: null }));\n  }, [canvas]);\n\n  const getOverlayById = useCallback((id: string): TextOverlayItem | undefined => {\n    return state.overlays.find(overlay => overlay.id === id);\n  }, [state.overlays]);\n\n  const duplicateOverlay = useCallback((id: string): string | null => {\n    const overlay = getOverlayById(id);\n    if (!overlay) return null;\n\n    const newId = generateId();\n    const now = new Date();\n    \n    // Offset position slightly\n    const newConfig = {\n      ...overlay.config,\n      position: {\n        ...overlay.config.position,\n        x: overlay.config.position.x + 20,\n        y: overlay.config.position.y + 20\n      }\n    };\n\n    const duplicatedOverlay: TextOverlayItem = {\n      id: newId,\n      config: newConfig,\n      visible: true,\n      locked: false,\n      createdAt: now,\n      updatedAt: now\n    };\n\n    setState(prev => ({\n      ...prev,\n      overlays: [...prev.overlays, duplicatedOverlay],\n      activeOverlayId: newId\n    }));\n\n    return newId;\n  }, [getOverlayById, generateId]);\n\n  const moveOverlay = useCallback((id: string, newPosition: Partial<TextPosition>) => {\n    setState(prev => ({\n      ...prev,\n      overlays: prev.overlays.map(overlay =>\n        overlay.id === id\n          ? {\n              ...overlay,\n              config: {\n                ...overlay.config,\n                position: { ...overlay.config.position, ...newPosition }\n              },\n              updatedAt: new Date()\n            }\n          : overlay\n      )\n    }));\n  }, []);\n\n  const exportOverlays = useCallback((): TextOverlayItem[] => {\n    return JSON.parse(JSON.stringify(state.overlays));\n  }, [state.overlays]);\n\n  const importOverlays = useCallback((overlays: TextOverlayItem[]) => {\n    setState(prev => ({\n      ...prev,\n      overlays: overlays.map(overlay => ({\n        ...overlay,\n        id: generateId(), // Generate new IDs to avoid conflicts\n        createdAt: new Date(overlay.createdAt),\n        updatedAt: new Date(overlay.updatedAt)\n      })),\n      activeOverlayId: null\n    }));\n  }, [generateId]);\n\n  const startEditing = useCallback(() => {\n    setState(prev => ({ ...prev, isEditing: true }));\n  }, []);\n\n  const stopEditing = useCallback(() => {\n    setState(prev => ({ ...prev, isEditing: false }));\n  }, []);\n\n  return {\n    canvas,\n    renderer: rendererRef.current,\n    overlays: state.overlays,\n    activeOverlayId: state.activeOverlayId,\n    isEditing: state.isEditing,\n    addTextOverlay,\n    updateTextOverlay,\n    removeTextOverlay,\n    setActiveOverlay,\n    setOverlayVisibility,\n    setOverlayLocked,\n    renderAllOverlays,\n    clearAllOverlays,\n    getOverlayById,\n    duplicateOverlay,\n    moveOverlay,\n    exportOverlays,\n    importOverlays,\n    startEditing,\n    stopEditing\n  };\n}\n\n/**\n * Hook for text style presets and utilities\n */\nexport function useTextPresets(): {\n  presets: ReturnType<typeof TextOverlayUtils.createPresets>;\n  calculateOptimalFontSize: (\n    text: string,\n    maxWidth: number,\n    maxHeight: number,\n    style: TextStyle,\n    canvas: HTMLCanvasElement\n  ) => number;\n  createCustomPreset: (name: string, style: TextStyle) => void;\n  getCustomPresets: () => Record<string, { style: TextStyle }>;\n  removeCustomPreset: (name: string) => void;\n} {\n  const [customPresets, setCustomPresets] = useState<Record<string, { style: TextStyle }>>({});\n\n  const presets = TextOverlayUtils.createPresets();\n\n  const calculateOptimalFontSize = useCallback((\n    text: string,\n    maxWidth: number,\n    maxHeight: number,\n    style: TextStyle,\n    canvas: HTMLCanvasElement\n  ) => {\n    return TextOverlayUtils.calculateOptimalFontSize(text, maxWidth, maxHeight, style, canvas);\n  }, []);\n\n  const createCustomPreset = useCallback((name: string, style: TextStyle) => {\n    setCustomPresets(prev => ({\n      ...prev,\n      [name]: { style }\n    }));\n  }, []);\n\n  const getCustomPresets = useCallback(() => {\n    return customPresets;\n  }, [customPresets]);\n\n  const removeCustomPreset = useCallback((name: string) => {\n    setCustomPresets(prev => {\n      const { [name]: removed, ...rest } = prev;\n      return rest;\n    });\n  }, []);\n\n  return {\n    presets,\n    calculateOptimalFontSize,\n    createCustomPreset,\n    getCustomPresets,\n    removeCustomPreset\n  };\n}\n\n/**\n * Hook for interactive text editing\n */\nexport function useInteractiveTextEditor(\n  canvas: ManagedCanvas,\n  overlayId: string,\n  onUpdate: (config: Partial<TextOverlayConfig>) => void\n): {\n  isEditing: boolean;\n  startEditing: () => void;\n  stopEditing: () => void;\n  updateText: (text: string) => void;\n  updateStyle: (style: Partial<TextStyle>) => void;\n  updatePosition: (position: Partial<TextPosition>) => void;\n} {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const startEditing = useCallback(() => {\n    setIsEditing(true);\n  }, []);\n\n  const stopEditing = useCallback(() => {\n    setIsEditing(false);\n  }, []);\n\n  const updateText = useCallback((text: string) => {\n    onUpdate({ text });\n  }, [onUpdate]);\n\n  const updateStyle = useCallback((style: Partial<TextStyle>) => {\n    onUpdate({ style });\n  }, [onUpdate]);\n\n  const updatePosition = useCallback((position: Partial<TextPosition>) => {\n    onUpdate({ position });\n  }, [onUpdate]);\n\n  return {\n    isEditing,\n    startEditing,\n    stopEditing,\n    updateText,\n    updateStyle,\n    updatePosition\n  };\n}"],
      names: ["useInteractiveTextEditor", "useTextOverlay", "useTextPresets", "canvasWidth", "canvasHeight", "canvasId", "canvas", "useManagedCanvas", "state", "setState", "useState", "overlays", "activeOverlayId", "isEditing", "rendererRef", "useRef", "createTextOverlayRenderer", "generateId", "useCallback", "Date", "now", "Math", "random", "toString", "substr", "addTextOverlay", "config", "id", "newOverlay", "visible", "locked", "createdAt", "updatedAt", "prev", "updateTextOverlay", "configUpdate", "map", "overlay", "removeTextOverlay", "filter", "setActiveOverlay", "setOverlayVisibility", "setOverlayLocked", "renderAllOverlays", "context", "clearRect", "width", "height", "visibleOverlays", "sort", "a", "b", "getTime", "forEach", "measurement", "current", "renderText", "o", "clearAllOverlays", "getOverlayById", "find", "duplicateOverlay", "newId", "newConfig", "position", "x", "y", "duplicatedOverlay", "moveOverlay", "newPosition", "exportOverlays", "JSON", "parse", "stringify", "importOverlays", "startEditing", "stopEditing", "renderer", "customPresets", "setCustomPresets", "presets", "TextOverlayUtils", "createPresets", "calculateOptimalFontSize", "text", "maxWidth", "maxHeight", "style", "createCustomPreset", "name", "getCustomPresets", "removeCustomPreset", "removed", "rest", "overlayId", "onUpdate", "setIsEditing", "updateText", "updateStyle", "updatePosition"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d1c5fb3069c1928e1df755b4f4b5fdbf0d533dcf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2932cru4zt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2932cru4zt();
cov_2932cru4zt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2932cru4zt().f[0]++;
  cov_2932cru4zt().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2932cru4zt().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2932cru4zt().s[3]++;
_export(exports, {
  useInteractiveTextEditor: function () {
    /* istanbul ignore next */
    cov_2932cru4zt().f[1]++;
    cov_2932cru4zt().s[4]++;
    return useInteractiveTextEditor;
  },
  useTextOverlay: function () {
    /* istanbul ignore next */
    cov_2932cru4zt().f[2]++;
    cov_2932cru4zt().s[5]++;
    return useTextOverlay;
  },
  useTextPresets: function () {
    /* istanbul ignore next */
    cov_2932cru4zt().f[3]++;
    cov_2932cru4zt().s[6]++;
    return useTextPresets;
  }
});
const _react =
/* istanbul ignore next */
(cov_2932cru4zt().s[7]++, require("react"));
const _CanvasProvider =
/* istanbul ignore next */
(cov_2932cru4zt().s[8]++, require("../providers/CanvasProvider"));
const _textOverlay =
/* istanbul ignore next */
(cov_2932cru4zt().s[9]++, require("../utils/textOverlay"));
function useTextOverlay(canvasWidth, canvasHeight, canvasId) {
  /* istanbul ignore next */
  cov_2932cru4zt().f[4]++;
  const canvas =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[10]++, (0, _CanvasProvider.useManagedCanvas)(canvasWidth, canvasHeight, canvasId));
  const [state, setState] =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[11]++, (0, _react.useState)({
    overlays: [],
    activeOverlayId: null,
    isEditing: false
  }));
  const rendererRef =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[12]++, (0, _react.useRef)((0, _textOverlay.createTextOverlayRenderer)(canvas)));
  const generateId =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[13]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[5]++;
    cov_2932cru4zt().s[14]++;
    return `text-overlay-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
  }, []));
  const addTextOverlay =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[15]++, (0, _react.useCallback)(config => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[6]++;
    const id =
    /* istanbul ignore next */
    (cov_2932cru4zt().s[16]++, generateId());
    const now =
    /* istanbul ignore next */
    (cov_2932cru4zt().s[17]++, new Date());
    const newOverlay =
    /* istanbul ignore next */
    (cov_2932cru4zt().s[18]++, {
      id,
      config: config,
      visible: true,
      locked: false,
      createdAt: now,
      updatedAt: now
    });
    /* istanbul ignore next */
    cov_2932cru4zt().s[19]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[7]++;
      cov_2932cru4zt().s[20]++;
      return {
        ...prev,
        overlays: [...prev.overlays, newOverlay],
        activeOverlayId: id
      };
    });
    /* istanbul ignore next */
    cov_2932cru4zt().s[21]++;
    return id;
  }, [generateId]));
  const updateTextOverlay =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[22]++, (0, _react.useCallback)((id, configUpdate) => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[8]++;
    cov_2932cru4zt().s[23]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[9]++;
      cov_2932cru4zt().s[24]++;
      return {
        ...prev,
        overlays: prev.overlays.map(overlay => {
          /* istanbul ignore next */
          cov_2932cru4zt().f[10]++;
          cov_2932cru4zt().s[25]++;
          return overlay.id === id ?
          /* istanbul ignore next */
          (cov_2932cru4zt().b[0][0]++, {
            ...overlay,
            config: {
              ...overlay.config,
              ...configUpdate
            },
            updatedAt: new Date()
          }) :
          /* istanbul ignore next */
          (cov_2932cru4zt().b[0][1]++, overlay);
        })
      };
    });
  }, []));
  const removeTextOverlay =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[26]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[11]++;
    cov_2932cru4zt().s[27]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[12]++;
      cov_2932cru4zt().s[28]++;
      return {
        ...prev,
        overlays: prev.overlays.filter(overlay => {
          /* istanbul ignore next */
          cov_2932cru4zt().f[13]++;
          cov_2932cru4zt().s[29]++;
          return overlay.id !== id;
        }),
        activeOverlayId: prev.activeOverlayId === id ?
        /* istanbul ignore next */
        (cov_2932cru4zt().b[1][0]++, null) :
        /* istanbul ignore next */
        (cov_2932cru4zt().b[1][1]++, prev.activeOverlayId)
      };
    });
  }, []));
  const setActiveOverlay =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[30]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[14]++;
    cov_2932cru4zt().s[31]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[15]++;
      cov_2932cru4zt().s[32]++;
      return {
        ...prev,
        activeOverlayId: id
      };
    });
  }, []));
  const setOverlayVisibility =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[33]++, (0, _react.useCallback)((id, visible) => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[16]++;
    cov_2932cru4zt().s[34]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[17]++;
      cov_2932cru4zt().s[35]++;
      return {
        ...prev,
        overlays: prev.overlays.map(overlay => {
          /* istanbul ignore next */
          cov_2932cru4zt().f[18]++;
          cov_2932cru4zt().s[36]++;
          return overlay.id === id ?
          /* istanbul ignore next */
          (cov_2932cru4zt().b[2][0]++, {
            ...overlay,
            visible,
            updatedAt: new Date()
          }) :
          /* istanbul ignore next */
          (cov_2932cru4zt().b[2][1]++, overlay);
        })
      };
    });
  }, []));
  const setOverlayLocked =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[37]++, (0, _react.useCallback)((id, locked) => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[19]++;
    cov_2932cru4zt().s[38]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[20]++;
      cov_2932cru4zt().s[39]++;
      return {
        ...prev,
        overlays: prev.overlays.map(overlay => {
          /* istanbul ignore next */
          cov_2932cru4zt().f[21]++;
          cov_2932cru4zt().s[40]++;
          return overlay.id === id ?
          /* istanbul ignore next */
          (cov_2932cru4zt().b[3][0]++, {
            ...overlay,
            locked,
            updatedAt: new Date()
          }) :
          /* istanbul ignore next */
          (cov_2932cru4zt().b[3][1]++, overlay);
        })
      };
    });
  }, []));
  const renderAllOverlays =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[41]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[22]++;
    cov_2932cru4zt().s[42]++;
    // Clear previous overlays
    canvas.context.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);
    // Render visible overlays in order
    const visibleOverlays =
    /* istanbul ignore next */
    (cov_2932cru4zt().s[43]++, state.overlays.filter(overlay => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[23]++;
      cov_2932cru4zt().s[44]++;
      return overlay.visible;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[24]++;
      cov_2932cru4zt().s[45]++;
      return a.createdAt.getTime() - b.createdAt.getTime();
    }));
    /* istanbul ignore next */
    cov_2932cru4zt().s[46]++;
    visibleOverlays.forEach(overlay => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[25]++;
      const measurement =
      /* istanbul ignore next */
      (cov_2932cru4zt().s[47]++, rendererRef.current.renderText(overlay.config));
      // Update overlay with measurement
      /* istanbul ignore next */
      cov_2932cru4zt().s[48]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_2932cru4zt().f[26]++;
        cov_2932cru4zt().s[49]++;
        return {
          ...prev,
          overlays: prev.overlays.map(o => {
            /* istanbul ignore next */
            cov_2932cru4zt().f[27]++;
            cov_2932cru4zt().s[50]++;
            return o.id === overlay.id ?
            /* istanbul ignore next */
            (cov_2932cru4zt().b[4][0]++, {
              ...o,
              measurement
            }) :
            /* istanbul ignore next */
            (cov_2932cru4zt().b[4][1]++, o);
          })
        };
      });
    });
  }, [canvas, state.overlays]));
  const clearAllOverlays =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[51]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[28]++;
    cov_2932cru4zt().s[52]++;
    canvas.context.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);
    /* istanbul ignore next */
    cov_2932cru4zt().s[53]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[29]++;
      cov_2932cru4zt().s[54]++;
      return {
        ...prev,
        overlays: [],
        activeOverlayId: null
      };
    });
  }, [canvas]));
  const getOverlayById =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[55]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[30]++;
    cov_2932cru4zt().s[56]++;
    return state.overlays.find(overlay => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[31]++;
      cov_2932cru4zt().s[57]++;
      return overlay.id === id;
    });
  }, [state.overlays]));
  const duplicateOverlay =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[58]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[32]++;
    const overlay =
    /* istanbul ignore next */
    (cov_2932cru4zt().s[59]++, getOverlayById(id));
    /* istanbul ignore next */
    cov_2932cru4zt().s[60]++;
    if (!overlay) {
      /* istanbul ignore next */
      cov_2932cru4zt().b[5][0]++;
      cov_2932cru4zt().s[61]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2932cru4zt().b[5][1]++;
    }
    const newId =
    /* istanbul ignore next */
    (cov_2932cru4zt().s[62]++, generateId());
    const now =
    /* istanbul ignore next */
    (cov_2932cru4zt().s[63]++, new Date());
    // Offset position slightly
    const newConfig =
    /* istanbul ignore next */
    (cov_2932cru4zt().s[64]++, {
      ...overlay.config,
      position: {
        ...overlay.config.position,
        x: overlay.config.position.x + 20,
        y: overlay.config.position.y + 20
      }
    });
    const duplicatedOverlay =
    /* istanbul ignore next */
    (cov_2932cru4zt().s[65]++, {
      id: newId,
      config: newConfig,
      visible: true,
      locked: false,
      createdAt: now,
      updatedAt: now
    });
    /* istanbul ignore next */
    cov_2932cru4zt().s[66]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[33]++;
      cov_2932cru4zt().s[67]++;
      return {
        ...prev,
        overlays: [...prev.overlays, duplicatedOverlay],
        activeOverlayId: newId
      };
    });
    /* istanbul ignore next */
    cov_2932cru4zt().s[68]++;
    return newId;
  }, [getOverlayById, generateId]));
  const moveOverlay =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[69]++, (0, _react.useCallback)((id, newPosition) => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[34]++;
    cov_2932cru4zt().s[70]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[35]++;
      cov_2932cru4zt().s[71]++;
      return {
        ...prev,
        overlays: prev.overlays.map(overlay => {
          /* istanbul ignore next */
          cov_2932cru4zt().f[36]++;
          cov_2932cru4zt().s[72]++;
          return overlay.id === id ?
          /* istanbul ignore next */
          (cov_2932cru4zt().b[6][0]++, {
            ...overlay,
            config: {
              ...overlay.config,
              position: {
                ...overlay.config.position,
                ...newPosition
              }
            },
            updatedAt: new Date()
          }) :
          /* istanbul ignore next */
          (cov_2932cru4zt().b[6][1]++, overlay);
        })
      };
    });
  }, []));
  const exportOverlays =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[73]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[37]++;
    cov_2932cru4zt().s[74]++;
    return JSON.parse(JSON.stringify(state.overlays));
  }, [state.overlays]));
  const importOverlays =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[75]++, (0, _react.useCallback)(overlays => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[38]++;
    cov_2932cru4zt().s[76]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[39]++;
      cov_2932cru4zt().s[77]++;
      return {
        ...prev,
        overlays: overlays.map(overlay => {
          /* istanbul ignore next */
          cov_2932cru4zt().f[40]++;
          cov_2932cru4zt().s[78]++;
          return {
            ...overlay,
            id: generateId(),
            createdAt: new Date(overlay.createdAt),
            updatedAt: new Date(overlay.updatedAt)
          };
        }),
        activeOverlayId: null
      };
    });
  }, [generateId]));
  const startEditing =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[79]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[41]++;
    cov_2932cru4zt().s[80]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[42]++;
      cov_2932cru4zt().s[81]++;
      return {
        ...prev,
        isEditing: true
      };
    });
  }, []));
  const stopEditing =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[82]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[43]++;
    cov_2932cru4zt().s[83]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[44]++;
      cov_2932cru4zt().s[84]++;
      return {
        ...prev,
        isEditing: false
      };
    });
  }, []));
  /* istanbul ignore next */
  cov_2932cru4zt().s[85]++;
  return {
    canvas,
    renderer: rendererRef.current,
    overlays: state.overlays,
    activeOverlayId: state.activeOverlayId,
    isEditing: state.isEditing,
    addTextOverlay,
    updateTextOverlay,
    removeTextOverlay,
    setActiveOverlay,
    setOverlayVisibility,
    setOverlayLocked,
    renderAllOverlays,
    clearAllOverlays,
    getOverlayById,
    duplicateOverlay,
    moveOverlay,
    exportOverlays,
    importOverlays,
    startEditing,
    stopEditing
  };
}
function useTextPresets() {
  /* istanbul ignore next */
  cov_2932cru4zt().f[45]++;
  const [customPresets, setCustomPresets] =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[86]++, (0, _react.useState)({}));
  const presets =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[87]++, _textOverlay.TextOverlayUtils.createPresets());
  const calculateOptimalFontSize =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[88]++, (0, _react.useCallback)((text, maxWidth, maxHeight, style, canvas) => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[46]++;
    cov_2932cru4zt().s[89]++;
    return _textOverlay.TextOverlayUtils.calculateOptimalFontSize(text, maxWidth, maxHeight, style, canvas);
  }, []));
  const createCustomPreset =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[90]++, (0, _react.useCallback)((name, style) => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[47]++;
    cov_2932cru4zt().s[91]++;
    setCustomPresets(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[48]++;
      cov_2932cru4zt().s[92]++;
      return {
        ...prev,
        [name]: {
          style
        }
      };
    });
  }, []));
  const getCustomPresets =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[93]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[49]++;
    cov_2932cru4zt().s[94]++;
    return customPresets;
  }, [customPresets]));
  const removeCustomPreset =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[95]++, (0, _react.useCallback)(name => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[50]++;
    cov_2932cru4zt().s[96]++;
    setCustomPresets(prev => {
      /* istanbul ignore next */
      cov_2932cru4zt().f[51]++;
      const {
        [name]: removed,
        ...rest
      } =
      /* istanbul ignore next */
      (cov_2932cru4zt().s[97]++, prev);
      /* istanbul ignore next */
      cov_2932cru4zt().s[98]++;
      return rest;
    });
  }, []));
  /* istanbul ignore next */
  cov_2932cru4zt().s[99]++;
  return {
    presets,
    calculateOptimalFontSize,
    createCustomPreset,
    getCustomPresets,
    removeCustomPreset
  };
}
function useInteractiveTextEditor(canvas, overlayId, onUpdate) {
  /* istanbul ignore next */
  cov_2932cru4zt().f[52]++;
  const [isEditing, setIsEditing] =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[100]++, (0, _react.useState)(false));
  const startEditing =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[101]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[53]++;
    cov_2932cru4zt().s[102]++;
    setIsEditing(true);
  }, []));
  const stopEditing =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[103]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[54]++;
    cov_2932cru4zt().s[104]++;
    setIsEditing(false);
  }, []));
  const updateText =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[105]++, (0, _react.useCallback)(text => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[55]++;
    cov_2932cru4zt().s[106]++;
    onUpdate({
      text
    });
  }, [onUpdate]));
  const updateStyle =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[107]++, (0, _react.useCallback)(style => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[56]++;
    cov_2932cru4zt().s[108]++;
    onUpdate({
      style
    });
  }, [onUpdate]));
  const updatePosition =
  /* istanbul ignore next */
  (cov_2932cru4zt().s[109]++, (0, _react.useCallback)(position => {
    /* istanbul ignore next */
    cov_2932cru4zt().f[57]++;
    cov_2932cru4zt().s[110]++;
    onUpdate({
      position
    });
  }, [onUpdate]));
  /* istanbul ignore next */
  cov_2932cru4zt().s[111]++;
  return {
    isEditing,
    startEditing,
    stopEditing,
    updateText,
    updateStyle,
    updatePosition
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,