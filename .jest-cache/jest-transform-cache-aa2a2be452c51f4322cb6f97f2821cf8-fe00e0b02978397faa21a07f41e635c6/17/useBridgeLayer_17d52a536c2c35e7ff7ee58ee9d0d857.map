{"version":3,"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/hooks/useBridgeLayer.ts"],"sourcesContent":["'use client';\n\n// Bridge Layer Component Interfaces\n// Clean, declarative APIs that hide business logic complexity from React components\n\nimport { useCallback } from 'react';\nimport { useTryonWorkflow, type WorkflowConfig, type TryonWorkflowState, type TryonWorkflowActions } from './useTryonWorkflow';\nimport { useImageUpload, useSingleImageUpload, type UploadConfig, type UploadedFile, type UploadError } from './useImageUpload';\nimport { useToast } from './index';\n\n/**\n * Simplified component state interface\n * Abstracts away complex business logic and provides only what UI components need\n */\nexport interface SimplifiedTryonState {\n  // Core UI state\n  isLoading: boolean;\n  isReady: boolean;\n  showResult: boolean;\n  \n  // User feedback\n  resultImage: string | null;\n  errorMessage: string | null;\n  successMessage: string | null;\n  \n  // Upload state\n  hasUserImage: boolean;\n  hasApparelImage: boolean;\n  userImagePreview: string | null;\n  apparelImagePreview: string | null;\n  \n  // Progress\n  progress: number;\n  progressMessage: string;\n  \n  // Interaction state\n  canGenerate: boolean;\n  canRetry: boolean;\n  canReset: boolean;\n}\n\n/**\n * Simplified component actions interface\n * Provides clean, semantic actions for UI components\n */\nexport interface SimplifiedTryonActions {\n  // File upload actions\n  uploadUserImage: (file: File) => Promise<void>;\n  uploadApparelImage: (file: File) => Promise<void>;\n  removeUserImage: () => void;\n  removeApparelImage: () => void;\n  \n  // Generation actions\n  generate: () => Promise<void>;\n  retry: () => Promise<void>;\n  reset: () => void;\n  \n  // UI actions\n  hideResult: () => void;\n  clearError: () => void;\n  downloadResult: () => void;\n  shareResult: () => Promise<void>;\n}\n\n/**\n * Configuration for the simplified bridge layer\n */\nexport interface BridgeLayerConfig {\n  // Workflow configuration\n  workflow?: WorkflowConfig;\n  \n  // Upload configuration\n  upload?: UploadConfig;\n  \n  // UI behavior\n  ui?: {\n    autoHideMessages?: boolean;\n    messageTimeoutMs?: number;\n    enableShare?: boolean;\n    enableDownload?: boolean;\n    showDetailedProgress?: boolean;\n  };\n  \n  // Callbacks\n  callbacks?: {\n    onGenerationStart?: () => void;\n    onGenerationComplete?: (imageUrl: string) => void;\n    onError?: (error: string) => void;\n    onSuccess?: (message: string) => void;\n  };\n}\n\n/**\n * Default bridge layer configuration\n */\nconst DEFAULT_BRIDGE_CONFIG: Required<BridgeLayerConfig> = {\n  workflow: {\n    timeoutMs: 60000,\n    compressionLimitKB: 2048,\n    autoRetry: false,\n    maxRetries: 3,\n    debug: process.env.NODE_ENV === 'development'\n  },\n  upload: {\n    maxSizeBytes: 10 * 1024 * 1024,\n    allowedTypes: ['image/jpeg', 'image/png', 'image/webp'],\n    generateThumbnails: true,\n    thumbnailSizes: [150, 300],\n    enableDragDrop: true,\n    autoProcess: false,\n    validation: {\n      minWidth: 256,\n      minHeight: 256,\n      maxWidth: 4096,\n      maxHeight: 4096\n    }\n  },\n  ui: {\n    autoHideMessages: true,\n    messageTimeoutMs: 5000,\n    enableShare: true,\n    enableDownload: true,\n    showDetailedProgress: true\n  },\n  callbacks: {}\n};\n\n/**\n * Main bridge layer hook that provides simplified interface for UI components\n */\nexport function useBridgeLayer(config: BridgeLayerConfig = {}): {\n  state: SimplifiedTryonState;\n  actions: SimplifiedTryonActions;\n  advanced: {\n    workflow: TryonWorkflowState & TryonWorkflowActions;\n    uploads: {\n      user: ReturnType<typeof useSingleImageUpload>;\n      apparel: ReturnType<typeof useSingleImageUpload>;\n    };\n  };\n} {\n  const finalConfig = { ...DEFAULT_BRIDGE_CONFIG, ...config };\n  const { showToast } = useToast();\n\n  // Initialize underlying hooks\n  const workflow = useTryonWorkflow(\n    finalConfig.workflow,\n    showToast\n  );\n\n  const userUpload = useSingleImageUpload(\n    finalConfig.upload,\n    (file: UploadedFile) => {\n      workflow.handleUserFileUpload(file.file);\n    },\n    (error: UploadError) => {\n      finalConfig.callbacks.onError?.(error.message);\n      showToast(error.message, 'error');\n    }\n  );\n\n  const apparelUpload = useSingleImageUpload(\n    finalConfig.upload,\n    (file: UploadedFile) => {\n      workflow.handleApparelFileUpload(file.file);\n    },\n    (error: UploadError) => {\n      finalConfig.callbacks.onError?.(error.message);\n      showToast(error.message, 'error');\n    }\n  );\n\n  // Simplified state mapping\n  const simplifiedState: SimplifiedTryonState = {\n    // Core UI state\n    isLoading: workflow.isCapturing || \n               userUpload.uploadState === 'processing' || \n               apparelUpload.uploadState === 'processing',\n    isReady: workflow.canGenerate(),\n    showResult: workflow.showPolaroid,\n    \n    // User feedback\n    resultImage: workflow.generatedImage,\n    errorMessage: workflow.error?.message || null,\n    successMessage: workflow.generatedImage ? 'Try-on generated successfully!' : null,\n    \n    // Upload state\n    hasUserImage: !!workflow.userImageFile || !!userUpload.file,\n    hasApparelImage: !!workflow.apparelImageFile || !!apparelUpload.file,\n    userImagePreview: workflow.leftCardImage || userUpload.file?.preview || null,\n    apparelImagePreview: workflow.rightCardImage || apparelUpload.file?.preview || null,\n    \n    // Progress\n    progress: workflow.progress,\n    progressMessage: getProgressMessage(workflow.workflowState, workflow.progress),\n    \n    // Interaction state\n    canGenerate: workflow.canGenerate(),\n    canRetry: workflow.hasError && workflow.error?.retryable === true,\n    canReset: workflow.workflowState !== 'idle' || simplifiedState.hasUserImage || simplifiedState.hasApparelImage\n  };\n\n  // Simplified actions\n  const simplifiedActions: SimplifiedTryonActions = {\n    // File upload actions\n    uploadUserImage: useCallback(async (file: File) => {\n      try {\n        await userUpload.uploadFile(file);\n        if (finalConfig.ui.showDetailedProgress) {\n          showToast('User image uploaded successfully', 'success');\n        }\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'Failed to upload user image';\n        finalConfig.callbacks.onError?.(message);\n        throw error;\n      }\n    }, [userUpload, finalConfig.callbacks, finalConfig.ui.showDetailedProgress, showToast]),\n\n    uploadApparelImage: useCallback(async (file: File) => {\n      try {\n        await apparelUpload.uploadFile(file);\n        if (finalConfig.ui.showDetailedProgress) {\n          showToast('Apparel image uploaded successfully', 'success');\n        }\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'Failed to upload apparel image';\n        finalConfig.callbacks.onError?.(message);\n        throw error;\n      }\n    }, [apparelUpload, finalConfig.callbacks, finalConfig.ui.showDetailedProgress, showToast]),\n\n    removeUserImage: useCallback(() => {\n      userUpload.clearFiles();\n      workflow.resetWorkflow();\n    }, [userUpload, workflow]),\n\n    removeApparelImage: useCallback(() => {\n      apparelUpload.clearFiles();\n      workflow.resetWorkflow();\n    }, [apparelUpload, workflow]),\n\n    // Generation actions\n    generate: useCallback(async () => {\n      try {\n        finalConfig.callbacks.onGenerationStart?.();\n        await workflow.startGeneration();\n        \n        if (workflow.generatedImage) {\n          const message = 'Try-on generated successfully!';\n          finalConfig.callbacks.onGenerationComplete?.(workflow.generatedImage);\n          finalConfig.callbacks.onSuccess?.(message);\n          \n          if (finalConfig.ui.showDetailedProgress) {\n            showToast(message, 'success');\n          }\n        }\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'Failed to generate try-on';\n        finalConfig.callbacks.onError?.(message);\n        throw error;\n      }\n    }, [workflow, finalConfig.callbacks, finalConfig.ui.showDetailedProgress, showToast]),\n\n    retry: useCallback(async () => {\n      try {\n        await workflow.retryGeneration();\n        \n        if (workflow.generatedImage) {\n          const message = 'Try-on generated successfully!';\n          finalConfig.callbacks.onGenerationComplete?.(workflow.generatedImage);\n          finalConfig.callbacks.onSuccess?.(message);\n          \n          if (finalConfig.ui.showDetailedProgress) {\n            showToast(message, 'success');\n          }\n        }\n      } catch (error) {\n        const message = error instanceof Error ? error.message : 'Failed to retry generation';\n        finalConfig.callbacks.onError?.(message);\n        throw error;\n      }\n    }, [workflow, finalConfig.callbacks, finalConfig.ui.showDetailedProgress, showToast]),\n\n    reset: useCallback(() => {\n      workflow.resetWorkflow();\n      userUpload.clearFiles();\n      apparelUpload.clearFiles();\n    }, [workflow, userUpload, apparelUpload]),\n\n    // UI actions\n    hideResult: useCallback(() => {\n      workflow.closePolaroid();\n    }, [workflow]),\n\n    clearError: useCallback(() => {\n      workflow.clearError();\n    }, [workflow]),\n\n    downloadResult: useCallback(() => {\n      if (!workflow.generatedImage || !finalConfig.ui.enableDownload) return;\n      \n      try {\n        const link = document.createElement('a');\n        link.href = workflow.generatedImage;\n        link.download = `tryon-result-${Date.now()}.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        \n        showToast('Image downloaded successfully', 'success');\n      } catch (error) {\n        showToast('Failed to download image', 'error');\n      }\n    }, [workflow.generatedImage, finalConfig.ui.enableDownload, showToast]),\n\n    shareResult: useCallback(async () => {\n      if (!workflow.generatedImage || !finalConfig.ui.enableShare) return;\n      \n      try {\n        if (navigator.share) {\n          // Use native share API if available\n          const response = await fetch(workflow.generatedImage);\n          const blob = await response.blob();\n          const file = new File([blob], 'tryon-result.png', { type: 'image/png' });\n          \n          await navigator.share({\n            title: 'My Try-On Result',\n            text: 'Check out my virtual try-on!',\n            files: [file]\n          });\n        } else {\n          // Fallback to copying URL\n          await navigator.clipboard.writeText(workflow.generatedImage);\n          showToast('Image URL copied to clipboard', 'success');\n        }\n      } catch (error) {\n        showToast('Failed to share image', 'error');\n      }\n    }, [workflow.generatedImage, finalConfig.ui.enableShare, showToast])\n  };\n\n  return {\n    state: simplifiedState,\n    actions: simplifiedActions,\n    advanced: {\n      workflow,\n      uploads: {\n        user: userUpload,\n        apparel: apparelUpload\n      }\n    }\n  };\n}\n\n/**\n * Helper function to generate user-friendly progress messages\n */\nfunction getProgressMessage(workflowState: string, progress: number): string {\n  switch (workflowState) {\n    case 'idle':\n      return 'Ready to generate';\n    case 'uploading':\n      return 'Uploading images...';\n    case 'processing':\n      return 'Processing images...';\n    case 'generating':\n      if (progress < 30) return 'Preparing images...';\n      if (progress < 80) return 'Generating try-on...';\n      return 'Finalizing result...';\n    case 'complete':\n      return 'Generation complete!';\n    case 'error':\n      return 'Generation failed';\n    default:\n      return `Processing... ${progress}%`;\n  }\n}\n\n/**\n * Specialized hook for simple try-on generation (most basic use case)\n */\nexport function useSimpleTryon(config: BridgeLayerConfig = {}) {\n  const { state, actions } = useBridgeLayer(config);\n  \n  return {\n    // Minimal state for simple components\n    isLoading: state.isLoading,\n    result: state.resultImage,\n    error: state.errorMessage,\n    canGenerate: state.canGenerate,\n    \n    // Essential actions\n    uploadUserImage: actions.uploadUserImage,\n    uploadApparelImage: actions.uploadApparelImage,\n    generate: actions.generate,\n    reset: actions.reset\n  };\n}\n\n/**\n * Hook for components that need upload progress tracking\n */\nexport function useTryonWithProgress(config: BridgeLayerConfig = {}) {\n  const { state, actions } = useBridgeLayer(config);\n  \n  return {\n    ...state,\n    ...actions,\n    \n    // Additional progress information\n    uploadProgress: {\n      user: state.hasUserImage ? 100 : 0,\n      apparel: state.hasApparelImage ? 100 : 0\n    },\n    \n    overallProgress: calculateOverallProgress(state)\n  };\n}\n\n/**\n * Helper function to calculate overall progress\n */\nfunction calculateOverallProgress(state: SimplifiedTryonState): number {\n  let progress = 0;\n  \n  // Upload progress (40% of total)\n  if (state.hasUserImage) progress += 20;\n  if (state.hasApparelImage) progress += 20;\n  \n  // Generation progress (60% of total)\n  if (state.isLoading || state.progress > 0) {\n    progress += (state.progress * 0.6);\n  }\n  \n  if (state.resultImage) progress = 100;\n  \n  return Math.round(progress);\n}"],"names":["useBridgeLayer","useSimpleTryon","useTryonWithProgress","DEFAULT_BRIDGE_CONFIG","workflow","timeoutMs","compressionLimitKB","autoRetry","maxRetries","debug","process","env","NODE_ENV","upload","maxSizeBytes","allowedTypes","generateThumbnails","thumbnailSizes","enableDragDrop","autoProcess","validation","minWidth","minHeight","maxWidth","maxHeight","ui","autoHideMessages","messageTimeoutMs","enableShare","enableDownload","showDetailedProgress","callbacks","config","finalConfig","showToast","useToast","useTryonWorkflow","userUpload","useSingleImageUpload","file","handleUserFileUpload","error","onError","message","apparelUpload","handleApparelFileUpload","simplifiedState","isLoading","isCapturing","uploadState","isReady","canGenerate","showResult","showPolaroid","resultImage","generatedImage","errorMessage","successMessage","hasUserImage","userImageFile","hasApparelImage","apparelImageFile","userImagePreview","leftCardImage","preview","apparelImagePreview","rightCardImage","progress","progressMessage","getProgressMessage","workflowState","canRetry","hasError","retryable","canReset","simplifiedActions","uploadUserImage","useCallback","uploadFile","Error","uploadApparelImage","removeUserImage","clearFiles","resetWorkflow","removeApparelImage","generate","onGenerationStart","startGeneration","onGenerationComplete","onSuccess","retry","retryGeneration","reset","hideResult","closePolaroid","clearError","downloadResult","link","document","createElement","href","download","Date","now","body","appendChild","click","removeChild","shareResult","navigator","share","response","fetch","blob","File","type","title","text","files","clipboard","writeText","state","actions","advanced","uploads","user","apparel","result","uploadProgress","overallProgress","calculateOverallProgress","Math","round"],"mappings":"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"}