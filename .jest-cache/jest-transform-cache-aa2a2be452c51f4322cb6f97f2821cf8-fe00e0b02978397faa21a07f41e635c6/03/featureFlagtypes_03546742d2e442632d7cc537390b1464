9d3844ef6a26bdae4209bdc5bb37640c
// Feature Flag Types
// Comprehensive types for feature flag system with environment-based configurations
// Base feature flag value types
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DEFAULT_IMAGE_PROCESSING_FLAGS: function() {
        return DEFAULT_IMAGE_PROCESSING_FLAGS;
    },
    DEFAULT_TRYON_FLAGS: function() {
        return DEFAULT_TRYON_FLAGS;
    },
    DEFAULT_UI_FLAGS: function() {
        return DEFAULT_UI_FLAGS;
    },
    isBooleanFlag: function() {
        return isBooleanFlag;
    },
    isFeatureFlag: function() {
        return isFeatureFlag;
    },
    isNumberFlag: function() {
        return isNumberFlag;
    },
    isStringFlag: function() {
        return isStringFlag;
    }
});
const DEFAULT_TRYON_FLAGS = [
    {
        key: 'enableTryon',
        description: 'Enable try-on functionality',
        category: 'tryon',
        defaultValue: true,
        type: 'boolean'
    },
    {
        key: 'maxConcurrentRequests',
        description: 'Maximum concurrent try-on requests',
        category: 'tryon',
        defaultValue: 3,
        type: 'number'
    },
    {
        key: 'enableRetryLogic',
        description: 'Enable retry logic for failed requests',
        category: 'tryon',
        defaultValue: true,
        type: 'boolean'
    },
    {
        key: 'enableOptimisticUpdates',
        description: 'Enable optimistic UI updates',
        category: 'tryon',
        defaultValue: true,
        type: 'boolean'
    },
    {
        key: 'tryonTimeout',
        description: 'Try-on request timeout in milliseconds',
        category: 'tryon',
        defaultValue: 30000,
        type: 'number'
    }
];
const DEFAULT_IMAGE_PROCESSING_FLAGS = [
    {
        key: 'enableCompression',
        description: 'Enable image compression',
        category: 'image-processing',
        defaultValue: true,
        type: 'boolean'
    },
    {
        key: 'maxFileSize',
        description: 'Maximum file size in bytes',
        category: 'image-processing',
        defaultValue: 10485760,
        type: 'number'
    },
    {
        key: 'supportedFormats',
        description: 'Supported image formats (comma-separated)',
        category: 'image-processing',
        defaultValue: 'jpeg,jpg,png,webp',
        type: 'string'
    },
    {
        key: 'enableImageOptimization',
        description: 'Enable automatic image optimization',
        category: 'image-processing',
        defaultValue: true,
        type: 'boolean'
    },
    {
        key: 'compressionQuality',
        description: 'Image compression quality (0-100)',
        category: 'image-processing',
        defaultValue: 85,
        type: 'number'
    }
];
const DEFAULT_UI_FLAGS = [
    {
        key: 'showPolaroid',
        description: 'Show polaroid-style photo frames',
        category: 'ui',
        defaultValue: true,
        type: 'boolean'
    },
    {
        key: 'enablePreview',
        description: 'Enable image preview functionality',
        category: 'ui',
        defaultValue: true,
        type: 'boolean'
    },
    {
        key: 'enableDarkMode',
        description: 'Enable dark mode toggle',
        category: 'ui',
        defaultValue: false,
        type: 'boolean',
        environment: [
            'development'
        ]
    },
    {
        key: 'showAdvancedControls',
        description: 'Show advanced control options',
        category: 'ui',
        defaultValue: false,
        type: 'boolean',
        environment: [
            'development',
            'staging'
        ]
    },
    {
        key: 'enableAnimations',
        description: 'Enable UI animations',
        category: 'ui',
        defaultValue: true,
        type: 'boolean'
    }
];
const isFeatureFlag = (obj)=>{
    return typeof obj === 'object' && obj !== null && 'key' in obj && 'enabled' in obj && 'value' in obj && 'defaultValue' in obj;
};
const isBooleanFlag = (flag)=>{
    return flag.type === 'boolean';
};
const isStringFlag = (flag)=>{
    return flag.type === 'string';
};
const isNumberFlag = (flag)=>{
    return flag.type === 'number';
};

//# sourceMappingURL=data:application/json;base64,