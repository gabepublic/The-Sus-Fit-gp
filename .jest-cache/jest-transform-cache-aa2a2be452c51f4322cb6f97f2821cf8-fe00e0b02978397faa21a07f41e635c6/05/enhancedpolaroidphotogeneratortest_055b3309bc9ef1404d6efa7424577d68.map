{"version":3,"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/__tests__/components/ui/enhanced-polaroid-photo-generator.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen, waitFor, act } from '@testing-library/react'\nimport { EnhancedPolaroidPhotoGenerator } from '@/components/ui/enhanced-polaroid-photo-generator'\n\n// Mock timers for testing animations\njest.useFakeTimers()\n\ndescribe('EnhancedPolaroidPhotoGenerator', () => {\n  const defaultProps = {\n    onGenerationStart: jest.fn(),\n    onGenerationComplete: jest.fn()\n  }\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  afterEach(() => {\n    jest.clearAllTimers()\n  })\n\n  it('renders nothing when not generating', () => {\n    const { container } = render(<EnhancedPolaroidPhotoGenerator {...defaultProps} />)\n    expect(container.firstChild).toBeNull()\n  })\n\n  it('starts generation sequence when isGenerating is true', () => {\n    render(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />)\n    \n    expect(defaultProps.onGenerationStart).toHaveBeenCalled()\n  })\n\n  it('shows polaroid when generating', () => {\n    render(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />)\n    \n    expect(screen.getByText('PROCESSING...')).toBeInTheDocument()\n  })\n\n  it('applies custom className', () => {\n    const { container } = render(\n      <EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} className=\"custom-class\" />\n    )\n    \n    expect(container.firstChild).toHaveClass('custom-class')\n  })\n\n  it('positions correctly at bottom by default', () => {\n    const { container } = render(\n      <EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />\n    )\n    \n    const polaroid = container.firstChild as HTMLElement\n    expect(polaroid).toHaveClass('bottom-0')\n    expect(polaroid).toHaveClass('-translate-x-1/2')\n  })\n\n  it('positions correctly at center when specified', () => {\n    const { container } = render(\n      <EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} position=\"center\" />\n    )\n    \n    const polaroid = container.firstChild as HTMLElement\n    expect(polaroid).toHaveClass('top-1/2')\n    expect(polaroid).toHaveClass('-translate-y-1/2')\n  })\n\n  it('shows progress bar during processing', () => {\n    render(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />)\n    \n    expect(screen.getByText('0%')).toBeInTheDocument()\n  })\n\n  it('updates progress during generation', async () => {\n    render(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />)\n    \n    // Fast-forward timers to see progress updates\n    act(() => {\n      jest.advanceTimersByTime(1000)\n    })\n    \n    await waitFor(() => {\n      const progressText = screen.getByText(/\\d+%/)\n      expect(progressText).toBeInTheDocument()\n    })\n  })\n\n  it('completes generation sequence', async () => {\n    render(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />)\n    \n    // Fast-forward through the entire generation sequence\n    act(() => {\n      jest.advanceTimersByTime(6000) // Complete all phases\n    })\n    \n    await waitFor(() => {\n      expect(defaultProps.onGenerationComplete).toHaveBeenCalled()\n      expect(screen.getByText('SUS FIT COMPLETE')).toBeInTheDocument()\n    })\n  })\n\n  it('shows ready indicator when complete', async () => {\n    render(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />)\n    \n    act(() => {\n      jest.advanceTimersByTime(6000)\n    })\n    \n    await waitFor(() => {\n      expect(screen.getByText('âœ¨ READY!')).toBeInTheDocument()\n    })\n  })\n\n  it('uses person image when provided', async () => {\n    const personImageUrl = '/test-person.jpg'\n    render(\n      <EnhancedPolaroidPhotoGenerator \n        {...defaultProps} \n        isGenerating={true} \n        personImageUrl={personImageUrl}\n      />\n    )\n    \n    act(() => {\n      jest.advanceTimersByTime(4500) // Advance to revealing phase\n    })\n    \n    await waitFor(() => {\n      expect(defaultProps.onGenerationComplete).toHaveBeenCalledWith(personImageUrl)\n    })\n  })\n\n  it('uses garment image when person image not provided', async () => {\n    const garmentImageUrl = '/test-garment.jpg'\n    render(\n      <EnhancedPolaroidPhotoGenerator \n        {...defaultProps} \n        isGenerating={true} \n        garmentImageUrl={garmentImageUrl}\n      />\n    )\n    \n    act(() => {\n      jest.advanceTimersByTime(4500)\n    })\n    \n    await waitFor(() => {\n      expect(defaultProps.onGenerationComplete).toHaveBeenCalledWith(garmentImageUrl)\n    })\n  })\n\n  it('uses mock image when no other images provided', async () => {\n    const mockImageUrl = '/custom-mock.jpg'\n    render(\n      <EnhancedPolaroidPhotoGenerator \n        {...defaultProps} \n        isGenerating={true} \n        mockImageUrl={mockImageUrl}\n      />\n    )\n    \n    act(() => {\n      jest.advanceTimersByTime(4500)\n    })\n    \n    await waitFor(() => {\n      expect(defaultProps.onGenerationComplete).toHaveBeenCalledWith(mockImageUrl)\n    })\n  })\n\n  it('uses default mock image when no images provided', async () => {\n    render(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />)\n    \n    act(() => {\n      jest.advanceTimersByTime(4500)\n    })\n    \n    await waitFor(() => {\n      expect(defaultProps.onGenerationComplete).toHaveBeenCalledWith('/images/ScoredGarment.jpg')\n    })\n  })\n\n  it('shows correct status text during different phases', () => {\n    render(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />)\n    \n    // Initial processing phase\n    expect(screen.getByText('PROCESSING...')).toBeInTheDocument()\n    \n    // Advance to revealing phase\n    act(() => {\n      jest.advanceTimersByTime(4500)\n    })\n    \n    // Should show developing\n    expect(screen.getByText('DEVELOPING...')).toBeInTheDocument()\n    \n    // Advance to complete phase\n    act(() => {\n      jest.advanceTimersByTime(1500)\n    })\n    \n    // Should show complete\n    expect(screen.getByText('SUS FIT COMPLETE')).toBeInTheDocument()\n  })\n\n  it('shows SUS FIT logo', () => {\n    render(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />)\n    \n    expect(screen.getByText('SUS FIT')).toBeInTheDocument()\n  })\n\n  it('works without optional callbacks', () => {\n    render(<EnhancedPolaroidPhotoGenerator isGenerating={true} />)\n    \n    // Should not throw error\n    expect(screen.getByText('PROCESSING...')).toBeInTheDocument()\n  })\n\n  it('resets state when isGenerating changes from true to false', () => {\n    const { rerender } = render(\n      <EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />\n    )\n    \n    expect(screen.getByText('PROCESSING...')).toBeInTheDocument()\n    \n    // Change to false\n    rerender(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={false} />)\n    \n    // Should not render anything\n    expect(screen.queryByText('PROCESSING...')).not.toBeInTheDocument()\n  })\n\n  it('handles multiple generation cycles', async () => {\n    const { rerender } = render(\n      <EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />\n    )\n    \n    // Complete first generation\n    act(() => {\n      jest.advanceTimersByTime(6000)\n    })\n    \n    await waitFor(() => {\n      expect(defaultProps.onGenerationComplete).toHaveBeenCalledTimes(1)\n    })\n    \n    // Reset and start second generation\n    rerender(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={false} />)\n    rerender(<EnhancedPolaroidPhotoGenerator {...defaultProps} isGenerating={true} />)\n    \n    expect(defaultProps.onGenerationStart).toHaveBeenCalledTimes(2)\n  })\n}) "],"names":["jest","useFakeTimers","describe","defaultProps","onGenerationStart","fn","onGenerationComplete","beforeEach","clearAllMocks","afterEach","clearAllTimers","it","container","render","EnhancedPolaroidPhotoGenerator","expect","firstChild","toBeNull","isGenerating","toHaveBeenCalled","screen","getByText","toBeInTheDocument","className","toHaveClass","polaroid","position","act","advanceTimersByTime","waitFor","progressText","personImageUrl","toHaveBeenCalledWith","garmentImageUrl","mockImageUrl","rerender","queryByText","not","toHaveBeenCalledTimes"],"mappings":"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"}