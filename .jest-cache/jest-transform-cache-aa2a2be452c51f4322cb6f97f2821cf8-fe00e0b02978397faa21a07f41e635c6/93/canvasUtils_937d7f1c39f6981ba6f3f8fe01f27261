fd608eb9a2b1279f9c09e63ea84c2b49
// Advanced Canvas API Utilities
// Extended canvas operations for image processing and manipulation
"use strict";

/* istanbul ignore next */
function cov_1iiszin0s6() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/canvasUtils.ts";
  var hash = "19f92c609ee2baa6afd38ebdbb7afae852dafd41";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/canvasUtils.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 40
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 25
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 36
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 38
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 46
        }
      },
      "9": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 42
        }
      },
      "10": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "11": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 40
        }
      },
      "12": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 39
        }
      },
      "13": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 35
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 37
        }
      },
      "15": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 35
        }
      },
      "16": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 37
        }
      },
      "17": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 44
        }
      },
      "18": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 42
        }
      },
      "19": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "20": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 42
        }
      },
      "21": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 43
        }
      },
      "22": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "23": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 21
        }
      },
      "24": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 43
        }
      },
      "25": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 41
        }
      },
      "26": {
        start: {
          line: 56,
          column: 26
        },
        end: {
          line: 56,
          column: 92
        }
      },
      "27": {
        start: {
          line: 57,
          column: 26
        },
        end: {
          line: 57,
          column: 49
        }
      },
      "28": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 78,
          column: 10
        }
      },
      "29": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 53
        }
      },
      "30": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 144
        }
      },
      "31": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 45
        }
      },
      "32": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 49
        }
      },
      "33": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 45
        }
      },
      "34": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 41
        }
      },
      "35": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 43
        }
      },
      "36": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 49
        }
      },
      "37": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 75
        }
      },
      "38": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 35
        }
      },
      "39": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 45
        }
      },
      "40": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 51
        }
      },
      "41": {
        start: {
          line: 99,
          column: 26
        },
        end: {
          line: 99,
          column: 92
        }
      },
      "42": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 100,
          column: 35
        }
      },
      "43": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "44": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 21
        }
      },
      "45": {
        start: {
          line: 102,
          column: 33
        },
        end: {
          line: 102,
          column: 89
        }
      },
      "46": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 52
        }
      },
      "47": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 56
        }
      },
      "48": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 56
        }
      },
      "49": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 56
        }
      },
      "50": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 47
        }
      },
      "51": {
        start: {
          line: 113,
          column: 43
        },
        end: {
          line: 113,
          column: 76
        }
      },
      "52": {
        start: {
          line: 114,
          column: 30
        },
        end: {
          line: 114,
          column: 50
        }
      },
      "53": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 54
        }
      },
      "54": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 39
        }
      },
      "55": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "56": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 59
        }
      },
      "57": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 44
        }
      },
      "58": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 71
        }
      },
      "59": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 45
        }
      },
      "60": {
        start: {
          line: 128,
          column: 25
        },
        end: {
          line: 128,
          column: 78
        }
      },
      "61": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "62": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 59
        }
      },
      "63": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 24
        }
      },
      "64": {
        start: {
          line: 137,
          column: 25
        },
        end: {
          line: 137,
          column: 70
        }
      },
      "65": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "66": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 59
        }
      },
      "67": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 24
        }
      },
      "68": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 29
        }
      },
      "69": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 39
        }
      },
      "70": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 47
        }
      },
      "71": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 71
        }
      },
      "72": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 56
        }
      },
      "73": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 89
        }
      },
      "74": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 48
        }
      },
      "75": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 73
        }
      },
      "76": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 39
        }
      },
      "77": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 55
        }
      },
      "78": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 29
        }
      },
      "79": {
        start: {
          line: 161,
          column: 26
        },
        end: {
          line: 161,
          column: 59
        }
      },
      "80": {
        start: {
          line: 162,
          column: 21
        },
        end: {
          line: 162,
          column: 35
        }
      },
      "81": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 168,
          column: 10
        }
      },
      "82": {
        start: {
          line: 173,
          column: 26
        },
        end: {
          line: 173,
          column: 56
        }
      },
      "83": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 30
        }
      },
      "84": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 30
        }
      },
      "85": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 30
        }
      },
      "86": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 30
        }
      },
      "87": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 47
        }
      },
      "88": {
        start: {
          line: 183,
          column: 26
        },
        end: {
          line: 183,
          column: 68
        }
      },
      "89": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 34
        }
      },
      "90": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 36
        }
      },
      "91": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 47
        }
      },
      "92": {
        start: {
          line: 191,
          column: 26
        },
        end: {
          line: 191,
          column: 92
        }
      },
      "93": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 24
        }
      },
      "94": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 63
        }
      },
      "95": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 100
        }
      },
      "96": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 72
        }
      },
      "97": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 47
        }
      },
      "98": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 27
        }
      },
      "99": {
        start: {
          line: 202,
          column: 19
        },
        end: {
          line: 202,
          column: 51
        }
      },
      "100": {
        start: {
          line: 203,
          column: 19
        },
        end: {
          line: 203,
          column: 52
        }
      },
      "101": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 35
        }
      },
      "102": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 31
        }
      },
      "103": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 37
        }
      },
      "104": {
        start: {
          line: 213,
          column: 22
        },
        end: {
          line: 213,
          column: 39
        }
      },
      "105": {
        start: {
          line: 214,
          column: 23
        },
        end: {
          line: 214,
          column: 34
        }
      },
      "106": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 37
        }
      },
      "107": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "108": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 70
        }
      },
      "109": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 22
        }
      },
      "110": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 228,
          column: 10
        }
      },
      "111": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 34
        }
      },
      "112": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 58
        }
      },
      "113": {
        start: {
          line: 227,
          column: 37
        },
        end: {
          line: 227,
          column: 50
        }
      },
      "114": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 240,
          column: 10
        }
      },
      "115": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "116": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 30
        }
      },
      "117": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 34
        }
      },
      "118": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 58
        }
      },
      "119": {
        start: {
          line: 238,
          column: 31
        },
        end: {
          line: 238,
          column: 49
        }
      },
      "120": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 43
        }
      },
      "121": {
        start: {
          line: 250,
          column: 20
        },
        end: {
          line: 250,
          column: 43
        }
      },
      "122": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "123": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 46
        }
      },
      "124": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 37
        }
      },
      "125": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 35
        }
      },
      "126": {
        start: {
          line: 263,
          column: 28
        },
        end: {
          line: 263,
          column: 35
        }
      },
      "127": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 30
        }
      },
      "128": {
        start: {
          line: 265,
          column: 24
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "129": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 40
        }
      },
      "130": {
        start: {
          line: 266,
          column: 33
        },
        end: {
          line: 266,
          column: 40
        }
      },
      "131": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 32
        }
      },
      "132": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 62
        }
      },
      "133": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 58
        }
      },
      "134": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 31
        }
      },
      "135": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "136": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 51
        }
      },
      "137": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 36
        }
      },
      "138": {
        start: {
          line: 284,
          column: 26
        },
        end: {
          line: 284,
          column: 43
        }
      },
      "139": {
        start: {
          line: 286,
          column: 24
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "140": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 51
        }
      },
      "141": {
        start: {
          line: 288,
          column: 29
        },
        end: {
          line: 288,
          column: 60
        }
      },
      "142": {
        start: {
          line: 289,
          column: 34
        },
        end: {
          line: 289,
          column: 50
        }
      },
      "143": {
        start: {
          line: 290,
          column: 33
        },
        end: {
          line: 290,
          column: 67
        }
      },
      "144": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 35
        }
      },
      "145": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 296,
          column: 13
        }
      },
      "146": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 61
        }
      },
      "147": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 31
        }
      },
      "148": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 53
        }
      },
      "149": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 53
        }
      },
      "150": {
        start: {
          line: 300,
          column: 19
        },
        end: {
          line: 300,
          column: 52
        }
      },
      "151": {
        start: {
          line: 305,
          column: 6
        },
        end: {
          line: 313,
          column: 10
        }
      },
      "152": {
        start: {
          line: 306,
          column: 25
        },
        end: {
          line: 306,
          column: 26
        }
      },
      "153": {
        start: {
          line: 307,
          column: 29
        },
        end: {
          line: 307,
          column: 34
        }
      },
      "154": {
        start: {
          line: 308,
          column: 30
        },
        end: {
          line: 308,
          column: 41
        }
      },
      "155": {
        start: {
          line: 309,
          column: 32
        },
        end: {
          line: 309,
          column: 74
        }
      },
      "156": {
        start: {
          line: 310,
          column: 30
        },
        end: {
          line: 310,
          column: 39
        }
      },
      "157": {
        start: {
          line: 311,
          column: 31
        },
        end: {
          line: 311,
          column: 46
        }
      },
      "158": {
        start: {
          line: 312,
          column: 33
        },
        end: {
          line: 312,
          column: 98
        }
      },
      "159": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 32
        }
      },
      "160": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 31
        }
      },
      "161": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 321,
          column: 55
        }
      },
      "162": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 324,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 16
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 30
          },
          end: {
            line: 14,
            column: 31
          }
        },
        loc: {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 16
          }
        },
        loc: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 27
          }
        },
        loc: {
          start: {
            line: 20,
            column: 37
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 23,
            column: 29
          }
        },
        loc: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 36
          },
          end: {
            line: 26,
            column: 37
          }
        },
        loc: {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 32
          },
          end: {
            line: 29,
            column: 33
          }
        },
        loc: {
          start: {
            line: 29,
            column: 43
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 31
          }
        },
        loc: {
          start: {
            line: 33,
            column: 50
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 49
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 55,
            column: 6
          },
          end: {
            line: 55,
            column: 7
          }
        },
        loc: {
          start: {
            line: 55,
            column: 18
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 55
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 82,
            column: 6
          },
          end: {
            line: 82,
            column: 7
          }
        },
        loc: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 82
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 98,
            column: 6
          },
          end: {
            line: 98,
            column: 7
          }
        },
        loc: {
          start: {
            line: 98,
            column: 33
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 98
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 112,
            column: 7
          }
        },
        loc: {
          start: {
            line: 112,
            column: 97
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 112
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 127,
            column: 7
          }
        },
        loc: {
          start: {
            line: 127,
            column: 58
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 127
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 129,
            column: 22
          },
          end: {
            line: 129,
            column: 23
          }
        },
        loc: {
          start: {
            line: 129,
            column: 30
          },
          end: {
            line: 131,
            column: 9
          }
        },
        line: 129
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 136,
            column: 6
          },
          end: {
            line: 136,
            column: 7
          }
        },
        loc: {
          start: {
            line: 136,
            column: 50
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 136
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 138,
            column: 22
          },
          end: {
            line: 138,
            column: 23
          }
        },
        loc: {
          start: {
            line: 138,
            column: 30
          },
          end: {
            line: 140,
            column: 9
          }
        },
        line: 138
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 145,
            column: 7
          }
        },
        loc: {
          start: {
            line: 145,
            column: 47
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 145
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 160,
            column: 6
          },
          end: {
            line: 160,
            column: 7
          }
        },
        loc: {
          start: {
            line: 160,
            column: 26
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 160
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 172,
            column: 6
          },
          end: {
            line: 172,
            column: 7
          }
        },
        loc: {
          start: {
            line: 172,
            column: 44
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 172
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 182,
            column: 7
          }
        },
        loc: {
          start: {
            line: 182,
            column: 32
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 182
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 190,
            column: 6
          },
          end: {
            line: 190,
            column: 7
          }
        },
        loc: {
          start: {
            line: 190,
            column: 48
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 190
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 201,
            column: 6
          },
          end: {
            line: 201,
            column: 7
          }
        },
        loc: {
          start: {
            line: 201,
            column: 38
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 201
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 212,
            column: 6
          },
          end: {
            line: 212,
            column: 7
          }
        },
        loc: {
          start: {
            line: 212,
            column: 68
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 212
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 223,
            column: 6
          },
          end: {
            line: 223,
            column: 7
          }
        },
        loc: {
          start: {
            line: 223,
            column: 34
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 223
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 225,
            column: 15
          },
          end: {
            line: 225,
            column: 16
          }
        },
        loc: {
          start: {
            line: 225,
            column: 26
          },
          end: {
            line: 228,
            column: 9
          }
        },
        line: 225
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 227,
            column: 33
          },
          end: {
            line: 227,
            column: 34
          }
        },
        loc: {
          start: {
            line: 227,
            column: 37
          },
          end: {
            line: 227,
            column: 50
          }
        },
        line: 227
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 232,
            column: 6
          },
          end: {
            line: 232,
            column: 7
          }
        },
        loc: {
          start: {
            line: 232,
            column: 35
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 232
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 234,
            column: 15
          },
          end: {
            line: 234,
            column: 16
          }
        },
        loc: {
          start: {
            line: 234,
            column: 26
          },
          end: {
            line: 240,
            column: 9
          }
        },
        line: 234
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 238,
            column: 27
          },
          end: {
            line: 238,
            column: 28
          }
        },
        loc: {
          start: {
            line: 238,
            column: 31
          },
          end: {
            line: 238,
            column: 49
          }
        },
        line: 238
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 244,
            column: 6
          },
          end: {
            line: 244,
            column: 7
          }
        },
        loc: {
          start: {
            line: 244,
            column: 67
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 244
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 249,
            column: 6
          },
          end: {
            line: 249,
            column: 7
          }
        },
        loc: {
          start: {
            line: 249,
            column: 36
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 249
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 262,
            column: 6
          },
          end: {
            line: 262,
            column: 7
          }
        },
        loc: {
          start: {
            line: 262,
            column: 31
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 262
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 265,
            column: 24
          },
          end: {
            line: 265,
            column: 25
          }
        },
        loc: {
          start: {
            line: 265,
            column: 37
          },
          end: {
            line: 269,
            column: 9
          }
        },
        line: 265
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 274,
            column: 6
          },
          end: {
            line: 274,
            column: 7
          }
        },
        loc: {
          start: {
            line: 274,
            column: 22
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 274
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 283,
            column: 6
          },
          end: {
            line: 283,
            column: 7
          }
        },
        loc: {
          start: {
            line: 283,
            column: 79
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 283
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 286,
            column: 24
          },
          end: {
            line: 286,
            column: 25
          }
        },
        loc: {
          start: {
            line: 286,
            column: 39
          },
          end: {
            line: 297,
            column: 9
          }
        },
        line: 286
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 300,
            column: 15
          },
          end: {
            line: 300,
            column: 16
          }
        },
        loc: {
          start: {
            line: 300,
            column: 19
          },
          end: {
            line: 300,
            column: 52
          }
        },
        line: 300
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 306,
            column: 20
          },
          end: {
            line: 306,
            column: 21
          }
        },
        loc: {
          start: {
            line: 306,
            column: 25
          },
          end: {
            line: 306,
            column: 26
          }
        },
        line: 306
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 307,
            column: 24
          },
          end: {
            line: 307,
            column: 25
          }
        },
        loc: {
          start: {
            line: 307,
            column: 29
          },
          end: {
            line: 307,
            column: 34
          }
        },
        line: 307
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 308,
            column: 25
          },
          end: {
            line: 308,
            column: 26
          }
        },
        loc: {
          start: {
            line: 308,
            column: 30
          },
          end: {
            line: 308,
            column: 41
          }
        },
        line: 308
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 309,
            column: 27
          },
          end: {
            line: 309,
            column: 28
          }
        },
        loc: {
          start: {
            line: 309,
            column: 32
          },
          end: {
            line: 309,
            column: 74
          }
        },
        line: 309
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 310,
            column: 25
          },
          end: {
            line: 310,
            column: 26
          }
        },
        loc: {
          start: {
            line: 310,
            column: 30
          },
          end: {
            line: 310,
            column: 39
          }
        },
        line: 310
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 311,
            column: 26
          },
          end: {
            line: 311,
            column: 27
          }
        },
        loc: {
          start: {
            line: 311,
            column: 31
          },
          end: {
            line: 311,
            column: 46
          }
        },
        line: 311
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 312,
            column: 28
          },
          end: {
            line: 312,
            column: 29
          }
        },
        loc: {
          start: {
            line: 312,
            column: 33
          },
          end: {
            line: 312,
            column: 98
          }
        },
        line: 312
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 17
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 315
      },
      "46": {
        name: "createAdvancedCanvasOperations",
        decl: {
          start: {
            line: 320,
            column: 9
          },
          end: {
            line: 320,
            column: 39
          }
        },
        loc: {
          start: {
            line: 320,
            column: 55
          },
          end: {
            line: 322,
            column: 1
          }
        },
        line: 320
      },
      "47": {
        name: "createCanvasAnimationUtils",
        decl: {
          start: {
            line: 323,
            column: 9
          },
          end: {
            line: 323,
            column: 35
          }
        },
        loc: {
          start: {
            line: 323,
            column: 38
          },
          end: {
            line: 325,
            column: 1
          }
        },
        line: 323
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 112,
            column: 57
          },
          end: {
            line: 112,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 112,
            column: 69
          },
          end: {
            line: 112,
            column: 82
          }
        }],
        line: 112
      },
      "1": {
        loc: {
          start: {
            line: 112,
            column: 84
          },
          end: {
            line: 112,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 112,
            column: 94
          },
          end: {
            line: 112,
            column: 95
          }
        }],
        line: 112
      },
      "2": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: 119,
            column: 15
          },
          end: {
            line: 121,
            column: 9
          }
        }],
        line: 117
      },
      "3": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 117,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 117,
            column: 31
          }
        }, {
          start: {
            line: 117,
            column: 35
          },
          end: {
            line: 117,
            column: 55
          }
        }],
        line: 117
      },
      "4": {
        loc: {
          start: {
            line: 172,
            column: 35
          },
          end: {
            line: 172,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 172,
            column: 39
          },
          end: {
            line: 172,
            column: 42
          }
        }],
        line: 172
      },
      "5": {
        loc: {
          start: {
            line: 190,
            column: 11
          },
          end: {
            line: 190,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 190,
            column: 24
          },
          end: {
            line: 190,
            column: 28
          }
        }],
        line: 190
      },
      "6": {
        loc: {
          start: {
            line: 190,
            column: 30
          },
          end: {
            line: 190,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 190,
            column: 41
          },
          end: {
            line: 190,
            column: 46
          }
        }],
        line: 190
      },
      "7": {
        loc: {
          start: {
            line: 193,
            column: 23
          },
          end: {
            line: 193,
            column: 42
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 193,
            column: 36
          },
          end: {
            line: 193,
            column: 38
          }
        }, {
          start: {
            line: 193,
            column: 41
          },
          end: {
            line: 193,
            column: 42
          }
        }],
        line: 193
      },
      "8": {
        loc: {
          start: {
            line: 193,
            column: 44
          },
          end: {
            line: 193,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 193,
            column: 57
          }
        }, {
          start: {
            line: 193,
            column: 60
          },
          end: {
            line: 193,
            column: 61
          }
        }],
        line: 193
      },
      "9": {
        loc: {
          start: {
            line: 194,
            column: 27
          },
          end: {
            line: 194,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 40
          },
          end: {
            line: 194,
            column: 58
          }
        }, {
          start: {
            line: 194,
            column: 61
          },
          end: {
            line: 194,
            column: 62
          }
        }],
        line: 194
      },
      "10": {
        loc: {
          start: {
            line: 194,
            column: 64
          },
          end: {
            line: 194,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 75
          },
          end: {
            line: 194,
            column: 94
          }
        }, {
          start: {
            line: 194,
            column: 97
          },
          end: {
            line: 194,
            column: 98
          }
        }],
        line: 194
      },
      "11": {
        loc: {
          start: {
            line: 202,
            column: 19
          },
          end: {
            line: 202,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 19
          },
          end: {
            line: 202,
            column: 26
          }
        }, {
          start: {
            line: 202,
            column: 30
          },
          end: {
            line: 202,
            column: 51
          }
        }],
        line: 202
      },
      "12": {
        loc: {
          start: {
            line: 203,
            column: 19
          },
          end: {
            line: 203,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 19
          },
          end: {
            line: 203,
            column: 26
          }
        }, {
          start: {
            line: 203,
            column: 30
          },
          end: {
            line: 203,
            column: 52
          }
        }],
        line: 203
      },
      "13": {
        loc: {
          start: {
            line: 212,
            column: 41
          },
          end: {
            line: 212,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 212,
            column: 48
          },
          end: {
            line: 212,
            column: 66
          }
        }],
        line: 212
      },
      "14": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "15": {
        loc: {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 239,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 239,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "16": {
        loc: {
          start: {
            line: 244,
            column: 45
          },
          end: {
            line: 244,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 244,
            column: 57
          },
          end: {
            line: 244,
            column: 65
          }
        }],
        line: 244
      },
      "17": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "18": {
        loc: {
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 263,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 263,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "19": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "20": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "21": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 296,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 296,
            column: 13
          }
        }, {
          start: {
            line: 294,
            column: 19
          },
          end: {
            line: 296,
            column: 13
          }
        }],
        line: 292
      },
      "22": {
        loc: {
          start: {
            line: 309,
            column: 32
          },
          end: {
            line: 309,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 309,
            column: 42
          },
          end: {
            line: 309,
            column: 51
          }
        }, {
          start: {
            line: 309,
            column: 54
          },
          end: {
            line: 309,
            column: 74
          }
        }],
        line: 309
      },
      "23": {
        loc: {
          start: {
            line: 312,
            column: 33
          },
          end: {
            line: 312,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 312,
            column: 43
          },
          end: {
            line: 312,
            column: 56
          }
        }, {
          start: {
            line: 312,
            column: 59
          },
          end: {
            line: 312,
            column: 98
          }
        }],
        line: 312
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/canvasUtils.ts"],
      sourcesContent: ["// Advanced Canvas API Utilities\n// Extended canvas operations for image processing and manipulation\n\nimport type { ManagedCanvas } from '../providers/CanvasProvider';\n\n/**\n * Blend modes for canvas operations\n */\nexport enum BlendMode {\n  Normal = 'source-over',\n  Multiply = 'multiply',\n  Screen = 'screen',\n  Overlay = 'overlay',\n  Darken = 'darken',\n  Lighten = 'lighten',\n  ColorDodge = 'color-dodge',\n  ColorBurn = 'color-burn',\n  HardLight = 'hard-light',\n  SoftLight = 'soft-light',\n  Difference = 'difference',\n  Exclusion = 'exclusion'\n}\n\n/**\n * Canvas transformation matrix\n */\nexport interface Transform {\n  a: number; // horizontal scaling\n  b: number; // horizontal skewing\n  c: number; // vertical skewing\n  d: number; // vertical scaling\n  e: number; // horizontal translation\n  f: number; // vertical translation\n}\n\n/**\n * Canvas drawing state snapshot\n */\nexport interface CanvasState {\n  imageData: ImageData;\n  transform: Transform;\n  fillStyle: string | CanvasGradient | CanvasPattern;\n  strokeStyle: string | CanvasGradient | CanvasPattern;\n  lineWidth: number;\n  lineCap: CanvasLineCap;\n  lineJoin: CanvasLineJoin;\n  globalAlpha: number;\n  globalCompositeOperation: GlobalCompositeOperation;\n  font: string;\n  textAlign: CanvasTextAlign;\n  textBaseline: CanvasTextBaseline;\n}\n\n/**\n * Advanced canvas operations class\n */\nexport class AdvancedCanvasOperations {\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n\n  constructor(managedCanvas: ManagedCanvas) {\n    this.canvas = managedCanvas.canvas;\n    this.ctx = managedCanvas.context;\n  }\n\n  /**\n   * Save current canvas state\n   */\n  saveState(): CanvasState {\n    const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    const transform = this.ctx.getTransform();\n    \n    return {\n      imageData,\n      transform: {\n        a: transform.a,\n        b: transform.b,\n        c: transform.c,\n        d: transform.d,\n        e: transform.e,\n        f: transform.f\n      },\n      fillStyle: this.ctx.fillStyle,\n      strokeStyle: this.ctx.strokeStyle,\n      lineWidth: this.ctx.lineWidth,\n      lineCap: this.ctx.lineCap,\n      lineJoin: this.ctx.lineJoin,\n      globalAlpha: this.ctx.globalAlpha,\n      globalCompositeOperation: this.ctx.globalCompositeOperation,\n      font: this.ctx.font,\n      textAlign: this.ctx.textAlign,\n      textBaseline: this.ctx.textBaseline\n    };\n  }\n\n  /**\n   * Restore canvas state\n   */\n  restoreState(state: CanvasState): void {\n    this.ctx.putImageData(state.imageData, 0, 0);\n    this.ctx.setTransform(state.transform.a, state.transform.b, state.transform.c, \n                         state.transform.d, state.transform.e, state.transform.f);\n    this.ctx.fillStyle = state.fillStyle;\n    this.ctx.strokeStyle = state.strokeStyle;\n    this.ctx.lineWidth = state.lineWidth;\n    this.ctx.lineCap = state.lineCap;\n    this.ctx.lineJoin = state.lineJoin;\n    this.ctx.globalAlpha = state.globalAlpha;\n    this.ctx.globalCompositeOperation = state.globalCompositeOperation;\n    this.ctx.font = state.font;\n    this.ctx.textAlign = state.textAlign;\n    this.ctx.textBaseline = state.textBaseline;\n  }\n\n  /**\n   * Apply image filter using pixel manipulation\n   */\n  applyPixelFilter(filterFn: (r: number, g: number, b: number, a: number) => [number, number, number, number]): void {\n    const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    const data = imageData.data;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const [r, g, b, a] = filterFn(data[i], data[i + 1], data[i + 2], data[i + 3]);\n      data[i] = Math.max(0, Math.min(255, r));\n      data[i + 1] = Math.max(0, Math.min(255, g));\n      data[i + 2] = Math.max(0, Math.min(255, b));\n      data[i + 3] = Math.max(0, Math.min(255, a));\n    }\n\n    this.ctx.putImageData(imageData, 0, 0);\n  }\n\n  /**\n   * Draw image with blend mode\n   */\n  drawImageWithBlendMode(\n    image: CanvasImageSource,\n    x: number,\n    y: number,\n    width?: number,\n    height?: number,\n    blendMode: BlendMode = BlendMode.Normal,\n    opacity: number = 1\n  ): void {\n    const originalCompositeOperation = this.ctx.globalCompositeOperation;\n    const originalAlpha = this.ctx.globalAlpha;\n\n    this.ctx.globalCompositeOperation = blendMode;\n    this.ctx.globalAlpha = opacity;\n\n    if (width !== undefined && height !== undefined) {\n      this.ctx.drawImage(image, x, y, width, height);\n    } else {\n      this.ctx.drawImage(image, x, y);\n    }\n\n    this.ctx.globalCompositeOperation = originalCompositeOperation;\n    this.ctx.globalAlpha = originalAlpha;\n  }\n\n  /**\n   * Create radial gradient\n   */\n  createRadialGradient(\n    x1: number, y1: number, r1: number,\n    x2: number, y2: number, r2: number,\n    stops: Array<{ offset: number; color: string }>\n  ): CanvasGradient {\n    const gradient = this.ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\n    stops.forEach(stop => {\n      gradient.addColorStop(stop.offset, stop.color);\n    });\n    return gradient;\n  }\n\n  /**\n   * Create linear gradient\n   */\n  createLinearGradient(\n    x1: number, y1: number, x2: number, y2: number,\n    stops: Array<{ offset: number; color: string }>\n  ): CanvasGradient {\n    const gradient = this.ctx.createLinearGradient(x1, y1, x2, y2);\n    stops.forEach(stop => {\n      gradient.addColorStop(stop.offset, stop.color);\n    });\n    return gradient;\n  }\n\n  /**\n   * Draw rounded rectangle\n   */\n  roundedRect(x: number, y: number, width: number, height: number, radius: number): void {\n    this.ctx.beginPath();\n    this.ctx.moveTo(x + radius, y);\n    this.ctx.lineTo(x + width - radius, y);\n    this.ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    this.ctx.lineTo(x + width, y + height - radius);\n    this.ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    this.ctx.lineTo(x + radius, y + height);\n    this.ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    this.ctx.lineTo(x, y + radius);\n    this.ctx.quadraticCurveTo(x, y, x + radius, y);\n    this.ctx.closePath();\n  }\n\n  /**\n   * Get pixel color at coordinates\n   */\n  getPixelColor(x: number, y: number): { r: number; g: number; b: number; a: number } {\n    const imageData = this.ctx.getImageData(x, y, 1, 1);\n    const data = imageData.data;\n    return {\n      r: data[0],\n      g: data[1],\n      b: data[2],\n      a: data[3]\n    };\n  }\n\n  /**\n   * Set pixel color at coordinates\n   */\n  setPixelColor(x: number, y: number, r: number, g: number, b: number, a: number = 255): void {\n    const imageData = this.ctx.createImageData(1, 1);\n    imageData.data[0] = r;\n    imageData.data[1] = g;\n    imageData.data[2] = b;\n    imageData.data[3] = a;\n    this.ctx.putImageData(imageData, x, y);\n  }\n\n  /**\n   * Crop canvas to specified rectangle\n   */\n  crop(x: number, y: number, width: number, height: number): void {\n    const imageData = this.ctx.getImageData(x, y, width, height);\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.ctx.putImageData(imageData, 0, 0);\n  }\n\n  /**\n   * Flip canvas horizontally or vertically\n   */\n  flip(horizontal: boolean = true, vertical: boolean = false): void {\n    const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    \n    this.ctx.save();\n    this.ctx.scale(horizontal ? -1 : 1, vertical ? -1 : 1);\n    this.ctx.translate(horizontal ? -this.canvas.width : 0, vertical ? -this.canvas.height : 0);\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.putImageData(imageData, 0, 0);\n    this.ctx.restore();\n  }\n\n  /**\n   * Rotate canvas by angle in radians\n   */\n  rotate(angle: number, centerX?: number, centerY?: number): void {\n    const cx = centerX ?? this.canvas.width / 2;\n    const cy = centerY ?? this.canvas.height / 2;\n    \n    this.ctx.translate(cx, cy);\n    this.ctx.rotate(angle);\n    this.ctx.translate(-cx, -cy);\n  }\n}\n\n/**\n * Canvas performance utilities\n */\nexport class CanvasPerformanceUtils {\n  /**\n   * Measure canvas operation performance\n   */\n  static measureOperation<T>(operation: () => T, name: string = 'Canvas Operation'): T {\n    const start = performance.now();\n    const result = operation();\n    const end = performance.now();\n    \n    if (process.env.NODE_ENV === 'development') {\n      console.log(`${name} took ${(end - start).toFixed(2)}ms`);\n    }\n    \n    return result;\n  }\n\n  /**\n   * Debounce canvas operations\n   */\n  static debounce<T extends (...args: any[]) => any>(\n    func: T,\n    wait: number\n  ): (...args: Parameters<T>) => void {\n    let timeout: NodeJS.Timeout;\n    \n    return (...args: Parameters<T>) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func(...args), wait);\n    };\n  }\n\n  /**\n   * Throttle canvas operations\n   */\n  static throttle<T extends (...args: any[]) => any>(\n    func: T,\n    limit: number\n  ): (...args: Parameters<T>) => void {\n    let inThrottle: boolean;\n    \n    return (...args: Parameters<T>) => {\n      if (!inThrottle) {\n        func(...args);\n        inThrottle = true;\n        setTimeout(() => inThrottle = false, limit);\n      }\n    };\n  }\n\n  /**\n   * Check if canvas size is within memory limits\n   */\n  static isCanvasSizeSafe(width: number, height: number, maxPixels: number = 16777216): boolean {\n    return width * height <= maxPixels;\n  }\n\n  /**\n   * Optimize canvas for performance\n   */\n  static optimizeCanvas(canvas: HTMLCanvasElement): void {\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      // Disable image smoothing for better performance in some cases\n      ctx.imageSmoothingEnabled = false;\n      \n      // Set text baseline for consistent text rendering\n      ctx.textBaseline = 'top';\n    }\n  }\n}\n\n/**\n * Canvas animation utilities\n */\nexport class CanvasAnimationUtils {\n  private animationId: number | null = null;\n  private isRunning: boolean = false;\n\n  /**\n   * Start animation loop\n   */\n  startAnimation(callback: (timestamp: number) => void): void {\n    if (this.isRunning) return;\n    \n    this.isRunning = true;\n    \n    const animate = (timestamp: number) => {\n      if (!this.isRunning) return;\n      \n      callback(timestamp);\n      this.animationId = requestAnimationFrame(animate);\n    };\n    \n    this.animationId = requestAnimationFrame(animate);\n  }\n\n  /**\n   * Stop animation loop\n   */\n  stopAnimation(): void {\n    this.isRunning = false;\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n  }\n\n  /**\n   * Animate property with easing\n   */\n  static animateProperty(\n    from: number,\n    to: number,\n    duration: number,\n    easing: (t: number) => number,\n    onUpdate: (value: number) => void,\n    onComplete?: () => void\n  ): () => void {\n    const startTime = performance.now();\n    let animationId: number;\n\n    const animate = (currentTime: number) => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easedProgress = easing(progress);\n      const currentValue = from + (to - from) * easedProgress;\n\n      onUpdate(currentValue);\n\n      if (progress < 1) {\n        animationId = requestAnimationFrame(animate);\n      } else {\n        onComplete?.();\n      }\n    };\n\n    animationId = requestAnimationFrame(animate);\n\n    // Return cancel function\n    return () => cancelAnimationFrame(animationId);\n  }\n\n  /**\n   * Common easing functions\n   */\n  static easing = {\n    linear: (t: number) => t,\n    easeInQuad: (t: number) => t * t,\n    easeOutQuad: (t: number) => t * (2 - t),\n    easeInOutQuad: (t: number) => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t,\n    easeInCubic: (t: number) => t * t * t,\n    easeOutCubic: (t: number) => (--t) * t * t + 1,\n    easeInOutCubic: (t: number) => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n  };\n}\n\n/**\n * Factory function to create advanced canvas operations\n */\nexport function createAdvancedCanvasOperations(managedCanvas: ManagedCanvas): AdvancedCanvasOperations {\n  return new AdvancedCanvasOperations(managedCanvas);\n}\n\n/**\n * Factory function to create canvas animation utils\n */\nexport function createCanvasAnimationUtils(): CanvasAnimationUtils {\n  return new CanvasAnimationUtils();\n}"],
      names: ["AdvancedCanvasOperations", "BlendMode", "CanvasAnimationUtils", "CanvasPerformanceUtils", "createAdvancedCanvasOperations", "createCanvasAnimationUtils", "constructor", "managedCanvas", "canvas", "ctx", "context", "saveState", "imageData", "getImageData", "width", "height", "transform", "getTransform", "a", "b", "c", "d", "e", "f", "fillStyle", "strokeStyle", "lineWidth", "lineCap", "lineJoin", "globalAlpha", "globalCompositeOperation", "font", "textAlign", "textBaseline", "restoreState", "state", "putImageData", "setTransform", "applyPixelFilter", "filterFn", "data", "i", "length", "r", "g", "Math", "max", "min", "drawImageWithBlendMode", "image", "x", "y", "blendMode", "opacity", "originalCompositeOperation", "originalAlpha", "undefined", "drawImage", "createRadialGradient", "x1", "y1", "r1", "x2", "y2", "r2", "stops", "gradient", "forEach", "stop", "addColorStop", "offset", "color", "createLinearGradient", "roundedRect", "radius", "beginPath", "moveTo", "lineTo", "quadraticCurveTo", "closePath", "getPixelColor", "setPixelColor", "createImageData", "crop", "flip", "horizontal", "vertical", "save", "scale", "translate", "clearRect", "restore", "rotate", "angle", "centerX", "centerY", "cx", "cy", "measureOperation", "operation", "name", "start", "performance", "now", "result", "end", "process", "env", "NODE_ENV", "console", "log", "toFixed", "debounce", "func", "wait", "timeout", "args", "clearTimeout", "setTimeout", "throttle", "limit", "inThrottle", "isCanvasSizeSafe", "maxPixels", "optimizeCanvas", "getContext", "imageSmoothingEnabled", "startAnimation", "callback", "isRunning", "animate", "timestamp", "animationId", "requestAnimationFrame", "stopAnimation", "cancelAnimationFrame", "animateProperty", "from", "to", "duration", "easing", "onUpdate", "onComplete", "startTime", "currentTime", "elapsed", "progress", "easedProgress", "currentValue", "linear", "t", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "19f92c609ee2baa6afd38ebdbb7afae852dafd41"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1iiszin0s6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1iiszin0s6();
cov_1iiszin0s6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1iiszin0s6().f[0]++;
  cov_1iiszin0s6().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1iiszin0s6().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1iiszin0s6().s[3]++;
_export(exports, {
  AdvancedCanvasOperations: function () {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[1]++;
    cov_1iiszin0s6().s[4]++;
    return AdvancedCanvasOperations;
  },
  BlendMode: function () {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[2]++;
    cov_1iiszin0s6().s[5]++;
    return BlendMode;
  },
  CanvasAnimationUtils: function () {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[3]++;
    cov_1iiszin0s6().s[6]++;
    return CanvasAnimationUtils;
  },
  CanvasPerformanceUtils: function () {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[4]++;
    cov_1iiszin0s6().s[7]++;
    return CanvasPerformanceUtils;
  },
  createAdvancedCanvasOperations: function () {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[5]++;
    cov_1iiszin0s6().s[8]++;
    return createAdvancedCanvasOperations;
  },
  createCanvasAnimationUtils: function () {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[6]++;
    cov_1iiszin0s6().s[9]++;
    return createCanvasAnimationUtils;
  }
});
var BlendMode =
/* istanbul ignore next */
(/*#__PURE__*/cov_1iiszin0s6().s[10]++, function (BlendMode) {
  /* istanbul ignore next */
  cov_1iiszin0s6().f[7]++;
  cov_1iiszin0s6().s[11]++;
  BlendMode["Normal"] = "source-over";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[12]++;
  BlendMode["Multiply"] = "multiply";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[13]++;
  BlendMode["Screen"] = "screen";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[14]++;
  BlendMode["Overlay"] = "overlay";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[15]++;
  BlendMode["Darken"] = "darken";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[16]++;
  BlendMode["Lighten"] = "lighten";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[17]++;
  BlendMode["ColorDodge"] = "color-dodge";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[18]++;
  BlendMode["ColorBurn"] = "color-burn";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[19]++;
  BlendMode["HardLight"] = "hard-light";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[20]++;
  BlendMode["SoftLight"] = "soft-light";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[21]++;
  BlendMode["Difference"] = "difference";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[22]++;
  BlendMode["Exclusion"] = "exclusion";
  /* istanbul ignore next */
  cov_1iiszin0s6().s[23]++;
  return BlendMode;
}({}));
class AdvancedCanvasOperations {
  constructor(managedCanvas) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[8]++;
    cov_1iiszin0s6().s[24]++;
    this.canvas = managedCanvas.canvas;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[25]++;
    this.ctx = managedCanvas.context;
  }
  /**
  * Save current canvas state
  */
  saveState() {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[9]++;
    const imageData =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[26]++, this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height));
    const transform =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[27]++, this.ctx.getTransform());
    /* istanbul ignore next */
    cov_1iiszin0s6().s[28]++;
    return {
      imageData,
      transform: {
        a: transform.a,
        b: transform.b,
        c: transform.c,
        d: transform.d,
        e: transform.e,
        f: transform.f
      },
      fillStyle: this.ctx.fillStyle,
      strokeStyle: this.ctx.strokeStyle,
      lineWidth: this.ctx.lineWidth,
      lineCap: this.ctx.lineCap,
      lineJoin: this.ctx.lineJoin,
      globalAlpha: this.ctx.globalAlpha,
      globalCompositeOperation: this.ctx.globalCompositeOperation,
      font: this.ctx.font,
      textAlign: this.ctx.textAlign,
      textBaseline: this.ctx.textBaseline
    };
  }
  /**
  * Restore canvas state
  */
  restoreState(state) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[10]++;
    cov_1iiszin0s6().s[29]++;
    this.ctx.putImageData(state.imageData, 0, 0);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[30]++;
    this.ctx.setTransform(state.transform.a, state.transform.b, state.transform.c, state.transform.d, state.transform.e, state.transform.f);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[31]++;
    this.ctx.fillStyle = state.fillStyle;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[32]++;
    this.ctx.strokeStyle = state.strokeStyle;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[33]++;
    this.ctx.lineWidth = state.lineWidth;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[34]++;
    this.ctx.lineCap = state.lineCap;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[35]++;
    this.ctx.lineJoin = state.lineJoin;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[36]++;
    this.ctx.globalAlpha = state.globalAlpha;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[37]++;
    this.ctx.globalCompositeOperation = state.globalCompositeOperation;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[38]++;
    this.ctx.font = state.font;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[39]++;
    this.ctx.textAlign = state.textAlign;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[40]++;
    this.ctx.textBaseline = state.textBaseline;
  }
  /**
  * Apply image filter using pixel manipulation
  */
  applyPixelFilter(filterFn) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[11]++;
    const imageData =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[41]++, this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height));
    const data =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[42]++, imageData.data);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[43]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[44]++, 0); i < data.length; i += 4) {
      const [r, g, b, a] =
      /* istanbul ignore next */
      (cov_1iiszin0s6().s[45]++, filterFn(data[i], data[i + 1], data[i + 2], data[i + 3]));
      /* istanbul ignore next */
      cov_1iiszin0s6().s[46]++;
      data[i] = Math.max(0, Math.min(255, r));
      /* istanbul ignore next */
      cov_1iiszin0s6().s[47]++;
      data[i + 1] = Math.max(0, Math.min(255, g));
      /* istanbul ignore next */
      cov_1iiszin0s6().s[48]++;
      data[i + 2] = Math.max(0, Math.min(255, b));
      /* istanbul ignore next */
      cov_1iiszin0s6().s[49]++;
      data[i + 3] = Math.max(0, Math.min(255, a));
    }
    /* istanbul ignore next */
    cov_1iiszin0s6().s[50]++;
    this.ctx.putImageData(imageData, 0, 0);
  }
  /**
  * Draw image with blend mode
  */
  drawImageWithBlendMode(image, x, y, width, height, blendMode =
  /* istanbul ignore next */
  (cov_1iiszin0s6().b[0][0]++, "source-over"), opacity =
  /* istanbul ignore next */
  (cov_1iiszin0s6().b[1][0]++, 1)) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[12]++;
    const originalCompositeOperation =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[51]++, this.ctx.globalCompositeOperation);
    const originalAlpha =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[52]++, this.ctx.globalAlpha);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[53]++;
    this.ctx.globalCompositeOperation = blendMode;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[54]++;
    this.ctx.globalAlpha = opacity;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[3][0]++, width !== undefined) &&
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[3][1]++, height !== undefined)) {
      /* istanbul ignore next */
      cov_1iiszin0s6().b[2][0]++;
      cov_1iiszin0s6().s[56]++;
      this.ctx.drawImage(image, x, y, width, height);
    } else {
      /* istanbul ignore next */
      cov_1iiszin0s6().b[2][1]++;
      cov_1iiszin0s6().s[57]++;
      this.ctx.drawImage(image, x, y);
    }
    /* istanbul ignore next */
    cov_1iiszin0s6().s[58]++;
    this.ctx.globalCompositeOperation = originalCompositeOperation;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[59]++;
    this.ctx.globalAlpha = originalAlpha;
  }
  /**
  * Create radial gradient
  */
  createRadialGradient(x1, y1, r1, x2, y2, r2, stops) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[13]++;
    const gradient =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[60]++, this.ctx.createRadialGradient(x1, y1, r1, x2, y2, r2));
    /* istanbul ignore next */
    cov_1iiszin0s6().s[61]++;
    stops.forEach(stop => {
      /* istanbul ignore next */
      cov_1iiszin0s6().f[14]++;
      cov_1iiszin0s6().s[62]++;
      gradient.addColorStop(stop.offset, stop.color);
    });
    /* istanbul ignore next */
    cov_1iiszin0s6().s[63]++;
    return gradient;
  }
  /**
  * Create linear gradient
  */
  createLinearGradient(x1, y1, x2, y2, stops) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[15]++;
    const gradient =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[64]++, this.ctx.createLinearGradient(x1, y1, x2, y2));
    /* istanbul ignore next */
    cov_1iiszin0s6().s[65]++;
    stops.forEach(stop => {
      /* istanbul ignore next */
      cov_1iiszin0s6().f[16]++;
      cov_1iiszin0s6().s[66]++;
      gradient.addColorStop(stop.offset, stop.color);
    });
    /* istanbul ignore next */
    cov_1iiszin0s6().s[67]++;
    return gradient;
  }
  /**
  * Draw rounded rectangle
  */
  roundedRect(x, y, width, height, radius) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[17]++;
    cov_1iiszin0s6().s[68]++;
    this.ctx.beginPath();
    /* istanbul ignore next */
    cov_1iiszin0s6().s[69]++;
    this.ctx.moveTo(x + radius, y);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[70]++;
    this.ctx.lineTo(x + width - radius, y);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[71]++;
    this.ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[72]++;
    this.ctx.lineTo(x + width, y + height - radius);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[73]++;
    this.ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[74]++;
    this.ctx.lineTo(x + radius, y + height);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[75]++;
    this.ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[76]++;
    this.ctx.lineTo(x, y + radius);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[77]++;
    this.ctx.quadraticCurveTo(x, y, x + radius, y);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[78]++;
    this.ctx.closePath();
  }
  /**
  * Get pixel color at coordinates
  */
  getPixelColor(x, y) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[18]++;
    const imageData =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[79]++, this.ctx.getImageData(x, y, 1, 1));
    const data =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[80]++, imageData.data);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[81]++;
    return {
      r: data[0],
      g: data[1],
      b: data[2],
      a: data[3]
    };
  }
  /**
  * Set pixel color at coordinates
  */
  setPixelColor(x, y, r, g, b, a =
  /* istanbul ignore next */
  (cov_1iiszin0s6().b[4][0]++, 255)) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[19]++;
    const imageData =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[82]++, this.ctx.createImageData(1, 1));
    /* istanbul ignore next */
    cov_1iiszin0s6().s[83]++;
    imageData.data[0] = r;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[84]++;
    imageData.data[1] = g;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[85]++;
    imageData.data[2] = b;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[86]++;
    imageData.data[3] = a;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[87]++;
    this.ctx.putImageData(imageData, x, y);
  }
  /**
  * Crop canvas to specified rectangle
  */
  crop(x, y, width, height) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[20]++;
    const imageData =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[88]++, this.ctx.getImageData(x, y, width, height));
    /* istanbul ignore next */
    cov_1iiszin0s6().s[89]++;
    this.canvas.width = width;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[90]++;
    this.canvas.height = height;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[91]++;
    this.ctx.putImageData(imageData, 0, 0);
  }
  /**
  * Flip canvas horizontally or vertically
  */
  flip(horizontal =
  /* istanbul ignore next */
  (cov_1iiszin0s6().b[5][0]++, true), vertical =
  /* istanbul ignore next */
  (cov_1iiszin0s6().b[6][0]++, false)) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[21]++;
    const imageData =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[92]++, this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height));
    /* istanbul ignore next */
    cov_1iiszin0s6().s[93]++;
    this.ctx.save();
    /* istanbul ignore next */
    cov_1iiszin0s6().s[94]++;
    this.ctx.scale(horizontal ?
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[7][0]++, -1) :
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[7][1]++, 1), vertical ?
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[8][0]++, -1) :
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[8][1]++, 1));
    /* istanbul ignore next */
    cov_1iiszin0s6().s[95]++;
    this.ctx.translate(horizontal ?
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[9][0]++, -this.canvas.width) :
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[9][1]++, 0), vertical ?
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[10][0]++, -this.canvas.height) :
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[10][1]++, 0));
    /* istanbul ignore next */
    cov_1iiszin0s6().s[96]++;
    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[97]++;
    this.ctx.putImageData(imageData, 0, 0);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[98]++;
    this.ctx.restore();
  }
  /**
  * Rotate canvas by angle in radians
  */
  rotate(angle, centerX, centerY) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[22]++;
    const cx =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[99]++,
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[11][0]++, centerX) ??
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[11][1]++, this.canvas.width / 2));
    const cy =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[100]++,
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[12][0]++, centerY) ??
    /* istanbul ignore next */
    (cov_1iiszin0s6().b[12][1]++, this.canvas.height / 2));
    /* istanbul ignore next */
    cov_1iiszin0s6().s[101]++;
    this.ctx.translate(cx, cy);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[102]++;
    this.ctx.rotate(angle);
    /* istanbul ignore next */
    cov_1iiszin0s6().s[103]++;
    this.ctx.translate(-cx, -cy);
  }
}
class CanvasPerformanceUtils {
  /**
  * Measure canvas operation performance
  */
  static measureOperation(operation, name =
  /* istanbul ignore next */
  (cov_1iiszin0s6().b[13][0]++, 'Canvas Operation')) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[23]++;
    const start =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[104]++, performance.now());
    const result =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[105]++, operation());
    const end =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[106]++, performance.now());
    /* istanbul ignore next */
    cov_1iiszin0s6().s[107]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1iiszin0s6().b[14][0]++;
      cov_1iiszin0s6().s[108]++;
      console.log(`${name} took ${(end - start).toFixed(2)}ms`);
    } else
    /* istanbul ignore next */
    {
      cov_1iiszin0s6().b[14][1]++;
    }
    cov_1iiszin0s6().s[109]++;
    return result;
  }
  /**
  * Debounce canvas operations
  */
  static debounce(func, wait) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[24]++;
    let timeout;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[110]++;
    return (...args) => {
      /* istanbul ignore next */
      cov_1iiszin0s6().f[25]++;
      cov_1iiszin0s6().s[111]++;
      clearTimeout(timeout);
      /* istanbul ignore next */
      cov_1iiszin0s6().s[112]++;
      timeout = setTimeout(() => {
        /* istanbul ignore next */
        cov_1iiszin0s6().f[26]++;
        cov_1iiszin0s6().s[113]++;
        return func(...args);
      }, wait);
    };
  }
  /**
  * Throttle canvas operations
  */
  static throttle(func, limit) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[27]++;
    let inThrottle;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[114]++;
    return (...args) => {
      /* istanbul ignore next */
      cov_1iiszin0s6().f[28]++;
      cov_1iiszin0s6().s[115]++;
      if (!inThrottle) {
        /* istanbul ignore next */
        cov_1iiszin0s6().b[15][0]++;
        cov_1iiszin0s6().s[116]++;
        func(...args);
        /* istanbul ignore next */
        cov_1iiszin0s6().s[117]++;
        inThrottle = true;
        /* istanbul ignore next */
        cov_1iiszin0s6().s[118]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_1iiszin0s6().f[29]++;
          cov_1iiszin0s6().s[119]++;
          return inThrottle = false;
        }, limit);
      } else
      /* istanbul ignore next */
      {
        cov_1iiszin0s6().b[15][1]++;
      }
    };
  }
  /**
  * Check if canvas size is within memory limits
  */
  static isCanvasSizeSafe(width, height, maxPixels =
  /* istanbul ignore next */
  (cov_1iiszin0s6().b[16][0]++, 16777216)) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[30]++;
    cov_1iiszin0s6().s[120]++;
    return width * height <= maxPixels;
  }
  /**
  * Optimize canvas for performance
  */
  static optimizeCanvas(canvas) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[31]++;
    const ctx =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[121]++, canvas.getContext('2d'));
    /* istanbul ignore next */
    cov_1iiszin0s6().s[122]++;
    if (ctx) {
      /* istanbul ignore next */
      cov_1iiszin0s6().b[17][0]++;
      cov_1iiszin0s6().s[123]++;
      // Disable image smoothing for better performance in some cases
      ctx.imageSmoothingEnabled = false;
      // Set text baseline for consistent text rendering
      /* istanbul ignore next */
      cov_1iiszin0s6().s[124]++;
      ctx.textBaseline = 'top';
    } else
    /* istanbul ignore next */
    {
      cov_1iiszin0s6().b[17][1]++;
    }
  }
}
class CanvasAnimationUtils {
  /**
  * Start animation loop
  */
  startAnimation(callback) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[32]++;
    cov_1iiszin0s6().s[125]++;
    if (this.isRunning) {
      /* istanbul ignore next */
      cov_1iiszin0s6().b[18][0]++;
      cov_1iiszin0s6().s[126]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1iiszin0s6().b[18][1]++;
    }
    cov_1iiszin0s6().s[127]++;
    this.isRunning = true;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[128]++;
    const animate = timestamp => {
      /* istanbul ignore next */
      cov_1iiszin0s6().f[33]++;
      cov_1iiszin0s6().s[129]++;
      if (!this.isRunning) {
        /* istanbul ignore next */
        cov_1iiszin0s6().b[19][0]++;
        cov_1iiszin0s6().s[130]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1iiszin0s6().b[19][1]++;
      }
      cov_1iiszin0s6().s[131]++;
      callback(timestamp);
      /* istanbul ignore next */
      cov_1iiszin0s6().s[132]++;
      this.animationId = requestAnimationFrame(animate);
    };
    /* istanbul ignore next */
    cov_1iiszin0s6().s[133]++;
    this.animationId = requestAnimationFrame(animate);
  }
  /**
  * Stop animation loop
  */
  stopAnimation() {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[34]++;
    cov_1iiszin0s6().s[134]++;
    this.isRunning = false;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[135]++;
    if (this.animationId) {
      /* istanbul ignore next */
      cov_1iiszin0s6().b[20][0]++;
      cov_1iiszin0s6().s[136]++;
      cancelAnimationFrame(this.animationId);
      /* istanbul ignore next */
      cov_1iiszin0s6().s[137]++;
      this.animationId = null;
    } else
    /* istanbul ignore next */
    {
      cov_1iiszin0s6().b[20][1]++;
    }
  }
  /**
  * Animate property with easing
  */
  static animateProperty(from, to, duration, easing, onUpdate, onComplete) {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[35]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1iiszin0s6().s[138]++, performance.now());
    let animationId;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[139]++;
    const animate = currentTime => {
      /* istanbul ignore next */
      cov_1iiszin0s6().f[36]++;
      const elapsed =
      /* istanbul ignore next */
      (cov_1iiszin0s6().s[140]++, currentTime - startTime);
      const progress =
      /* istanbul ignore next */
      (cov_1iiszin0s6().s[141]++, Math.min(elapsed / duration, 1));
      const easedProgress =
      /* istanbul ignore next */
      (cov_1iiszin0s6().s[142]++, easing(progress));
      const currentValue =
      /* istanbul ignore next */
      (cov_1iiszin0s6().s[143]++, from + (to - from) * easedProgress);
      /* istanbul ignore next */
      cov_1iiszin0s6().s[144]++;
      onUpdate(currentValue);
      /* istanbul ignore next */
      cov_1iiszin0s6().s[145]++;
      if (progress < 1) {
        /* istanbul ignore next */
        cov_1iiszin0s6().b[21][0]++;
        cov_1iiszin0s6().s[146]++;
        animationId = requestAnimationFrame(animate);
      } else {
        /* istanbul ignore next */
        cov_1iiszin0s6().b[21][1]++;
        cov_1iiszin0s6().s[147]++;
        onComplete?.();
      }
    };
    /* istanbul ignore next */
    cov_1iiszin0s6().s[148]++;
    animationId = requestAnimationFrame(animate);
    // Return cancel function
    /* istanbul ignore next */
    cov_1iiszin0s6().s[149]++;
    return () => {
      /* istanbul ignore next */
      cov_1iiszin0s6().f[37]++;
      cov_1iiszin0s6().s[150]++;
      return cancelAnimationFrame(animationId);
    };
  }
  static {
    /* istanbul ignore next */
    cov_1iiszin0s6().s[151]++;
    /**
    * Common easing functions
    */
    this.easing = {
      linear: t => {
        /* istanbul ignore next */
        cov_1iiszin0s6().f[38]++;
        cov_1iiszin0s6().s[152]++;
        return t;
      },
      easeInQuad: t => {
        /* istanbul ignore next */
        cov_1iiszin0s6().f[39]++;
        cov_1iiszin0s6().s[153]++;
        return t * t;
      },
      easeOutQuad: t => {
        /* istanbul ignore next */
        cov_1iiszin0s6().f[40]++;
        cov_1iiszin0s6().s[154]++;
        return t * (2 - t);
      },
      easeInOutQuad: t => {
        /* istanbul ignore next */
        cov_1iiszin0s6().f[41]++;
        cov_1iiszin0s6().s[155]++;
        return t < 0.5 ?
        /* istanbul ignore next */
        (cov_1iiszin0s6().b[22][0]++, 2 * t * t) :
        /* istanbul ignore next */
        (cov_1iiszin0s6().b[22][1]++, -1 + (4 - 2 * t) * t);
      },
      easeInCubic: t => {
        /* istanbul ignore next */
        cov_1iiszin0s6().f[42]++;
        cov_1iiszin0s6().s[156]++;
        return t * t * t;
      },
      easeOutCubic: t => {
        /* istanbul ignore next */
        cov_1iiszin0s6().f[43]++;
        cov_1iiszin0s6().s[157]++;
        return --t * t * t + 1;
      },
      easeInOutCubic: t => {
        /* istanbul ignore next */
        cov_1iiszin0s6().f[44]++;
        cov_1iiszin0s6().s[158]++;
        return t < 0.5 ?
        /* istanbul ignore next */
        (cov_1iiszin0s6().b[23][0]++, 4 * t * t * t) :
        /* istanbul ignore next */
        (cov_1iiszin0s6().b[23][1]++, (t - 1) * (2 * t - 2) * (2 * t - 2) + 1);
      }
    };
  }
  constructor() {
    /* istanbul ignore next */
    cov_1iiszin0s6().f[45]++;
    cov_1iiszin0s6().s[159]++;
    this.animationId = null;
    /* istanbul ignore next */
    cov_1iiszin0s6().s[160]++;
    this.isRunning = false;
  }
}
function createAdvancedCanvasOperations(managedCanvas) {
  /* istanbul ignore next */
  cov_1iiszin0s6().f[46]++;
  cov_1iiszin0s6().s[161]++;
  return new AdvancedCanvasOperations(managedCanvas);
}
function createCanvasAnimationUtils() {
  /* istanbul ignore next */
  cov_1iiszin0s6().f[47]++;
  cov_1iiszin0s6().s[162]++;
  return new CanvasAnimationUtils();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,