1d5d0ff614551ea1ae2193d1cc5660f0
// Image Export and Optimization System
// Final image export utilities with format optimization and quality controls
"use strict";

/* istanbul ignore next */
function cov_1gglhmx2q4() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/imageExport.ts";
  var hash = "453653da33d3fac55e8ff1bc3fd2ec3bba7b8703";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/imageExport.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 41,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 28
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "9": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 35
        }
      },
      "11": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "12": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 32
        }
      },
      "13": {
        start: {
          line: 42,
          column: 33
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "14": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 38
        }
      },
      "15": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "16": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 40
        }
      },
      "17": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "18": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 24
        }
      },
      "19": {
        start: {
          line: 49,
          column: 34
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "20": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 37
        }
      },
      "21": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 33
        }
      },
      "22": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "23": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 37
        }
      },
      "24": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 41
        }
      },
      "25": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 25
        }
      },
      "26": {
        start: {
          line: 59,
          column: 28
        },
        end: {
          line: 98,
          column: 1
        }
      },
      "27": {
        start: {
          line: 99,
          column: 30
        },
        end: {
          line: 110,
          column: 1
        }
      },
      "28": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 43
        }
      },
      "29": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 41
        }
      },
      "30": {
        start: {
          line: 119,
          column: 26
        },
        end: {
          line: 119,
          column: 43
        }
      },
      "31": {
        start: {
          line: 120,
          column: 28
        },
        end: {
          line: 120,
          column: 52
        }
      },
      "32": {
        start: {
          line: 122,
          column: 29
        },
        end: {
          line: 122,
          column: 65
        }
      },
      "33": {
        start: {
          line: 123,
          column: 26
        },
        end: {
          line: 123,
          column: 55
        }
      },
      "34": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 83
        }
      },
      "35": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 88
        }
      },
      "36": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "37": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 86
        }
      },
      "38": {
        start: {
          line: 133,
          column: 21
        },
        end: {
          line: 133,
          column: 71
        }
      },
      "39": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 134,
          column: 77
        }
      },
      "40": {
        start: {
          line: 136,
          column: 25
        },
        end: {
          line: 136,
          column: 59
        }
      },
      "41": {
        start: {
          line: 138,
          column: 29
        },
        end: {
          line: 138,
          column: 68
        }
      },
      "42": {
        start: {
          line: 139,
          column: 33
        },
        end: {
          line: 139,
          column: 80
        }
      },
      "43": {
        start: {
          line: 140,
          column: 31
        },
        end: {
          line: 140,
          column: 60
        }
      },
      "44": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 155,
          column: 10
        }
      },
      "45": {
        start: {
          line: 160,
          column: 24
        },
        end: {
          line: 160,
          column: 26
        }
      },
      "46": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "47": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "48": {
        start: {
          line: 163,
          column: 31
        },
        end: {
          line: 163,
          column: 61
        }
      },
      "49": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 37
        }
      },
      "50": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 78
        }
      },
      "51": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 28
        }
      },
      "52": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 23
        }
      },
      "53": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "54": {
        start: {
          line: 175,
          column: 47
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "55": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 41
        }
      },
      "56": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 183,
          column: 52
        }
      },
      "57": {
        start: {
          line: 184,
          column: 21
        },
        end: {
          line: 184,
          column: 48
        }
      },
      "58": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 24
        }
      },
      "59": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 40
        }
      },
      "60": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 40
        }
      },
      "61": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 21
        }
      },
      "62": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 40
        }
      },
      "63": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 33
        }
      },
      "64": {
        start: {
          line: 195,
          column: 26
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "65": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "66": {
        start: {
          line: 201,
          column: 33
        },
        end: {
          line: 201,
          column: 63
        }
      },
      "67": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 206,
          column: 14
        }
      },
      "68": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 70
        }
      },
      "69": {
        start: {
          line: 209,
          column: 32
        },
        end: {
          line: 209,
          column: 70
        }
      },
      "70": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 73
        }
      },
      "71": {
        start: {
          line: 210,
          column: 33
        },
        end: {
          line: 210,
          column: 73
        }
      },
      "72": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 27
        }
      },
      "73": {
        start: {
          line: 216,
          column: 23
        },
        end: {
          line: 216,
          column: 55
        }
      },
      "74": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 36
        }
      },
      "75": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 38
        }
      },
      "76": {
        start: {
          line: 220,
          column: 25
        },
        end: {
          line: 220,
          column: 48
        }
      },
      "77": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "78": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 53
        }
      },
      "79": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 55
        }
      },
      "80": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 37
        }
      },
      "81": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 38
        }
      },
      "82": {
        start: {
          line: 226,
          column: 24
        },
        end: {
          line: 226,
          column: 47
        }
      },
      "83": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 42
        }
      },
      "84": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 22
        }
      },
      "85": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "86": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 44
        }
      },
      "87": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 60
        }
      },
      "88": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 19
        }
      },
      "89": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 44
        }
      },
      "90": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "91": {
        start: {
          line: 246,
          column: 29
        },
        end: {
          line: 246,
          column: 91
        }
      },
      "92": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 68
        }
      },
      "93": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 57
        }
      },
      "94": {
        start: {
          line: 249,
          column: 32
        },
        end: {
          line: 249,
          column: 63
        }
      },
      "95": {
        start: {
          line: 250,
          column: 29
        },
        end: {
          line: 250,
          column: 135
        }
      },
      "96": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 47
        }
      },
      "97": {
        start: {
          line: 252,
          column: 15
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "98": {
        start: {
          line: 254,
          column: 24
        },
        end: {
          line: 254,
          column: 35
        }
      },
      "99": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 259,
          column: 15
        }
      },
      "100": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 256,
          column: 37
        }
      },
      "101": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 37
        }
      },
      "102": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 258,
          column: 42
        }
      },
      "103": {
        start: {
          line: 260,
          column: 34
        },
        end: {
          line: 260,
          column: 96
        }
      },
      "104": {
        start: {
          line: 261,
          column: 32
        },
        end: {
          line: 261,
          column: 54
        }
      },
      "105": {
        start: {
          line: 262,
          column: 26
        },
        end: {
          line: 262,
          column: 88
        }
      },
      "106": {
        start: {
          line: 263,
          column: 27
        },
        end: {
          line: 263,
          column: 89
        }
      },
      "107": {
        start: {
          line: 264,
          column: 29
        },
        end: {
          line: 264,
          column: 121
        }
      },
      "108": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 52
        }
      },
      "109": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 22
        }
      },
      "110": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "111": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 277,
          column: 18
        }
      },
      "112": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 282,
          column: 18
        }
      },
      "113": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 287,
          column: 18
        }
      },
      "114": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 292,
          column: 18
        }
      },
      "115": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 298,
          column: 18
        }
      },
      "116": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 312,
          column: 11
        }
      },
      "117": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 311,
          column: 46
        }
      },
      "118": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 310,
          column: 17
        }
      },
      "119": {
        start: {
          line: 307,
          column: 20
        },
        end: {
          line: 307,
          column: 34
        }
      },
      "120": {
        start: {
          line: 309,
          column: 20
        },
        end: {
          line: 309,
          column: 75
        }
      },
      "121": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 63
        }
      },
      "122": {
        start: {
          line: 322,
          column: 26
        },
        end: {
          line: 322,
          column: 84
        }
      },
      "123": {
        start: {
          line: 323,
          column: 26
        },
        end: {
          line: 323,
          column: 62
        }
      },
      "124": {
        start: {
          line: 324,
          column: 23
        },
        end: {
          line: 324,
          column: 63
        }
      },
      "125": {
        start: {
          line: 325,
          column: 27
        },
        end: {
          line: 325,
          column: 62
        }
      },
      "126": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 80
        }
      },
      "127": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "128": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 333,
          column: 29
        }
      },
      "129": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 29
        }
      },
      "130": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 337,
          column: 30
        }
      },
      "131": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 30
        }
      },
      "132": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 29
        }
      },
      "133": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 48
        }
      },
      "134": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 24
        }
      },
      "135": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 32
        }
      },
      "136": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 33
        }
      },
      "137": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 39
        }
      },
      "138": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 370,
          column: 11
        }
      },
      "139": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 366,
          column: 15
        }
      },
      "140": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 369,
          column: 13
        }
      },
      "141": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 368,
          column: 36
        }
      },
      "142": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 63
        }
      },
      "143": {
        start: {
          line: 375,
          column: 56
        },
        end: {
          line: 375,
          column: 63
        }
      },
      "144": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 31
        }
      },
      "145": {
        start: {
          line: 377,
          column: 31
        },
        end: {
          line: 377,
          column: 33
        }
      },
      "146": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 397,
          column: 9
        }
      },
      "147": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 384,
          column: 13
        }
      },
      "148": {
        start: {
          line: 381,
          column: 29
        },
        end: {
          line: 381,
          column: 47
        }
      },
      "149": {
        start: {
          line: 382,
          column: 32
        },
        end: {
          line: 382,
          column: 56
        }
      },
      "150": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 45
        }
      },
      "151": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 396,
          column: 13
        }
      },
      "152": {
        start: {
          line: 387,
          column: 16
        },
        end: {
          line: 387,
          column: 51
        }
      },
      "153": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 395,
          column: 17
        }
      },
      "154": {
        start: {
          line: 389,
          column: 28
        },
        end: {
          line: 389,
          column: 53
        }
      },
      "155": {
        start: {
          line: 390,
          column: 20
        },
        end: {
          line: 394,
          column: 21
        }
      },
      "156": {
        start: {
          line: 392,
          column: 39
        },
        end: {
          line: 392,
          column: 72
        }
      },
      "157": {
        start: {
          line: 393,
          column: 24
        },
        end: {
          line: 393,
          column: 52
        }
      },
      "158": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 398,
          column: 32
        }
      },
      "159": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "160": {
        start: {
          line: 404,
          column: 27
        },
        end: {
          line: 404,
          column: 71
        }
      },
      "161": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 405,
          column: 33
        }
      },
      "162": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 83
        }
      },
      "163": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 79
        }
      },
      "164": {
        start: {
          line: 413,
          column: 35
        },
        end: {
          line: 413,
          column: 77
        }
      },
      "165": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 24
        }
      },
      "166": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 422,
          column: 10
        }
      },
      "167": {
        start: {
          line: 426,
          column: 4
        },
        end: {
          line: 426,
          column: 44
        }
      },
      "168": {
        start: {
          line: 429,
          column: 4
        },
        end: {
          line: 429,
          column: 57
        }
      },
      "169": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 443,
          column: 5
        }
      },
      "170": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 32
        }
      },
      "171": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 32
        }
      },
      "172": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 31
        }
      },
      "173": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 440,
          column: 31
        }
      },
      "174": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 31
        }
      },
      "175": {
        start: {
          line: 446,
          column: 19
        },
        end: {
          line: 446,
          column: 33
        }
      },
      "176": {
        start: {
          line: 447,
          column: 4
        },
        end: {
          line: 465,
          column: 5
        }
      },
      "177": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 32
        }
      },
      "178": {
        start: {
          line: 453,
          column: 29
        },
        end: {
          line: 453,
          column: 41
        }
      },
      "179": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 42
        }
      },
      "180": {
        start: {
          line: 457,
          column: 33
        },
        end: {
          line: 457,
          column: 45
        }
      },
      "181": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 458,
          column: 48
        }
      },
      "182": {
        start: {
          line: 461,
          column: 33
        },
        end: {
          line: 461,
          column: 45
        }
      },
      "183": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 462,
          column: 48
        }
      },
      "184": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 16
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 14,
            column: 25
          }
        },
        loc: {
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 17,
            column: 28
          }
        },
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 19
          }
        },
        loc: {
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 19
          },
          end: {
            line: 23,
            column: 20
          }
        },
        loc: {
          start: {
            line: 23,
            column: 30
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 19
          },
          end: {
            line: 26,
            column: 20
          }
        },
        loc: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 30
          },
          end: {
            line: 29,
            column: 31
          }
        },
        loc: {
          start: {
            line: 29,
            column: 41
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 32,
            column: 26
          }
        },
        loc: {
          start: {
            line: 32,
            column: 36
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 35,
            column: 23
          }
        },
        loc: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 23
          }
        },
        loc: {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 34
          }
        },
        loc: {
          start: {
            line: 42,
            column: 56
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 42
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 49,
            column: 34
          },
          end: {
            line: 49,
            column: 35
          }
        },
        loc: {
          start: {
            line: 49,
            column: 58
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 49
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 30
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 112
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 118,
            column: 7
          }
        },
        loc: {
          start: {
            line: 118,
            column: 37
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 118
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 159,
            column: 6
          },
          end: {
            line: 159,
            column: 7
          }
        },
        loc: {
          start: {
            line: 159,
            column: 33
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 159
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 174,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        },
        loc: {
          start: {
            line: 174,
            column: 39
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 174
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 175,
            column: 36
          },
          end: {
            line: 175,
            column: 37
          }
        },
        loc: {
          start: {
            line: 175,
            column: 47
          },
          end: {
            line: 177,
            column: 13
          }
        },
        line: 175
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 182,
            column: 7
          }
        },
        loc: {
          start: {
            line: 182,
            column: 28
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 182
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 194,
            column: 6
          },
          end: {
            line: 194,
            column: 7
          }
        },
        loc: {
          start: {
            line: 194,
            column: 26
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 194
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 215,
            column: 6
          },
          end: {
            line: 215,
            column: 7
          }
        },
        loc: {
          start: {
            line: 215,
            column: 33
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 215
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 233,
            column: 6
          },
          end: {
            line: 233,
            column: 7
          }
        },
        loc: {
          start: {
            line: 233,
            column: 52
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 233
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 241,
            column: 6
          },
          end: {
            line: 241,
            column: 7
          }
        },
        loc: {
          start: {
            line: 241,
            column: 51
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 241
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 255,
            column: 30
          },
          end: {
            line: 255,
            column: 31
          }
        },
        loc: {
          start: {
            line: 255,
            column: 49
          },
          end: {
            line: 259,
            column: 13
          }
        },
        line: 255
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 271,
            column: 6
          },
          end: {
            line: 271,
            column: 7
          }
        },
        loc: {
          start: {
            line: 271,
            column: 74
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 271
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 303,
            column: 6
          },
          end: {
            line: 303,
            column: 7
          }
        },
        loc: {
          start: {
            line: 303,
            column: 41
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 303
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 304,
            column: 27
          },
          end: {
            line: 304,
            column: 28
          }
        },
        loc: {
          start: {
            line: 304,
            column: 46
          },
          end: {
            line: 312,
            column: 9
          }
        },
        line: 304
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 305,
            column: 26
          },
          end: {
            line: 305,
            column: 27
          }
        },
        loc: {
          start: {
            line: 305,
            column: 34
          },
          end: {
            line: 311,
            column: 13
          }
        },
        line: 305
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 316,
            column: 6
          },
          end: {
            line: 316,
            column: 7
          }
        },
        loc: {
          start: {
            line: 316,
            column: 44
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 316
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 321,
            column: 6
          },
          end: {
            line: 321,
            column: 7
          }
        },
        loc: {
          start: {
            line: 321,
            column: 31
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 321
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 330,
            column: 6
          },
          end: {
            line: 330,
            column: 7
          }
        },
        loc: {
          start: {
            line: 330,
            column: 31
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 330
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 346,
            column: 6
          },
          end: {
            line: 346,
            column: 7
          }
        },
        loc: {
          start: {
            line: 346,
            column: 35
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 346
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 42
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 352
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 360,
            column: 6
          },
          end: {
            line: 360,
            column: 7
          }
        },
        loc: {
          start: {
            line: 360,
            column: 32
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 360
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 361,
            column: 27
          },
          end: {
            line: 361,
            column: 28
          }
        },
        loc: {
          start: {
            line: 361,
            column: 46
          },
          end: {
            line: 370,
            column: 9
          }
        },
        line: 361
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 374,
            column: 6
          },
          end: {
            line: 374,
            column: 7
          }
        },
        loc: {
          start: {
            line: 374,
            column: 27
          },
          end: {
            line: 399,
            column: 5
          }
        },
        line: 374
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 392,
            column: 28
          },
          end: {
            line: 392,
            column: 29
          }
        },
        loc: {
          start: {
            line: 392,
            column: 39
          },
          end: {
            line: 392,
            column: 72
          }
        },
        line: 392
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 402,
            column: 6
          },
          end: {
            line: 402,
            column: 7
          }
        },
        loc: {
          start: {
            line: 402,
            column: 32
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 402
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 412,
            column: 6
          },
          end: {
            line: 412,
            column: 7
          }
        },
        loc: {
          start: {
            line: 412,
            column: 19
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 412
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 413,
            column: 27
          },
          end: {
            line: 413,
            column: 28
          }
        },
        loc: {
          start: {
            line: 413,
            column: 35
          },
          end: {
            line: 413,
            column: 77
          }
        },
        line: 413
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 418,
            column: 6
          },
          end: {
            line: 418,
            column: 7
          }
        },
        loc: {
          start: {
            line: 418,
            column: 23
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 418
      },
      "40": {
        name: "createImageExporter",
        decl: {
          start: {
            line: 425,
            column: 9
          },
          end: {
            line: 425,
            column: 28
          }
        },
        loc: {
          start: {
            line: 425,
            column: 44
          },
          end: {
            line: 427,
            column: 1
          }
        },
        line: 425
      },
      "41": {
        name: "createBatchExportManager",
        decl: {
          start: {
            line: 428,
            column: 9
          },
          end: {
            line: 428,
            column: 33
          }
        },
        loc: {
          start: {
            line: 428,
            column: 57
          },
          end: {
            line: 430,
            column: 1
          }
        },
        line: 428
      },
      "42": {
        name: "getOptimalFormat",
        decl: {
          start: {
            line: 431,
            column: 9
          },
          end: {
            line: 431,
            column: 25
          }
        },
        loc: {
          start: {
            line: 431,
            column: 35
          },
          end: {
            line: 444,
            column: 1
          }
        },
        line: 431
      },
      "43": {
        name: "estimateFileSize",
        decl: {
          start: {
            line: 445,
            column: 9
          },
          end: {
            line: 445,
            column: 25
          }
        },
        loc: {
          start: {
            line: 445,
            column: 64
          },
          end: {
            line: 466,
            column: 1
          }
        },
        line: 445
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 118,
            column: 24
          },
          end: {
            line: 118,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 118,
            column: 33
          },
          end: {
            line: 118,
            column: 35
          }
        }],
        line: 118
      },
      "1": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "2": {
        loc: {
          start: {
            line: 139,
            column: 33
          },
          end: {
            line: 139,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 52
          },
          end: {
            line: 139,
            column: 76
          }
        }, {
          start: {
            line: 139,
            column: 79
          },
          end: {
            line: 139,
            column: 80
          }
        }],
        line: 139
      },
      "3": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "4": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 200,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 200,
            column: 25
          }
        }, {
          start: {
            line: 200,
            column: 29
          },
          end: {
            line: 200,
            column: 59
          }
        }],
        line: 200
      },
      "5": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 209,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 209,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "6": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 210,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 210,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "7": {
        loc: {
          start: {
            line: 220,
            column: 26
          },
          end: {
            line: 220,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 26
          },
          end: {
            line: 220,
            column: 36
          }
        }, {
          start: {
            line: 220,
            column: 40
          },
          end: {
            line: 220,
            column: 42
          }
        }],
        line: 220
      },
      "8": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "9": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "10": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 234,
            column: 27
          }
        }, {
          start: {
            line: 234,
            column: 31
          },
          end: {
            line: 234,
            column: 64
          }
        }],
        line: 234
      },
      "11": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: 252,
            column: 15
          },
          end: {
            line: 266,
            column: 9
          }
        }],
        line: 244
      },
      "12": {
        loc: {
          start: {
            line: 247,
            column: 40
          },
          end: {
            line: 247,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 40
          },
          end: {
            line: 247,
            column: 54
          }
        }, {
          start: {
            line: 247,
            column: 58
          },
          end: {
            line: 247,
            column: 65
          }
        }],
        line: 247
      },
      "13": {
        loc: {
          start: {
            line: 248,
            column: 28
          },
          end: {
            line: 248,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 28
          },
          end: {
            line: 248,
            column: 43
          }
        }, {
          start: {
            line: 248,
            column: 47
          },
          end: {
            line: 248,
            column: 56
          }
        }],
        line: 248
      },
      "14": {
        loc: {
          start: {
            line: 252,
            column: 15
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 15
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "15": {
        loc: {
          start: {
            line: 262,
            column: 26
          },
          end: {
            line: 262,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 45
          },
          end: {
            line: 262,
            column: 58
          }
        }, {
          start: {
            line: 262,
            column: 61
          },
          end: {
            line: 262,
            column: 88
          }
        }],
        line: 262
      },
      "16": {
        loc: {
          start: {
            line: 263,
            column: 27
          },
          end: {
            line: 263,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 46
          },
          end: {
            line: 263,
            column: 73
          }
        }, {
          start: {
            line: 263,
            column: 76
          },
          end: {
            line: 263,
            column: 89
          }
        }],
        line: 263
      },
      "17": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 277,
            column: 18
          }
        }, {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 282,
            column: 18
          }
        }, {
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 287,
            column: 18
          }
        }, {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 292,
            column: 18
          }
        }, {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 293,
            column: 26
          }
        }, {
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 298,
            column: 18
          }
        }],
        line: 272
      },
      "18": {
        loc: {
          start: {
            line: 306,
            column: 16
          },
          end: {
            line: 310,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 16
          },
          end: {
            line: 310,
            column: 17
          }
        }, {
          start: {
            line: 308,
            column: 23
          },
          end: {
            line: 310,
            column: 17
          }
        }],
        line: 306
      },
      "19": {
        loc: {
          start: {
            line: 324,
            column: 23
          },
          end: {
            line: 324,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 324,
            column: 39
          },
          end: {
            line: 324,
            column: 58
          }
        }, {
          start: {
            line: 324,
            column: 61
          },
          end: {
            line: 324,
            column: 63
          }
        }],
        line: 324
      },
      "20": {
        loc: {
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 333,
            column: 29
          }
        }, {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 335,
            column: 29
          }
        }, {
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 337,
            column: 30
          }
        }, {
          start: {
            line: 338,
            column: 12
          },
          end: {
            line: 339,
            column: 30
          }
        }, {
          start: {
            line: 340,
            column: 12
          },
          end: {
            line: 341,
            column: 29
          }
        }],
        line: 331
      },
      "21": {
        loc: {
          start: {
            line: 352,
            column: 26
          },
          end: {
            line: 352,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 352,
            column: 40
          },
          end: {
            line: 352,
            column: 41
          }
        }],
        line: 352
      },
      "22": {
        loc: {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 369,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 369,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "23": {
        loc: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 375,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 375,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      },
      "24": {
        loc: {
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 375,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 375,
            column: 27
          }
        }, {
          start: {
            line: 375,
            column: 31
          },
          end: {
            line: 375,
            column: 54
          }
        }],
        line: 375
      },
      "25": {
        loc: {
          start: {
            line: 378,
            column: 14
          },
          end: {
            line: 378,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 14
          },
          end: {
            line: 378,
            column: 35
          }
        }, {
          start: {
            line: 378,
            column: 39
          },
          end: {
            line: 378,
            column: 64
          }
        }],
        line: 378
      },
      "26": {
        loc: {
          start: {
            line: 380,
            column: 18
          },
          end: {
            line: 380,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 18
          },
          end: {
            line: 380,
            column: 58
          }
        }, {
          start: {
            line: 380,
            column: 62
          },
          end: {
            line: 380,
            column: 83
          }
        }],
        line: 380
      },
      "27": {
        loc: {
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 396,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 396,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "28": {
        loc: {
          start: {
            line: 390,
            column: 20
          },
          end: {
            line: 394,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 20
          },
          end: {
            line: 394,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "29": {
        loc: {
          start: {
            line: 407,
            column: 24
          },
          end: {
            line: 407,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 407,
            column: 49
          },
          end: {
            line: 407,
            column: 54
          }
        }, {
          start: {
            line: 407,
            column: 57
          },
          end: {
            line: 407,
            column: 81
          }
        }],
        line: 407
      },
      "30": {
        loc: {
          start: {
            line: 432,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 433,
            column: 8
          },
          end: {
            line: 434,
            column: 32
          }
        }, {
          start: {
            line: 435,
            column: 8
          },
          end: {
            line: 436,
            column: 32
          }
        }, {
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 438,
            column: 31
          }
        }, {
          start: {
            line: 439,
            column: 8
          },
          end: {
            line: 440,
            column: 31
          }
        }, {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 442,
            column: 31
          }
        }],
        line: 432
      },
      "31": {
        loc: {
          start: {
            line: 445,
            column: 49
          },
          end: {
            line: 445,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 445,
            column: 59
          },
          end: {
            line: 445,
            column: 62
          }
        }],
        line: 445
      },
      "32": {
        loc: {
          start: {
            line: 447,
            column: 4
          },
          end: {
            line: 465,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 450,
            column: 32
          }
        }, {
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 454,
            column: 42
          }
        }, {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 458,
            column: 48
          }
        }, {
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 462,
            column: 48
          }
        }, {
          start: {
            line: 463,
            column: 8
          },
          end: {
            line: 464,
            column: 30
          }
        }],
        line: 447
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0, 0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0, 0, 0],
      "31": [0],
      "32": [0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/imageExport.ts"],
      sourcesContent: ["// Image Export and Optimization System\n// Final image export utilities with format optimization and quality controls\n\nimport type { ManagedCanvas } from '../providers/CanvasProvider';\n\n/**\n * Supported export formats\n */\nexport enum ExportFormat {\n  PNG = 'image/png',\n  JPEG = 'image/jpeg',\n  WEBP = 'image/webp',\n  AVIF = 'image/avif'\n}\n\n/**\n * Export quality presets for different use cases\n */\nexport enum QualityPreset {\n  DRAFT = 'draft',           // Low quality, smallest file\n  WEB = 'web',              // Balanced quality for web\n  SOCIAL = 'social',        // Optimized for social media\n  PRINT = 'print',          // High quality for printing\n  MAXIMUM = 'maximum'       // Highest quality, largest file\n}\n\n/**\n * Export configuration options\n */\nexport interface ExportConfig {\n  format: ExportFormat;\n  quality: number; // 0-1 for lossy formats\n  preset?: QualityPreset;\n  width?: number;\n  height?: number;\n  backgroundColor?: string;\n  dpi?: number;\n  metadata?: ExportMetadata;\n  watermark?: WatermarkConfig;\n  compression?: CompressionConfig;\n}\n\n/**\n * Export metadata\n */\nexport interface ExportMetadata {\n  title?: string;\n  description?: string;\n  author?: string;\n  copyright?: string;\n  keywords?: string[];\n  created?: Date;\n  modified?: Date;\n  software?: string;\n  version?: string;\n}\n\n/**\n * Watermark configuration\n */\nexport interface WatermarkConfig {\n  text?: string;\n  image?: string;\n  position: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | 'center';\n  opacity: number;\n  size: number;\n  color?: string;\n  font?: string;\n  margin: number;\n}\n\n/**\n * Compression configuration\n */\nexport interface CompressionConfig {\n  progressive?: boolean; // For JPEG\n  lossless?: boolean;    // For WebP/AVIF\n  effort?: number;       // Compression effort (0-6 for WebP)\n}\n\n/**\n * Export result\n */\nexport interface ExportResult {\n  blob: Blob;\n  dataUrl: string;\n  filename: string;\n  size: number;\n  format: ExportFormat;\n  dimensions: { width: number; height: number };\n  quality: number;\n  metadata?: ExportMetadata;\n  compressionRatio?: number;\n  processingTime: number;\n}\n\n/**\n * Batch export configuration\n */\nexport interface BatchExportConfig {\n  formats: ExportFormat[];\n  qualities: number[];\n  presets?: QualityPreset[];\n  nameTemplate: string; // e.g., \"{name}_{preset}_{format}\"\n  parallelExports: number;\n  progressCallback?: (completed: number, total: number, current: ExportResult) => void;\n}\n\n/**\n * Quality preset configurations\n */\nconst QUALITY_PRESETS: Record<QualityPreset, Partial<ExportConfig>> = {\n  [QualityPreset.DRAFT]: {\n    quality: 0.3,\n    compression: { progressive: false, effort: 1 }\n  },\n  [QualityPreset.WEB]: {\n    quality: 0.8,\n    compression: { progressive: true, effort: 3 }\n  },\n  [QualityPreset.SOCIAL]: {\n    quality: 0.85,\n    width: 1080,\n    height: 1080,\n    compression: { progressive: true, effort: 4 }\n  },\n  [QualityPreset.PRINT]: {\n    quality: 0.95,\n    dpi: 300,\n    compression: { progressive: true, effort: 5 }\n  },\n  [QualityPreset.MAXIMUM]: {\n    quality: 1.0,\n    compression: { lossless: true, effort: 6 }\n  }\n};\n\n/**\n * Default export configuration\n */\nexport const DEFAULT_EXPORT_CONFIG: ExportConfig = {\n  format: ExportFormat.PNG,\n  quality: 0.9,\n  preset: QualityPreset.WEB,\n  backgroundColor: '#ffffff',\n  dpi: 72,\n  metadata: {\n    software: 'TheSusFit Image Editor',\n    version: '1.0.0',\n    created: new Date()\n  }\n};\n\n/**\n * Main image export class\n */\nexport class ImageExporter {\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n\n  constructor(managedCanvas: ManagedCanvas) {\n    this.canvas = managedCanvas.canvas;\n    this.ctx = managedCanvas.context;\n  }\n\n  /**\n   * Export image with specified configuration\n   */\n  async exportImage(config: Partial<ExportConfig> = {}): Promise<ExportResult> {\n    const startTime = performance.now();\n    const finalConfig = this.mergeConfig(config);\n    \n    // Create export canvas if dimensions specified\n    const exportCanvas = this.createExportCanvas(finalConfig);\n    const exportCtx = exportCanvas.getContext('2d')!;\n\n    // Apply background if specified\n    this.applyBackground(exportCtx, exportCanvas, finalConfig.backgroundColor!);\n\n    // Draw main content\n    exportCtx.drawImage(this.canvas, 0, 0, exportCanvas.width, exportCanvas.height);\n\n    // Apply watermark if specified\n    if (finalConfig.watermark) {\n      await this.applyWatermark(exportCtx, exportCanvas, finalConfig.watermark);\n    }\n\n    // Generate export blob\n    const blob = await this.canvasToBlob(exportCanvas, finalConfig);\n    const dataUrl = await this.canvasToDataUrl(exportCanvas, finalConfig);\n    \n    // Generate filename\n    const filename = this.generateFilename(finalConfig);\n    \n    // Calculate compression ratio\n    const originalSize = this.estimateOriginalSize(exportCanvas);\n    const compressionRatio = originalSize > 0 ? blob.size / originalSize : 1;\n\n    const processingTime = performance.now() - startTime;\n\n    return {\n      blob,\n      dataUrl,\n      filename,\n      size: blob.size,\n      format: finalConfig.format,\n      dimensions: { width: exportCanvas.width, height: exportCanvas.height },\n      quality: finalConfig.quality,\n      metadata: finalConfig.metadata,\n      compressionRatio,\n      processingTime\n    };\n  }\n\n  /**\n   * Batch export with multiple configurations\n   */\n  async batchExport(configs: Partial<ExportConfig>[]): Promise<ExportResult[]> {\n    const results: ExportResult[] = [];\n    \n    for (const config of configs) {\n      try {\n        const result = await this.exportImage(config);\n        results.push(result);\n      } catch (error) {\n        console.error('Failed to export with config:', config, error);\n        throw error;\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Export with preset configurations\n   */\n  async exportWithPresets(presets: QualityPreset[]): Promise<ExportResult[]> {\n    const configs = presets.map(preset => ({ preset }));\n    return this.batchExport(configs);\n  }\n\n  /**\n   * Download exported image\n   */\n  downloadImage(result: ExportResult): void {\n    const url = URL.createObjectURL(result.blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = result.filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Merge configuration with defaults and presets\n   */\n  private mergeConfig(config: Partial<ExportConfig>): ExportConfig {\n    let finalConfig = { ...DEFAULT_EXPORT_CONFIG, ...config };\n\n    // Apply preset if specified\n    if (config.preset && QUALITY_PRESETS[config.preset]) {\n      const presetConfig = QUALITY_PRESETS[config.preset];\n      finalConfig = { ...finalConfig, ...presetConfig, ...config };\n    }\n\n    // Set dimensions to canvas size if not specified\n    if (!finalConfig.width) finalConfig.width = this.canvas.width;\n    if (!finalConfig.height) finalConfig.height = this.canvas.height;\n\n    return finalConfig;\n  }\n\n  /**\n   * Create export canvas with specified dimensions\n   */\n  private createExportCanvas(config: ExportConfig): HTMLCanvasElement {\n    const canvas = document.createElement('canvas');\n    canvas.width = config.width!;\n    canvas.height = config.height!;\n    \n    // Handle high DPI displays\n    const dpiScale = (config.dpi || 72) / 72;\n    if (dpiScale !== 1) {\n      canvas.style.width = `${canvas.width}px`;\n      canvas.style.height = `${canvas.height}px`;\n      canvas.width *= dpiScale;\n      canvas.height *= dpiScale;\n      \n      const ctx = canvas.getContext('2d')!;\n      ctx.scale(dpiScale, dpiScale);\n    }\n\n    return canvas;\n  }\n\n  /**\n   * Apply background color to canvas\n   */\n  private applyBackground(ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement, backgroundColor: string): void {\n    if (backgroundColor && backgroundColor !== 'transparent') {\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  /**\n   * Apply watermark to canvas\n   */\n  private async applyWatermark(ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement, watermark: WatermarkConfig): Promise<void> {\n    ctx.save();\n    ctx.globalAlpha = watermark.opacity;\n\n    if (watermark.text) {\n      // Text watermark\n      const fontSize = Math.min(canvas.width, canvas.height) * (watermark.size / 100);\n      ctx.font = `${fontSize}px ${watermark.font || 'Arial'}`;\n      ctx.fillStyle = watermark.color || '#000000';\n      \n      const textMetrics = ctx.measureText(watermark.text);\n      const { x, y } = this.calculateWatermarkPosition(\n        canvas, \n        textMetrics.width, \n        fontSize, \n        watermark.position, \n        watermark.margin\n      );\n      \n      ctx.fillText(watermark.text, x, y);\n    } else if (watermark.image) {\n      // Image watermark\n      const img = new Image();\n      await new Promise((resolve, reject) => {\n        img.onload = resolve;\n        img.onerror = reject;\n        img.src = watermark.image!;\n      });\n      \n      const watermarkSize = Math.min(canvas.width, canvas.height) * (watermark.size / 100);\n      const aspectRatio = img.width / img.height;\n      const width = aspectRatio >= 1 ? watermarkSize : watermarkSize * aspectRatio;\n      const height = aspectRatio >= 1 ? watermarkSize / aspectRatio : watermarkSize;\n      \n      const { x, y } = this.calculateWatermarkPosition(\n        canvas, \n        width, \n        height, \n        watermark.position, \n        watermark.margin\n      );\n      \n      ctx.drawImage(img, x, y, width, height);\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Calculate watermark position based on alignment\n   */\n  private calculateWatermarkPosition(\n    canvas: HTMLCanvasElement, \n    width: number, \n    height: number, \n    position: WatermarkConfig['position'], \n    margin: number\n  ): { x: number; y: number } {\n    switch (position) {\n      case 'top-left':\n        return { x: margin, y: margin + height };\n      case 'top-right':\n        return { x: canvas.width - width - margin, y: margin + height };\n      case 'bottom-left':\n        return { x: margin, y: canvas.height - margin };\n      case 'bottom-right':\n        return { x: canvas.width - width - margin, y: canvas.height - margin };\n      case 'center':\n      default:\n        return { \n          x: (canvas.width - width) / 2, \n          y: (canvas.height - height) / 2 + height \n        };\n    }\n  }\n\n  /**\n   * Convert canvas to blob with format and quality\n   */\n  private async canvasToBlob(canvas: HTMLCanvasElement, config: ExportConfig): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(\n        (blob) => {\n          if (blob) {\n            resolve(blob);\n          } else {\n            reject(new Error('Failed to create blob from canvas'));\n          }\n        },\n        config.format,\n        config.quality\n      );\n    });\n  }\n\n  /**\n   * Convert canvas to data URL\n   */\n  private async canvasToDataUrl(canvas: HTMLCanvasElement, config: ExportConfig): Promise<string> {\n    return canvas.toDataURL(config.format, config.quality);\n  }\n\n  /**\n   * Generate filename based on configuration\n   */\n  private generateFilename(config: ExportConfig): string {\n    const timestamp = new Date().toISOString().slice(0, 19).replace(/[:-]/g, '');\n    const extension = this.getFileExtension(config.format);\n    const preset = config.preset ? `_${config.preset}` : '';\n    const dimensions = `_${config.width}x${config.height}`;\n    \n    return `exported_image${preset}${dimensions}_${timestamp}.${extension}`;\n  }\n\n  /**\n   * Get file extension for format\n   */\n  private getFileExtension(format: ExportFormat): string {\n    switch (format) {\n      case ExportFormat.PNG:\n        return 'png';\n      case ExportFormat.JPEG:\n        return 'jpg';\n      case ExportFormat.WEBP:\n        return 'webp';\n      case ExportFormat.AVIF:\n        return 'avif';\n      default:\n        return 'png';\n    }\n  }\n\n  /**\n   * Estimate original (uncompressed) size for compression ratio calculation\n   */\n  private estimateOriginalSize(canvas: HTMLCanvasElement): number {\n    // Estimate as 4 bytes per pixel (RGBA) for uncompressed bitmap\n    return canvas.width * canvas.height * 4;\n  }\n}\n\n/**\n * Batch export manager for processing multiple exports\n */\nexport class BatchExportManager {\n  private exporter: ImageExporter;\n  private queue: Array<{ config: Partial<ExportConfig>; resolve: (result: ExportResult) => void; reject: (error: Error) => void }> = [];\n  private processing = false;\n  private concurrency: number;\n\n  constructor(exporter: ImageExporter, concurrency: number = 2) {\n    this.exporter = exporter;\n    this.concurrency = concurrency;\n  }\n\n  /**\n   * Add export to queue\n   */\n  async queueExport(config: Partial<ExportConfig>): Promise<ExportResult> {\n    return new Promise((resolve, reject) => {\n      this.queue.push({ config, resolve, reject });\n      if (!this.processing) {\n        this.processQueue();\n      }\n    });\n  }\n\n  /**\n   * Process export queue with concurrency control\n   */\n  private async processQueue(): Promise<void> {\n    if (this.processing || this.queue.length === 0) return;\n    \n    this.processing = true;\n    const activePromises: Promise<void>[] = [];\n\n    while (this.queue.length > 0 || activePromises.length > 0) {\n      // Start new exports up to concurrency limit\n      while (activePromises.length < this.concurrency && this.queue.length > 0) {\n        const item = this.queue.shift()!;\n        const promise = this.processExport(item);\n        activePromises.push(promise);\n      }\n\n      // Wait for at least one to complete\n      if (activePromises.length > 0) {\n        await Promise.race(activePromises);\n        // Remove completed promises\n        for (let i = activePromises.length - 1; i >= 0; i--) {\n          if (await Promise.allSettled([activePromises[i]]).then(results => results[0].status === 'fulfilled')) {\n            activePromises.splice(i, 1);\n          }\n        }\n      }\n    }\n\n    this.processing = false;\n  }\n\n  /**\n   * Process individual export\n   */\n  private async processExport(item: { config: Partial<ExportConfig>; resolve: (result: ExportResult) => void; reject: (error: Error) => void }): Promise<void> {\n    try {\n      const result = await this.exporter.exportImage(item.config);\n      item.resolve(result);\n    } catch (error) {\n      item.reject(error instanceof Error ? error : new Error(String(error)));\n    }\n  }\n\n  /**\n   * Clear the export queue\n   */\n  clearQueue(): void {\n    this.queue.forEach(item => item.reject(new Error('Export cancelled')));\n    this.queue = [];\n  }\n\n  /**\n   * Get queue status\n   */\n  getQueueStatus(): { pending: number; processing: boolean } {\n    return {\n      pending: this.queue.length,\n      processing: this.processing\n    };\n  }\n}\n\n/**\n * Factory function to create image exporter\n */\nexport function createImageExporter(managedCanvas: ManagedCanvas): ImageExporter {\n  return new ImageExporter(managedCanvas);\n}\n\n/**\n * Factory function to create batch export manager\n */\nexport function createBatchExportManager(exporter: ImageExporter, concurrency?: number): BatchExportManager {\n  return new BatchExportManager(exporter, concurrency);\n}\n\n/**\n * Utility function to get optimal format for use case\n */\nexport function getOptimalFormat(useCase: 'web' | 'social' | 'print' | 'archive'): ExportFormat {\n  switch (useCase) {\n    case 'web':\n      return ExportFormat.WEBP;\n    case 'social':\n      return ExportFormat.JPEG;\n    case 'print':\n      return ExportFormat.PNG;\n    case 'archive':\n      return ExportFormat.PNG;\n    default:\n      return ExportFormat.PNG;\n  }\n}\n\n/**\n * Utility function to estimate file size\n */\nexport function estimateFileSize(\n  width: number, \n  height: number, \n  format: ExportFormat, \n  quality: number = 0.9\n): number {\n  const pixels = width * height;\n  \n  switch (format) {\n    case ExportFormat.PNG:\n      // PNG is lossless, roughly 3-4 bytes per pixel with compression\n      return pixels * 3.5;\n    case ExportFormat.JPEG:\n      // JPEG compression varies greatly with quality\n      const baseSize = pixels * 0.5; // Very rough estimate\n      return baseSize * quality * 2;\n    case ExportFormat.WEBP:\n      // WebP is more efficient than JPEG\n      const webpBaseSize = pixels * 0.3;\n      return webpBaseSize * quality * 1.5;\n    case ExportFormat.AVIF:\n      // AVIF is even more efficient\n      const avifBaseSize = pixels * 0.2;\n      return avifBaseSize * quality * 1.2;\n    default:\n      return pixels * 3;\n  }\n}"],
      names: ["BatchExportManager", "DEFAULT_EXPORT_CONFIG", "ExportFormat", "ImageExporter", "QualityPreset", "createBatchExportManager", "createImageExporter", "estimateFileSize", "getOptimalFormat", "QUALITY_PRESETS", "quality", "compression", "progressive", "effort", "width", "height", "dpi", "lossless", "format", "preset", "backgroundColor", "metadata", "software", "version", "created", "Date", "constructor", "managedCanvas", "canvas", "ctx", "context", "exportImage", "config", "startTime", "performance", "now", "finalConfig", "mergeConfig", "exportCanvas", "createExportCanvas", "exportCtx", "getContext", "applyBackground", "drawImage", "watermark", "applyWatermark", "blob", "canvasToBlob", "dataUrl", "canvasToDataUrl", "filename", "generateFilename", "originalSize", "estimateOriginalSize", "compressionRatio", "size", "processingTime", "dimensions", "batchExport", "configs", "results", "result", "push", "error", "console", "exportWithPresets", "presets", "map", "downloadImage", "url", "URL", "createObjectURL", "link", "document", "createElement", "href", "download", "body", "appendChild", "click", "removeChild", "revokeObjectURL", "presetConfig", "dpiScale", "style", "scale", "fillStyle", "fillRect", "save", "globalAlpha", "opacity", "text", "fontSize", "Math", "min", "font", "color", "textMetrics", "measureText", "x", "y", "calculateWatermarkPosition", "position", "margin", "fillText", "image", "img", "Image", "Promise", "resolve", "reject", "onload", "onerror", "src", "watermarkSize", "aspectRatio", "restore", "toBlob", "Error", "toDataURL", "timestamp", "toISOString", "slice", "replace", "extension", "getFileExtension", "exporter", "concurrency", "queue", "processing", "queueExport", "processQueue", "length", "activePromises", "item", "shift", "promise", "processExport", "race", "i", "allSettled", "then", "status", "splice", "String", "clearQueue", "forEach", "getQueueStatus", "pending", "useCase", "pixels", "baseSize", "webpBaseSize", "avifBaseSize"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "453653da33d3fac55e8ff1bc3fd2ec3bba7b8703"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1gglhmx2q4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1gglhmx2q4();
cov_1gglhmx2q4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1gglhmx2q4().f[0]++;
  cov_1gglhmx2q4().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1gglhmx2q4().s[3]++;
_export(exports, {
  BatchExportManager: function () {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[1]++;
    cov_1gglhmx2q4().s[4]++;
    return BatchExportManager;
  },
  DEFAULT_EXPORT_CONFIG: function () {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[2]++;
    cov_1gglhmx2q4().s[5]++;
    return DEFAULT_EXPORT_CONFIG;
  },
  ExportFormat: function () {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[3]++;
    cov_1gglhmx2q4().s[6]++;
    return ExportFormat;
  },
  ImageExporter: function () {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[4]++;
    cov_1gglhmx2q4().s[7]++;
    return ImageExporter;
  },
  QualityPreset: function () {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[5]++;
    cov_1gglhmx2q4().s[8]++;
    return QualityPreset;
  },
  createBatchExportManager: function () {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[6]++;
    cov_1gglhmx2q4().s[9]++;
    return createBatchExportManager;
  },
  createImageExporter: function () {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[7]++;
    cov_1gglhmx2q4().s[10]++;
    return createImageExporter;
  },
  estimateFileSize: function () {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[8]++;
    cov_1gglhmx2q4().s[11]++;
    return estimateFileSize;
  },
  getOptimalFormat: function () {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[9]++;
    cov_1gglhmx2q4().s[12]++;
    return getOptimalFormat;
  }
});
var ExportFormat =
/* istanbul ignore next */
(/*#__PURE__*/cov_1gglhmx2q4().s[13]++, function (ExportFormat) {
  /* istanbul ignore next */
  cov_1gglhmx2q4().f[10]++;
  cov_1gglhmx2q4().s[14]++;
  ExportFormat["PNG"] = "image/png";
  /* istanbul ignore next */
  cov_1gglhmx2q4().s[15]++;
  ExportFormat["JPEG"] = "image/jpeg";
  /* istanbul ignore next */
  cov_1gglhmx2q4().s[16]++;
  ExportFormat["WEBP"] = "image/webp";
  /* istanbul ignore next */
  cov_1gglhmx2q4().s[17]++;
  ExportFormat["AVIF"] = "image/avif";
  /* istanbul ignore next */
  cov_1gglhmx2q4().s[18]++;
  return ExportFormat;
}({}));
var QualityPreset =
/* istanbul ignore next */
(/*#__PURE__*/cov_1gglhmx2q4().s[19]++, function (QualityPreset) {
  /* istanbul ignore next */
  cov_1gglhmx2q4().f[11]++;
  cov_1gglhmx2q4().s[20]++;
  QualityPreset["DRAFT"] = "draft";
  /* istanbul ignore next */
  cov_1gglhmx2q4().s[21]++;
  QualityPreset["WEB"] = "web";
  /* istanbul ignore next */
  cov_1gglhmx2q4().s[22]++;
  QualityPreset["SOCIAL"] = "social";
  /* istanbul ignore next */
  cov_1gglhmx2q4().s[23]++;
  QualityPreset["PRINT"] = "print";
  /* istanbul ignore next */
  cov_1gglhmx2q4().s[24]++;
  QualityPreset["MAXIMUM"] = "maximum"; // Highest quality, largest file
  /* istanbul ignore next */
  cov_1gglhmx2q4().s[25]++;
  return QualityPreset;
}({}));
/**
 * Quality preset configurations
 */
const QUALITY_PRESETS =
/* istanbul ignore next */
(cov_1gglhmx2q4().s[26]++, {
  ["draft"]: {
    quality: 0.3,
    compression: {
      progressive: false,
      effort: 1
    }
  },
  ["web"]: {
    quality: 0.8,
    compression: {
      progressive: true,
      effort: 3
    }
  },
  ["social"]: {
    quality: 0.85,
    width: 1080,
    height: 1080,
    compression: {
      progressive: true,
      effort: 4
    }
  },
  ["print"]: {
    quality: 0.95,
    dpi: 300,
    compression: {
      progressive: true,
      effort: 5
    }
  },
  ["maximum"]: {
    quality: 1.0,
    compression: {
      lossless: true,
      effort: 6
    }
  }
});
const DEFAULT_EXPORT_CONFIG =
/* istanbul ignore next */
(cov_1gglhmx2q4().s[27]++, {
  format: "image/png",
  quality: 0.9,
  preset: "web",
  backgroundColor: '#ffffff',
  dpi: 72,
  metadata: {
    software: 'TheSusFit Image Editor',
    version: '1.0.0',
    created: new Date()
  }
});
class ImageExporter {
  constructor(managedCanvas) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[12]++;
    cov_1gglhmx2q4().s[28]++;
    this.canvas = managedCanvas.canvas;
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[29]++;
    this.ctx = managedCanvas.context;
  }
  /**
  * Export image with specified configuration
  */
  async exportImage(config =
  /* istanbul ignore next */
  (cov_1gglhmx2q4().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[13]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[30]++, performance.now());
    const finalConfig =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[31]++, this.mergeConfig(config));
    // Create export canvas if dimensions specified
    const exportCanvas =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[32]++, this.createExportCanvas(finalConfig));
    const exportCtx =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[33]++, exportCanvas.getContext('2d'));
    // Apply background if specified
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[34]++;
    this.applyBackground(exportCtx, exportCanvas, finalConfig.backgroundColor);
    // Draw main content
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[35]++;
    exportCtx.drawImage(this.canvas, 0, 0, exportCanvas.width, exportCanvas.height);
    // Apply watermark if specified
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[36]++;
    if (finalConfig.watermark) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[1][0]++;
      cov_1gglhmx2q4().s[37]++;
      await this.applyWatermark(exportCtx, exportCanvas, finalConfig.watermark);
    } else
    /* istanbul ignore next */
    {
      cov_1gglhmx2q4().b[1][1]++;
    }
    // Generate export blob
    const blob =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[38]++, await this.canvasToBlob(exportCanvas, finalConfig));
    const dataUrl =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[39]++, await this.canvasToDataUrl(exportCanvas, finalConfig));
    // Generate filename
    const filename =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[40]++, this.generateFilename(finalConfig));
    // Calculate compression ratio
    const originalSize =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[41]++, this.estimateOriginalSize(exportCanvas));
    const compressionRatio =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[42]++, originalSize > 0 ?
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[2][0]++, blob.size / originalSize) :
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[2][1]++, 1));
    const processingTime =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[43]++, performance.now() - startTime);
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[44]++;
    return {
      blob,
      dataUrl,
      filename,
      size: blob.size,
      format: finalConfig.format,
      dimensions: {
        width: exportCanvas.width,
        height: exportCanvas.height
      },
      quality: finalConfig.quality,
      metadata: finalConfig.metadata,
      compressionRatio,
      processingTime
    };
  }
  /**
  * Batch export with multiple configurations
  */
  async batchExport(configs) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[14]++;
    const results =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[45]++, []);
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[46]++;
    for (const config of configs) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[47]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_1gglhmx2q4().s[48]++, await this.exportImage(config));
        /* istanbul ignore next */
        cov_1gglhmx2q4().s[49]++;
        results.push(result);
      } catch (error) {
        /* istanbul ignore next */
        cov_1gglhmx2q4().s[50]++;
        console.error('Failed to export with config:', config, error);
        /* istanbul ignore next */
        cov_1gglhmx2q4().s[51]++;
        throw error;
      }
    }
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[52]++;
    return results;
  }
  /**
  * Export with preset configurations
  */
  async exportWithPresets(presets) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[15]++;
    const configs =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[53]++, presets.map(preset => {
      /* istanbul ignore next */
      cov_1gglhmx2q4().f[16]++;
      cov_1gglhmx2q4().s[54]++;
      return {
        preset
      };
    }));
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[55]++;
    return this.batchExport(configs);
  }
  /**
  * Download exported image
  */
  downloadImage(result) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[17]++;
    const url =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[56]++, URL.createObjectURL(result.blob));
    const link =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[57]++, document.createElement('a'));
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[58]++;
    link.href = url;
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[59]++;
    link.download = result.filename;
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[60]++;
    document.body.appendChild(link);
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[61]++;
    link.click();
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[62]++;
    document.body.removeChild(link);
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[63]++;
    URL.revokeObjectURL(url);
  }
  /**
  * Merge configuration with defaults and presets
  */
  mergeConfig(config) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[18]++;
    let finalConfig =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[64]++, {
      ...DEFAULT_EXPORT_CONFIG,
      ...config
    });
    // Apply preset if specified
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[4][0]++, config.preset) &&
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[4][1]++, QUALITY_PRESETS[config.preset])) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[3][0]++;
      const presetConfig =
      /* istanbul ignore next */
      (cov_1gglhmx2q4().s[66]++, QUALITY_PRESETS[config.preset]);
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[67]++;
      finalConfig = {
        ...finalConfig,
        ...presetConfig,
        ...config
      };
    } else
    /* istanbul ignore next */
    {
      cov_1gglhmx2q4().b[3][1]++;
    }
    // Set dimensions to canvas size if not specified
    cov_1gglhmx2q4().s[68]++;
    if (!finalConfig.width) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[5][0]++;
      cov_1gglhmx2q4().s[69]++;
      finalConfig.width = this.canvas.width;
    } else
    /* istanbul ignore next */
    {
      cov_1gglhmx2q4().b[5][1]++;
    }
    cov_1gglhmx2q4().s[70]++;
    if (!finalConfig.height) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[6][0]++;
      cov_1gglhmx2q4().s[71]++;
      finalConfig.height = this.canvas.height;
    } else
    /* istanbul ignore next */
    {
      cov_1gglhmx2q4().b[6][1]++;
    }
    cov_1gglhmx2q4().s[72]++;
    return finalConfig;
  }
  /**
  * Create export canvas with specified dimensions
  */
  createExportCanvas(config) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[19]++;
    const canvas =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[73]++, document.createElement('canvas'));
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[74]++;
    canvas.width = config.width;
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[75]++;
    canvas.height = config.height;
    // Handle high DPI displays
    const dpiScale =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[76]++, (
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[7][0]++, config.dpi) ||
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[7][1]++, 72)) / 72);
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[77]++;
    if (dpiScale !== 1) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[8][0]++;
      cov_1gglhmx2q4().s[78]++;
      canvas.style.width = `${canvas.width}px`;
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[79]++;
      canvas.style.height = `${canvas.height}px`;
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[80]++;
      canvas.width *= dpiScale;
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[81]++;
      canvas.height *= dpiScale;
      const ctx =
      /* istanbul ignore next */
      (cov_1gglhmx2q4().s[82]++, canvas.getContext('2d'));
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[83]++;
      ctx.scale(dpiScale, dpiScale);
    } else
    /* istanbul ignore next */
    {
      cov_1gglhmx2q4().b[8][1]++;
    }
    cov_1gglhmx2q4().s[84]++;
    return canvas;
  }
  /**
  * Apply background color to canvas
  */
  applyBackground(ctx, canvas, backgroundColor) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[20]++;
    cov_1gglhmx2q4().s[85]++;
    if (
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[10][0]++, backgroundColor) &&
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[10][1]++, backgroundColor !== 'transparent')) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[9][0]++;
      cov_1gglhmx2q4().s[86]++;
      ctx.fillStyle = backgroundColor;
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[87]++;
      ctx.fillRect(0, 0, canvas.width, canvas.height);
    } else
    /* istanbul ignore next */
    {
      cov_1gglhmx2q4().b[9][1]++;
    }
  }
  /**
  * Apply watermark to canvas
  */
  async applyWatermark(ctx, canvas, watermark) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[21]++;
    cov_1gglhmx2q4().s[88]++;
    ctx.save();
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[89]++;
    ctx.globalAlpha = watermark.opacity;
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[90]++;
    if (watermark.text) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[11][0]++;
      // Text watermark
      const fontSize =
      /* istanbul ignore next */
      (cov_1gglhmx2q4().s[91]++, Math.min(canvas.width, canvas.height) * (watermark.size / 100));
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[92]++;
      ctx.font = `${fontSize}px ${
      /* istanbul ignore next */
      (cov_1gglhmx2q4().b[12][0]++, watermark.font) ||
      /* istanbul ignore next */
      (cov_1gglhmx2q4().b[12][1]++, 'Arial')}`;
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[93]++;
      ctx.fillStyle =
      /* istanbul ignore next */
      (cov_1gglhmx2q4().b[13][0]++, watermark.color) ||
      /* istanbul ignore next */
      (cov_1gglhmx2q4().b[13][1]++, '#000000');
      const textMetrics =
      /* istanbul ignore next */
      (cov_1gglhmx2q4().s[94]++, ctx.measureText(watermark.text));
      const {
        x,
        y
      } =
      /* istanbul ignore next */
      (cov_1gglhmx2q4().s[95]++, this.calculateWatermarkPosition(canvas, textMetrics.width, fontSize, watermark.position, watermark.margin));
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[96]++;
      ctx.fillText(watermark.text, x, y);
    } else {
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[11][1]++;
      cov_1gglhmx2q4().s[97]++;
      if (watermark.image) {
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[14][0]++;
        // Image watermark
        const img =
        /* istanbul ignore next */
        (cov_1gglhmx2q4().s[98]++, new Image());
        /* istanbul ignore next */
        cov_1gglhmx2q4().s[99]++;
        await new Promise((resolve, reject) => {
          /* istanbul ignore next */
          cov_1gglhmx2q4().f[22]++;
          cov_1gglhmx2q4().s[100]++;
          img.onload = resolve;
          /* istanbul ignore next */
          cov_1gglhmx2q4().s[101]++;
          img.onerror = reject;
          /* istanbul ignore next */
          cov_1gglhmx2q4().s[102]++;
          img.src = watermark.image;
        });
        const watermarkSize =
        /* istanbul ignore next */
        (cov_1gglhmx2q4().s[103]++, Math.min(canvas.width, canvas.height) * (watermark.size / 100));
        const aspectRatio =
        /* istanbul ignore next */
        (cov_1gglhmx2q4().s[104]++, img.width / img.height);
        const width =
        /* istanbul ignore next */
        (cov_1gglhmx2q4().s[105]++, aspectRatio >= 1 ?
        /* istanbul ignore next */
        (cov_1gglhmx2q4().b[15][0]++, watermarkSize) :
        /* istanbul ignore next */
        (cov_1gglhmx2q4().b[15][1]++, watermarkSize * aspectRatio));
        const height =
        /* istanbul ignore next */
        (cov_1gglhmx2q4().s[106]++, aspectRatio >= 1 ?
        /* istanbul ignore next */
        (cov_1gglhmx2q4().b[16][0]++, watermarkSize / aspectRatio) :
        /* istanbul ignore next */
        (cov_1gglhmx2q4().b[16][1]++, watermarkSize));
        const {
          x,
          y
        } =
        /* istanbul ignore next */
        (cov_1gglhmx2q4().s[107]++, this.calculateWatermarkPosition(canvas, width, height, watermark.position, watermark.margin));
        /* istanbul ignore next */
        cov_1gglhmx2q4().s[108]++;
        ctx.drawImage(img, x, y, width, height);
      } else
      /* istanbul ignore next */
      {
        cov_1gglhmx2q4().b[14][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[109]++;
    ctx.restore();
  }
  /**
  * Calculate watermark position based on alignment
  */
  calculateWatermarkPosition(canvas, width, height, position, margin) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[23]++;
    cov_1gglhmx2q4().s[110]++;
    switch (position) {
      case 'top-left':
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[17][0]++;
        cov_1gglhmx2q4().s[111]++;
        return {
          x: margin,
          y: margin + height
        };
      case 'top-right':
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[17][1]++;
        cov_1gglhmx2q4().s[112]++;
        return {
          x: canvas.width - width - margin,
          y: margin + height
        };
      case 'bottom-left':
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[17][2]++;
        cov_1gglhmx2q4().s[113]++;
        return {
          x: margin,
          y: canvas.height - margin
        };
      case 'bottom-right':
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[17][3]++;
        cov_1gglhmx2q4().s[114]++;
        return {
          x: canvas.width - width - margin,
          y: canvas.height - margin
        };
      case 'center':
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[17][4]++;
      default:
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[17][5]++;
        cov_1gglhmx2q4().s[115]++;
        return {
          x: (canvas.width - width) / 2,
          y: (canvas.height - height) / 2 + height
        };
    }
  }
  /**
  * Convert canvas to blob with format and quality
  */
  async canvasToBlob(canvas, config) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[24]++;
    cov_1gglhmx2q4().s[116]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1gglhmx2q4().f[25]++;
      cov_1gglhmx2q4().s[117]++;
      canvas.toBlob(blob => {
        /* istanbul ignore next */
        cov_1gglhmx2q4().f[26]++;
        cov_1gglhmx2q4().s[118]++;
        if (blob) {
          /* istanbul ignore next */
          cov_1gglhmx2q4().b[18][0]++;
          cov_1gglhmx2q4().s[119]++;
          resolve(blob);
        } else {
          /* istanbul ignore next */
          cov_1gglhmx2q4().b[18][1]++;
          cov_1gglhmx2q4().s[120]++;
          reject(new Error('Failed to create blob from canvas'));
        }
      }, config.format, config.quality);
    });
  }
  /**
  * Convert canvas to data URL
  */
  async canvasToDataUrl(canvas, config) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[27]++;
    cov_1gglhmx2q4().s[121]++;
    return canvas.toDataURL(config.format, config.quality);
  }
  /**
  * Generate filename based on configuration
  */
  generateFilename(config) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[28]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[122]++, new Date().toISOString().slice(0, 19).replace(/[:-]/g, ''));
    const extension =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[123]++, this.getFileExtension(config.format));
    const preset =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[124]++, config.preset ?
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[19][0]++, `_${config.preset}`) :
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[19][1]++, ''));
    const dimensions =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[125]++, `_${config.width}x${config.height}`);
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[126]++;
    return `exported_image${preset}${dimensions}_${timestamp}.${extension}`;
  }
  /**
  * Get file extension for format
  */
  getFileExtension(format) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[29]++;
    cov_1gglhmx2q4().s[127]++;
    switch (format) {
      case "image/png":
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[20][0]++;
        cov_1gglhmx2q4().s[128]++;
        return 'png';
      case "image/jpeg":
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[20][1]++;
        cov_1gglhmx2q4().s[129]++;
        return 'jpg';
      case "image/webp":
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[20][2]++;
        cov_1gglhmx2q4().s[130]++;
        return 'webp';
      case "image/avif":
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[20][3]++;
        cov_1gglhmx2q4().s[131]++;
        return 'avif';
      default:
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[20][4]++;
        cov_1gglhmx2q4().s[132]++;
        return 'png';
    }
  }
  /**
  * Estimate original (uncompressed) size for compression ratio calculation
  */
  estimateOriginalSize(canvas) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[30]++;
    cov_1gglhmx2q4().s[133]++;
    // Estimate as 4 bytes per pixel (RGBA) for uncompressed bitmap
    return canvas.width * canvas.height * 4;
  }
}
class BatchExportManager {
  constructor(exporter, concurrency =
  /* istanbul ignore next */
  (cov_1gglhmx2q4().b[21][0]++, 2)) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[31]++;
    cov_1gglhmx2q4().s[134]++;
    this.queue = [];
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[135]++;
    this.processing = false;
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[136]++;
    this.exporter = exporter;
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[137]++;
    this.concurrency = concurrency;
  }
  /**
  * Add export to queue
  */
  async queueExport(config) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[32]++;
    cov_1gglhmx2q4().s[138]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1gglhmx2q4().f[33]++;
      cov_1gglhmx2q4().s[139]++;
      this.queue.push({
        config,
        resolve,
        reject
      });
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[140]++;
      if (!this.processing) {
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[22][0]++;
        cov_1gglhmx2q4().s[141]++;
        this.processQueue();
      } else
      /* istanbul ignore next */
      {
        cov_1gglhmx2q4().b[22][1]++;
      }
    });
  }
  /**
  * Process export queue with concurrency control
  */
  async processQueue() {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[34]++;
    cov_1gglhmx2q4().s[142]++;
    if (
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[24][0]++, this.processing) ||
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[24][1]++, this.queue.length === 0)) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[23][0]++;
      cov_1gglhmx2q4().s[143]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1gglhmx2q4().b[23][1]++;
    }
    cov_1gglhmx2q4().s[144]++;
    this.processing = true;
    const activePromises =
    /* istanbul ignore next */
    (cov_1gglhmx2q4().s[145]++, []);
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[146]++;
    while (
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[25][0]++, this.queue.length > 0) ||
    /* istanbul ignore next */
    (cov_1gglhmx2q4().b[25][1]++, activePromises.length > 0)) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[147]++;
      // Start new exports up to concurrency limit
      while (
      /* istanbul ignore next */
      (cov_1gglhmx2q4().b[26][0]++, activePromises.length < this.concurrency) &&
      /* istanbul ignore next */
      (cov_1gglhmx2q4().b[26][1]++, this.queue.length > 0)) {
        const item =
        /* istanbul ignore next */
        (cov_1gglhmx2q4().s[148]++, this.queue.shift());
        const promise =
        /* istanbul ignore next */
        (cov_1gglhmx2q4().s[149]++, this.processExport(item));
        /* istanbul ignore next */
        cov_1gglhmx2q4().s[150]++;
        activePromises.push(promise);
      }
      // Wait for at least one to complete
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[151]++;
      if (activePromises.length > 0) {
        /* istanbul ignore next */
        cov_1gglhmx2q4().b[27][0]++;
        cov_1gglhmx2q4().s[152]++;
        await Promise.race(activePromises);
        // Remove completed promises
        /* istanbul ignore next */
        cov_1gglhmx2q4().s[153]++;
        for (let i =
        /* istanbul ignore next */
        (cov_1gglhmx2q4().s[154]++, activePromises.length - 1); i >= 0; i--) {
          /* istanbul ignore next */
          cov_1gglhmx2q4().s[155]++;
          if (await Promise.allSettled([activePromises[i]]).then(results => {
            /* istanbul ignore next */
            cov_1gglhmx2q4().f[35]++;
            cov_1gglhmx2q4().s[156]++;
            return results[0].status === 'fulfilled';
          })) {
            /* istanbul ignore next */
            cov_1gglhmx2q4().b[28][0]++;
            cov_1gglhmx2q4().s[157]++;
            activePromises.splice(i, 1);
          } else
          /* istanbul ignore next */
          {
            cov_1gglhmx2q4().b[28][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_1gglhmx2q4().b[27][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[158]++;
    this.processing = false;
  }
  /**
  * Process individual export
  */
  async processExport(item) {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[36]++;
    cov_1gglhmx2q4().s[159]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1gglhmx2q4().s[160]++, await this.exporter.exportImage(item.config));
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[161]++;
      item.resolve(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[162]++;
      item.reject(error instanceof Error ?
      /* istanbul ignore next */
      (cov_1gglhmx2q4().b[29][0]++, error) :
      /* istanbul ignore next */
      (cov_1gglhmx2q4().b[29][1]++, new Error(String(error))));
    }
  }
  /**
  * Clear the export queue
  */
  clearQueue() {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[37]++;
    cov_1gglhmx2q4().s[163]++;
    this.queue.forEach(item => {
      /* istanbul ignore next */
      cov_1gglhmx2q4().f[38]++;
      cov_1gglhmx2q4().s[164]++;
      return item.reject(new Error('Export cancelled'));
    });
    /* istanbul ignore next */
    cov_1gglhmx2q4().s[165]++;
    this.queue = [];
  }
  /**
  * Get queue status
  */
  getQueueStatus() {
    /* istanbul ignore next */
    cov_1gglhmx2q4().f[39]++;
    cov_1gglhmx2q4().s[166]++;
    return {
      pending: this.queue.length,
      processing: this.processing
    };
  }
}
function createImageExporter(managedCanvas) {
  /* istanbul ignore next */
  cov_1gglhmx2q4().f[40]++;
  cov_1gglhmx2q4().s[167]++;
  return new ImageExporter(managedCanvas);
}
function createBatchExportManager(exporter, concurrency) {
  /* istanbul ignore next */
  cov_1gglhmx2q4().f[41]++;
  cov_1gglhmx2q4().s[168]++;
  return new BatchExportManager(exporter, concurrency);
}
function getOptimalFormat(useCase) {
  /* istanbul ignore next */
  cov_1gglhmx2q4().f[42]++;
  cov_1gglhmx2q4().s[169]++;
  switch (useCase) {
    case 'web':
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[30][0]++;
      cov_1gglhmx2q4().s[170]++;
      return "image/webp";
    case 'social':
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[30][1]++;
      cov_1gglhmx2q4().s[171]++;
      return "image/jpeg";
    case 'print':
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[30][2]++;
      cov_1gglhmx2q4().s[172]++;
      return "image/png";
    case 'archive':
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[30][3]++;
      cov_1gglhmx2q4().s[173]++;
      return "image/png";
    default:
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[30][4]++;
      cov_1gglhmx2q4().s[174]++;
      return "image/png";
  }
}
function estimateFileSize(width, height, format, quality =
/* istanbul ignore next */
(cov_1gglhmx2q4().b[31][0]++, 0.9)) {
  /* istanbul ignore next */
  cov_1gglhmx2q4().f[43]++;
  const pixels =
  /* istanbul ignore next */
  (cov_1gglhmx2q4().s[175]++, width * height);
  /* istanbul ignore next */
  cov_1gglhmx2q4().s[176]++;
  switch (format) {
    case "image/png":
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[32][0]++;
      cov_1gglhmx2q4().s[177]++;
      // PNG is lossless, roughly 3-4 bytes per pixel with compression
      return pixels * 3.5;
    case "image/jpeg":
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[32][1]++;
      // JPEG compression varies greatly with quality
      const baseSize =
      /* istanbul ignore next */
      (cov_1gglhmx2q4().s[178]++, pixels * 0.5); // Very rough estimate
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[179]++;
      return baseSize * quality * 2;
    case "image/webp":
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[32][2]++;
      // WebP is more efficient than JPEG
      const webpBaseSize =
      /* istanbul ignore next */
      (cov_1gglhmx2q4().s[180]++, pixels * 0.3);
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[181]++;
      return webpBaseSize * quality * 1.5;
    case "image/avif":
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[32][3]++;
      // AVIF is even more efficient
      const avifBaseSize =
      /* istanbul ignore next */
      (cov_1gglhmx2q4().s[182]++, pixels * 0.2);
      /* istanbul ignore next */
      cov_1gglhmx2q4().s[183]++;
      return avifBaseSize * quality * 1.2;
    default:
      /* istanbul ignore next */
      cov_1gglhmx2q4().b[32][4]++;
      cov_1gglhmx2q4().s[184]++;
      return pixels * 3;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,