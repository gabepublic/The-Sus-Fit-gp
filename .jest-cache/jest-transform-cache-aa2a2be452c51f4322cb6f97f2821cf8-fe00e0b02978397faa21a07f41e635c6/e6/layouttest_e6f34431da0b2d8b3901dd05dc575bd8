f7e22321b9522bb0710ed0c581c4500d
"use strict";
// Mock next/font/google
jest.mock('next/font/google', ()=>({
        Montserrat_Alternates: ()=>({
                variable: '--font-Montserrat-Alternates-sans',
                style: {
                    fontFamily: 'Montserrat Alternates'
                }
            }),
        Nabla: ()=>({
                variable: '--font-Nabla-sans',
                style: {
                    fontFamily: 'Nabla'
                }
            }),
        Fascinate: ()=>({
                variable: '--font-Fascinate-sans',
                style: {
                    fontFamily: 'Fascinate'
                }
            })
    }));
// Mock next/head for metadata testing
jest.mock('next/head', ()=>{
    return function Head({ children }) {
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_jsxruntime.Fragment, {
            children: children
        });
    };
});
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = require("@testing-library/react");
const _layout = /*#__PURE__*/ _interop_require_default(require("../../src/app/layout"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
describe('RootLayout', ()=>{
    it('renders without crashing', ()=>{
        const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_layout.default, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Test content"
            })
        }));
        expect(container).toBeInTheDocument();
    });
    it('renders children correctly', ()=>{
        const { getByText } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_layout.default, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Test child content"
            })
        }));
        expect(getByText('Test child content')).toBeInTheDocument();
    });
    it('exports correct metadata', ()=>{
        // Import the metadata directly to test it
        const { metadata } = require('@/app/layout');
        expect(metadata).toEqual({
            title: "The Sus Fit",
            description: "we be doin' the most - a Those People production"
        });
    });
    it('has correct component structure', ()=>{
        const { container } = (0, _react1.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(_layout.default, {
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                children: "Test content"
            })
        }));
        // Test that the component renders without throwing
        expect(container).toBeInTheDocument();
        // Test that children are present
        expect(container.textContent).toContain('Test content');
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsc3RyZWV0ZXIvV2Vic3Rvcm1Qcm9qZWN0cy92aWJlLWNvZGluZy90aG9zZS1wZW9wbGUvVGhlLVN1cy1GaXQtZ3AvX190ZXN0c19fL2FwcC9sYXlvdXQudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcbmltcG9ydCBSb290TGF5b3V0IGZyb20gJ0AvYXBwL2xheW91dCdcblxuLy8gTW9jayBuZXh0L2ZvbnQvZ29vZ2xlXG5qZXN0Lm1vY2soJ25leHQvZm9udC9nb29nbGUnLCAoKSA9PiAoe1xuICBNb250c2VycmF0X0FsdGVybmF0ZXM6ICgpID0+ICh7XG4gICAgdmFyaWFibGU6ICctLWZvbnQtTW9udHNlcnJhdC1BbHRlcm5hdGVzLXNhbnMnLFxuICAgIHN0eWxlOiB7IGZvbnRGYW1pbHk6ICdNb250c2VycmF0IEFsdGVybmF0ZXMnIH1cbiAgfSksXG4gIE5hYmxhOiAoKSA9PiAoe1xuICAgIHZhcmlhYmxlOiAnLS1mb250LU5hYmxhLXNhbnMnLFxuICAgIHN0eWxlOiB7IGZvbnRGYW1pbHk6ICdOYWJsYScgfVxuICB9KSxcbiAgRmFzY2luYXRlOiAoKSA9PiAoe1xuICAgIHZhcmlhYmxlOiAnLS1mb250LUZhc2NpbmF0ZS1zYW5zJyxcbiAgICBzdHlsZTogeyBmb250RmFtaWx5OiAnRmFzY2luYXRlJyB9XG4gIH0pXG59KSlcblxuLy8gTW9jayBuZXh0L2hlYWQgZm9yIG1ldGFkYXRhIHRlc3Rpbmdcbmplc3QubW9jaygnbmV4dC9oZWFkJywgKCkgPT4ge1xuICByZXR1cm4gZnVuY3Rpb24gSGVhZCh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSB7XG4gICAgcmV0dXJuIDw+e2NoaWxkcmVufTwvPlxuICB9XG59KVxuXG5kZXNjcmliZSgnUm9vdExheW91dCcsICgpID0+IHtcbiAgaXQoJ3JlbmRlcnMgd2l0aG91dCBjcmFzaGluZycsICgpID0+IHtcbiAgICBjb25zdCB7IGNvbnRhaW5lciB9ID0gcmVuZGVyKFxuICAgICAgPFJvb3RMYXlvdXQ+XG4gICAgICAgIDxkaXY+VGVzdCBjb250ZW50PC9kaXY+XG4gICAgICA8L1Jvb3RMYXlvdXQ+XG4gICAgKVxuICAgIFxuICAgIGV4cGVjdChjb250YWluZXIpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgncmVuZGVycyBjaGlsZHJlbiBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRleHQgfSA9IHJlbmRlcihcbiAgICAgIDxSb290TGF5b3V0PlxuICAgICAgICA8ZGl2PlRlc3QgY2hpbGQgY29udGVudDwvZGl2PlxuICAgICAgPC9Sb290TGF5b3V0PlxuICAgIClcbiAgICBcbiAgICBleHBlY3QoZ2V0QnlUZXh0KCdUZXN0IGNoaWxkIGNvbnRlbnQnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdleHBvcnRzIGNvcnJlY3QgbWV0YWRhdGEnLCAoKSA9PiB7XG4gICAgLy8gSW1wb3J0IHRoZSBtZXRhZGF0YSBkaXJlY3RseSB0byB0ZXN0IGl0XG4gICAgY29uc3QgeyBtZXRhZGF0YSB9ID0gcmVxdWlyZSgnQC9hcHAvbGF5b3V0JylcbiAgICBcbiAgICBleHBlY3QobWV0YWRhdGEpLnRvRXF1YWwoe1xuICAgICAgdGl0bGU6IFwiVGhlIFN1cyBGaXRcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIndlIGJlIGRvaW4nIHRoZSBtb3N0IC0gYSBUaG9zZSBQZW9wbGUgcHJvZHVjdGlvblwiXG4gICAgfSlcbiAgfSlcblxuICBpdCgnaGFzIGNvcnJlY3QgY29tcG9uZW50IHN0cnVjdHVyZScsICgpID0+IHtcbiAgICBjb25zdCB7IGNvbnRhaW5lciB9ID0gcmVuZGVyKFxuICAgICAgPFJvb3RMYXlvdXQ+XG4gICAgICAgIDxkaXY+VGVzdCBjb250ZW50PC9kaXY+XG4gICAgICA8L1Jvb3RMYXlvdXQ+XG4gICAgKVxuICAgIFxuICAgIC8vIFRlc3QgdGhhdCB0aGUgY29tcG9uZW50IHJlbmRlcnMgd2l0aG91dCB0aHJvd2luZ1xuICAgIGV4cGVjdChjb250YWluZXIpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBcbiAgICAvLyBUZXN0IHRoYXQgY2hpbGRyZW4gYXJlIHByZXNlbnRcbiAgICBleHBlY3QoY29udGFpbmVyLnRleHRDb250ZW50KS50b0NvbnRhaW4oJ1Rlc3QgY29udGVudCcpXG4gIH0pXG59KSAiXSwibmFtZXMiOlsiamVzdCIsIm1vY2siLCJNb250c2VycmF0X0FsdGVybmF0ZXMiLCJ2YXJpYWJsZSIsInN0eWxlIiwiZm9udEZhbWlseSIsIk5hYmxhIiwiRmFzY2luYXRlIiwiSGVhZCIsImNoaWxkcmVuIiwiZGVzY3JpYmUiLCJpdCIsImNvbnRhaW5lciIsInJlbmRlciIsIlJvb3RMYXlvdXQiLCJkaXYiLCJleHBlY3QiLCJ0b0JlSW5UaGVEb2N1bWVudCIsImdldEJ5VGV4dCIsIm1ldGFkYXRhIiwicmVxdWlyZSIsInRvRXF1YWwiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwidGV4dENvbnRlbnQiLCJ0b0NvbnRhaW4iXSwibWFwcGluZ3MiOiI7QUFJQSx3QkFBd0I7QUFDeEJBLEtBQUtDLElBQUksQ0FBQyxvQkFBb0IsSUFBTyxDQUFBO1FBQ25DQyx1QkFBdUIsSUFBTyxDQUFBO2dCQUM1QkMsVUFBVTtnQkFDVkMsT0FBTztvQkFBRUMsWUFBWTtnQkFBd0I7WUFDL0MsQ0FBQTtRQUNBQyxPQUFPLElBQU8sQ0FBQTtnQkFDWkgsVUFBVTtnQkFDVkMsT0FBTztvQkFBRUMsWUFBWTtnQkFBUTtZQUMvQixDQUFBO1FBQ0FFLFdBQVcsSUFBTyxDQUFBO2dCQUNoQkosVUFBVTtnQkFDVkMsT0FBTztvQkFBRUMsWUFBWTtnQkFBWTtZQUNuQyxDQUFBO0lBQ0YsQ0FBQTtBQUVBLHNDQUFzQztBQUN0Q0wsS0FBS0MsSUFBSSxDQUFDLGFBQWE7SUFDckIsT0FBTyxTQUFTTyxLQUFLLEVBQUVDLFFBQVEsRUFBaUM7UUFDOUQscUJBQU87c0JBQUdBOztJQUNaO0FBQ0Y7Ozs7OzhEQXpCa0I7d0JBQ0s7K0RBQ0E7Ozs7OztBQXlCdkJDLFNBQVMsY0FBYztJQUNyQkMsR0FBRyw0QkFBNEI7UUFDN0IsTUFBTSxFQUFFQyxTQUFTLEVBQUUsR0FBR0MsSUFBQUEsY0FBTSxnQkFDMUIscUJBQUNDLGVBQVU7c0JBQ1QsY0FBQSxxQkFBQ0M7MEJBQUk7OztRQUlUQyxPQUFPSixXQUFXSyxpQkFBaUI7SUFDckM7SUFFQU4sR0FBRyw4QkFBOEI7UUFDL0IsTUFBTSxFQUFFTyxTQUFTLEVBQUUsR0FBR0wsSUFBQUEsY0FBTSxnQkFDMUIscUJBQUNDLGVBQVU7c0JBQ1QsY0FBQSxxQkFBQ0M7MEJBQUk7OztRQUlUQyxPQUFPRSxVQUFVLHVCQUF1QkQsaUJBQWlCO0lBQzNEO0lBRUFOLEdBQUcsNEJBQTRCO1FBQzdCLDBDQUEwQztRQUMxQyxNQUFNLEVBQUVRLFFBQVEsRUFBRSxHQUFHQyxRQUFRO1FBRTdCSixPQUFPRyxVQUFVRSxPQUFPLENBQUM7WUFDdkJDLE9BQU87WUFDUEMsYUFBYTtRQUNmO0lBQ0Y7SUFFQVosR0FBRyxtQ0FBbUM7UUFDcEMsTUFBTSxFQUFFQyxTQUFTLEVBQUUsR0FBR0MsSUFBQUEsY0FBTSxnQkFDMUIscUJBQUNDLGVBQVU7c0JBQ1QsY0FBQSxxQkFBQ0M7MEJBQUk7OztRQUlULG1EQUFtRDtRQUNuREMsT0FBT0osV0FBV0ssaUJBQWlCO1FBRW5DLGlDQUFpQztRQUNqQ0QsT0FBT0osVUFBVVksV0FBVyxFQUFFQyxTQUFTLENBQUM7SUFDMUM7QUFDRiJ9