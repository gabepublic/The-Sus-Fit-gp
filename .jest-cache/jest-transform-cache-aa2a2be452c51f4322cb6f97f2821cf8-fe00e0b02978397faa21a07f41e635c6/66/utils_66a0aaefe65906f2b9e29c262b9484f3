59b4ce145016ab083de5fe1b7aefb0e6
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    render: function() {
        return customRender;
    },
    screen: function() {
        return _react1.screen;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _react1 = _export_star(require("@testing-library/react"), exports);
const _ToastProvider = require("../components/ToastProvider");
function _export_star(from, to) {
    Object.keys(from).forEach(function(k) {
        if (k !== "default" && !Object.prototype.hasOwnProperty.call(to, k)) {
            Object.defineProperty(to, k, {
                enumerable: true,
                get: function() {
                    return from[k];
                }
            });
        }
    });
    return from;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Create a custom render function that includes providers if needed
const customRender = (ui, options)=>{
    const AllTheProviders = ({ children })=>{
        return /*#__PURE__*/ (0, _jsxruntime.jsx)(_ToastProvider.ToastProvider, {
            children: children
        });
    };
    return (0, _react1.render)(ui, {
        wrapper: AllTheProviders,
        ...options
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsc3RyZWV0ZXIvV2Vic3Rvcm1Qcm9qZWN0cy92aWJlLWNvZGluZy90aG9zZS1wZW9wbGUvVGhlLVN1cy1GaXQtZ3Avc3JjL3Rlc3QvdXRpbHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHJlbmRlciwgUmVuZGVyT3B0aW9ucywgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcbmltcG9ydCB7IFRvYXN0UHJvdmlkZXIgfSBmcm9tICdAL2NvbXBvbmVudHMvVG9hc3RQcm92aWRlcidcblxuLy8gQ3JlYXRlIGEgY3VzdG9tIHJlbmRlciBmdW5jdGlvbiB0aGF0IGluY2x1ZGVzIHByb3ZpZGVycyBpZiBuZWVkZWRcbmNvbnN0IGN1c3RvbVJlbmRlciA9IChcbiAgdWk6IFJlYWN0LlJlYWN0RWxlbWVudCxcbiAgb3B0aW9ucz86IE9taXQ8UmVuZGVyT3B0aW9ucywgJ3dyYXBwZXInPlxuKSA9PiB7XG4gIGNvbnN0IEFsbFRoZVByb3ZpZGVycyA9ICh7IGNoaWxkcmVuIH06IHsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxUb2FzdFByb3ZpZGVyPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L1RvYXN0UHJvdmlkZXI+XG4gICAgKVxuICB9XG5cbiAgcmV0dXJuIHJlbmRlcih1aSwgeyB3cmFwcGVyOiBBbGxUaGVQcm92aWRlcnMsIC4uLm9wdGlvbnMgfSlcbn1cblxuLy8gUmUtZXhwb3J0IGV2ZXJ5dGhpbmcgZnJvbSBSZWFjdCBUZXN0aW5nIExpYnJhcnlcbmV4cG9ydCAqIGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnXG5cbi8vIE92ZXJyaWRlIHJlbmRlciBtZXRob2RcbmV4cG9ydCB7IGN1c3RvbVJlbmRlciBhcyByZW5kZXIgfTtcbmV4cG9ydCB7IHNjcmVlbiB9O1xuXG5cbiJdLCJuYW1lcyI6WyJyZW5kZXIiLCJjdXN0b21SZW5kZXIiLCJzY3JlZW4iLCJ1aSIsIm9wdGlvbnMiLCJBbGxUaGVQcm92aWRlcnMiLCJjaGlsZHJlbiIsIlRvYXN0UHJvdmlkZXIiLCJ3cmFwcGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQXdCeUJBLE1BQU07ZUFBdEJDOztJQUNBQyxNQUFNO2VBQU5BLGNBQU07Ozs7OERBekJHO3FDQUM0QjsrQkFDaEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFOUIsb0VBQW9FO0FBQ3BFLE1BQU1ELGVBQWUsQ0FDbkJFLElBQ0FDO0lBRUEsTUFBTUMsa0JBQWtCLENBQUMsRUFBRUMsUUFBUSxFQUFpQztRQUNsRSxxQkFDRSxxQkFBQ0MsNEJBQWE7c0JBQ1hEOztJQUdQO0lBRUEsT0FBT04sSUFBQUEsY0FBTSxFQUFDRyxJQUFJO1FBQUVLLFNBQVNIO1FBQWlCLEdBQUdELE9BQU87SUFBQztBQUMzRCJ9