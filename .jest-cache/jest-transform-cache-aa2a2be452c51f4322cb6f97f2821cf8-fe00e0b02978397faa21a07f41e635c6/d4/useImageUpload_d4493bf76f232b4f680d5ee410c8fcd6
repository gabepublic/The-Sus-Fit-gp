fdf5c918420ef74a89b1f6ec84b03b20
'use client';
"use strict";

/* istanbul ignore next */
function cov_1phs4ui9iw() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/hooks/useImageUpload.ts";
  var hash = "edd3d29e2ed4e5ed228443ce7ccd677640bc0e38";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/hooks/useImageUpload.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "8": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "9": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "10": {
        start: {
          line: 28,
          column: 32
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "11": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "12": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 45
        }
      },
      "13": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 45
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "15": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 35
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 23
        }
      },
      "17": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "18": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "19": {
        start: {
          line: 69,
          column: 42
        },
        end: {
          line: 69,
          column: 70
        }
      },
      "20": {
        start: {
          line: 70,
          column: 46
        },
        end: {
          line: 70,
          column: 70
        }
      },
      "21": {
        start: {
          line: 71,
          column: 42
        },
        end: {
          line: 71,
          column: 68
        }
      },
      "22": {
        start: {
          line: 72,
          column: 36
        },
        end: {
          line: 72,
          column: 62
        }
      },
      "23": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 73,
          column: 56
        }
      },
      "24": {
        start: {
          line: 74,
          column: 46
        },
        end: {
          line: 79,
          column: 6
        }
      },
      "25": {
        start: {
          line: 81,
          column: 25
        },
        end: {
          line: 81,
          column: 49
        }
      },
      "26": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 82,
          column: 49
        }
      },
      "27": {
        start: {
          line: 84,
          column: 39
        },
        end: {
          line: 84,
          column: 111
        }
      },
      "28": {
        start: {
          line: 85,
          column: 31
        },
        end: {
          line: 85,
          column: 101
        }
      },
      "29": {
        start: {
          line: 86,
          column: 32
        },
        end: {
          line: 86,
          column: 108
        }
      },
      "30": {
        start: {
          line: 88,
          column: 29
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "31": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 67
        }
      },
      "32": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "33": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "34": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "35": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "36": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 30
        }
      },
      "37": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 32
        }
      },
      "38": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 31
        }
      },
      "39": {
        start: {
          line: 113,
          column: 25
        },
        end: {
          line: 173,
          column: 6
        }
      },
      "40": {
        start: {
          line: 114,
          column: 23
        },
        end: {
          line: 114,
          column: 25
        }
      },
      "41": {
        start: {
          line: 115,
          column: 25
        },
        end: {
          line: 115,
          column: 27
        }
      },
      "42": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "43": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 122
        }
      },
      "44": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "45": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 153
        }
      },
      "46": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "47": {
        start: {
          line: 126,
          column: 34
        },
        end: {
          line: 140,
          column: 14
        }
      },
      "48": {
        start: {
          line: 127,
          column: 28
        },
        end: {
          line: 127,
          column: 39
        }
      },
      "49": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 137,
          column: 18
        }
      },
      "50": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 136,
          column: 23
        }
      },
      "51": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 37
        }
      },
      "52": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 52
        }
      },
      "53": {
        start: {
          line: 141,
          column: 38
        },
        end: {
          line: 141,
          column: 62
        }
      },
      "54": {
        start: {
          line: 142,
          column: 35
        },
        end: {
          line: 142,
          column: 46
        }
      },
      "55": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "56": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 148
        }
      },
      "57": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "58": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 168
        }
      },
      "59": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "60": {
        start: {
          line: 150,
          column: 36
        },
        end: {
          line: 150,
          column: 50
        }
      },
      "61": {
        start: {
          line: 151,
          column: 36
        },
        end: {
          line: 151,
          column: 58
        }
      },
      "62": {
        start: {
          line: 152,
          column: 34
        },
        end: {
          line: 152,
          column: 72
        }
      },
      "63": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 155,
          column: 17
        }
      },
      "64": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 133
        }
      },
      "65": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 162,
          column: 14
        }
      },
      "66": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 63
        }
      },
      "67": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 169,
          column: 14
        }
      },
      "68": {
        start: {
          line: 175,
          column: 31
        },
        end: {
          line: 213,
          column: 6
        }
      },
      "69": {
        start: {
          line: 176,
          column: 27
        },
        end: {
          line: 176,
          column: 29
        }
      },
      "70": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "71": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 30
        }
      },
      "72": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "73": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "74": {
        start: {
          line: 182,
          column: 31
        },
        end: {
          line: 182,
          column: 63
        }
      },
      "75": {
        start: {
          line: 183,
          column: 28
        },
        end: {
          line: 183,
          column: 51
        }
      },
      "76": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 35
        }
      },
      "77": {
        start: {
          line: 184,
          column: 26
        },
        end: {
          line: 184,
          column: 35
        }
      },
      "78": {
        start: {
          line: 185,
          column: 28
        },
        end: {
          line: 185,
          column: 39
        }
      },
      "79": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 190,
          column: 19
        }
      },
      "80": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 41
        }
      },
      "81": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 41
        }
      },
      "82": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 189,
          column: 56
        }
      },
      "83": {
        start: {
          line: 192,
          column: 36
        },
        end: {
          line: 192,
          column: 58
        }
      },
      "84": {
        start: {
          line: 193,
          column: 28
        },
        end: {
          line: 193,
          column: 32
        }
      },
      "85": {
        start: {
          line: 194,
          column: 29
        },
        end: {
          line: 194,
          column: 33
        }
      },
      "86": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 199,
          column: 17
        }
      },
      "87": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 48
        }
      },
      "88": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 198,
          column: 47
        }
      },
      "89": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 37
        }
      },
      "90": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 39
        }
      },
      "91": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 56
        }
      },
      "92": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 71
        }
      },
      "93": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 45
        }
      },
      "94": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 66
        }
      },
      "95": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 26
        }
      },
      "96": {
        start: {
          line: 215,
          column: 24
        },
        end: {
          line: 258,
          column: 6
        }
      },
      "97": {
        start: {
          line: 216,
          column: 25
        },
        end: {
          line: 216,
          column: 43
        }
      },
      "98": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 37
        }
      },
      "99": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 63
        }
      },
      "100": {
        start: {
          line: 220,
          column: 27
        },
        end: {
          line: 220,
          column: 51
        }
      },
      "101": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "102": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 58
        }
      },
      "103": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 64
        }
      },
      "104": {
        start: {
          line: 226,
          column: 24
        },
        end: {
          line: 226,
          column: 49
        }
      },
      "105": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 68
        }
      },
      "106": {
        start: {
          line: 229,
          column: 27
        },
        end: {
          line: 229,
          column: 57
        }
      },
      "107": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 56
        }
      },
      "108": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "109": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 238,
          column: 13
        }
      },
      "110": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 235,
          column: 87
        }
      },
      "111": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 63
        }
      },
      "112": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "113": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 59
        }
      },
      "114": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 35
        }
      },
      "115": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 28
        }
      },
      "116": {
        start: {
          line: 260,
          column: 23
        },
        end: {
          line: 279,
          column: 6
        }
      },
      "117": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "118": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 27
        }
      },
      "119": {
        start: {
          line: 263,
          column: 33
        },
        end: {
          line: 263,
          column: 56
        }
      },
      "120": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 267,
          column: 19
        }
      },
      "121": {
        start: {
          line: 264,
          column: 37
        },
        end: {
          line: 267,
          column: 17
        }
      },
      "122": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 41
        }
      },
      "123": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 37
        }
      },
      "124": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 32
        }
      },
      "125": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 45
        }
      },
      "126": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 24
        }
      },
      "127": {
        start: {
          line: 281,
          column: 24
        },
        end: {
          line: 294,
          column: 6
        }
      },
      "128": {
        start: {
          line: 282,
          column: 24
        },
        end: {
          line: 282,
          column: 26
        }
      },
      "129": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "130": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 289,
          column: 13
        }
      },
      "131": {
        start: {
          line: 285,
          column: 31
        },
        end: {
          line: 285,
          column: 53
        }
      },
      "132": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 37
        }
      },
      "133": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 74
        }
      },
      "134": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 23
        }
      },
      "135": {
        start: {
          line: 296,
          column: 23
        },
        end: {
          line: 315,
          column: 6
        }
      },
      "136": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 309,
          column: 11
        }
      },
      "137": {
        start: {
          line: 298,
          column: 28
        },
        end: {
          line: 298,
          column: 69
        }
      },
      "138": {
        start: {
          line: 298,
          column: 45
        },
        end: {
          line: 298,
          column: 68
        }
      },
      "139": {
        start: {
          line: 299,
          column: 32
        },
        end: {
          line: 299,
          column: 71
        }
      },
      "140": {
        start: {
          line: 299,
          column: 47
        },
        end: {
          line: 299,
          column: 70
        }
      },
      "141": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 307,
          column: 13
        }
      },
      "142": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 57
        }
      },
      "143": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 306,
          column: 19
        }
      },
      "144": {
        start: {
          line: 303,
          column: 20
        },
        end: {
          line: 305,
          column: 21
        }
      },
      "145": {
        start: {
          line: 304,
          column: 24
        },
        end: {
          line: 304,
          column: 49
        }
      },
      "146": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 27
        }
      },
      "147": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 312,
          column: 9
        }
      },
      "148": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 33
        }
      },
      "149": {
        start: {
          line: 317,
          column: 23
        },
        end: {
          line: 333,
          column: 6
        }
      },
      "150": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 325,
          column: 11
        }
      },
      "151": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 46
        }
      },
      "152": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 324,
          column: 15
        }
      },
      "153": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 323,
          column: 17
        }
      },
      "154": {
        start: {
          line: 322,
          column: 20
        },
        end: {
          line: 322,
          column: 45
        }
      },
      "155": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 29
        }
      },
      "156": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 29
        }
      },
      "157": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 23
        }
      },
      "158": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 31
        }
      },
      "159": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 26
        }
      },
      "160": {
        start: {
          line: 335,
          column: 27
        },
        end: {
          line: 337,
          column: 10
        }
      },
      "161": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 38
        }
      },
      "162": {
        start: {
          line: 339,
          column: 34
        },
        end: {
          line: 348,
          column: 6
        }
      },
      "163": {
        start: {
          line: 340,
          column: 22
        },
        end: {
          line: 340,
          column: 58
        }
      },
      "164": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "165": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 31
        }
      },
      "166": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 32
        }
      },
      "167": {
        start: {
          line: 350,
          column: 28
        },
        end: {
          line: 363,
          column: 6
        }
      },
      "168": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 31
        }
      },
      "169": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 32
        }
      },
      "170": {
        start: {
          line: 353,
          column: 22
        },
        end: {
          line: 353,
          column: 58
        }
      },
      "171": {
        start: {
          line: 354,
          column: 30
        },
        end: {
          line: 354,
          column: 94
        }
      },
      "172": {
        start: {
          line: 354,
          column: 49
        },
        end: {
          line: 354,
          column: 93
        }
      },
      "173": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 360,
          column: 11
        }
      },
      "174": {
        start: {
          line: 364,
          column: 28
        },
        end: {
          line: 373,
          column: 10
        }
      },
      "175": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 31
        }
      },
      "176": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 32
        }
      },
      "177": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 372,
          column: 11
        }
      },
      "178": {
        start: {
          line: 374,
          column: 27
        },
        end: {
          line: 377,
          column: 10
        }
      },
      "179": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 31
        }
      },
      "180": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 32
        }
      },
      "181": {
        start: {
          line: 378,
          column: 23
        },
        end: {
          line: 394,
          column: 6
        }
      },
      "182": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 379,
          column: 31
        }
      },
      "183": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 32
        }
      },
      "184": {
        start: {
          line: 381,
          column: 22
        },
        end: {
          line: 381,
          column: 119
        }
      },
      "185": {
        start: {
          line: 381,
          column: 74
        },
        end: {
          line: 381,
          column: 118
        }
      },
      "186": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 387,
          column: 11
        }
      },
      "187": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "188": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 31
        }
      },
      "189": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 407,
          column: 11
        }
      },
      "190": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 406,
          column: 10
        }
      },
      "191": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 405,
          column: 15
        }
      },
      "192": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 399,
          column: 50
        }
      },
      "193": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 404,
          column: 19
        }
      },
      "194": {
        start: {
          line: 401,
          column: 20
        },
        end: {
          line: 403,
          column: 21
        }
      },
      "195": {
        start: {
          line: 402,
          column: 24
        },
        end: {
          line: 402,
          column: 49
        }
      },
      "196": {
        start: {
          line: 408,
          column: 4
        },
        end: {
          line: 445,
          column: 6
        }
      },
      "197": {
        start: {
          line: 448,
          column: 19
        },
        end: {
          line: 448,
          column: 60
        }
      },
      "198": {
        start: {
          line: 449,
          column: 29
        },
        end: {
          line: 454,
          column: 6
        }
      },
      "199": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 450,
          column: 28
        }
      },
      "200": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 451,
          column: 39
        }
      },
      "201": {
        start: {
          line: 455,
          column: 4
        },
        end: {
          line: 459,
          column: 6
        }
      },
      "202": {
        start: {
          line: 462,
          column: 19
        },
        end: {
          line: 465,
          column: 26
        }
      },
      "203": {
        start: {
          line: 467,
          column: 4
        },
        end: {
          line: 475,
          column: 7
        }
      },
      "204": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 470,
          column: 9
        }
      },
      "205": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 469,
          column: 45
        }
      },
      "206": {
        start: {
          line: 476,
          column: 4
        },
        end: {
          line: 484,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 24
          }
        },
        loc: {
          start: {
            line: 16,
            column: 34
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 20
          },
          end: {
            line: 19,
            column: 21
          }
        },
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 27
          }
        },
        loc: {
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 54
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 28
      },
      "6": {
        name: "useImageUpload",
        decl: {
          start: {
            line: 63,
            column: 9
          },
          end: {
            line: 63,
            column: 23
          }
        },
        loc: {
          start: {
            line: 63,
            column: 56
          },
          end: {
            line: 446,
            column: 1
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 88,
            column: 53
          },
          end: {
            line: 88,
            column: 54
          }
        },
        loc: {
          start: {
            line: 88,
            column: 57
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 88
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 92,
            column: 51
          },
          end: {
            line: 92,
            column: 52
          }
        },
        loc: {
          start: {
            line: 92,
            column: 81
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 92
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 100,
            column: 48
          },
          end: {
            line: 100,
            column: 49
          }
        },
        loc: {
          start: {
            line: 100,
            column: 75
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 100
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 113,
            column: 49
          },
          end: {
            line: 113,
            column: 50
          }
        },
        loc: {
          start: {
            line: 113,
            column: 63
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 113
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 126,
            column: 52
          },
          end: {
            line: 126,
            column: 53
          }
        },
        loc: {
          start: {
            line: 126,
            column: 71
          },
          end: {
            line: 140,
            column: 13
          }
        },
        line: 126
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 128,
            column: 29
          },
          end: {
            line: 128,
            column: 30
          }
        },
        loc: {
          start: {
            line: 128,
            column: 33
          },
          end: {
            line: 137,
            column: 17
          }
        },
        line: 128
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 175,
            column: 55
          },
          end: {
            line: 175,
            column: 56
          }
        },
        loc: {
          start: {
            line: 175,
            column: 69
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 175
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 186,
            column: 34
          },
          end: {
            line: 186,
            column: 35
          }
        },
        loc: {
          start: {
            line: 186,
            column: 53
          },
          end: {
            line: 190,
            column: 17
          }
        },
        line: 186
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 215,
            column: 48
          },
          end: {
            line: 215,
            column: 49
          }
        },
        loc: {
          start: {
            line: 215,
            column: 62
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 215
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 260,
            column: 47
          },
          end: {
            line: 260,
            column: 48
          }
        },
        loc: {
          start: {
            line: 260,
            column: 61
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 260
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 264,
            column: 29
          },
          end: {
            line: 264,
            column: 30
          }
        },
        loc: {
          start: {
            line: 264,
            column: 37
          },
          end: {
            line: 267,
            column: 17
          }
        },
        line: 264
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 281,
            column: 48
          },
          end: {
            line: 281,
            column: 49
          }
        },
        loc: {
          start: {
            line: 281,
            column: 63
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 281
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 296,
            column: 47
          },
          end: {
            line: 296,
            column: 48
          }
        },
        loc: {
          start: {
            line: 296,
            column: 59
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 296
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 297,
            column: 25
          },
          end: {
            line: 297,
            column: 26
          }
        },
        loc: {
          start: {
            line: 297,
            column: 33
          },
          end: {
            line: 309,
            column: 9
          }
        },
        line: 297
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 298,
            column: 40
          },
          end: {
            line: 298,
            column: 41
          }
        },
        loc: {
          start: {
            line: 298,
            column: 45
          },
          end: {
            line: 298,
            column: 68
          }
        },
        line: 298
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 299,
            column: 42
          },
          end: {
            line: 299,
            column: 43
          }
        },
        loc: {
          start: {
            line: 299,
            column: 47
          },
          end: {
            line: 299,
            column: 70
          }
        },
        line: 299
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 302,
            column: 62
          },
          end: {
            line: 302,
            column: 63
          }
        },
        loc: {
          start: {
            line: 302,
            column: 69
          },
          end: {
            line: 306,
            column: 17
          }
        },
        line: 302
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 317,
            column: 47
          },
          end: {
            line: 317,
            column: 48
          }
        },
        loc: {
          start: {
            line: 317,
            column: 51
          },
          end: {
            line: 331,
            column: 5
          }
        },
        line: 317
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 318,
            column: 30
          },
          end: {
            line: 318,
            column: 31
          }
        },
        loc: {
          start: {
            line: 318,
            column: 38
          },
          end: {
            line: 325,
            column: 9
          }
        },
        line: 318
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 320,
            column: 51
          },
          end: {
            line: 320,
            column: 52
          }
        },
        loc: {
          start: {
            line: 320,
            column: 58
          },
          end: {
            line: 324,
            column: 13
          }
        },
        line: 320
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 335,
            column: 51
          },
          end: {
            line: 335,
            column: 52
          }
        },
        loc: {
          start: {
            line: 335,
            column: 55
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 335
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 339,
            column: 58
          },
          end: {
            line: 339,
            column: 59
          }
        },
        loc: {
          start: {
            line: 339,
            column: 67
          },
          end: {
            line: 346,
            column: 5
          }
        },
        line: 339
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 350,
            column: 52
          },
          end: {
            line: 350,
            column: 53
          }
        },
        loc: {
          start: {
            line: 350,
            column: 61
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 350
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 354,
            column: 41
          },
          end: {
            line: 354,
            column: 42
          }
        },
        loc: {
          start: {
            line: 354,
            column: 49
          },
          end: {
            line: 354,
            column: 93
          }
        },
        line: 354
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 364,
            column: 52
          },
          end: {
            line: 364,
            column: 53
          }
        },
        loc: {
          start: {
            line: 364,
            column: 61
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 364
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 374,
            column: 51
          },
          end: {
            line: 374,
            column: 52
          }
        },
        loc: {
          start: {
            line: 374,
            column: 60
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 374
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 378,
            column: 47
          },
          end: {
            line: 378,
            column: 48
          }
        },
        loc: {
          start: {
            line: 378,
            column: 56
          },
          end: {
            line: 391,
            column: 5
          }
        },
        line: 378
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 381,
            column: 66
          },
          end: {
            line: 381,
            column: 67
          }
        },
        loc: {
          start: {
            line: 381,
            column: 74
          },
          end: {
            line: 381,
            column: 118
          }
        },
        line: 381
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 396,
            column: 26
          },
          end: {
            line: 396,
            column: 27
          }
        },
        loc: {
          start: {
            line: 396,
            column: 30
          },
          end: {
            line: 407,
            column: 5
          }
        },
        line: 396
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 397,
            column: 15
          },
          end: {
            line: 397,
            column: 16
          }
        },
        loc: {
          start: {
            line: 397,
            column: 19
          },
          end: {
            line: 406,
            column: 9
          }
        },
        line: 397
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 398,
            column: 34
          },
          end: {
            line: 398,
            column: 35
          }
        },
        loc: {
          start: {
            line: 398,
            column: 42
          },
          end: {
            line: 405,
            column: 13
          }
        },
        line: 398
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 400,
            column: 55
          },
          end: {
            line: 400,
            column: 56
          }
        },
        loc: {
          start: {
            line: 400,
            column: 62
          },
          end: {
            line: 404,
            column: 17
          }
        },
        line: 400
      },
      "39": {
        name: "useSingleImageUpload",
        decl: {
          start: {
            line: 447,
            column: 9
          },
          end: {
            line: 447,
            column: 29
          }
        },
        loc: {
          start: {
            line: 447,
            column: 62
          },
          end: {
            line: 460,
            column: 1
          }
        },
        line: 447
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 449,
            column: 53
          },
          end: {
            line: 449,
            column: 54
          }
        },
        loc: {
          start: {
            line: 449,
            column: 67
          },
          end: {
            line: 452,
            column: 5
          }
        },
        line: 449
      },
      "41": {
        name: "useDropzoneUpload",
        decl: {
          start: {
            line: 461,
            column: 9
          },
          end: {
            line: 461,
            column: 26
          }
        },
        loc: {
          start: {
            line: 461,
            column: 59
          },
          end: {
            line: 485,
            column: 1
          }
        },
        line: 461
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 467,
            column: 26
          },
          end: {
            line: 467,
            column: 27
          }
        },
        loc: {
          start: {
            line: 467,
            column: 30
          },
          end: {
            line: 471,
            column: 5
          }
        },
        line: 467
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 63,
            column: 24
          },
          end: {
            line: 63,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 33
          },
          end: {
            line: 63,
            column: 35
          }
        }],
        line: 63
      },
      "1": {
        loc: {
          start: {
            line: 84,
            column: 78
          },
          end: {
            line: 84,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 78
          },
          end: {
            line: 84,
            column: 95
          }
        }, {
          start: {
            line: 84,
            column: 99
          },
          end: {
            line: 84,
            column: 103
          }
        }],
        line: 84
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 68
          },
          end: {
            line: 85,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 68
          },
          end: {
            line: 85,
            column: 85
          }
        }, {
          start: {
            line: 85,
            column: 89
          },
          end: {
            line: 85,
            column: 93
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 86,
            column: 70
          },
          end: {
            line: 86,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 70
          },
          end: {
            line: 86,
            column: 87
          }
        }, {
          start: {
            line: 86,
            column: 91
          },
          end: {
            line: 86,
            column: 95
          }
        }],
        line: 86
      },
      "4": {
        loc: {
          start: {
            line: 100,
            column: 56
          },
          end: {
            line: 100,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 63
          },
          end: {
            line: 100,
            column: 72
          }
        }],
        line: 100
      },
      "5": {
        loc: {
          start: {
            line: 103,
            column: 21
          },
          end: {
            line: 103,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 46
          },
          end: {
            line: 103,
            column: 59
          }
        }, {
          start: {
            line: 103,
            column: 62
          },
          end: {
            line: 103,
            column: 75
          }
        }],
        line: 103
      },
      "6": {
        loc: {
          start: {
            line: 104,
            column: 27
          },
          end: {
            line: 104,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 52
          },
          end: {
            line: 104,
            column: 57
          }
        }, {
          start: {
            line: 104,
            column: 60
          },
          end: {
            line: 104,
            column: 69
          }
        }],
        line: 104
      },
      "7": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "8": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "9": {
        loc: {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "10": {
        loc: {
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 143,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 143,
            column: 35
          }
        }, {
          start: {
            line: 143,
            column: 39
          },
          end: {
            line: 143,
            column: 66
          }
        }, {
          start: {
            line: 143,
            column: 70
          },
          end: {
            line: 143,
            column: 90
          }
        }, {
          start: {
            line: 143,
            column: 94
          },
          end: {
            line: 143,
            column: 123
          }
        }],
        line: 143
      },
      "11": {
        loc: {
          start: {
            line: 144,
            column: 91
          },
          end: {
            line: 144,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 91
          },
          end: {
            line: 144,
            column: 110
          }
        }, {
          start: {
            line: 144,
            column: 114
          },
          end: {
            line: 144,
            column: 115
          }
        }],
        line: 144
      },
      "12": {
        loc: {
          start: {
            line: 144,
            column: 119
          },
          end: {
            line: 144,
            column: 144
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 119
          },
          end: {
            line: 144,
            column: 139
          }
        }, {
          start: {
            line: 144,
            column: 143
          },
          end: {
            line: 144,
            column: 144
          }
        }],
        line: 144
      },
      "13": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "14": {
        loc: {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 35
          }
        }, {
          start: {
            line: 146,
            column: 39
          },
          end: {
            line: 146,
            column: 66
          }
        }, {
          start: {
            line: 146,
            column: 70
          },
          end: {
            line: 146,
            column: 90
          }
        }, {
          start: {
            line: 146,
            column: 94
          },
          end: {
            line: 146,
            column: 123
          }
        }],
        line: 146
      },
      "15": {
        loc: {
          start: {
            line: 147,
            column: 91
          },
          end: {
            line: 147,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 91
          },
          end: {
            line: 147,
            column: 110
          }
        }, {
          start: {
            line: 147,
            column: 114
          },
          end: {
            line: 147,
            column: 125
          }
        }],
        line: 147
      },
      "16": {
        loc: {
          start: {
            line: 147,
            column: 129
          },
          end: {
            line: 147,
            column: 164
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 129
          },
          end: {
            line: 147,
            column: 149
          }
        }, {
          start: {
            line: 147,
            column: 153
          },
          end: {
            line: 147,
            column: 164
          }
        }],
        line: 147
      },
      "17": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "18": {
        loc: {
          start: {
            line: 152,
            column: 34
          },
          end: {
            line: 152,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 34
          },
          end: {
            line: 152,
            column: 65
          }
        }, {
          start: {
            line: 152,
            column: 69
          },
          end: {
            line: 152,
            column: 72
          }
        }],
        line: 152
      },
      "19": {
        loc: {
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 155,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 16
          },
          end: {
            line: 155,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "20": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "21": {
        loc: {
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 184,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 184,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "22": {
        loc: {
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 199,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 16
          },
          end: {
            line: 199,
            column: 17
          }
        }, {
          start: {
            line: 197,
            column: 23
          },
          end: {
            line: 199,
            column: 17
          }
        }],
        line: 195
      },
      "23": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "24": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "25": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 307,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 307,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "26": {
        loc: {
          start: {
            line: 303,
            column: 20
          },
          end: {
            line: 305,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 20
          },
          end: {
            line: 305,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "27": {
        loc: {
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 310,
            column: 8
          },
          end: {
            line: 312,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 310
      },
      "28": {
        loc: {
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 323,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 16
          },
          end: {
            line: 323,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "29": {
        loc: {
          start: {
            line: 340,
            column: 33
          },
          end: {
            line: 340,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 33
          },
          end: {
            line: 340,
            column: 51
          }
        }, {
          start: {
            line: 340,
            column: 55
          },
          end: {
            line: 340,
            column: 57
          }
        }],
        line: 340
      },
      "30": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "31": {
        loc: {
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 8
          },
          end: {
            line: 390,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "32": {
        loc: {
          start: {
            line: 401,
            column: 20
          },
          end: {
            line: 403,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 20
          },
          end: {
            line: 403,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "33": {
        loc: {
          start: {
            line: 434,
            column: 11
          },
          end: {
            line: 441,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 434,
            column: 40
          },
          end: {
            line: 441,
            column: 9
          }
        }, {
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 441,
            column: 14
          }
        }],
        line: 434
      },
      "34": {
        loc: {
          start: {
            line: 447,
            column: 30
          },
          end: {
            line: 447,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 447,
            column: 39
          },
          end: {
            line: 447,
            column: 41
          }
        }],
        line: 447
      },
      "35": {
        loc: {
          start: {
            line: 461,
            column: 27
          },
          end: {
            line: 461,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 461,
            column: 36
          },
          end: {
            line: 461,
            column: 38
          }
        }],
        line: 461
      },
      "36": {
        loc: {
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 468,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 468
      },
      "37": {
        loc: {
          start: {
            line: 468,
            column: 12
          },
          end: {
            line: 468,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 468,
            column: 12
          },
          end: {
            line: 468,
            column: 43
          }
        }, {
          start: {
            line: 468,
            column: 47
          },
          end: {
            line: 468,
            column: 80
          }
        }],
        line: 468
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/hooks/useImageUpload.ts"],
      sourcesContent: ["'use client';\n\n// Image Upload Hooks\n// Specialized hooks for handling file upload operations with validation and preview management\n\nimport { useState, useCallback, useRef, useEffect } from 'react';\nimport { \n  useImageValidation,\n  useImageMetadata,\n  useImageThumbnail,\n  processImageForTryon,\n  type ImageProcessingResult\n} from '../business-layer';\nimport { fileToBase64 } from '../utils/image';\n\n/**\n * Image metadata interface\n */\ninterface ImageMetadata {\n  dimensions: { width: number; height: number };\n  format: string;\n  size: number;\n}\n\n/**\n * Upload state enum\n */\nexport enum UploadState {\n  IDLE = 'idle',\n  VALIDATING = 'validating',\n  PROCESSING = 'processing',\n  COMPLETE = 'complete',\n  ERROR = 'error'\n}\n\n/**\n * File validation result\n */\nexport interface FileValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n  metadata?: ImageMetadata;\n}\n\n/**\n * Upload progress information\n */\nexport interface UploadProgress {\n  stage: 'validation' | 'processing' | 'thumbnail' | 'complete';\n  percentage: number;\n  message: string;\n}\n\n/**\n * Upload configuration\n */\nexport interface UploadConfig {\n  /** Maximum file size in bytes */\n  maxSizeBytes?: number;\n  /** Allowed file types */\n  allowedTypes?: string[];\n  /** Auto-generate thumbnails */\n  generateThumbnails?: boolean;\n  /** Thumbnail sizes to generate */\n  thumbnailSizes?: number[];\n  /** Enable drag and drop */\n  enableDragDrop?: boolean;\n  /** Auto-process after upload */\n  autoProcess?: boolean;\n  /** Validation options */\n  validation?: {\n    minWidth?: number;\n    minHeight?: number;\n    maxWidth?: number;\n    maxHeight?: number;\n    aspectRatio?: number;\n    aspectRatioTolerance?: number;\n  };\n}\n\n/**\n * Uploaded file information\n */\nexport interface UploadedFile {\n  file: File;\n  preview: string;\n  thumbnails: Record<number, string>;\n  metadata?: ImageMetadata;\n  processedResult?: ImageProcessingResult;\n  uploadId: string;\n  uploadTime: number;\n}\n\n/**\n * Upload error\n */\nexport interface UploadError {\n  type: 'validation' | 'processing' | 'network' | 'unknown';\n  message: string;\n  code?: string;\n  originalError?: Error;\n}\n\n/**\n * Drag and drop state\n */\nexport interface DragDropState {\n  isDragActive: boolean;\n  isDragAccept: boolean;\n  isDragReject: boolean;\n  draggedFiles: File[];\n}\n\n/**\n * Default upload configuration\n */\nconst DEFAULT_CONFIG: Required<UploadConfig> = {\n  maxSizeBytes: 10 * 1024 * 1024, // 10MB\n  allowedTypes: ['image/jpeg', 'image/png', 'image/webp', 'image/gif'],\n  generateThumbnails: true,\n  thumbnailSizes: [150, 300, 600],\n  enableDragDrop: true,\n  autoProcess: false,\n  validation: {\n    minWidth: 256,\n    minHeight: 256,\n    maxWidth: 4096,\n    maxHeight: 4096,\n    aspectRatio: undefined,\n    aspectRatioTolerance: 0.1\n  }\n};\n\n/**\n * Main image upload hook\n */\nexport function useImageUpload(\n  config: UploadConfig = {},\n  onUpload?: (file: UploadedFile) => void,\n  onError?: (error: UploadError) => void\n) {\n  const finalConfig = { ...DEFAULT_CONFIG, ...config };\n  \n  // State\n  const [uploadState, setUploadState] = useState<UploadState>(UploadState.IDLE);\n  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);\n  const [currentFile, setCurrentFile] = useState<UploadedFile | null>(null);\n  const [progress, setProgress] = useState<UploadProgress | null>(null);\n  const [error, setError] = useState<UploadError | null>(null);\n  const [dragDropState, setDragDropState] = useState<DragDropState>({\n    isDragActive: false,\n    isDragAccept: false,\n    isDragReject: false,\n    draggedFiles: []\n  });\n\n  // Refs\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const uploadIdCounter = useRef(0);\n\n  // Business layer hooks\n  const { data: validationResult } = useImageValidation(currentFile?.file || null, false);\n  const { data: metadata } = useImageMetadata(currentFile?.file || null, false);\n  const { data: thumbnail } = useImageThumbnail(currentFile?.file || null, 150, false);\n\n  // Generate unique upload ID\n  const generateUploadId = useCallback(() => {\n    return `upload_${Date.now()}_${++uploadIdCounter.current}`;\n  }, []);\n\n  // Update progress\n  const updateProgress = useCallback((stage: UploadProgress['stage'], percentage: number, message: string) => {\n    setProgress({ stage, percentage, message });\n  }, []);\n\n  // Handle errors\n  const handleError = useCallback((error: unknown, type: UploadError['type'] = 'unknown') => {\n    const uploadError: UploadError = {\n      type,\n      message: error instanceof Error ? error.message : String(error),\n      originalError: error instanceof Error ? error : undefined\n    };\n\n    setError(uploadError);\n    setUploadState(UploadState.ERROR);\n    onError?.(uploadError);\n  }, [onError]);\n\n  // Validate file\n  const validateFile = useCallback(async (file: File): Promise<FileValidationResult> => {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // File type validation\n    if (!finalConfig.allowedTypes.includes(file.type)) {\n      errors.push(`File type ${file.type} is not supported. Allowed types: ${finalConfig.allowedTypes.join(', ')}`);\n    }\n\n    // File size validation\n    if (file.size > finalConfig.maxSizeBytes) {\n      errors.push(`File size ${(file.size / 1024 / 1024).toFixed(2)}MB exceeds limit of ${(finalConfig.maxSizeBytes / 1024 / 1024).toFixed(2)}MB`);\n    }\n\n    // Image dimension validation (requires metadata)\n    try {\n      const imageMetadata = await new Promise<ImageMetadata>((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n          resolve({\n            dimensions: { width: img.naturalWidth, height: img.naturalHeight },\n            format: file.type,\n            size: file.size\n          });\n        };\n        img.onerror = reject;\n        img.src = URL.createObjectURL(file);\n      });\n\n      const { width, height } = imageMetadata.dimensions;\n      const { validation } = finalConfig;\n\n      if ((validation.minWidth && width < validation.minWidth) || (validation.minHeight && height < validation.minHeight)) {\n        errors.push(`Image dimensions ${width}x${height} are too small. Minimum: ${validation.minWidth || 0}x${validation.minHeight || 0}`);\n      }\n\n      if ((validation.maxWidth && width > validation.maxWidth) || (validation.maxHeight && height > validation.maxHeight)) {\n        errors.push(`Image dimensions ${width}x${height} are too large. Maximum: ${validation.maxWidth || 'unlimited'}x${validation.maxHeight || 'unlimited'}`);\n      }\n\n      if (validation.aspectRatio) {\n        const aspectRatio = width / height;\n        const targetRatio = validation.aspectRatio;\n        const tolerance = validation.aspectRatioTolerance || 0.1;\n        \n        if (Math.abs(aspectRatio - targetRatio) > tolerance) {\n          warnings.push(`Image aspect ratio ${aspectRatio.toFixed(2)} differs from recommended ${targetRatio.toFixed(2)}`);\n        }\n      }\n\n      return {\n        isValid: errors.length === 0,\n        errors,\n        warnings,\n        metadata: imageMetadata\n      };\n    } catch (error) {\n      errors.push('Failed to validate image dimensions');\n      return { isValid: false, errors, warnings };\n    }\n  }, [finalConfig]);\n\n  // Generate thumbnails\n  const generateThumbnails = useCallback(async (file: File): Promise<Record<number, string>> => {\n    const thumbnails: Record<number, string> = {};\n\n    if (!finalConfig.generateThumbnails) {\n      return thumbnails;\n    }\n\n    try {\n      for (const size of finalConfig.thumbnailSizes) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        \n        if (!ctx) continue;\n\n        const img = new Image();\n        await new Promise((resolve, reject) => {\n          img.onload = resolve;\n          img.onerror = reject;\n          img.src = URL.createObjectURL(file);\n        });\n\n        // Calculate dimensions maintaining aspect ratio\n        const aspectRatio = img.width / img.height;\n        let width = size;\n        let height = size;\n\n        if (aspectRatio > 1) {\n          height = size / aspectRatio;\n        } else {\n          width = size * aspectRatio;\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n        ctx.drawImage(img, 0, 0, width, height);\n\n        thumbnails[size] = canvas.toDataURL('image/jpeg', 0.8);\n        URL.revokeObjectURL(img.src);\n      }\n    } catch (error) {\n      console.warn('Failed to generate thumbnails:', error);\n    }\n\n    return thumbnails;\n  }, [finalConfig.generateThumbnails, finalConfig.thumbnailSizes]);\n\n  // Process uploaded file\n  const processFile = useCallback(async (file: File): Promise<UploadedFile> => {\n    const uploadId = generateUploadId();\n    \n    setUploadState(UploadState.VALIDATING);\n    updateProgress('validation', 10, 'Validating file...');\n\n    // Validate file\n    const validation = await validateFile(file);\n    if (!validation.isValid) {\n      throw new Error(validation.errors.join(', '));\n    }\n\n    updateProgress('processing', 30, 'Processing image...');\n\n    // Generate preview\n    const preview = URL.createObjectURL(file);\n\n    updateProgress('thumbnail', 60, 'Generating thumbnails...');\n\n    // Generate thumbnails\n    const thumbnails = await generateThumbnails(file);\n\n    updateProgress('complete', 80, 'Finalizing...');\n\n    // Auto-process if enabled\n    let processedResult: ImageProcessingResult | undefined;\n    if (finalConfig.autoProcess) {\n      try {\n        processedResult = await processImageForTryon(file);\n      } catch (error) {\n        console.warn('Auto-processing failed:', error);\n      }\n    }\n\n    const uploadedFile: UploadedFile = {\n      file,\n      preview,\n      thumbnails,\n      metadata: validation.metadata,\n      processedResult,\n      uploadId,\n      uploadTime: Date.now()\n    };\n\n    updateProgress('complete', 100, 'Upload complete');\n    setUploadState(UploadState.COMPLETE);\n\n    return uploadedFile;\n  }, [generateUploadId, updateProgress, validateFile, generateThumbnails, finalConfig.autoProcess]);\n\n  // Handle file upload\n  const uploadFile = useCallback(async (file: File) => {\n    try {\n      setError(null);\n      const uploadedFile = await processFile(file);\n      \n      setUploadedFiles(prev => [...prev, uploadedFile]);\n      setCurrentFile(uploadedFile);\n      onUpload?.(uploadedFile);\n      \n      return uploadedFile;\n    } catch (error) {\n      handleError(error, 'processing');\n      throw error;\n    }\n  }, [processFile, onUpload, handleError]);\n\n  // Handle multiple file uploads\n  const uploadFiles = useCallback(async (files: File[]) => {\n    const results: UploadedFile[] = [];\n    \n    for (const file of files) {\n      try {\n        const result = await uploadFile(file);\n        results.push(result);\n      } catch (error) {\n        console.error('Failed to upload file:', file.name, error);\n      }\n    }\n    \n    return results;\n  }, [uploadFile]);\n\n  // Remove uploaded file\n  const removeFile = useCallback((uploadId: string) => {\n    setUploadedFiles(prev => {\n      const updated = prev.filter(f => f.uploadId !== uploadId);\n      const removedFile = prev.find(f => f.uploadId === uploadId);\n      \n      if (removedFile) {\n        URL.revokeObjectURL(removedFile.preview);\n        Object.values(removedFile.thumbnails).forEach(url => {\n          if (url.startsWith('blob:')) {\n            URL.revokeObjectURL(url);\n          }\n        });\n      }\n      \n      return updated;\n    });\n    \n    if (currentFile?.uploadId === uploadId) {\n      setCurrentFile(null);\n    }\n  }, [currentFile]);\n\n  // Clear all files\n  const clearFiles = useCallback(() => {\n    uploadedFiles.forEach(file => {\n      URL.revokeObjectURL(file.preview);\n      Object.values(file.thumbnails).forEach(url => {\n        if (url.startsWith('blob:')) {\n          URL.revokeObjectURL(url);\n        }\n      });\n    });\n    \n    setUploadedFiles([]);\n    setCurrentFile(null);\n    setError(null);\n    setUploadState(UploadState.IDLE);\n    setProgress(null);\n  }, [uploadedFiles]);\n\n  // Trigger file picker\n  const openFilePicker = useCallback(() => {\n    fileInputRef.current?.click();\n  }, []);\n\n  // Handle file input change\n  const handleFileInputChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(event.target.files || []);\n    if (files.length > 0) {\n      uploadFiles(files);\n    }\n    // Reset input to allow same file selection\n    event.target.value = '';\n  }, [uploadFiles]);\n\n  // Drag and drop handlers\n  const handleDragEnter = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const files = Array.from(event.dataTransfer.files);\n    const hasValidFiles = files.some(file => finalConfig.allowedTypes.includes(file.type));\n    \n    setDragDropState({\n      isDragActive: true,\n      isDragAccept: hasValidFiles,\n      isDragReject: !hasValidFiles,\n      draggedFiles: files\n    });\n  }, [finalConfig.allowedTypes]);\n\n  const handleDragLeave = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    setDragDropState({\n      isDragActive: false,\n      isDragAccept: false,\n      isDragReject: false,\n      draggedFiles: []\n    });\n  }, []);\n\n  const handleDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n\n  const handleDrop = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const files = Array.from(event.dataTransfer.files).filter(file => \n      finalConfig.allowedTypes.includes(file.type)\n    );\n    \n    setDragDropState({\n      isDragActive: false,\n      isDragAccept: false,\n      isDragReject: false,\n      draggedFiles: []\n    });\n    \n    if (files.length > 0) {\n      uploadFiles(files);\n    }\n  }, [finalConfig.allowedTypes, uploadFiles]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      uploadedFiles.forEach(file => {\n        URL.revokeObjectURL(file.preview);\n        Object.values(file.thumbnails).forEach(url => {\n          if (url.startsWith('blob:')) {\n            URL.revokeObjectURL(url);\n          }\n        });\n      });\n    };\n  }, []);\n\n  return {\n    // State\n    uploadState,\n    uploadedFiles,\n    currentFile,\n    progress,\n    error,\n    dragDropState,\n    \n    // Actions\n    uploadFile,\n    uploadFiles,\n    removeFile,\n    clearFiles,\n    openFilePicker,\n    \n    // File input props\n    fileInputProps: {\n      ref: fileInputRef,\n      type: 'file',\n      accept: finalConfig.allowedTypes.join(','),\n      multiple: true,\n      onChange: handleFileInputChange,\n      style: { display: 'none' }\n    },\n    \n    // Drag and drop props (only if enabled)\n    ...(finalConfig.enableDragDrop ? {\n      dragDropProps: {\n        onDragEnter: handleDragEnter,\n        onDragLeave: handleDragLeave,\n        onDragOver: handleDragOver,\n        onDrop: handleDrop\n      }\n    } : {}),\n    \n    // Utils\n    validateFile,\n    generateThumbnails\n  };\n}\n\n/**\n * Simplified hook for single file upload\n */\nexport function useSingleImageUpload(\n  config: UploadConfig = {},\n  onUpload?: (file: UploadedFile) => void,\n  onError?: (error: UploadError) => void\n) {\n  const upload = useImageUpload(config, onUpload, onError);\n  \n  const uploadSingleFile = useCallback(async (file: File) => {\n    upload.clearFiles(); // Clear previous files\n    return upload.uploadFile(file);\n  }, [upload]);\n  \n  return {\n    ...upload,\n    uploadFile: uploadSingleFile,\n    file: upload.currentFile\n  };\n}\n\n/**\n * Hook for drag and drop only upload\n */\nexport function useDropzoneUpload(\n  config: UploadConfig = {},\n  onUpload?: (files: UploadedFile[]) => void,\n  onError?: (error: UploadError) => void\n) {\n  const upload = useImageUpload(\n    { ...config, enableDragDrop: true },\n    undefined,\n    onError\n  );\n  \n  // Handle batch upload completion\n  useEffect(() => {\n    if (upload.uploadedFiles.length > 0 && upload.uploadState === UploadState.COMPLETE) {\n      onUpload?.(upload.uploadedFiles);\n    }\n  }, [upload.uploadedFiles, upload.uploadState, onUpload]);\n  \n  return {\n    dragDropState: upload.dragDropState,\n    dragDropProps: upload.dragDropProps,\n    uploadedFiles: upload.uploadedFiles,\n    progress: upload.progress,\n    error: upload.error,\n    clearFiles: upload.clearFiles,\n    removeFile: upload.removeFile\n  };\n}"],
      names: ["UploadState", "useDropzoneUpload", "useImageUpload", "useSingleImageUpload", "DEFAULT_CONFIG", "maxSizeBytes", "allowedTypes", "generateThumbnails", "thumbnailSizes", "enableDragDrop", "autoProcess", "validation", "minWidth", "minHeight", "maxWidth", "maxHeight", "aspectRatio", "undefined", "aspectRatioTolerance", "config", "onUpload", "onError", "finalConfig", "uploadState", "setUploadState", "useState", "uploadedFiles", "setUploadedFiles", "currentFile", "setCurrentFile", "progress", "setProgress", "error", "setError", "dragDropState", "setDragDropState", "isDragActive", "isDragAccept", "isDragReject", "draggedFiles", "fileInputRef", "useRef", "uploadIdCounter", "data", "validationResult", "useImageValidation", "file", "metadata", "useImageMetadata", "thumbnail", "useImageThumbnail", "generateUploadId", "useCallback", "Date", "now", "current", "updateProgress", "stage", "percentage", "message", "handleError", "type", "uploadError", "Error", "String", "originalError", "validateFile", "errors", "warnings", "includes", "push", "join", "size", "toFixed", "imageMetadata", "Promise", "resolve", "reject", "img", "Image", "onload", "dimensions", "width", "naturalWidth", "height", "naturalHeight", "format", "onerror", "src", "URL", "createObjectURL", "targetRatio", "tolerance", "Math", "abs", "isValid", "length", "thumbnails", "canvas", "document", "createElement", "ctx", "getContext", "drawImage", "toDataURL", "revokeObjectURL", "console", "warn", "processFile", "uploadId", "preview", "processedResult", "processImageForTryon", "uploadedFile", "uploadTime", "uploadFile", "prev", "uploadFiles", "files", "results", "result", "name", "removeFile", "updated", "filter", "f", "removedFile", "find", "Object", "values", "forEach", "url", "startsWith", "clearFiles", "openFilePicker", "click", "handleFileInputChange", "event", "Array", "from", "target", "value", "handleDragEnter", "preventDefault", "stopPropagation", "dataTransfer", "hasValidFiles", "some", "handleDragLeave", "handleDragOver", "handleDrop", "useEffect", "fileInputProps", "ref", "accept", "multiple", "onChange", "style", "display", "dragDropProps", "onDragEnter", "onDragLeave", "onDragOver", "onDrop", "upload", "uploadSingleFile"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "edd3d29e2ed4e5ed228443ce7ccd677640bc0e38"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1phs4ui9iw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1phs4ui9iw();
cov_1phs4ui9iw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1phs4ui9iw().f[0]++;
  cov_1phs4ui9iw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1phs4ui9iw().s[3]++;
_export(exports, {
  UploadState: function () {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[1]++;
    cov_1phs4ui9iw().s[4]++;
    return UploadState;
  },
  useDropzoneUpload: function () {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[2]++;
    cov_1phs4ui9iw().s[5]++;
    return useDropzoneUpload;
  },
  useImageUpload: function () {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[3]++;
    cov_1phs4ui9iw().s[6]++;
    return useImageUpload;
  },
  useSingleImageUpload: function () {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[4]++;
    cov_1phs4ui9iw().s[7]++;
    return useSingleImageUpload;
  }
});
const _react =
/* istanbul ignore next */
(cov_1phs4ui9iw().s[8]++, require("react"));
const _businesslayer =
/* istanbul ignore next */
(cov_1phs4ui9iw().s[9]++, require("../business-layer"));
var UploadState =
/* istanbul ignore next */
(/*#__PURE__*/cov_1phs4ui9iw().s[10]++, function (UploadState) {
  /* istanbul ignore next */
  cov_1phs4ui9iw().f[5]++;
  cov_1phs4ui9iw().s[11]++;
  UploadState["IDLE"] = "idle";
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[12]++;
  UploadState["VALIDATING"] = "validating";
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[13]++;
  UploadState["PROCESSING"] = "processing";
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[14]++;
  UploadState["COMPLETE"] = "complete";
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[15]++;
  UploadState["ERROR"] = "error";
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[16]++;
  return UploadState;
}({}));
/**
 * Default upload configuration
 */
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_1phs4ui9iw().s[17]++, {
  maxSizeBytes: 10 * 1024 * 1024,
  allowedTypes: ['image/jpeg', 'image/png', 'image/webp', 'image/gif'],
  generateThumbnails: true,
  thumbnailSizes: [150, 300, 600],
  enableDragDrop: true,
  autoProcess: false,
  validation: {
    minWidth: 256,
    minHeight: 256,
    maxWidth: 4096,
    maxHeight: 4096,
    aspectRatio: undefined,
    aspectRatioTolerance: 0.1
  }
});
function useImageUpload(config =
/* istanbul ignore next */
(cov_1phs4ui9iw().b[0][0]++, {}), onUpload, onError) {
  /* istanbul ignore next */
  cov_1phs4ui9iw().f[6]++;
  const finalConfig =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[18]++, {
    ...DEFAULT_CONFIG,
    ...config
  });
  // State
  const [uploadState, setUploadState] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[19]++, (0, _react.useState)("idle"));
  const [uploadedFiles, setUploadedFiles] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[20]++, (0, _react.useState)([]));
  const [currentFile, setCurrentFile] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[21]++, (0, _react.useState)(null));
  const [progress, setProgress] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[22]++, (0, _react.useState)(null));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[23]++, (0, _react.useState)(null));
  const [dragDropState, setDragDropState] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[24]++, (0, _react.useState)({
    isDragActive: false,
    isDragAccept: false,
    isDragReject: false,
    draggedFiles: []
  }));
  // Refs
  const fileInputRef =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[25]++, (0, _react.useRef)(null));
  const uploadIdCounter =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[26]++, (0, _react.useRef)(0));
  // Business layer hooks
  const {
    data: validationResult
  } =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[27]++, (0, _businesslayer.useImageValidation)(
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[1][0]++, currentFile?.file) ||
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[1][1]++, null), false));
  const {
    data: metadata
  } =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[28]++, (0, _businesslayer.useImageMetadata)(
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[2][0]++, currentFile?.file) ||
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[2][1]++, null), false));
  const {
    data: thumbnail
  } =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[29]++, (0, _businesslayer.useImageThumbnail)(
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[3][0]++, currentFile?.file) ||
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[3][1]++, null), 150, false));
  // Generate unique upload ID
  const generateUploadId =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[30]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[7]++;
    cov_1phs4ui9iw().s[31]++;
    return `upload_${Date.now()}_${++uploadIdCounter.current}`;
  }, []));
  // Update progress
  const updateProgress =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[32]++, (0, _react.useCallback)((stage, percentage, message) => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[8]++;
    cov_1phs4ui9iw().s[33]++;
    setProgress({
      stage,
      percentage,
      message
    });
  }, []));
  // Handle errors
  const handleError =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[34]++, (0, _react.useCallback)((error, type =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[4][0]++, 'unknown')) => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[9]++;
    const uploadError =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[35]++, {
      type,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[5][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[5][1]++, String(error)),
      originalError: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[6][0]++, error) :
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[6][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[36]++;
    setError(uploadError);
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[37]++;
    setUploadState("error");
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[38]++;
    onError?.(uploadError);
  }, [onError]));
  // Validate file
  const validateFile =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[39]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[10]++;
    const errors =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[40]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[41]++, []);
    // File type validation
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[42]++;
    if (!finalConfig.allowedTypes.includes(file.type)) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[7][0]++;
      cov_1phs4ui9iw().s[43]++;
      errors.push(`File type ${file.type} is not supported. Allowed types: ${finalConfig.allowedTypes.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[7][1]++;
    }
    // File size validation
    cov_1phs4ui9iw().s[44]++;
    if (file.size > finalConfig.maxSizeBytes) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[8][0]++;
      cov_1phs4ui9iw().s[45]++;
      errors.push(`File size ${(file.size / 1024 / 1024).toFixed(2)}MB exceeds limit of ${(finalConfig.maxSizeBytes / 1024 / 1024).toFixed(2)}MB`);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[8][1]++;
    }
    // Image dimension validation (requires metadata)
    cov_1phs4ui9iw().s[46]++;
    try {
      const imageMetadata =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[47]++, await new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[11]++;
        const img =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[48]++, new Image());
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[49]++;
        img.onload = () => {
          /* istanbul ignore next */
          cov_1phs4ui9iw().f[12]++;
          cov_1phs4ui9iw().s[50]++;
          resolve({
            dimensions: {
              width: img.naturalWidth,
              height: img.naturalHeight
            },
            format: file.type,
            size: file.size
          });
        };
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[51]++;
        img.onerror = reject;
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[52]++;
        img.src = URL.createObjectURL(file);
      }));
      const {
        width,
        height
      } =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[53]++, imageMetadata.dimensions);
      const {
        validation
      } =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[54]++, finalConfig);
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[55]++;
      if (
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[10][0]++, validation.minWidth) &&
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[10][1]++, width < validation.minWidth) ||
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[10][2]++, validation.minHeight) &&
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[10][3]++, height < validation.minHeight)) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().b[9][0]++;
        cov_1phs4ui9iw().s[56]++;
        errors.push(`Image dimensions ${width}x${height} are too small. Minimum: ${
        /* istanbul ignore next */
        (cov_1phs4ui9iw().b[11][0]++, validation.minWidth) ||
        /* istanbul ignore next */
        (cov_1phs4ui9iw().b[11][1]++, 0)}x${
        /* istanbul ignore next */
        (cov_1phs4ui9iw().b[12][0]++, validation.minHeight) ||
        /* istanbul ignore next */
        (cov_1phs4ui9iw().b[12][1]++, 0)}`);
      } else
      /* istanbul ignore next */
      {
        cov_1phs4ui9iw().b[9][1]++;
      }
      cov_1phs4ui9iw().s[57]++;
      if (
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[14][0]++, validation.maxWidth) &&
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[14][1]++, width > validation.maxWidth) ||
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[14][2]++, validation.maxHeight) &&
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[14][3]++, height > validation.maxHeight)) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().b[13][0]++;
        cov_1phs4ui9iw().s[58]++;
        errors.push(`Image dimensions ${width}x${height} are too large. Maximum: ${
        /* istanbul ignore next */
        (cov_1phs4ui9iw().b[15][0]++, validation.maxWidth) ||
        /* istanbul ignore next */
        (cov_1phs4ui9iw().b[15][1]++, 'unlimited')}x${
        /* istanbul ignore next */
        (cov_1phs4ui9iw().b[16][0]++, validation.maxHeight) ||
        /* istanbul ignore next */
        (cov_1phs4ui9iw().b[16][1]++, 'unlimited')}`);
      } else
      /* istanbul ignore next */
      {
        cov_1phs4ui9iw().b[13][1]++;
      }
      cov_1phs4ui9iw().s[59]++;
      if (validation.aspectRatio) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().b[17][0]++;
        const aspectRatio =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[60]++, width / height);
        const targetRatio =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[61]++, validation.aspectRatio);
        const tolerance =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[62]++,
        /* istanbul ignore next */
        (cov_1phs4ui9iw().b[18][0]++, validation.aspectRatioTolerance) ||
        /* istanbul ignore next */
        (cov_1phs4ui9iw().b[18][1]++, 0.1));
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[63]++;
        if (Math.abs(aspectRatio - targetRatio) > tolerance) {
          /* istanbul ignore next */
          cov_1phs4ui9iw().b[19][0]++;
          cov_1phs4ui9iw().s[64]++;
          warnings.push(`Image aspect ratio ${aspectRatio.toFixed(2)} differs from recommended ${targetRatio.toFixed(2)}`);
        } else
        /* istanbul ignore next */
        {
          cov_1phs4ui9iw().b[19][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1phs4ui9iw().b[17][1]++;
      }
      cov_1phs4ui9iw().s[65]++;
      return {
        isValid: errors.length === 0,
        errors,
        warnings,
        metadata: imageMetadata
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[66]++;
      errors.push('Failed to validate image dimensions');
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[67]++;
      return {
        isValid: false,
        errors,
        warnings
      };
    }
  }, [finalConfig]));
  // Generate thumbnails
  const generateThumbnails =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[68]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[13]++;
    const thumbnails =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[69]++, {});
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[70]++;
    if (!finalConfig.generateThumbnails) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[20][0]++;
      cov_1phs4ui9iw().s[71]++;
      return thumbnails;
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[20][1]++;
    }
    cov_1phs4ui9iw().s[72]++;
    try {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[73]++;
      for (const size of finalConfig.thumbnailSizes) {
        const canvas =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[74]++, document.createElement('canvas'));
        const ctx =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[75]++, canvas.getContext('2d'));
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[76]++;
        if (!ctx) {
          /* istanbul ignore next */
          cov_1phs4ui9iw().b[21][0]++;
          cov_1phs4ui9iw().s[77]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1phs4ui9iw().b[21][1]++;
        }
        const img =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[78]++, new Image());
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[79]++;
        await new Promise((resolve, reject) => {
          /* istanbul ignore next */
          cov_1phs4ui9iw().f[14]++;
          cov_1phs4ui9iw().s[80]++;
          img.onload = resolve;
          /* istanbul ignore next */
          cov_1phs4ui9iw().s[81]++;
          img.onerror = reject;
          /* istanbul ignore next */
          cov_1phs4ui9iw().s[82]++;
          img.src = URL.createObjectURL(file);
        });
        // Calculate dimensions maintaining aspect ratio
        const aspectRatio =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[83]++, img.width / img.height);
        let width =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[84]++, size);
        let height =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[85]++, size);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[86]++;
        if (aspectRatio > 1) {
          /* istanbul ignore next */
          cov_1phs4ui9iw().b[22][0]++;
          cov_1phs4ui9iw().s[87]++;
          height = size / aspectRatio;
        } else {
          /* istanbul ignore next */
          cov_1phs4ui9iw().b[22][1]++;
          cov_1phs4ui9iw().s[88]++;
          width = size * aspectRatio;
        }
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[89]++;
        canvas.width = width;
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[90]++;
        canvas.height = height;
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[91]++;
        ctx.drawImage(img, 0, 0, width, height);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[92]++;
        thumbnails[size] = canvas.toDataURL('image/jpeg', 0.8);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[93]++;
        URL.revokeObjectURL(img.src);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[94]++;
      console.warn('Failed to generate thumbnails:', error);
    }
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[95]++;
    return thumbnails;
  }, [finalConfig.generateThumbnails, finalConfig.thumbnailSizes]));
  // Process uploaded file
  const processFile =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[96]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[15]++;
    const uploadId =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[97]++, generateUploadId());
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[98]++;
    setUploadState("validating");
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[99]++;
    updateProgress('validation', 10, 'Validating file...');
    // Validate file
    const validation =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[100]++, await validateFile(file));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[101]++;
    if (!validation.isValid) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[23][0]++;
      cov_1phs4ui9iw().s[102]++;
      throw new Error(validation.errors.join(', '));
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[23][1]++;
    }
    cov_1phs4ui9iw().s[103]++;
    updateProgress('processing', 30, 'Processing image...');
    // Generate preview
    const preview =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[104]++, URL.createObjectURL(file));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[105]++;
    updateProgress('thumbnail', 60, 'Generating thumbnails...');
    // Generate thumbnails
    const thumbnails =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[106]++, await generateThumbnails(file));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[107]++;
    updateProgress('complete', 80, 'Finalizing...');
    // Auto-process if enabled
    let processedResult;
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[108]++;
    if (finalConfig.autoProcess) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[24][0]++;
      cov_1phs4ui9iw().s[109]++;
      try {
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[110]++;
        processedResult = await (0, _businesslayer.processImageForTryon)(file);
      } catch (error) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[111]++;
        console.warn('Auto-processing failed:', error);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[24][1]++;
    }
    const uploadedFile =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[112]++, {
      file,
      preview,
      thumbnails,
      metadata: validation.metadata,
      processedResult,
      uploadId,
      uploadTime: Date.now()
    });
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[113]++;
    updateProgress('complete', 100, 'Upload complete');
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[114]++;
    setUploadState("complete");
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[115]++;
    return uploadedFile;
  }, [generateUploadId, updateProgress, validateFile, generateThumbnails, finalConfig.autoProcess]));
  // Handle file upload
  const uploadFile =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[116]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[16]++;
    cov_1phs4ui9iw().s[117]++;
    try {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[118]++;
      setError(null);
      const uploadedFile =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[119]++, await processFile(file));
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[120]++;
      setUploadedFiles(prev => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[17]++;
        cov_1phs4ui9iw().s[121]++;
        return [...prev, uploadedFile];
      });
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[122]++;
      setCurrentFile(uploadedFile);
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[123]++;
      onUpload?.(uploadedFile);
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[124]++;
      return uploadedFile;
    } catch (error) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[125]++;
      handleError(error, 'processing');
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[126]++;
      throw error;
    }
  }, [processFile, onUpload, handleError]));
  // Handle multiple file uploads
  const uploadFiles =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[127]++, (0, _react.useCallback)(async files => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[18]++;
    const results =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[128]++, []);
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[129]++;
    for (const file of files) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[130]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[131]++, await uploadFile(file));
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[132]++;
        results.push(result);
      } catch (error) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[133]++;
        console.error('Failed to upload file:', file.name, error);
      }
    }
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[134]++;
    return results;
  }, [uploadFile]));
  // Remove uploaded file
  const removeFile =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[135]++, (0, _react.useCallback)(uploadId => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[19]++;
    cov_1phs4ui9iw().s[136]++;
    setUploadedFiles(prev => {
      /* istanbul ignore next */
      cov_1phs4ui9iw().f[20]++;
      const updated =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[137]++, prev.filter(f => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[21]++;
        cov_1phs4ui9iw().s[138]++;
        return f.uploadId !== uploadId;
      }));
      const removedFile =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[139]++, prev.find(f => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[22]++;
        cov_1phs4ui9iw().s[140]++;
        return f.uploadId === uploadId;
      }));
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[141]++;
      if (removedFile) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().b[25][0]++;
        cov_1phs4ui9iw().s[142]++;
        URL.revokeObjectURL(removedFile.preview);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[143]++;
        Object.values(removedFile.thumbnails).forEach(url => {
          /* istanbul ignore next */
          cov_1phs4ui9iw().f[23]++;
          cov_1phs4ui9iw().s[144]++;
          if (url.startsWith('blob:')) {
            /* istanbul ignore next */
            cov_1phs4ui9iw().b[26][0]++;
            cov_1phs4ui9iw().s[145]++;
            URL.revokeObjectURL(url);
          } else
          /* istanbul ignore next */
          {
            cov_1phs4ui9iw().b[26][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1phs4ui9iw().b[25][1]++;
      }
      cov_1phs4ui9iw().s[146]++;
      return updated;
    });
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[147]++;
    if (currentFile?.uploadId === uploadId) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[27][0]++;
      cov_1phs4ui9iw().s[148]++;
      setCurrentFile(null);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[27][1]++;
    }
  }, [currentFile]));
  // Clear all files
  const clearFiles =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[149]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[24]++;
    cov_1phs4ui9iw().s[150]++;
    uploadedFiles.forEach(file => {
      /* istanbul ignore next */
      cov_1phs4ui9iw().f[25]++;
      cov_1phs4ui9iw().s[151]++;
      URL.revokeObjectURL(file.preview);
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[152]++;
      Object.values(file.thumbnails).forEach(url => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[26]++;
        cov_1phs4ui9iw().s[153]++;
        if (url.startsWith('blob:')) {
          /* istanbul ignore next */
          cov_1phs4ui9iw().b[28][0]++;
          cov_1phs4ui9iw().s[154]++;
          URL.revokeObjectURL(url);
        } else
        /* istanbul ignore next */
        {
          cov_1phs4ui9iw().b[28][1]++;
        }
      });
    });
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[155]++;
    setUploadedFiles([]);
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[156]++;
    setCurrentFile(null);
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[157]++;
    setError(null);
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[158]++;
    setUploadState("idle");
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[159]++;
    setProgress(null);
  }, [uploadedFiles]));
  // Trigger file picker
  const openFilePicker =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[160]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[27]++;
    cov_1phs4ui9iw().s[161]++;
    fileInputRef.current?.click();
  }, []));
  // Handle file input change
  const handleFileInputChange =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[162]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[28]++;
    const files =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[163]++, Array.from(
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[29][0]++, event.target.files) ||
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[29][1]++, [])));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[164]++;
    if (files.length > 0) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[30][0]++;
      cov_1phs4ui9iw().s[165]++;
      uploadFiles(files);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[30][1]++;
    }
    // Reset input to allow same file selection
    cov_1phs4ui9iw().s[166]++;
    event.target.value = '';
  }, [uploadFiles]));
  // Drag and drop handlers
  const handleDragEnter =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[167]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[29]++;
    cov_1phs4ui9iw().s[168]++;
    event.preventDefault();
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[169]++;
    event.stopPropagation();
    const files =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[170]++, Array.from(event.dataTransfer.files));
    const hasValidFiles =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[171]++, files.some(file => {
      /* istanbul ignore next */
      cov_1phs4ui9iw().f[30]++;
      cov_1phs4ui9iw().s[172]++;
      return finalConfig.allowedTypes.includes(file.type);
    }));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[173]++;
    setDragDropState({
      isDragActive: true,
      isDragAccept: hasValidFiles,
      isDragReject: !hasValidFiles,
      draggedFiles: files
    });
  }, [finalConfig.allowedTypes]));
  const handleDragLeave =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[174]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[31]++;
    cov_1phs4ui9iw().s[175]++;
    event.preventDefault();
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[176]++;
    event.stopPropagation();
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[177]++;
    setDragDropState({
      isDragActive: false,
      isDragAccept: false,
      isDragReject: false,
      draggedFiles: []
    });
  }, []));
  const handleDragOver =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[178]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[32]++;
    cov_1phs4ui9iw().s[179]++;
    event.preventDefault();
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[180]++;
    event.stopPropagation();
  }, []));
  const handleDrop =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[181]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[33]++;
    cov_1phs4ui9iw().s[182]++;
    event.preventDefault();
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[183]++;
    event.stopPropagation();
    const files =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[184]++, Array.from(event.dataTransfer.files).filter(file => {
      /* istanbul ignore next */
      cov_1phs4ui9iw().f[34]++;
      cov_1phs4ui9iw().s[185]++;
      return finalConfig.allowedTypes.includes(file.type);
    }));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[186]++;
    setDragDropState({
      isDragActive: false,
      isDragAccept: false,
      isDragReject: false,
      draggedFiles: []
    });
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[187]++;
    if (files.length > 0) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[31][0]++;
      cov_1phs4ui9iw().s[188]++;
      uploadFiles(files);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[31][1]++;
    }
  }, [finalConfig.allowedTypes, uploadFiles]));
  // Cleanup on unmount
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[189]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[35]++;
    cov_1phs4ui9iw().s[190]++;
    return () => {
      /* istanbul ignore next */
      cov_1phs4ui9iw().f[36]++;
      cov_1phs4ui9iw().s[191]++;
      uploadedFiles.forEach(file => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[37]++;
        cov_1phs4ui9iw().s[192]++;
        URL.revokeObjectURL(file.preview);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[193]++;
        Object.values(file.thumbnails).forEach(url => {
          /* istanbul ignore next */
          cov_1phs4ui9iw().f[38]++;
          cov_1phs4ui9iw().s[194]++;
          if (url.startsWith('blob:')) {
            /* istanbul ignore next */
            cov_1phs4ui9iw().b[32][0]++;
            cov_1phs4ui9iw().s[195]++;
            URL.revokeObjectURL(url);
          } else
          /* istanbul ignore next */
          {
            cov_1phs4ui9iw().b[32][1]++;
          }
        });
      });
    };
  }, []);
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[196]++;
  return {
    // State
    uploadState,
    uploadedFiles,
    currentFile,
    progress,
    error,
    dragDropState,
    // Actions
    uploadFile,
    uploadFiles,
    removeFile,
    clearFiles,
    openFilePicker,
    // File input props
    fileInputProps: {
      ref: fileInputRef,
      type: 'file',
      accept: finalConfig.allowedTypes.join(','),
      multiple: true,
      onChange: handleFileInputChange,
      style: {
        display: 'none'
      }
    },
    // Drag and drop props (only if enabled)
    ...(finalConfig.enableDragDrop ?
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[33][0]++, {
      dragDropProps: {
        onDragEnter: handleDragEnter,
        onDragLeave: handleDragLeave,
        onDragOver: handleDragOver,
        onDrop: handleDrop
      }
    }) :
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[33][1]++, {})),
    // Utils
    validateFile,
    generateThumbnails
  };
}
function useSingleImageUpload(config =
/* istanbul ignore next */
(cov_1phs4ui9iw().b[34][0]++, {}), onUpload, onError) {
  /* istanbul ignore next */
  cov_1phs4ui9iw().f[39]++;
  const upload =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[197]++, useImageUpload(config, onUpload, onError));
  const uploadSingleFile =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[198]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[40]++;
    cov_1phs4ui9iw().s[199]++;
    upload.clearFiles(); // Clear previous files
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[200]++;
    return upload.uploadFile(file);
  }, [upload]));
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[201]++;
  return {
    ...upload,
    uploadFile: uploadSingleFile,
    file: upload.currentFile
  };
}
function useDropzoneUpload(config =
/* istanbul ignore next */
(cov_1phs4ui9iw().b[35][0]++, {}), onUpload, onError) {
  /* istanbul ignore next */
  cov_1phs4ui9iw().f[41]++;
  const upload =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[202]++, useImageUpload({
    ...config,
    enableDragDrop: true
  }, undefined, onError));
  // Handle batch upload completion
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[203]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[42]++;
    cov_1phs4ui9iw().s[204]++;
    if (
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[37][0]++, upload.uploadedFiles.length > 0) &&
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[37][1]++, upload.uploadState === "complete")) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[36][0]++;
      cov_1phs4ui9iw().s[205]++;
      onUpload?.(upload.uploadedFiles);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[36][1]++;
    }
  }, [upload.uploadedFiles, upload.uploadState, onUpload]);
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[206]++;
  return {
    dragDropState: upload.dragDropState,
    dragDropProps: upload.dragDropProps,
    uploadedFiles: upload.uploadedFiles,
    progress: upload.progress,
    error: upload.error,
    clearFiles: upload.clearFiles,
    removeFile: upload.removeFile
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXBoczR1aTlpdyIsImFjdHVhbENvdmVyYWdlIiwicyIsIlVwbG9hZFN0YXRlIiwiZiIsInVzZURyb3B6b25lVXBsb2FkIiwidXNlSW1hZ2VVcGxvYWQiLCJ1c2VTaW5nbGVJbWFnZVVwbG9hZCIsIkRFRkFVTFRfQ09ORklHIiwibWF4U2l6ZUJ5dGVzIiwiYWxsb3dlZFR5cGVzIiwiZ2VuZXJhdGVUaHVtYm5haWxzIiwidGh1bWJuYWlsU2l6ZXMiLCJlbmFibGVEcmFnRHJvcCIsImF1dG9Qcm9jZXNzIiwidmFsaWRhdGlvbiIsIm1pbldpZHRoIiwibWluSGVpZ2h0IiwibWF4V2lkdGgiLCJtYXhIZWlnaHQiLCJhc3BlY3RSYXRpbyIsInVuZGVmaW5lZCIsImFzcGVjdFJhdGlvVG9sZXJhbmNlIiwiY29uZmlnIiwiYiIsIm9uVXBsb2FkIiwib25FcnJvciIsImZpbmFsQ29uZmlnIiwidXBsb2FkU3RhdGUiLCJzZXRVcGxvYWRTdGF0ZSIsIl9yZWFjdCIsInVzZVN0YXRlIiwidXBsb2FkZWRGaWxlcyIsInNldFVwbG9hZGVkRmlsZXMiLCJjdXJyZW50RmlsZSIsInNldEN1cnJlbnRGaWxlIiwicHJvZ3Jlc3MiLCJzZXRQcm9ncmVzcyIsImVycm9yIiwic2V0RXJyb3IiLCJkcmFnRHJvcFN0YXRlIiwic2V0RHJhZ0Ryb3BTdGF0ZSIsImlzRHJhZ0FjdGl2ZSIsImlzRHJhZ0FjY2VwdCIsImlzRHJhZ1JlamVjdCIsImRyYWdnZWRGaWxlcyIsImZpbGVJbnB1dFJlZiIsInVzZVJlZiIsInVwbG9hZElkQ291bnRlciIsImRhdGEiLCJ2YWxpZGF0aW9uUmVzdWx0IiwiX2J1c2luZXNzbGF5ZXIiLCJ1c2VJbWFnZVZhbGlkYXRpb24iLCJmaWxlIiwibWV0YWRhdGEiLCJ1c2VJbWFnZU1ldGFkYXRhIiwidGh1bWJuYWlsIiwidXNlSW1hZ2VUaHVtYm5haWwiLCJnZW5lcmF0ZVVwbG9hZElkIiwidXNlQ2FsbGJhY2siLCJEYXRlIiwibm93IiwiY3VycmVudCIsInVwZGF0ZVByb2dyZXNzIiwic3RhZ2UiLCJwZXJjZW50YWdlIiwibWVzc2FnZSIsImhhbmRsZUVycm9yIiwidHlwZSIsInVwbG9hZEVycm9yIiwiRXJyb3IiLCJTdHJpbmciLCJvcmlnaW5hbEVycm9yIiwidmFsaWRhdGVGaWxlIiwiZXJyb3JzIiwid2FybmluZ3MiLCJpbmNsdWRlcyIsInB1c2giLCJqb2luIiwic2l6ZSIsInRvRml4ZWQiLCJpbWFnZU1ldGFkYXRhIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJpbWciLCJJbWFnZSIsIm9ubG9hZCIsImRpbWVuc2lvbnMiLCJ3aWR0aCIsIm5hdHVyYWxXaWR0aCIsImhlaWdodCIsIm5hdHVyYWxIZWlnaHQiLCJmb3JtYXQiLCJvbmVycm9yIiwic3JjIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwidGFyZ2V0UmF0aW8iLCJ0b2xlcmFuY2UiLCJNYXRoIiwiYWJzIiwiaXNWYWxpZCIsImxlbmd0aCIsInRodW1ibmFpbHMiLCJjYW52YXMiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjdHgiLCJnZXRDb250ZXh0IiwiZHJhd0ltYWdlIiwidG9EYXRhVVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiY29uc29sZSIsIndhcm4iLCJwcm9jZXNzRmlsZSIsInVwbG9hZElkIiwicHJldmlldyIsInByb2Nlc3NlZFJlc3VsdCIsInByb2Nlc3NJbWFnZUZvclRyeW9uIiwidXBsb2FkZWRGaWxlIiwidXBsb2FkVGltZSIsInVwbG9hZEZpbGUiLCJwcmV2IiwidXBsb2FkRmlsZXMiLCJmaWxlcyIsInJlc3VsdHMiLCJyZXN1bHQiLCJuYW1lIiwicmVtb3ZlRmlsZSIsInVwZGF0ZWQiLCJmaWx0ZXIiLCJyZW1vdmVkRmlsZSIsImZpbmQiLCJPYmplY3QiLCJ2YWx1ZXMiLCJmb3JFYWNoIiwidXJsIiwic3RhcnRzV2l0aCIsImNsZWFyRmlsZXMiLCJvcGVuRmlsZVBpY2tlciIsImNsaWNrIiwiaGFuZGxlRmlsZUlucHV0Q2hhbmdlIiwiZXZlbnQiLCJBcnJheSIsImZyb20iLCJ0YXJnZXQiLCJ2YWx1ZSIsImhhbmRsZURyYWdFbnRlciIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiZGF0YVRyYW5zZmVyIiwiaGFzVmFsaWRGaWxlcyIsInNvbWUiLCJoYW5kbGVEcmFnTGVhdmUiLCJoYW5kbGVEcmFnT3ZlciIsImhhbmRsZURyb3AiLCJ1c2VFZmZlY3QiLCJmaWxlSW5wdXRQcm9wcyIsInJlZiIsImFjY2VwdCIsIm11bHRpcGxlIiwib25DaGFuZ2UiLCJzdHlsZSIsImRpc3BsYXkiLCJkcmFnRHJvcFByb3BzIiwib25EcmFnRW50ZXIiLCJvbkRyYWdMZWF2ZSIsIm9uRHJhZ092ZXIiLCJvbkRyb3AiLCJ1cGxvYWQiLCJ1cGxvYWRTaW5nbGVGaWxlIl0sInNvdXJjZXMiOlsiL1VzZXJzL3dpbGxzdHJlZXRlci9XZWJzdG9ybVByb2plY3RzL3ZpYmUtY29kaW5nL3Rob3NlLXBlb3BsZS9UaGUtU3VzLUZpdC1ncC9zcmMvaG9va3MvdXNlSW1hZ2VVcGxvYWQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG4vLyBJbWFnZSBVcGxvYWQgSG9va3Ncbi8vIFNwZWNpYWxpemVkIGhvb2tzIGZvciBoYW5kbGluZyBmaWxlIHVwbG9hZCBvcGVyYXRpb25zIHdpdGggdmFsaWRhdGlvbiBhbmQgcHJldmlldyBtYW5hZ2VtZW50XG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBcbiAgdXNlSW1hZ2VWYWxpZGF0aW9uLFxuICB1c2VJbWFnZU1ldGFkYXRhLFxuICB1c2VJbWFnZVRodW1ibmFpbCxcbiAgcHJvY2Vzc0ltYWdlRm9yVHJ5b24sXG4gIHR5cGUgSW1hZ2VQcm9jZXNzaW5nUmVzdWx0XG59IGZyb20gJy4uL2J1c2luZXNzLWxheWVyJztcbmltcG9ydCB7IGZpbGVUb0Jhc2U2NCB9IGZyb20gJy4uL3V0aWxzL2ltYWdlJztcblxuLyoqXG4gKiBJbWFnZSBtZXRhZGF0YSBpbnRlcmZhY2VcbiAqL1xuaW50ZXJmYWNlIEltYWdlTWV0YWRhdGEge1xuICBkaW1lbnNpb25zOiB7IHdpZHRoOiBudW1iZXI7IGhlaWdodDogbnVtYmVyIH07XG4gIGZvcm1hdDogc3RyaW5nO1xuICBzaXplOiBudW1iZXI7XG59XG5cbi8qKlxuICogVXBsb2FkIHN0YXRlIGVudW1cbiAqL1xuZXhwb3J0IGVudW0gVXBsb2FkU3RhdGUge1xuICBJRExFID0gJ2lkbGUnLFxuICBWQUxJREFUSU5HID0gJ3ZhbGlkYXRpbmcnLFxuICBQUk9DRVNTSU5HID0gJ3Byb2Nlc3NpbmcnLFxuICBDT01QTEVURSA9ICdjb21wbGV0ZScsXG4gIEVSUk9SID0gJ2Vycm9yJ1xufVxuXG4vKipcbiAqIEZpbGUgdmFsaWRhdGlvbiByZXN1bHRcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBGaWxlVmFsaWRhdGlvblJlc3VsdCB7XG4gIGlzVmFsaWQ6IGJvb2xlYW47XG4gIGVycm9yczogc3RyaW5nW107XG4gIHdhcm5pbmdzOiBzdHJpbmdbXTtcbiAgbWV0YWRhdGE/OiBJbWFnZU1ldGFkYXRhO1xufVxuXG4vKipcbiAqIFVwbG9hZCBwcm9ncmVzcyBpbmZvcm1hdGlvblxuICovXG5leHBvcnQgaW50ZXJmYWNlIFVwbG9hZFByb2dyZXNzIHtcbiAgc3RhZ2U6ICd2YWxpZGF0aW9uJyB8ICdwcm9jZXNzaW5nJyB8ICd0aHVtYm5haWwnIHwgJ2NvbXBsZXRlJztcbiAgcGVyY2VudGFnZTogbnVtYmVyO1xuICBtZXNzYWdlOiBzdHJpbmc7XG59XG5cbi8qKlxuICogVXBsb2FkIGNvbmZpZ3VyYXRpb25cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBVcGxvYWRDb25maWcge1xuICAvKiogTWF4aW11bSBmaWxlIHNpemUgaW4gYnl0ZXMgKi9cbiAgbWF4U2l6ZUJ5dGVzPzogbnVtYmVyO1xuICAvKiogQWxsb3dlZCBmaWxlIHR5cGVzICovXG4gIGFsbG93ZWRUeXBlcz86IHN0cmluZ1tdO1xuICAvKiogQXV0by1nZW5lcmF0ZSB0aHVtYm5haWxzICovXG4gIGdlbmVyYXRlVGh1bWJuYWlscz86IGJvb2xlYW47XG4gIC8qKiBUaHVtYm5haWwgc2l6ZXMgdG8gZ2VuZXJhdGUgKi9cbiAgdGh1bWJuYWlsU2l6ZXM/OiBudW1iZXJbXTtcbiAgLyoqIEVuYWJsZSBkcmFnIGFuZCBkcm9wICovXG4gIGVuYWJsZURyYWdEcm9wPzogYm9vbGVhbjtcbiAgLyoqIEF1dG8tcHJvY2VzcyBhZnRlciB1cGxvYWQgKi9cbiAgYXV0b1Byb2Nlc3M/OiBib29sZWFuO1xuICAvKiogVmFsaWRhdGlvbiBvcHRpb25zICovXG4gIHZhbGlkYXRpb24/OiB7XG4gICAgbWluV2lkdGg/OiBudW1iZXI7XG4gICAgbWluSGVpZ2h0PzogbnVtYmVyO1xuICAgIG1heFdpZHRoPzogbnVtYmVyO1xuICAgIG1heEhlaWdodD86IG51bWJlcjtcbiAgICBhc3BlY3RSYXRpbz86IG51bWJlcjtcbiAgICBhc3BlY3RSYXRpb1RvbGVyYW5jZT86IG51bWJlcjtcbiAgfTtcbn1cblxuLyoqXG4gKiBVcGxvYWRlZCBmaWxlIGluZm9ybWF0aW9uXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVXBsb2FkZWRGaWxlIHtcbiAgZmlsZTogRmlsZTtcbiAgcHJldmlldzogc3RyaW5nO1xuICB0aHVtYm5haWxzOiBSZWNvcmQ8bnVtYmVyLCBzdHJpbmc+O1xuICBtZXRhZGF0YT86IEltYWdlTWV0YWRhdGE7XG4gIHByb2Nlc3NlZFJlc3VsdD86IEltYWdlUHJvY2Vzc2luZ1Jlc3VsdDtcbiAgdXBsb2FkSWQ6IHN0cmluZztcbiAgdXBsb2FkVGltZTogbnVtYmVyO1xufVxuXG4vKipcbiAqIFVwbG9hZCBlcnJvclxuICovXG5leHBvcnQgaW50ZXJmYWNlIFVwbG9hZEVycm9yIHtcbiAgdHlwZTogJ3ZhbGlkYXRpb24nIHwgJ3Byb2Nlc3NpbmcnIHwgJ25ldHdvcmsnIHwgJ3Vua25vd24nO1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIGNvZGU/OiBzdHJpbmc7XG4gIG9yaWdpbmFsRXJyb3I/OiBFcnJvcjtcbn1cblxuLyoqXG4gKiBEcmFnIGFuZCBkcm9wIHN0YXRlXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRHJhZ0Ryb3BTdGF0ZSB7XG4gIGlzRHJhZ0FjdGl2ZTogYm9vbGVhbjtcbiAgaXNEcmFnQWNjZXB0OiBib29sZWFuO1xuICBpc0RyYWdSZWplY3Q6IGJvb2xlYW47XG4gIGRyYWdnZWRGaWxlczogRmlsZVtdO1xufVxuXG4vKipcbiAqIERlZmF1bHQgdXBsb2FkIGNvbmZpZ3VyYXRpb25cbiAqL1xuY29uc3QgREVGQVVMVF9DT05GSUc6IFJlcXVpcmVkPFVwbG9hZENvbmZpZz4gPSB7XG4gIG1heFNpemVCeXRlczogMTAgKiAxMDI0ICogMTAyNCwgLy8gMTBNQlxuICBhbGxvd2VkVHlwZXM6IFsnaW1hZ2UvanBlZycsICdpbWFnZS9wbmcnLCAnaW1hZ2Uvd2VicCcsICdpbWFnZS9naWYnXSxcbiAgZ2VuZXJhdGVUaHVtYm5haWxzOiB0cnVlLFxuICB0aHVtYm5haWxTaXplczogWzE1MCwgMzAwLCA2MDBdLFxuICBlbmFibGVEcmFnRHJvcDogdHJ1ZSxcbiAgYXV0b1Byb2Nlc3M6IGZhbHNlLFxuICB2YWxpZGF0aW9uOiB7XG4gICAgbWluV2lkdGg6IDI1NixcbiAgICBtaW5IZWlnaHQ6IDI1NixcbiAgICBtYXhXaWR0aDogNDA5NixcbiAgICBtYXhIZWlnaHQ6IDQwOTYsXG4gICAgYXNwZWN0UmF0aW86IHVuZGVmaW5lZCxcbiAgICBhc3BlY3RSYXRpb1RvbGVyYW5jZTogMC4xXG4gIH1cbn07XG5cbi8qKlxuICogTWFpbiBpbWFnZSB1cGxvYWQgaG9va1xuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlSW1hZ2VVcGxvYWQoXG4gIGNvbmZpZzogVXBsb2FkQ29uZmlnID0ge30sXG4gIG9uVXBsb2FkPzogKGZpbGU6IFVwbG9hZGVkRmlsZSkgPT4gdm9pZCxcbiAgb25FcnJvcj86IChlcnJvcjogVXBsb2FkRXJyb3IpID0+IHZvaWRcbikge1xuICBjb25zdCBmaW5hbENvbmZpZyA9IHsgLi4uREVGQVVMVF9DT05GSUcsIC4uLmNvbmZpZyB9O1xuICBcbiAgLy8gU3RhdGVcbiAgY29uc3QgW3VwbG9hZFN0YXRlLCBzZXRVcGxvYWRTdGF0ZV0gPSB1c2VTdGF0ZTxVcGxvYWRTdGF0ZT4oVXBsb2FkU3RhdGUuSURMRSk7XG4gIGNvbnN0IFt1cGxvYWRlZEZpbGVzLCBzZXRVcGxvYWRlZEZpbGVzXSA9IHVzZVN0YXRlPFVwbG9hZGVkRmlsZVtdPihbXSk7XG4gIGNvbnN0IFtjdXJyZW50RmlsZSwgc2V0Q3VycmVudEZpbGVdID0gdXNlU3RhdGU8VXBsb2FkZWRGaWxlIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtwcm9ncmVzcywgc2V0UHJvZ3Jlc3NdID0gdXNlU3RhdGU8VXBsb2FkUHJvZ3Jlc3MgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxVcGxvYWRFcnJvciB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbZHJhZ0Ryb3BTdGF0ZSwgc2V0RHJhZ0Ryb3BTdGF0ZV0gPSB1c2VTdGF0ZTxEcmFnRHJvcFN0YXRlPih7XG4gICAgaXNEcmFnQWN0aXZlOiBmYWxzZSxcbiAgICBpc0RyYWdBY2NlcHQ6IGZhbHNlLFxuICAgIGlzRHJhZ1JlamVjdDogZmFsc2UsXG4gICAgZHJhZ2dlZEZpbGVzOiBbXVxuICB9KTtcblxuICAvLyBSZWZzXG4gIGNvbnN0IGZpbGVJbnB1dFJlZiA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcbiAgY29uc3QgdXBsb2FkSWRDb3VudGVyID0gdXNlUmVmKDApO1xuXG4gIC8vIEJ1c2luZXNzIGxheWVyIGhvb2tzXG4gIGNvbnN0IHsgZGF0YTogdmFsaWRhdGlvblJlc3VsdCB9ID0gdXNlSW1hZ2VWYWxpZGF0aW9uKGN1cnJlbnRGaWxlPy5maWxlIHx8IG51bGwsIGZhbHNlKTtcbiAgY29uc3QgeyBkYXRhOiBtZXRhZGF0YSB9ID0gdXNlSW1hZ2VNZXRhZGF0YShjdXJyZW50RmlsZT8uZmlsZSB8fCBudWxsLCBmYWxzZSk7XG4gIGNvbnN0IHsgZGF0YTogdGh1bWJuYWlsIH0gPSB1c2VJbWFnZVRodW1ibmFpbChjdXJyZW50RmlsZT8uZmlsZSB8fCBudWxsLCAxNTAsIGZhbHNlKTtcblxuICAvLyBHZW5lcmF0ZSB1bmlxdWUgdXBsb2FkIElEXG4gIGNvbnN0IGdlbmVyYXRlVXBsb2FkSWQgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgcmV0dXJuIGB1cGxvYWRfJHtEYXRlLm5vdygpfV8keysrdXBsb2FkSWRDb3VudGVyLmN1cnJlbnR9YDtcbiAgfSwgW10pO1xuXG4gIC8vIFVwZGF0ZSBwcm9ncmVzc1xuICBjb25zdCB1cGRhdGVQcm9ncmVzcyA9IHVzZUNhbGxiYWNrKChzdGFnZTogVXBsb2FkUHJvZ3Jlc3NbJ3N0YWdlJ10sIHBlcmNlbnRhZ2U6IG51bWJlciwgbWVzc2FnZTogc3RyaW5nKSA9PiB7XG4gICAgc2V0UHJvZ3Jlc3MoeyBzdGFnZSwgcGVyY2VudGFnZSwgbWVzc2FnZSB9KTtcbiAgfSwgW10pO1xuXG4gIC8vIEhhbmRsZSBlcnJvcnNcbiAgY29uc3QgaGFuZGxlRXJyb3IgPSB1c2VDYWxsYmFjaygoZXJyb3I6IHVua25vd24sIHR5cGU6IFVwbG9hZEVycm9yWyd0eXBlJ10gPSAndW5rbm93bicpID0+IHtcbiAgICBjb25zdCB1cGxvYWRFcnJvcjogVXBsb2FkRXJyb3IgPSB7XG4gICAgICB0eXBlLFxuICAgICAgbWVzc2FnZTogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiBTdHJpbmcoZXJyb3IpLFxuICAgICAgb3JpZ2luYWxFcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yIDogdW5kZWZpbmVkXG4gICAgfTtcblxuICAgIHNldEVycm9yKHVwbG9hZEVycm9yKTtcbiAgICBzZXRVcGxvYWRTdGF0ZShVcGxvYWRTdGF0ZS5FUlJPUik7XG4gICAgb25FcnJvcj8uKHVwbG9hZEVycm9yKTtcbiAgfSwgW29uRXJyb3JdKTtcblxuICAvLyBWYWxpZGF0ZSBmaWxlXG4gIGNvbnN0IHZhbGlkYXRlRmlsZSA9IHVzZUNhbGxiYWNrKGFzeW5jIChmaWxlOiBGaWxlKTogUHJvbWlzZTxGaWxlVmFsaWRhdGlvblJlc3VsdD4gPT4ge1xuICAgIGNvbnN0IGVycm9yczogc3RyaW5nW10gPSBbXTtcbiAgICBjb25zdCB3YXJuaW5nczogc3RyaW5nW10gPSBbXTtcblxuICAgIC8vIEZpbGUgdHlwZSB2YWxpZGF0aW9uXG4gICAgaWYgKCFmaW5hbENvbmZpZy5hbGxvd2VkVHlwZXMuaW5jbHVkZXMoZmlsZS50eXBlKSkge1xuICAgICAgZXJyb3JzLnB1c2goYEZpbGUgdHlwZSAke2ZpbGUudHlwZX0gaXMgbm90IHN1cHBvcnRlZC4gQWxsb3dlZCB0eXBlczogJHtmaW5hbENvbmZpZy5hbGxvd2VkVHlwZXMuam9pbignLCAnKX1gKTtcbiAgICB9XG5cbiAgICAvLyBGaWxlIHNpemUgdmFsaWRhdGlvblxuICAgIGlmIChmaWxlLnNpemUgPiBmaW5hbENvbmZpZy5tYXhTaXplQnl0ZXMpIHtcbiAgICAgIGVycm9ycy5wdXNoKGBGaWxlIHNpemUgJHsoZmlsZS5zaXplIC8gMTAyNCAvIDEwMjQpLnRvRml4ZWQoMil9TUIgZXhjZWVkcyBsaW1pdCBvZiAkeyhmaW5hbENvbmZpZy5tYXhTaXplQnl0ZXMgLyAxMDI0IC8gMTAyNCkudG9GaXhlZCgyKX1NQmApO1xuICAgIH1cblxuICAgIC8vIEltYWdlIGRpbWVuc2lvbiB2YWxpZGF0aW9uIChyZXF1aXJlcyBtZXRhZGF0YSlcbiAgICB0cnkge1xuICAgICAgY29uc3QgaW1hZ2VNZXRhZGF0YSA9IGF3YWl0IG5ldyBQcm9taXNlPEltYWdlTWV0YWRhdGE+KChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY29uc3QgaW1nID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGltZy5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgICBkaW1lbnNpb25zOiB7IHdpZHRoOiBpbWcubmF0dXJhbFdpZHRoLCBoZWlnaHQ6IGltZy5uYXR1cmFsSGVpZ2h0IH0sXG4gICAgICAgICAgICBmb3JtYXQ6IGZpbGUudHlwZSxcbiAgICAgICAgICAgIHNpemU6IGZpbGUuc2l6ZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBpbWcub25lcnJvciA9IHJlamVjdDtcbiAgICAgICAgaW1nLnNyYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSk7XG4gICAgICB9KTtcblxuICAgICAgY29uc3QgeyB3aWR0aCwgaGVpZ2h0IH0gPSBpbWFnZU1ldGFkYXRhLmRpbWVuc2lvbnM7XG4gICAgICBjb25zdCB7IHZhbGlkYXRpb24gfSA9IGZpbmFsQ29uZmlnO1xuXG4gICAgICBpZiAoKHZhbGlkYXRpb24ubWluV2lkdGggJiYgd2lkdGggPCB2YWxpZGF0aW9uLm1pbldpZHRoKSB8fCAodmFsaWRhdGlvbi5taW5IZWlnaHQgJiYgaGVpZ2h0IDwgdmFsaWRhdGlvbi5taW5IZWlnaHQpKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKGBJbWFnZSBkaW1lbnNpb25zICR7d2lkdGh9eCR7aGVpZ2h0fSBhcmUgdG9vIHNtYWxsLiBNaW5pbXVtOiAke3ZhbGlkYXRpb24ubWluV2lkdGggfHwgMH14JHt2YWxpZGF0aW9uLm1pbkhlaWdodCB8fCAwfWApO1xuICAgICAgfVxuXG4gICAgICBpZiAoKHZhbGlkYXRpb24ubWF4V2lkdGggJiYgd2lkdGggPiB2YWxpZGF0aW9uLm1heFdpZHRoKSB8fCAodmFsaWRhdGlvbi5tYXhIZWlnaHQgJiYgaGVpZ2h0ID4gdmFsaWRhdGlvbi5tYXhIZWlnaHQpKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKGBJbWFnZSBkaW1lbnNpb25zICR7d2lkdGh9eCR7aGVpZ2h0fSBhcmUgdG9vIGxhcmdlLiBNYXhpbXVtOiAke3ZhbGlkYXRpb24ubWF4V2lkdGggfHwgJ3VubGltaXRlZCd9eCR7dmFsaWRhdGlvbi5tYXhIZWlnaHQgfHwgJ3VubGltaXRlZCd9YCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh2YWxpZGF0aW9uLmFzcGVjdFJhdGlvKSB7XG4gICAgICAgIGNvbnN0IGFzcGVjdFJhdGlvID0gd2lkdGggLyBoZWlnaHQ7XG4gICAgICAgIGNvbnN0IHRhcmdldFJhdGlvID0gdmFsaWRhdGlvbi5hc3BlY3RSYXRpbztcbiAgICAgICAgY29uc3QgdG9sZXJhbmNlID0gdmFsaWRhdGlvbi5hc3BlY3RSYXRpb1RvbGVyYW5jZSB8fCAwLjE7XG4gICAgICAgIFxuICAgICAgICBpZiAoTWF0aC5hYnMoYXNwZWN0UmF0aW8gLSB0YXJnZXRSYXRpbykgPiB0b2xlcmFuY2UpIHtcbiAgICAgICAgICB3YXJuaW5ncy5wdXNoKGBJbWFnZSBhc3BlY3QgcmF0aW8gJHthc3BlY3RSYXRpby50b0ZpeGVkKDIpfSBkaWZmZXJzIGZyb20gcmVjb21tZW5kZWQgJHt0YXJnZXRSYXRpby50b0ZpeGVkKDIpfWApO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlzVmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDAsXG4gICAgICAgIGVycm9ycyxcbiAgICAgICAgd2FybmluZ3MsXG4gICAgICAgIG1ldGFkYXRhOiBpbWFnZU1ldGFkYXRhXG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBlcnJvcnMucHVzaCgnRmFpbGVkIHRvIHZhbGlkYXRlIGltYWdlIGRpbWVuc2lvbnMnKTtcbiAgICAgIHJldHVybiB7IGlzVmFsaWQ6IGZhbHNlLCBlcnJvcnMsIHdhcm5pbmdzIH07XG4gICAgfVxuICB9LCBbZmluYWxDb25maWddKTtcblxuICAvLyBHZW5lcmF0ZSB0aHVtYm5haWxzXG4gIGNvbnN0IGdlbmVyYXRlVGh1bWJuYWlscyA9IHVzZUNhbGxiYWNrKGFzeW5jIChmaWxlOiBGaWxlKTogUHJvbWlzZTxSZWNvcmQ8bnVtYmVyLCBzdHJpbmc+PiA9PiB7XG4gICAgY29uc3QgdGh1bWJuYWlsczogUmVjb3JkPG51bWJlciwgc3RyaW5nPiA9IHt9O1xuXG4gICAgaWYgKCFmaW5hbENvbmZpZy5nZW5lcmF0ZVRodW1ibmFpbHMpIHtcbiAgICAgIHJldHVybiB0aHVtYm5haWxzO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBmb3IgKGNvbnN0IHNpemUgb2YgZmluYWxDb25maWcudGh1bWJuYWlsU2l6ZXMpIHtcbiAgICAgICAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgICAgIGNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICBcbiAgICAgICAgaWYgKCFjdHgpIGNvbnRpbnVlO1xuXG4gICAgICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgaW1nLm9ubG9hZCA9IHJlc29sdmU7XG4gICAgICAgICAgaW1nLm9uZXJyb3IgPSByZWplY3Q7XG4gICAgICAgICAgaW1nLnNyYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIENhbGN1bGF0ZSBkaW1lbnNpb25zIG1haW50YWluaW5nIGFzcGVjdCByYXRpb1xuICAgICAgICBjb25zdCBhc3BlY3RSYXRpbyA9IGltZy53aWR0aCAvIGltZy5oZWlnaHQ7XG4gICAgICAgIGxldCB3aWR0aCA9IHNpemU7XG4gICAgICAgIGxldCBoZWlnaHQgPSBzaXplO1xuXG4gICAgICAgIGlmIChhc3BlY3RSYXRpbyA+IDEpIHtcbiAgICAgICAgICBoZWlnaHQgPSBzaXplIC8gYXNwZWN0UmF0aW87XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgd2lkdGggPSBzaXplICogYXNwZWN0UmF0aW87XG4gICAgICAgIH1cblxuICAgICAgICBjYW52YXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgY2FudmFzLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgY3R4LmRyYXdJbWFnZShpbWcsIDAsIDAsIHdpZHRoLCBoZWlnaHQpO1xuXG4gICAgICAgIHRodW1ibmFpbHNbc2l6ZV0gPSBjYW52YXMudG9EYXRhVVJMKCdpbWFnZS9qcGVnJywgMC44KTtcbiAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTChpbWcuc3JjKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gZ2VuZXJhdGUgdGh1bWJuYWlsczonLCBlcnJvcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRodW1ibmFpbHM7XG4gIH0sIFtmaW5hbENvbmZpZy5nZW5lcmF0ZVRodW1ibmFpbHMsIGZpbmFsQ29uZmlnLnRodW1ibmFpbFNpemVzXSk7XG5cbiAgLy8gUHJvY2VzcyB1cGxvYWRlZCBmaWxlXG4gIGNvbnN0IHByb2Nlc3NGaWxlID0gdXNlQ2FsbGJhY2soYXN5bmMgKGZpbGU6IEZpbGUpOiBQcm9taXNlPFVwbG9hZGVkRmlsZT4gPT4ge1xuICAgIGNvbnN0IHVwbG9hZElkID0gZ2VuZXJhdGVVcGxvYWRJZCgpO1xuICAgIFxuICAgIHNldFVwbG9hZFN0YXRlKFVwbG9hZFN0YXRlLlZBTElEQVRJTkcpO1xuICAgIHVwZGF0ZVByb2dyZXNzKCd2YWxpZGF0aW9uJywgMTAsICdWYWxpZGF0aW5nIGZpbGUuLi4nKTtcblxuICAgIC8vIFZhbGlkYXRlIGZpbGVcbiAgICBjb25zdCB2YWxpZGF0aW9uID0gYXdhaXQgdmFsaWRhdGVGaWxlKGZpbGUpO1xuICAgIGlmICghdmFsaWRhdGlvbi5pc1ZhbGlkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IodmFsaWRhdGlvbi5lcnJvcnMuam9pbignLCAnKSk7XG4gICAgfVxuXG4gICAgdXBkYXRlUHJvZ3Jlc3MoJ3Byb2Nlc3NpbmcnLCAzMCwgJ1Byb2Nlc3NpbmcgaW1hZ2UuLi4nKTtcblxuICAgIC8vIEdlbmVyYXRlIHByZXZpZXdcbiAgICBjb25zdCBwcmV2aWV3ID0gVVJMLmNyZWF0ZU9iamVjdFVSTChmaWxlKTtcblxuICAgIHVwZGF0ZVByb2dyZXNzKCd0aHVtYm5haWwnLCA2MCwgJ0dlbmVyYXRpbmcgdGh1bWJuYWlscy4uLicpO1xuXG4gICAgLy8gR2VuZXJhdGUgdGh1bWJuYWlsc1xuICAgIGNvbnN0IHRodW1ibmFpbHMgPSBhd2FpdCBnZW5lcmF0ZVRodW1ibmFpbHMoZmlsZSk7XG5cbiAgICB1cGRhdGVQcm9ncmVzcygnY29tcGxldGUnLCA4MCwgJ0ZpbmFsaXppbmcuLi4nKTtcblxuICAgIC8vIEF1dG8tcHJvY2VzcyBpZiBlbmFibGVkXG4gICAgbGV0IHByb2Nlc3NlZFJlc3VsdDogSW1hZ2VQcm9jZXNzaW5nUmVzdWx0IHwgdW5kZWZpbmVkO1xuICAgIGlmIChmaW5hbENvbmZpZy5hdXRvUHJvY2Vzcykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcHJvY2Vzc2VkUmVzdWx0ID0gYXdhaXQgcHJvY2Vzc0ltYWdlRm9yVHJ5b24oZmlsZSk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLndhcm4oJ0F1dG8tcHJvY2Vzc2luZyBmYWlsZWQ6JywgZXJyb3IpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHVwbG9hZGVkRmlsZTogVXBsb2FkZWRGaWxlID0ge1xuICAgICAgZmlsZSxcbiAgICAgIHByZXZpZXcsXG4gICAgICB0aHVtYm5haWxzLFxuICAgICAgbWV0YWRhdGE6IHZhbGlkYXRpb24ubWV0YWRhdGEsXG4gICAgICBwcm9jZXNzZWRSZXN1bHQsXG4gICAgICB1cGxvYWRJZCxcbiAgICAgIHVwbG9hZFRpbWU6IERhdGUubm93KClcbiAgICB9O1xuXG4gICAgdXBkYXRlUHJvZ3Jlc3MoJ2NvbXBsZXRlJywgMTAwLCAnVXBsb2FkIGNvbXBsZXRlJyk7XG4gICAgc2V0VXBsb2FkU3RhdGUoVXBsb2FkU3RhdGUuQ09NUExFVEUpO1xuXG4gICAgcmV0dXJuIHVwbG9hZGVkRmlsZTtcbiAgfSwgW2dlbmVyYXRlVXBsb2FkSWQsIHVwZGF0ZVByb2dyZXNzLCB2YWxpZGF0ZUZpbGUsIGdlbmVyYXRlVGh1bWJuYWlscywgZmluYWxDb25maWcuYXV0b1Byb2Nlc3NdKTtcblxuICAvLyBIYW5kbGUgZmlsZSB1cGxvYWRcbiAgY29uc3QgdXBsb2FkRmlsZSA9IHVzZUNhbGxiYWNrKGFzeW5jIChmaWxlOiBGaWxlKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldEVycm9yKG51bGwpO1xuICAgICAgY29uc3QgdXBsb2FkZWRGaWxlID0gYXdhaXQgcHJvY2Vzc0ZpbGUoZmlsZSk7XG4gICAgICBcbiAgICAgIHNldFVwbG9hZGVkRmlsZXMocHJldiA9PiBbLi4ucHJldiwgdXBsb2FkZWRGaWxlXSk7XG4gICAgICBzZXRDdXJyZW50RmlsZSh1cGxvYWRlZEZpbGUpO1xuICAgICAgb25VcGxvYWQ/Lih1cGxvYWRlZEZpbGUpO1xuICAgICAgXG4gICAgICByZXR1cm4gdXBsb2FkZWRGaWxlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBoYW5kbGVFcnJvcihlcnJvciwgJ3Byb2Nlc3NpbmcnKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfSwgW3Byb2Nlc3NGaWxlLCBvblVwbG9hZCwgaGFuZGxlRXJyb3JdKTtcblxuICAvLyBIYW5kbGUgbXVsdGlwbGUgZmlsZSB1cGxvYWRzXG4gIGNvbnN0IHVwbG9hZEZpbGVzID0gdXNlQ2FsbGJhY2soYXN5bmMgKGZpbGVzOiBGaWxlW10pID0+IHtcbiAgICBjb25zdCByZXN1bHRzOiBVcGxvYWRlZEZpbGVbXSA9IFtdO1xuICAgIFxuICAgIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdXBsb2FkRmlsZShmaWxlKTtcbiAgICAgICAgcmVzdWx0cy5wdXNoKHJlc3VsdCk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gdXBsb2FkIGZpbGU6JywgZmlsZS5uYW1lLCBlcnJvcik7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIHJldHVybiByZXN1bHRzO1xuICB9LCBbdXBsb2FkRmlsZV0pO1xuXG4gIC8vIFJlbW92ZSB1cGxvYWRlZCBmaWxlXG4gIGNvbnN0IHJlbW92ZUZpbGUgPSB1c2VDYWxsYmFjaygodXBsb2FkSWQ6IHN0cmluZykgPT4ge1xuICAgIHNldFVwbG9hZGVkRmlsZXMocHJldiA9PiB7XG4gICAgICBjb25zdCB1cGRhdGVkID0gcHJldi5maWx0ZXIoZiA9PiBmLnVwbG9hZElkICE9PSB1cGxvYWRJZCk7XG4gICAgICBjb25zdCByZW1vdmVkRmlsZSA9IHByZXYuZmluZChmID0+IGYudXBsb2FkSWQgPT09IHVwbG9hZElkKTtcbiAgICAgIFxuICAgICAgaWYgKHJlbW92ZWRGaWxlKSB7XG4gICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwocmVtb3ZlZEZpbGUucHJldmlldyk7XG4gICAgICAgIE9iamVjdC52YWx1ZXMocmVtb3ZlZEZpbGUudGh1bWJuYWlscykuZm9yRWFjaCh1cmwgPT4ge1xuICAgICAgICAgIGlmICh1cmwuc3RhcnRzV2l0aCgnYmxvYjonKSkge1xuICAgICAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiB1cGRhdGVkO1xuICAgIH0pO1xuICAgIFxuICAgIGlmIChjdXJyZW50RmlsZT8udXBsb2FkSWQgPT09IHVwbG9hZElkKSB7XG4gICAgICBzZXRDdXJyZW50RmlsZShudWxsKTtcbiAgICB9XG4gIH0sIFtjdXJyZW50RmlsZV0pO1xuXG4gIC8vIENsZWFyIGFsbCBmaWxlc1xuICBjb25zdCBjbGVhckZpbGVzID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHVwbG9hZGVkRmlsZXMuZm9yRWFjaChmaWxlID0+IHtcbiAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwoZmlsZS5wcmV2aWV3KTtcbiAgICAgIE9iamVjdC52YWx1ZXMoZmlsZS50aHVtYm5haWxzKS5mb3JFYWNoKHVybCA9PiB7XG4gICAgICAgIGlmICh1cmwuc3RhcnRzV2l0aCgnYmxvYjonKSkge1xuICAgICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgXG4gICAgc2V0VXBsb2FkZWRGaWxlcyhbXSk7XG4gICAgc2V0Q3VycmVudEZpbGUobnVsbCk7XG4gICAgc2V0RXJyb3IobnVsbCk7XG4gICAgc2V0VXBsb2FkU3RhdGUoVXBsb2FkU3RhdGUuSURMRSk7XG4gICAgc2V0UHJvZ3Jlc3MobnVsbCk7XG4gIH0sIFt1cGxvYWRlZEZpbGVzXSk7XG5cbiAgLy8gVHJpZ2dlciBmaWxlIHBpY2tlclxuICBjb25zdCBvcGVuRmlsZVBpY2tlciA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBmaWxlSW5wdXRSZWYuY3VycmVudD8uY2xpY2soKTtcbiAgfSwgW10pO1xuXG4gIC8vIEhhbmRsZSBmaWxlIGlucHV0IGNoYW5nZVxuICBjb25zdCBoYW5kbGVGaWxlSW5wdXRDaGFuZ2UgPSB1c2VDYWxsYmFjaygoZXZlbnQ6IFJlYWN0LkNoYW5nZUV2ZW50PEhUTUxJbnB1dEVsZW1lbnQ+KSA9PiB7XG4gICAgY29uc3QgZmlsZXMgPSBBcnJheS5mcm9tKGV2ZW50LnRhcmdldC5maWxlcyB8fCBbXSk7XG4gICAgaWYgKGZpbGVzLmxlbmd0aCA+IDApIHtcbiAgICAgIHVwbG9hZEZpbGVzKGZpbGVzKTtcbiAgICB9XG4gICAgLy8gUmVzZXQgaW5wdXQgdG8gYWxsb3cgc2FtZSBmaWxlIHNlbGVjdGlvblxuICAgIGV2ZW50LnRhcmdldC52YWx1ZSA9ICcnO1xuICB9LCBbdXBsb2FkRmlsZXNdKTtcblxuICAvLyBEcmFnIGFuZCBkcm9wIGhhbmRsZXJzXG4gIGNvbnN0IGhhbmRsZURyYWdFbnRlciA9IHVzZUNhbGxiYWNrKChldmVudDogUmVhY3QuRHJhZ0V2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICBcbiAgICBjb25zdCBmaWxlcyA9IEFycmF5LmZyb20oZXZlbnQuZGF0YVRyYW5zZmVyLmZpbGVzKTtcbiAgICBjb25zdCBoYXNWYWxpZEZpbGVzID0gZmlsZXMuc29tZShmaWxlID0+IGZpbmFsQ29uZmlnLmFsbG93ZWRUeXBlcy5pbmNsdWRlcyhmaWxlLnR5cGUpKTtcbiAgICBcbiAgICBzZXREcmFnRHJvcFN0YXRlKHtcbiAgICAgIGlzRHJhZ0FjdGl2ZTogdHJ1ZSxcbiAgICAgIGlzRHJhZ0FjY2VwdDogaGFzVmFsaWRGaWxlcyxcbiAgICAgIGlzRHJhZ1JlamVjdDogIWhhc1ZhbGlkRmlsZXMsXG4gICAgICBkcmFnZ2VkRmlsZXM6IGZpbGVzXG4gICAgfSk7XG4gIH0sIFtmaW5hbENvbmZpZy5hbGxvd2VkVHlwZXNdKTtcblxuICBjb25zdCBoYW5kbGVEcmFnTGVhdmUgPSB1c2VDYWxsYmFjaygoZXZlbnQ6IFJlYWN0LkRyYWdFdmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgXG4gICAgc2V0RHJhZ0Ryb3BTdGF0ZSh7XG4gICAgICBpc0RyYWdBY3RpdmU6IGZhbHNlLFxuICAgICAgaXNEcmFnQWNjZXB0OiBmYWxzZSxcbiAgICAgIGlzRHJhZ1JlamVjdDogZmFsc2UsXG4gICAgICBkcmFnZ2VkRmlsZXM6IFtdXG4gICAgfSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBoYW5kbGVEcmFnT3ZlciA9IHVzZUNhbGxiYWNrKChldmVudDogUmVhY3QuRHJhZ0V2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGhhbmRsZURyb3AgPSB1c2VDYWxsYmFjaygoZXZlbnQ6IFJlYWN0LkRyYWdFdmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgXG4gICAgY29uc3QgZmlsZXMgPSBBcnJheS5mcm9tKGV2ZW50LmRhdGFUcmFuc2Zlci5maWxlcykuZmlsdGVyKGZpbGUgPT4gXG4gICAgICBmaW5hbENvbmZpZy5hbGxvd2VkVHlwZXMuaW5jbHVkZXMoZmlsZS50eXBlKVxuICAgICk7XG4gICAgXG4gICAgc2V0RHJhZ0Ryb3BTdGF0ZSh7XG4gICAgICBpc0RyYWdBY3RpdmU6IGZhbHNlLFxuICAgICAgaXNEcmFnQWNjZXB0OiBmYWxzZSxcbiAgICAgIGlzRHJhZ1JlamVjdDogZmFsc2UsXG4gICAgICBkcmFnZ2VkRmlsZXM6IFtdXG4gICAgfSk7XG4gICAgXG4gICAgaWYgKGZpbGVzLmxlbmd0aCA+IDApIHtcbiAgICAgIHVwbG9hZEZpbGVzKGZpbGVzKTtcbiAgICB9XG4gIH0sIFtmaW5hbENvbmZpZy5hbGxvd2VkVHlwZXMsIHVwbG9hZEZpbGVzXSk7XG5cbiAgLy8gQ2xlYW51cCBvbiB1bm1vdW50XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHVwbG9hZGVkRmlsZXMuZm9yRWFjaChmaWxlID0+IHtcbiAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTChmaWxlLnByZXZpZXcpO1xuICAgICAgICBPYmplY3QudmFsdWVzKGZpbGUudGh1bWJuYWlscykuZm9yRWFjaCh1cmwgPT4ge1xuICAgICAgICAgIGlmICh1cmwuc3RhcnRzV2l0aCgnYmxvYjonKSkge1xuICAgICAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIHtcbiAgICAvLyBTdGF0ZVxuICAgIHVwbG9hZFN0YXRlLFxuICAgIHVwbG9hZGVkRmlsZXMsXG4gICAgY3VycmVudEZpbGUsXG4gICAgcHJvZ3Jlc3MsXG4gICAgZXJyb3IsXG4gICAgZHJhZ0Ryb3BTdGF0ZSxcbiAgICBcbiAgICAvLyBBY3Rpb25zXG4gICAgdXBsb2FkRmlsZSxcbiAgICB1cGxvYWRGaWxlcyxcbiAgICByZW1vdmVGaWxlLFxuICAgIGNsZWFyRmlsZXMsXG4gICAgb3BlbkZpbGVQaWNrZXIsXG4gICAgXG4gICAgLy8gRmlsZSBpbnB1dCBwcm9wc1xuICAgIGZpbGVJbnB1dFByb3BzOiB7XG4gICAgICByZWY6IGZpbGVJbnB1dFJlZixcbiAgICAgIHR5cGU6ICdmaWxlJyxcbiAgICAgIGFjY2VwdDogZmluYWxDb25maWcuYWxsb3dlZFR5cGVzLmpvaW4oJywnKSxcbiAgICAgIG11bHRpcGxlOiB0cnVlLFxuICAgICAgb25DaGFuZ2U6IGhhbmRsZUZpbGVJbnB1dENoYW5nZSxcbiAgICAgIHN0eWxlOiB7IGRpc3BsYXk6ICdub25lJyB9XG4gICAgfSxcbiAgICBcbiAgICAvLyBEcmFnIGFuZCBkcm9wIHByb3BzIChvbmx5IGlmIGVuYWJsZWQpXG4gICAgLi4uKGZpbmFsQ29uZmlnLmVuYWJsZURyYWdEcm9wID8ge1xuICAgICAgZHJhZ0Ryb3BQcm9wczoge1xuICAgICAgICBvbkRyYWdFbnRlcjogaGFuZGxlRHJhZ0VudGVyLFxuICAgICAgICBvbkRyYWdMZWF2ZTogaGFuZGxlRHJhZ0xlYXZlLFxuICAgICAgICBvbkRyYWdPdmVyOiBoYW5kbGVEcmFnT3ZlcixcbiAgICAgICAgb25Ecm9wOiBoYW5kbGVEcm9wXG4gICAgICB9XG4gICAgfSA6IHt9KSxcbiAgICBcbiAgICAvLyBVdGlsc1xuICAgIHZhbGlkYXRlRmlsZSxcbiAgICBnZW5lcmF0ZVRodW1ibmFpbHNcbiAgfTtcbn1cblxuLyoqXG4gKiBTaW1wbGlmaWVkIGhvb2sgZm9yIHNpbmdsZSBmaWxlIHVwbG9hZFxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlU2luZ2xlSW1hZ2VVcGxvYWQoXG4gIGNvbmZpZzogVXBsb2FkQ29uZmlnID0ge30sXG4gIG9uVXBsb2FkPzogKGZpbGU6IFVwbG9hZGVkRmlsZSkgPT4gdm9pZCxcbiAgb25FcnJvcj86IChlcnJvcjogVXBsb2FkRXJyb3IpID0+IHZvaWRcbikge1xuICBjb25zdCB1cGxvYWQgPSB1c2VJbWFnZVVwbG9hZChjb25maWcsIG9uVXBsb2FkLCBvbkVycm9yKTtcbiAgXG4gIGNvbnN0IHVwbG9hZFNpbmdsZUZpbGUgPSB1c2VDYWxsYmFjayhhc3luYyAoZmlsZTogRmlsZSkgPT4ge1xuICAgIHVwbG9hZC5jbGVhckZpbGVzKCk7IC8vIENsZWFyIHByZXZpb3VzIGZpbGVzXG4gICAgcmV0dXJuIHVwbG9hZC51cGxvYWRGaWxlKGZpbGUpO1xuICB9LCBbdXBsb2FkXSk7XG4gIFxuICByZXR1cm4ge1xuICAgIC4uLnVwbG9hZCxcbiAgICB1cGxvYWRGaWxlOiB1cGxvYWRTaW5nbGVGaWxlLFxuICAgIGZpbGU6IHVwbG9hZC5jdXJyZW50RmlsZVxuICB9O1xufVxuXG4vKipcbiAqIEhvb2sgZm9yIGRyYWcgYW5kIGRyb3Agb25seSB1cGxvYWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZURyb3B6b25lVXBsb2FkKFxuICBjb25maWc6IFVwbG9hZENvbmZpZyA9IHt9LFxuICBvblVwbG9hZD86IChmaWxlczogVXBsb2FkZWRGaWxlW10pID0+IHZvaWQsXG4gIG9uRXJyb3I/OiAoZXJyb3I6IFVwbG9hZEVycm9yKSA9PiB2b2lkXG4pIHtcbiAgY29uc3QgdXBsb2FkID0gdXNlSW1hZ2VVcGxvYWQoXG4gICAgeyAuLi5jb25maWcsIGVuYWJsZURyYWdEcm9wOiB0cnVlIH0sXG4gICAgdW5kZWZpbmVkLFxuICAgIG9uRXJyb3JcbiAgKTtcbiAgXG4gIC8vIEhhbmRsZSBiYXRjaCB1cGxvYWQgY29tcGxldGlvblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh1cGxvYWQudXBsb2FkZWRGaWxlcy5sZW5ndGggPiAwICYmIHVwbG9hZC51cGxvYWRTdGF0ZSA9PT0gVXBsb2FkU3RhdGUuQ09NUExFVEUpIHtcbiAgICAgIG9uVXBsb2FkPy4odXBsb2FkLnVwbG9hZGVkRmlsZXMpO1xuICAgIH1cbiAgfSwgW3VwbG9hZC51cGxvYWRlZEZpbGVzLCB1cGxvYWQudXBsb2FkU3RhdGUsIG9uVXBsb2FkXSk7XG4gIFxuICByZXR1cm4ge1xuICAgIGRyYWdEcm9wU3RhdGU6IHVwbG9hZC5kcmFnRHJvcFN0YXRlLFxuICAgIGRyYWdEcm9wUHJvcHM6IHVwbG9hZC5kcmFnRHJvcFByb3BzLFxuICAgIHVwbG9hZGVkRmlsZXM6IHVwbG9hZC51cGxvYWRlZEZpbGVzLFxuICAgIHByb2dyZXNzOiB1cGxvYWQucHJvZ3Jlc3MsXG4gICAgZXJyb3I6IHVwbG9hZC5lcnJvcixcbiAgICBjbGVhckZpbGVzOiB1cGxvYWQuY2xlYXJGaWxlcyxcbiAgICByZW1vdmVGaWxlOiB1cGxvYWQucmVtb3ZlRmlsZVxuICB9O1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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