{"version":3,"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/canvasUtils.ts"],"sourcesContent":["// Advanced Canvas API Utilities\n// Extended canvas operations for image processing and manipulation\n\nimport type { ManagedCanvas } from '../providers/CanvasProvider';\n\n/**\n * Blend modes for canvas operations\n */\nexport enum BlendMode {\n  Normal = 'source-over',\n  Multiply = 'multiply',\n  Screen = 'screen',\n  Overlay = 'overlay',\n  Darken = 'darken',\n  Lighten = 'lighten',\n  ColorDodge = 'color-dodge',\n  ColorBurn = 'color-burn',\n  HardLight = 'hard-light',\n  SoftLight = 'soft-light',\n  Difference = 'difference',\n  Exclusion = 'exclusion'\n}\n\n/**\n * Canvas transformation matrix\n */\nexport interface Transform {\n  a: number; // horizontal scaling\n  b: number; // horizontal skewing\n  c: number; // vertical skewing\n  d: number; // vertical scaling\n  e: number; // horizontal translation\n  f: number; // vertical translation\n}\n\n/**\n * Canvas drawing state snapshot\n */\nexport interface CanvasState {\n  imageData: ImageData;\n  transform: Transform;\n  fillStyle: string | CanvasGradient | CanvasPattern;\n  strokeStyle: string | CanvasGradient | CanvasPattern;\n  lineWidth: number;\n  lineCap: CanvasLineCap;\n  lineJoin: CanvasLineJoin;\n  globalAlpha: number;\n  globalCompositeOperation: GlobalCompositeOperation;\n  font: string;\n  textAlign: CanvasTextAlign;\n  textBaseline: CanvasTextBaseline;\n}\n\n/**\n * Advanced canvas operations class\n */\nexport class AdvancedCanvasOperations {\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n\n  constructor(managedCanvas: ManagedCanvas) {\n    this.canvas = managedCanvas.canvas;\n    this.ctx = managedCanvas.context;\n  }\n\n  /**\n   * Save current canvas state\n   */\n  saveState(): CanvasState {\n    const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    const transform = this.ctx.getTransform();\n    \n    return {\n      imageData,\n      transform: {\n        a: transform.a,\n        b: transform.b,\n        c: transform.c,\n        d: transform.d,\n        e: transform.e,\n        f: transform.f\n      },\n      fillStyle: this.ctx.fillStyle,\n      strokeStyle: this.ctx.strokeStyle,\n      lineWidth: this.ctx.lineWidth,\n      lineCap: this.ctx.lineCap,\n      lineJoin: this.ctx.lineJoin,\n      globalAlpha: this.ctx.globalAlpha,\n      globalCompositeOperation: this.ctx.globalCompositeOperation,\n      font: this.ctx.font,\n      textAlign: this.ctx.textAlign,\n      textBaseline: this.ctx.textBaseline\n    };\n  }\n\n  /**\n   * Restore canvas state\n   */\n  restoreState(state: CanvasState): void {\n    this.ctx.putImageData(state.imageData, 0, 0);\n    this.ctx.setTransform(state.transform.a, state.transform.b, state.transform.c, \n                         state.transform.d, state.transform.e, state.transform.f);\n    this.ctx.fillStyle = state.fillStyle;\n    this.ctx.strokeStyle = state.strokeStyle;\n    this.ctx.lineWidth = state.lineWidth;\n    this.ctx.lineCap = state.lineCap;\n    this.ctx.lineJoin = state.lineJoin;\n    this.ctx.globalAlpha = state.globalAlpha;\n    this.ctx.globalCompositeOperation = state.globalCompositeOperation;\n    this.ctx.font = state.font;\n    this.ctx.textAlign = state.textAlign;\n    this.ctx.textBaseline = state.textBaseline;\n  }\n\n  /**\n   * Apply image filter using pixel manipulation\n   */\n  applyPixelFilter(filterFn: (r: number, g: number, b: number, a: number) => [number, number, number, number]): void {\n    const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    const data = imageData.data;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const [r, g, b, a] = filterFn(data[i], data[i + 1], data[i + 2], data[i + 3]);\n      data[i] = Math.max(0, Math.min(255, r));\n      data[i + 1] = Math.max(0, Math.min(255, g));\n      data[i + 2] = Math.max(0, Math.min(255, b));\n      data[i + 3] = Math.max(0, Math.min(255, a));\n    }\n\n    this.ctx.putImageData(imageData, 0, 0);\n  }\n\n  /**\n   * Draw image with blend mode\n   */\n  drawImageWithBlendMode(\n    image: CanvasImageSource,\n    x: number,\n    y: number,\n    width?: number,\n    height?: number,\n    blendMode: BlendMode = BlendMode.Normal,\n    opacity: number = 1\n  ): void {\n    const originalCompositeOperation = this.ctx.globalCompositeOperation;\n    const originalAlpha = this.ctx.globalAlpha;\n\n    this.ctx.globalCompositeOperation = blendMode;\n    this.ctx.globalAlpha = opacity;\n\n    if (width !== undefined && height !== undefined) {\n      this.ctx.drawImage(image, x, y, width, height);\n    } else {\n      this.ctx.drawImage(image, x, y);\n    }\n\n    this.ctx.globalCompositeOperation = originalCompositeOperation;\n    this.ctx.globalAlpha = originalAlpha;\n  }\n\n  /**\n   * Create radial gradient\n   */\n  createRadialGradient(\n    x1: number, y1: number, r1: number,\n    x2: number, y2: number, r2: number,\n    stops: Array<{ offset: number; color: string }>\n  ): CanvasGradient {\n    const gradient = this.ctx.createRadialGradient(x1, y1, r1, x2, y2, r2);\n    stops.forEach(stop => {\n      gradient.addColorStop(stop.offset, stop.color);\n    });\n    return gradient;\n  }\n\n  /**\n   * Create linear gradient\n   */\n  createLinearGradient(\n    x1: number, y1: number, x2: number, y2: number,\n    stops: Array<{ offset: number; color: string }>\n  ): CanvasGradient {\n    const gradient = this.ctx.createLinearGradient(x1, y1, x2, y2);\n    stops.forEach(stop => {\n      gradient.addColorStop(stop.offset, stop.color);\n    });\n    return gradient;\n  }\n\n  /**\n   * Draw rounded rectangle\n   */\n  roundedRect(x: number, y: number, width: number, height: number, radius: number): void {\n    this.ctx.beginPath();\n    this.ctx.moveTo(x + radius, y);\n    this.ctx.lineTo(x + width - radius, y);\n    this.ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    this.ctx.lineTo(x + width, y + height - radius);\n    this.ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    this.ctx.lineTo(x + radius, y + height);\n    this.ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    this.ctx.lineTo(x, y + radius);\n    this.ctx.quadraticCurveTo(x, y, x + radius, y);\n    this.ctx.closePath();\n  }\n\n  /**\n   * Get pixel color at coordinates\n   */\n  getPixelColor(x: number, y: number): { r: number; g: number; b: number; a: number } {\n    const imageData = this.ctx.getImageData(x, y, 1, 1);\n    const data = imageData.data;\n    return {\n      r: data[0],\n      g: data[1],\n      b: data[2],\n      a: data[3]\n    };\n  }\n\n  /**\n   * Set pixel color at coordinates\n   */\n  setPixelColor(x: number, y: number, r: number, g: number, b: number, a: number = 255): void {\n    const imageData = this.ctx.createImageData(1, 1);\n    imageData.data[0] = r;\n    imageData.data[1] = g;\n    imageData.data[2] = b;\n    imageData.data[3] = a;\n    this.ctx.putImageData(imageData, x, y);\n  }\n\n  /**\n   * Crop canvas to specified rectangle\n   */\n  crop(x: number, y: number, width: number, height: number): void {\n    const imageData = this.ctx.getImageData(x, y, width, height);\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.ctx.putImageData(imageData, 0, 0);\n  }\n\n  /**\n   * Flip canvas horizontally or vertically\n   */\n  flip(horizontal: boolean = true, vertical: boolean = false): void {\n    const imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    \n    this.ctx.save();\n    this.ctx.scale(horizontal ? -1 : 1, vertical ? -1 : 1);\n    this.ctx.translate(horizontal ? -this.canvas.width : 0, vertical ? -this.canvas.height : 0);\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.putImageData(imageData, 0, 0);\n    this.ctx.restore();\n  }\n\n  /**\n   * Rotate canvas by angle in radians\n   */\n  rotate(angle: number, centerX?: number, centerY?: number): void {\n    const cx = centerX ?? this.canvas.width / 2;\n    const cy = centerY ?? this.canvas.height / 2;\n    \n    this.ctx.translate(cx, cy);\n    this.ctx.rotate(angle);\n    this.ctx.translate(-cx, -cy);\n  }\n}\n\n/**\n * Canvas performance utilities\n */\nexport class CanvasPerformanceUtils {\n  /**\n   * Measure canvas operation performance\n   */\n  static measureOperation<T>(operation: () => T, name: string = 'Canvas Operation'): T {\n    const start = performance.now();\n    const result = operation();\n    const end = performance.now();\n    \n    if (process.env.NODE_ENV === 'development') {\n      console.log(`${name} took ${(end - start).toFixed(2)}ms`);\n    }\n    \n    return result;\n  }\n\n  /**\n   * Debounce canvas operations\n   */\n  static debounce<T extends (...args: any[]) => any>(\n    func: T,\n    wait: number\n  ): (...args: Parameters<T>) => void {\n    let timeout: NodeJS.Timeout;\n    \n    return (...args: Parameters<T>) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func(...args), wait);\n    };\n  }\n\n  /**\n   * Throttle canvas operations\n   */\n  static throttle<T extends (...args: any[]) => any>(\n    func: T,\n    limit: number\n  ): (...args: Parameters<T>) => void {\n    let inThrottle: boolean;\n    \n    return (...args: Parameters<T>) => {\n      if (!inThrottle) {\n        func(...args);\n        inThrottle = true;\n        setTimeout(() => inThrottle = false, limit);\n      }\n    };\n  }\n\n  /**\n   * Check if canvas size is within memory limits\n   */\n  static isCanvasSizeSafe(width: number, height: number, maxPixels: number = 16777216): boolean {\n    return width * height <= maxPixels;\n  }\n\n  /**\n   * Optimize canvas for performance\n   */\n  static optimizeCanvas(canvas: HTMLCanvasElement): void {\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      // Disable image smoothing for better performance in some cases\n      ctx.imageSmoothingEnabled = false;\n      \n      // Set text baseline for consistent text rendering\n      ctx.textBaseline = 'top';\n    }\n  }\n}\n\n/**\n * Canvas animation utilities\n */\nexport class CanvasAnimationUtils {\n  private animationId: number | null = null;\n  private isRunning: boolean = false;\n\n  /**\n   * Start animation loop\n   */\n  startAnimation(callback: (timestamp: number) => void): void {\n    if (this.isRunning) return;\n    \n    this.isRunning = true;\n    \n    const animate = (timestamp: number) => {\n      if (!this.isRunning) return;\n      \n      callback(timestamp);\n      this.animationId = requestAnimationFrame(animate);\n    };\n    \n    this.animationId = requestAnimationFrame(animate);\n  }\n\n  /**\n   * Stop animation loop\n   */\n  stopAnimation(): void {\n    this.isRunning = false;\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n      this.animationId = null;\n    }\n  }\n\n  /**\n   * Animate property with easing\n   */\n  static animateProperty(\n    from: number,\n    to: number,\n    duration: number,\n    easing: (t: number) => number,\n    onUpdate: (value: number) => void,\n    onComplete?: () => void\n  ): () => void {\n    const startTime = performance.now();\n    let animationId: number;\n\n    const animate = (currentTime: number) => {\n      const elapsed = currentTime - startTime;\n      const progress = Math.min(elapsed / duration, 1);\n      const easedProgress = easing(progress);\n      const currentValue = from + (to - from) * easedProgress;\n\n      onUpdate(currentValue);\n\n      if (progress < 1) {\n        animationId = requestAnimationFrame(animate);\n      } else {\n        onComplete?.();\n      }\n    };\n\n    animationId = requestAnimationFrame(animate);\n\n    // Return cancel function\n    return () => cancelAnimationFrame(animationId);\n  }\n\n  /**\n   * Common easing functions\n   */\n  static easing = {\n    linear: (t: number) => t,\n    easeInQuad: (t: number) => t * t,\n    easeOutQuad: (t: number) => t * (2 - t),\n    easeInOutQuad: (t: number) => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t,\n    easeInCubic: (t: number) => t * t * t,\n    easeOutCubic: (t: number) => (--t) * t * t + 1,\n    easeInOutCubic: (t: number) => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n  };\n}\n\n/**\n * Factory function to create advanced canvas operations\n */\nexport function createAdvancedCanvasOperations(managedCanvas: ManagedCanvas): AdvancedCanvasOperations {\n  return new AdvancedCanvasOperations(managedCanvas);\n}\n\n/**\n * Factory function to create canvas animation utils\n */\nexport function createCanvasAnimationUtils(): CanvasAnimationUtils {\n  return new CanvasAnimationUtils();\n}"],"names":["AdvancedCanvasOperations","BlendMode","CanvasAnimationUtils","CanvasPerformanceUtils","createAdvancedCanvasOperations","createCanvasAnimationUtils","constructor","managedCanvas","canvas","ctx","context","saveState","imageData","getImageData","width","height","transform","getTransform","a","b","c","d","e","f","fillStyle","strokeStyle","lineWidth","lineCap","lineJoin","globalAlpha","globalCompositeOperation","font","textAlign","textBaseline","restoreState","state","putImageData","setTransform","applyPixelFilter","filterFn","data","i","length","r","g","Math","max","min","drawImageWithBlendMode","image","x","y","blendMode","opacity","originalCompositeOperation","originalAlpha","undefined","drawImage","createRadialGradient","x1","y1","r1","x2","y2","r2","stops","gradient","forEach","stop","addColorStop","offset","color","createLinearGradient","roundedRect","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","getPixelColor","setPixelColor","createImageData","crop","flip","horizontal","vertical","save","scale","translate","clearRect","restore","rotate","angle","centerX","centerY","cx","cy","measureOperation","operation","name","start","performance","now","result","end","process","env","NODE_ENV","console","log","toFixed","debounce","func","wait","timeout","args","clearTimeout","setTimeout","throttle","limit","inThrottle","isCanvasSizeSafe","maxPixels","optimizeCanvas","getContext","imageSmoothingEnabled","startAnimation","callback","isRunning","animate","timestamp","animationId","requestAnimationFrame","stopAnimation","cancelAnimationFrame","animateProperty","from","to","duration","easing","onUpdate","onComplete","startTime","currentTime","elapsed","progress","easedProgress","currentValue","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic"],"mappings":"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"}