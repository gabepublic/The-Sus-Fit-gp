35c99358bc0e1e43faf8415099f6857e
"use strict";

/* istanbul ignore next */
function cov_2898k1q2p() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/app/layout.tsx";
  var hash = "6ecf51c40d57efbc3b0c3dde6fa2d378a77eb537";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/app/layout.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 43
        }
      },
      "8": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 25
        }
      },
      "9": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 22,
          column: 61
        }
      },
      "10": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "11": {
        start: {
          line: 24,
          column: 33
        },
        end: {
          line: 30,
          column: 2
        }
      },
      "12": {
        start: {
          line: 31,
          column: 18
        },
        end: {
          line: 36,
          column: 2
        }
      },
      "13": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 43,
          column: 2
        }
      },
      "14": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "15": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 67,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 15,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "RootLayout",
        decl: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 48,
            column: 19
          }
        },
        loc: {
          start: {
            line: 48,
            column: 34
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 48
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/app/layout.tsx"],
      sourcesContent: ["import type { Metadata } from \"next\";\nimport {Montserrat_Alternates, Nabla, Fascinate} from \"next/font/google\";\nimport \"./globals.css\";\nimport { ToastProvider } from \"@/components/ToastProvider\";\nimport { ReactQueryProvider, FeatureFlagProvider, ErrorBoundary } from \"@/business-layer\";\n\nconst montserratAlternatesSans= Montserrat_Alternates({\n  variable: \"--font-Montserrat-Alternates-sans\",\n  weight: \"400\",\n  subsets: [\"latin\"],\n});\n\nconst nablaSans= Nabla({\n  variable: \"--font-Nabla-sans\",\n  subsets: [\"latin\"],\n});\n\nconst fascinateSans= Fascinate({\n  variable: \"--font-Fascinate-sans\",\n  weight: \"400\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"The Sus Fit\",\n  description: \"we be doin' the most - a Those People production\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${montserratAlternatesSans.variable} ${nablaSans.variable} ${fascinateSans.variable} antialiased`}\n      >\n        <ErrorBoundary>\n          <ReactQueryProvider>\n            <ErrorBoundary>\n              <FeatureFlagProvider>\n                <ErrorBoundary>\n                  <ToastProvider>\n                    {children}\n                  </ToastProvider>\n                </ErrorBoundary>\n              </FeatureFlagProvider>\n            </ErrorBoundary>\n          </ReactQueryProvider>\n        </ErrorBoundary>\n      </body>\n    </html>\n  );\n}\n\n"],
      names: ["RootLayout", "metadata", "montserratAlternatesSans", "Montserrat_Alternates", "variable", "weight", "subsets", "nablaSans", "Nabla", "fascinateSans", "Fascinate", "title", "description", "children", "html", "lang", "body", "className", "ErrorBoundary", "ReactQueryProvider", "FeatureFlagProvider", "ToastProvider"],
      mappings: ";;;;;;;;;;;IA4BA,OA0BC;eA1BuBA;;IALXC,QAAQ;eAARA;;;;wBAtByC;QAC/C;+BACuB;+BACyC;AAEvE,MAAMC,2BAA0BC,IAAAA,6BAAqB,EAAC;IACpDC,UAAU;IACVC,QAAQ;IACRC,SAAS;QAAC;KAAQ;AACpB;AAEA,MAAMC,YAAWC,IAAAA,aAAK,EAAC;IACrBJ,UAAU;IACVE,SAAS;QAAC;KAAQ;AACpB;AAEA,MAAMG,gBAAeC,IAAAA,iBAAS,EAAC;IAC7BN,UAAU;IACVC,QAAQ;IACRC,SAAS;QAAC;KAAQ;AACpB;AAEO,MAAML,WAAqB;IAChCU,OAAO;IACPC,aAAa;AACf;AAEe,SAASZ,WAAW,EACjCa,QAAQ,EAGR;IACA,qBACE,qBAACC;QAAKC,MAAK;kBACT,cAAA,qBAACC;YACCC,WAAW,GAAGf,yBAAyBE,QAAQ,CAAC,CAAC,EAAEG,UAAUH,QAAQ,CAAC,CAAC,EAAEK,cAAcL,QAAQ,CAAC,YAAY,CAAC;sBAE7G,cAAA,qBAACc,4BAAa;0BACZ,cAAA,qBAACC,iCAAkB;8BACjB,cAAA,qBAACD,4BAAa;kCACZ,cAAA,qBAACE,kCAAmB;sCAClB,cAAA,qBAACF,4BAAa;0CACZ,cAAA,qBAACG,4BAAa;8CACXR;;;;;;;;;AAUrB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6ecf51c40d57efbc3b0c3dde6fa2d378a77eb537"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2898k1q2p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2898k1q2p();
cov_2898k1q2p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2898k1q2p().f[0]++;
  cov_2898k1q2p().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2898k1q2p().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2898k1q2p().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_2898k1q2p().f[1]++;
    cov_2898k1q2p().s[4]++;
    return RootLayout;
  },
  metadata: function () {
    /* istanbul ignore next */
    cov_2898k1q2p().f[2]++;
    cov_2898k1q2p().s[5]++;
    return metadata;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2898k1q2p().s[6]++, require("react/jsx-runtime"));
const _google =
/* istanbul ignore next */
(cov_2898k1q2p().s[7]++, require("next/font/google"));
/* istanbul ignore next */
cov_2898k1q2p().s[8]++;
require("./globals.css");
const _ToastProvider =
/* istanbul ignore next */
(cov_2898k1q2p().s[9]++, require("../components/ToastProvider"));
const _businesslayer =
/* istanbul ignore next */
(cov_2898k1q2p().s[10]++, require("../business-layer"));
const montserratAlternatesSans =
/* istanbul ignore next */
(cov_2898k1q2p().s[11]++, (0, _google.Montserrat_Alternates)({
  variable: "--font-Montserrat-Alternates-sans",
  weight: "400",
  subsets: ["latin"]
}));
const nablaSans =
/* istanbul ignore next */
(cov_2898k1q2p().s[12]++, (0, _google.Nabla)({
  variable: "--font-Nabla-sans",
  subsets: ["latin"]
}));
const fascinateSans =
/* istanbul ignore next */
(cov_2898k1q2p().s[13]++, (0, _google.Fascinate)({
  variable: "--font-Fascinate-sans",
  weight: "400",
  subsets: ["latin"]
}));
const metadata =
/* istanbul ignore next */
(cov_2898k1q2p().s[14]++, {
  title: "The Sus Fit",
  description: "we be doin' the most - a Those People production"
});
function RootLayout({
  children
}) {
  /* istanbul ignore next */
  cov_2898k1q2p().f[3]++;
  cov_2898k1q2p().s[15]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("html", {
    lang: "en",
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("body", {
      className: `${montserratAlternatesSans.variable} ${nablaSans.variable} ${fascinateSans.variable} antialiased`,
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_businesslayer.ErrorBoundary, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_businesslayer.ReactQueryProvider, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_businesslayer.ErrorBoundary, {
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_businesslayer.FeatureFlagProvider, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_businesslayer.ErrorBoundary, {
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_ToastProvider.ToastProvider, {
                  children: children
                })
              })
            })
          })
        })
      })
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWZhdWx0IiwiY292XzI4OThrMXEycCIsImYiLCJzIiwiUm9vdExheW91dCIsIm1ldGFkYXRhIiwibW9udHNlcnJhdEFsdGVybmF0ZXNTYW5zIiwiX2dvb2dsZSIsIk1vbnRzZXJyYXRfQWx0ZXJuYXRlcyIsInZhcmlhYmxlIiwid2VpZ2h0Iiwic3Vic2V0cyIsIm5hYmxhU2FucyIsIk5hYmxhIiwiZmFzY2luYXRlU2FucyIsIkZhc2NpbmF0ZSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJjaGlsZHJlbiIsIl9qc3hydW50aW1lIiwianN4IiwibGFuZyIsImNsYXNzTmFtZSIsIl9idXNpbmVzc2xheWVyIiwiRXJyb3JCb3VuZGFyeSIsIlJlYWN0UXVlcnlQcm92aWRlciIsIkZlYXR1cmVGbGFnUHJvdmlkZXIiLCJfVG9hc3RQcm92aWRlciIsIlRvYXN0UHJvdmlkZXIiXSwic291cmNlcyI6WyIvVXNlcnMvd2lsbHN0cmVldGVyL1dlYnN0b3JtUHJvamVjdHMvdmliZS1jb2RpbmcvdGhvc2UtcGVvcGxlL1RoZS1TdXMtRml0LWdwL3NyYy9hcHAvbGF5b3V0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IE1ldGFkYXRhIH0gZnJvbSBcIm5leHRcIjtcbmltcG9ydCB7TW9udHNlcnJhdF9BbHRlcm5hdGVzLCBOYWJsYSwgRmFzY2luYXRlfSBmcm9tIFwibmV4dC9mb250L2dvb2dsZVwiO1xuaW1wb3J0IFwiLi9nbG9iYWxzLmNzc1wiO1xuaW1wb3J0IHsgVG9hc3RQcm92aWRlciB9IGZyb20gXCJAL2NvbXBvbmVudHMvVG9hc3RQcm92aWRlclwiO1xuaW1wb3J0IHsgUmVhY3RRdWVyeVByb3ZpZGVyLCBGZWF0dXJlRmxhZ1Byb3ZpZGVyLCBFcnJvckJvdW5kYXJ5IH0gZnJvbSBcIkAvYnVzaW5lc3MtbGF5ZXJcIjtcblxuY29uc3QgbW9udHNlcnJhdEFsdGVybmF0ZXNTYW5zPSBNb250c2VycmF0X0FsdGVybmF0ZXMoe1xuICB2YXJpYWJsZTogXCItLWZvbnQtTW9udHNlcnJhdC1BbHRlcm5hdGVzLXNhbnNcIixcbiAgd2VpZ2h0OiBcIjQwMFwiLFxuICBzdWJzZXRzOiBbXCJsYXRpblwiXSxcbn0pO1xuXG5jb25zdCBuYWJsYVNhbnM9IE5hYmxhKHtcbiAgdmFyaWFibGU6IFwiLS1mb250LU5hYmxhLXNhbnNcIixcbiAgc3Vic2V0czogW1wibGF0aW5cIl0sXG59KTtcblxuY29uc3QgZmFzY2luYXRlU2Fucz0gRmFzY2luYXRlKHtcbiAgdmFyaWFibGU6IFwiLS1mb250LUZhc2NpbmF0ZS1zYW5zXCIsXG4gIHdlaWdodDogXCI0MDBcIixcbiAgc3Vic2V0czogW1wibGF0aW5cIl0sXG59KTtcblxuZXhwb3J0IGNvbnN0IG1ldGFkYXRhOiBNZXRhZGF0YSA9IHtcbiAgdGl0bGU6IFwiVGhlIFN1cyBGaXRcIixcbiAgZGVzY3JpcHRpb246IFwid2UgYmUgZG9pbicgdGhlIG1vc3QgLSBhIFRob3NlIFBlb3BsZSBwcm9kdWN0aW9uXCIsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TGF5b3V0KHtcbiAgY2hpbGRyZW4sXG59OiBSZWFkb25seTx7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59Pikge1xuICByZXR1cm4gKFxuICAgIDxodG1sIGxhbmc9XCJlblwiPlxuICAgICAgPGJvZHlcbiAgICAgICAgY2xhc3NOYW1lPXtgJHttb250c2VycmF0QWx0ZXJuYXRlc1NhbnMudmFyaWFibGV9ICR7bmFibGFTYW5zLnZhcmlhYmxlfSAke2Zhc2NpbmF0ZVNhbnMudmFyaWFibGV9IGFudGlhbGlhc2VkYH1cbiAgICAgID5cbiAgICAgICAgPEVycm9yQm91bmRhcnk+XG4gICAgICAgICAgPFJlYWN0UXVlcnlQcm92aWRlcj5cbiAgICAgICAgICAgIDxFcnJvckJvdW5kYXJ5PlxuICAgICAgICAgICAgICA8RmVhdHVyZUZsYWdQcm92aWRlcj5cbiAgICAgICAgICAgICAgICA8RXJyb3JCb3VuZGFyeT5cbiAgICAgICAgICAgICAgICAgIDxUb2FzdFByb3ZpZGVyPlxuICAgICAgICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICAgICAgICA8L1RvYXN0UHJvdmlkZXI+XG4gICAgICAgICAgICAgICAgPC9FcnJvckJvdW5kYXJ5PlxuICAgICAgICAgICAgICA8L0ZlYXR1cmVGbGFnUHJvdmlkZXI+XG4gICAgICAgICAgICA8L0Vycm9yQm91bmRhcnk+XG4gICAgICAgICAgPC9SZWFjdFF1ZXJ5UHJvdmlkZXI+XG4gICAgICAgIDwvRXJyb3JCb3VuZGFyeT5cbiAgICAgIDwvYm9keT5cbiAgICA8L2h0bWw+XG4gICk7XG59XG5cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQTRCQUEsT0EwQkMsV0FBQUEsQ0FBQTtJQUFBO0lBQUFDLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0ExQnVCQyxVQUFBOztFQUxYQyxRQUFRLFdBQUFBLENBQUE7SUFBQTtJQUFBSixhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQVJFLFFBQUE7Ozs7Ozs7O2lDQXRCeUM7QUFBQTtBQUFBSixhQUFBLEdBQUFFLENBQUE7UUFDL0M7OztpQ0FDdUI7OztrQ0FDeUM7QUFFdkUsTUFBTUcsd0JBQUE7QUFBQTtBQUFBLENBQUFMLGFBQUEsR0FBQUUsQ0FBQSxRQUEwQixJQUFBSSxPQUFBLENBQUFDLHFCQUFxQixFQUFDO0VBQ3BEQyxRQUFBLEVBQVU7RUFDVkMsTUFBQSxFQUFRO0VBQ1JDLE9BQUEsRUFBUyxDQUFDO0FBQ1o7QUFFQSxNQUFNQyxTQUFBO0FBQUE7QUFBQSxDQUFBWCxhQUFBLEdBQUFFLENBQUEsUUFBVyxJQUFBSSxPQUFBLENBQUFNLEtBQUssRUFBQztFQUNyQkosUUFBQSxFQUFVO0VBQ1ZFLE9BQUEsRUFBUyxDQUFDO0FBQ1o7QUFFQSxNQUFNRyxhQUFBO0FBQUE7QUFBQSxDQUFBYixhQUFBLEdBQUFFLENBQUEsUUFBZSxJQUFBSSxPQUFBLENBQUFRLFNBQVMsRUFBQztFQUM3Qk4sUUFBQSxFQUFVO0VBQ1ZDLE1BQUEsRUFBUTtFQUNSQyxPQUFBLEVBQVMsQ0FBQztBQUNaO0FBRU8sTUFBTU4sUUFBQTtBQUFBO0FBQUEsQ0FBQUosYUFBQSxHQUFBRSxDQUFBLFFBQXFCO0VBQ2hDYSxLQUFBLEVBQU87RUFDUEMsV0FBQSxFQUFhO0FBQ2Y7QUFFZSxTQUFTYixXQUFXO0VBQ2pDYztBQUFRLENBR1I7RUFBQTtFQUFBakIsYUFBQSxHQUFBQyxDQUFBO0VBQUFELGFBQUEsR0FBQUUsQ0FBQTtFQUNBLG9CQUNFLElBQUFnQixXQUFBLENBQUFDLEdBQUEsRUFBQztJQUFLQyxJQUFBLEVBQUs7Y0FDVCxpQkFBQUYsV0FBQSxDQUFBQyxHQUFBLEVBQUM7TUFDQ0UsU0FBQSxFQUFXLEdBQUdoQix3QkFBQSxDQUF5QkcsUUFBUSxJQUFJRyxTQUFBLENBQVVILFFBQVEsSUFBSUssYUFBQSxDQUFjTCxRQUFRLGNBQWM7Z0JBRTdHLGlCQUFBVSxXQUFBLENBQUFDLEdBQUEsRUFBQ0csY0FBQSxDQUFBQyxhQUFhO2tCQUNaLGlCQUFBTCxXQUFBLENBQUFDLEdBQUEsRUFBQ0csY0FBQSxDQUFBRSxrQkFBa0I7b0JBQ2pCLGlCQUFBTixXQUFBLENBQUFDLEdBQUEsRUFBQ0csY0FBQSxDQUFBQyxhQUFhO3NCQUNaLGlCQUFBTCxXQUFBLENBQUFDLEdBQUEsRUFBQ0csY0FBQSxDQUFBRyxtQkFBbUI7d0JBQ2xCLGlCQUFBUCxXQUFBLENBQUFDLEdBQUEsRUFBQ0csY0FBQSxDQUFBQyxhQUFhOzBCQUNaLGlCQUFBTCxXQUFBLENBQUFDLEdBQUEsRUFBQ08sY0FBQSxDQUFBQyxhQUFhOzRCQUNYVjs7Ozs7Ozs7O0FBVXJCIiwiaWdub3JlTGlzdCI6W119