dabc8153f7e696aa35897441eca8f13d
// Try-On History React Query Hooks
// Provides React Query integration for history management with caching and synchronization
"use strict";

/* istanbul ignore next */
function cov_ehs10y23g() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useTryonHistory.ts";
  var hash = "4f7d625a05cbfd791f05f64e21d0fbc2945ab7a2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useTryonHistory.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 31
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 36
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 36
        }
      },
      "8": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 52
        }
      },
      "9": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 31
        }
      },
      "10": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 29,
          column: 71
        }
      },
      "11": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "12": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "13": {
        start: {
          line: 39,
          column: 17
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "14": {
        start: {
          line: 44,
          column: 15
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "15": {
        start: {
          line: 51,
          column: 27
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "16": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 65,
          column: 57
        }
      },
      "17": {
        start: {
          line: 67,
          column: 25
        },
        end: {
          line: 72,
          column: 6
        }
      },
      "18": {
        start: {
          line: 67,
          column: 50
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "19": {
        start: {
          line: 74,
          column: 31
        },
        end: {
          line: 80,
          column: 6
        }
      },
      "20": {
        start: {
          line: 74,
          column: 56
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "21": {
        start: {
          line: 82,
          column: 25
        },
        end: {
          line: 90,
          column: 6
        }
      },
      "22": {
        start: {
          line: 84,
          column: 21
        },
        end: {
          line: 84,
          column: 79
        }
      },
      "23": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 113,
          column: 6
        }
      },
      "24": {
        start: {
          line: 93,
          column: 31
        },
        end: {
          line: 93,
          column: 76
        }
      },
      "25": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 15
        }
      },
      "26": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "27": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 45
        }
      },
      "28": {
        start: {
          line: 101,
          column: 30
        },
        end: {
          line: 101,
          column: 45
        }
      },
      "29": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 110,
          column: 18
        }
      },
      "30": {
        start: {
          line: 115,
          column: 32
        },
        end: {
          line: 137,
          column: 6
        }
      },
      "31": {
        start: {
          line: 116,
          column: 39
        },
        end: {
          line: 116,
          column: 91
        }
      },
      "32": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "33": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 124,
          column: 15
        }
      },
      "34": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 94
        }
      },
      "35": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "36": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 45
        }
      },
      "37": {
        start: {
          line: 129,
          column: 30
        },
        end: {
          line: 129,
          column: 45
        }
      },
      "38": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 134,
          column: 18
        }
      },
      "39": {
        start: {
          line: 132,
          column: 58
        },
        end: {
          line: 132,
          column: 109
        }
      },
      "40": {
        start: {
          line: 139,
          column: 32
        },
        end: {
          line: 162,
          column: 6
        }
      },
      "41": {
        start: {
          line: 140,
          column: 26
        },
        end: {
          line: 140,
          column: 69
        }
      },
      "42": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 160,
          column: 13
        }
      },
      "43": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 146,
          column: 19
        }
      },
      "44": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 149,
          column: 19
        }
      },
      "45": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 159,
          column: 19
        }
      },
      "46": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 49
        }
      },
      "47": {
        start: {
          line: 152,
          column: 34
        },
        end: {
          line: 152,
          column: 49
        }
      },
      "48": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 158,
          column: 22
        }
      },
      "49": {
        start: {
          line: 155,
          column: 65
        },
        end: {
          line: 155,
          column: 87
        }
      },
      "50": {
        start: {
          line: 164,
          column: 29
        },
        end: {
          line: 183,
          column: 6
        }
      },
      "51": {
        start: {
          line: 165,
          column: 24
        },
        end: {
          line: 165,
          column: 62
        }
      },
      "52": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "53": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 171,
          column: 19
        }
      },
      "54": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 180,
          column: 19
        }
      },
      "55": {
        start: {
          line: 185,
          column: 21
        },
        end: {
          line: 189,
          column: 6
        }
      },
      "56": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 53
        }
      },
      "57": {
        start: {
          line: 190,
          column: 24
        },
        end: {
          line: 197,
          column: 6
        }
      },
      "58": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 194,
          column: 11
        }
      },
      "59": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 202,
          column: 6
        }
      },
      "60": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 50
        }
      },
      "61": {
        start: {
          line: 203,
          column: 21
        },
        end: {
          line: 235,
          column: 6
        }
      },
      "62": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 75
        }
      },
      "63": {
        start: {
          line: 204,
          column: 68
        },
        end: {
          line: 204,
          column: 75
        }
      },
      "64": {
        start: {
          line: 205,
          column: 25
        },
        end: {
          line: 205,
          column: 58
        }
      },
      "65": {
        start: {
          line: 206,
          column: 32
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "66": {
        start: {
          line: 211,
          column: 29
        },
        end: {
          line: 215,
          column: 10
        }
      },
      "67": {
        start: {
          line: 213,
          column: 25
        },
        end: {
          line: 213,
          column: 80
        }
      },
      "68": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 227,
          column: 11
        }
      },
      "69": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 46
        }
      },
      "70": {
        start: {
          line: 218,
          column: 26
        },
        end: {
          line: 218,
          column: 46
        }
      },
      "71": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 226,
          column: 14
        }
      },
      "72": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 243,
          column: 6
        }
      },
      "73": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 11
        }
      },
      "74": {
        start: {
          line: 244,
          column: 21
        },
        end: {
          line: 248,
          column: 6
        }
      },
      "75": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 45
        }
      },
      "76": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 274,
          column: 7
        }
      },
      "77": {
        start: {
          line: 250,
          column: 36
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "78": {
        start: {
          line: 277,
          column: 25
        },
        end: {
          line: 284,
          column: 6
        }
      },
      "79": {
        start: {
          line: 277,
          column: 50
        },
        end: {
          line: 282,
          column: 9
        }
      },
      "80": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 292,
          column: 7
        }
      },
      "81": {
        start: {
          line: 287,
          column: 21
        },
        end: {
          line: 287,
          column: 61
        }
      },
      "82": {
        start: {
          line: 295,
          column: 25
        },
        end: {
          line: 302,
          column: 6
        }
      },
      "83": {
        start: {
          line: 295,
          column: 50
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "84": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 309,
          column: 7
        }
      },
      "85": {
        start: {
          line: 305,
          column: 21
        },
        end: {
          line: 305,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 16
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 14,
            column: 25
          }
        },
        loc: {
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 21
          },
          end: {
            line: 17,
            column: 22
          }
        },
        loc: {
          start: {
            line: 17,
            column: 32
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 27
          }
        },
        loc: {
          start: {
            line: 20,
            column: 37
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 23,
            column: 27
          }
        },
        loc: {
          start: {
            line: 23,
            column: 37
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 13
          },
          end: {
            line: 34,
            column: 14
          }
        },
        loc: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 38,
            column: 9
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 11
          },
          end: {
            line: 39,
            column: 12
          }
        },
        loc: {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 43,
            column: 9
          }
        },
        line: 39
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 44,
            column: 11
          },
          end: {
            line: 44,
            column: 12
          }
        },
        loc: {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 47,
            column: 9
          }
        },
        line: 44
      },
      "8": {
        name: "useTryonHistory",
        decl: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 24
          }
        },
        loc: {
          start: {
            line: 64,
            column: 57
          },
          end: {
            line: 275,
            column: 1
          }
        },
        line: 64
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 67,
            column: 45
          },
          end: {
            line: 67,
            column: 46
          }
        },
        loc: {
          start: {
            line: 67,
            column: 50
          },
          end: {
            line: 70,
            column: 9
          }
        },
        line: 67
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 74,
            column: 51
          },
          end: {
            line: 74,
            column: 52
          }
        },
        loc: {
          start: {
            line: 74,
            column: 56
          },
          end: {
            line: 77,
            column: 9
          }
        },
        line: 74
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 84,
            column: 17
          },
          end: {
            line: 84,
            column: 18
          }
        },
        loc: {
          start: {
            line: 84,
            column: 21
          },
          end: {
            line: 84,
            column: 79
          }
        },
        line: 84
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 93,
            column: 21
          }
        },
        loc: {
          start: {
            line: 93,
            column: 31
          },
          end: {
            line: 93,
            column: 76
          }
        },
        line: 93
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 94,
            column: 19
          },
          end: {
            line: 94,
            column: 20
          }
        },
        loc: {
          start: {
            line: 94,
            column: 31
          },
          end: {
            line: 112,
            column: 9
          }
        },
        line: 94
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 100,
            column: 85
          },
          end: {
            line: 100,
            column: 86
          }
        },
        loc: {
          start: {
            line: 100,
            column: 96
          },
          end: {
            line: 111,
            column: 13
          }
        },
        line: 100
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 21
          }
        },
        loc: {
          start: {
            line: 116,
            column: 39
          },
          end: {
            line: 116,
            column: 91
          }
        },
        line: 116
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 117,
            column: 19
          },
          end: {
            line: 117,
            column: 20
          }
        },
        loc: {
          start: {
            line: 117,
            column: 35
          },
          end: {
            line: 136,
            column: 9
          }
        },
        line: 117
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 128,
            column: 85
          },
          end: {
            line: 128,
            column: 86
          }
        },
        loc: {
          start: {
            line: 128,
            column: 96
          },
          end: {
            line: 135,
            column: 13
          }
        },
        line: 128
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 132,
            column: 49
          },
          end: {
            line: 132,
            column: 50
          }
        },
        loc: {
          start: {
            line: 132,
            column: 58
          },
          end: {
            line: 132,
            column: 109
          }
        },
        line: 132
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 140,
            column: 20
          },
          end: {
            line: 140,
            column: 21
          }
        },
        loc: {
          start: {
            line: 140,
            column: 26
          },
          end: {
            line: 140,
            column: 69
          }
        },
        line: 140
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 141,
            column: 19
          },
          end: {
            line: 141,
            column: 20
          }
        },
        loc: {
          start: {
            line: 141,
            column: 41
          },
          end: {
            line: 161,
            column: 9
          }
        },
        line: 141
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 151,
            column: 89
          },
          end: {
            line: 151,
            column: 90
          }
        },
        loc: {
          start: {
            line: 151,
            column: 100
          },
          end: {
            line: 159,
            column: 17
          }
        },
        line: 151
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 155,
            column: 56
          },
          end: {
            line: 155,
            column: 57
          }
        },
        loc: {
          start: {
            line: 155,
            column: 65
          },
          end: {
            line: 155,
            column: 87
          }
        },
        line: 155
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 165,
            column: 21
          }
        },
        loc: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 62
          }
        },
        line: 165
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 166,
            column: 20
          }
        },
        loc: {
          start: {
            line: 166,
            column: 30
          },
          end: {
            line: 182,
            column: 9
          }
        },
        line: 166
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 185,
            column: 45
          },
          end: {
            line: 185,
            column: 46
          }
        },
        loc: {
          start: {
            line: 185,
            column: 62
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 185
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 190,
            column: 48
          },
          end: {
            line: 190,
            column: 49
          }
        },
        loc: {
          start: {
            line: 190,
            column: 69
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 190
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 198,
            column: 48
          },
          end: {
            line: 198,
            column: 49
          }
        },
        loc: {
          start: {
            line: 198,
            column: 60
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 198
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 203,
            column: 45
          },
          end: {
            line: 203,
            column: 46
          }
        },
        loc: {
          start: {
            line: 203,
            column: 55
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 203
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 213,
            column: 21
          },
          end: {
            line: 213,
            column: 22
          }
        },
        loc: {
          start: {
            line: 213,
            column: 25
          },
          end: {
            line: 213,
            column: 80
          }
        },
        line: 213
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 217,
            column: 81
          },
          end: {
            line: 217,
            column: 82
          }
        },
        loc: {
          start: {
            line: 217,
            column: 92
          },
          end: {
            line: 227,
            column: 9
          }
        },
        line: 217
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 236,
            column: 44
          },
          end: {
            line: 236,
            column: 45
          }
        },
        loc: {
          start: {
            line: 236,
            column: 54
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 236
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 244,
            column: 45
          },
          end: {
            line: 244,
            column: 46
          }
        },
        loc: {
          start: {
            line: 244,
            column: 55
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 244
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 250,
            column: 31
          },
          end: {
            line: 250,
            column: 32
          }
        },
        loc: {
          start: {
            line: 250,
            column: 36
          },
          end: {
            line: 263,
            column: 9
          }
        },
        line: 250
      },
      "34": {
        name: "useTryonHistoryEntry",
        decl: {
          start: {
            line: 276,
            column: 9
          },
          end: {
            line: 276,
            column: 29
          }
        },
        loc: {
          start: {
            line: 276,
            column: 47
          },
          end: {
            line: 293,
            column: 1
          }
        },
        line: 276
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 277,
            column: 45
          },
          end: {
            line: 277,
            column: 46
          }
        },
        loc: {
          start: {
            line: 277,
            column: 50
          },
          end: {
            line: 282,
            column: 9
          }
        },
        line: 277
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 287,
            column: 17
          },
          end: {
            line: 287,
            column: 18
          }
        },
        loc: {
          start: {
            line: 287,
            column: 21
          },
          end: {
            line: 287,
            column: 61
          }
        },
        line: 287
      },
      "37": {
        name: "useTryonHistoryStats",
        decl: {
          start: {
            line: 294,
            column: 9
          },
          end: {
            line: 294,
            column: 29
          }
        },
        loc: {
          start: {
            line: 294,
            column: 43
          },
          end: {
            line: 310,
            column: 1
          }
        },
        line: 294
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 295,
            column: 45
          },
          end: {
            line: 295,
            column: 46
          }
        },
        loc: {
          start: {
            line: 295,
            column: 50
          },
          end: {
            line: 300,
            column: 9
          }
        },
        line: 295
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 305,
            column: 17
          },
          end: {
            line: 305,
            column: 18
          }
        },
        loc: {
          start: {
            line: 305,
            column: 21
          },
          end: {
            line: 305,
            column: 66
          }
        },
        line: 305
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 64,
            column: 25
          },
          end: {
            line: 64,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 40
          },
          end: {
            line: 64,
            column: 42
          }
        }],
        line: 64
      },
      "1": {
        loc: {
          start: {
            line: 64,
            column: 44
          },
          end: {
            line: 64,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 53
          },
          end: {
            line: 64,
            column: 55
          }
        }],
        line: 64
      },
      "2": {
        loc: {
          start: {
            line: 87,
            column: 25
          },
          end: {
            line: 87,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 54
          },
          end: {
            line: 87,
            column: 82
          }
        }, {
          start: {
            line: 87,
            column: 85
          },
          end: {
            line: 87,
            column: 90
          }
        }],
        line: 87
      },
      "3": {
        loc: {
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 101,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 101,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "4": {
        loc: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "5": {
        loc: {
          start: {
            line: 132,
            column: 58
          },
          end: {
            line: 132,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 89
          },
          end: {
            line: 132,
            column: 101
          }
        }, {
          start: {
            line: 132,
            column: 104
          },
          end: {
            line: 132,
            column: 109
          }
        }],
        line: 132
      },
      "6": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "7": {
        loc: {
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 152,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 20
          },
          end: {
            line: 152,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "8": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "9": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 204,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 204,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "10": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 39
          }
        }, {
          start: {
            line: 204,
            column: 43
          },
          end: {
            line: 204,
            column: 66
          }
        }],
        line: 204
      },
      "11": {
        loc: {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 218,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 218,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "12": {
        loc: {
          start: {
            line: 251,
            column: 21
          },
          end: {
            line: 251,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 21
          },
          end: {
            line: 251,
            column: 47
          }
        }, {
          start: {
            line: 251,
            column: 51
          },
          end: {
            line: 251,
            column: 53
          }
        }],
        line: 251
      },
      "13": {
        loc: {
          start: {
            line: 252,
            column: 23
          },
          end: {
            line: 252,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 23
          },
          end: {
            line: 252,
            column: 45
          }
        }, {
          start: {
            line: 252,
            column: 49
          },
          end: {
            line: 252,
            column: 72
          }
        }],
        line: 252
      },
      "14": {
        loc: {
          start: {
            line: 254,
            column: 21
          },
          end: {
            line: 254,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 21
          },
          end: {
            line: 254,
            column: 47
          }
        }, {
          start: {
            line: 254,
            column: 51
          },
          end: {
            line: 254,
            column: 56
          }
        }],
        line: 254
      },
      "15": {
        loc: {
          start: {
            line: 255,
            column: 25
          },
          end: {
            line: 255,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 25
          },
          end: {
            line: 255,
            column: 55
          }
        }, {
          start: {
            line: 255,
            column: 59
          },
          end: {
            line: 255,
            column: 60
          }
        }],
        line: 255
      },
      "16": {
        loc: {
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 256,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 256,
            column: 53
          }
        }, {
          start: {
            line: 256,
            column: 57
          },
          end: {
            line: 256,
            column: 58
          }
        }],
        line: 256
      },
      "17": {
        loc: {
          start: {
            line: 276,
            column: 34
          },
          end: {
            line: 276,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 276,
            column: 43
          },
          end: {
            line: 276,
            column: 45
          }
        }],
        line: 276
      },
      "18": {
        loc: {
          start: {
            line: 294,
            column: 30
          },
          end: {
            line: 294,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 294,
            column: 39
          },
          end: {
            line: 294,
            column: 41
          }
        }],
        line: 294
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useTryonHistory.ts"],
      sourcesContent: ["// Try-On History React Query Hooks\n// Provides React Query integration for history management with caching and synchronization\n\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useCallback, useMemo } from 'react';\nimport type {\n  TryonHistoryEntry,\n  TryonHistoryCollection,\n  TryonHistoryQueryOptions,\n  CreateTryonHistoryEntryOptions,\n  UseTryonHistoryReturn,\n  TryonHistoryService\n} from '../types/history.types';\nimport { defaultHistoryService } from '../services/tryonHistoryService';\n\n/**\n * Query keys for history-related React Query operations\n */\nexport const HISTORY_QUERY_KEYS = {\n  all: ['tryon-history'] as const,\n  entries: (options?: TryonHistoryQueryOptions) => ['tryon-history', 'entries', options] as const,\n  entry: (id: string) => ['tryon-history', 'entry', id] as const,\n  stats: () => ['tryon-history', 'stats'] as const\n} as const;\n\n/**\n * Configuration for history hooks\n */\ninterface UseTryonHistoryConfig {\n  /** History service instance to use */\n  historyService?: TryonHistoryService;\n  /** Default query options */\n  defaultQueryOptions?: TryonHistoryQueryOptions;\n  /** Enable automatic refetch */\n  enableRefetch?: boolean;\n  /** Refetch interval in milliseconds */\n  refetchInterval?: number;\n  /** Stale time in milliseconds */\n  staleTime?: number;\n  /** Cache time in milliseconds */\n  cacheTime?: number;\n}\n\n/**\n * Default hook configuration\n */\nconst DEFAULT_CONFIG: Required<UseTryonHistoryConfig> = {\n  historyService: defaultHistoryService,\n  defaultQueryOptions: {\n    page: 0,\n    pageSize: 20,\n    sortBy: 'timestamp',\n    sortDirection: 'desc'\n  },\n  enableRefetch: false,\n  refetchInterval: 0,\n  staleTime: 5 * 60 * 1000, // 5 minutes\n  cacheTime: 10 * 60 * 1000 // 10 minutes\n};\n\n/**\n * Hook for managing try-on history with React Query\n */\nexport function useTryonHistory(\n  queryOptions: TryonHistoryQueryOptions = {},\n  config: UseTryonHistoryConfig = {}\n): UseTryonHistoryReturn {\n  const queryClient = useQueryClient();\n  \n  // Merge configuration with defaults\n  const mergedConfig = useMemo(() => ({\n    ...DEFAULT_CONFIG,\n    ...config\n  }), [config]);\n\n  // Merge query options with defaults\n  const mergedQueryOptions = useMemo(() => ({\n    ...mergedConfig.defaultQueryOptions,\n    ...queryOptions\n  }), [mergedConfig.defaultQueryOptions, queryOptions]);\n\n  // Query for history entries\n  const historyQuery = useQuery<TryonHistoryCollection>({\n    queryKey: HISTORY_QUERY_KEYS.entries(mergedQueryOptions),\n    queryFn: () => mergedConfig.historyService.getEntries(mergedQueryOptions),\n    staleTime: mergedConfig.staleTime,\n    gcTime: mergedConfig.cacheTime,\n    refetchInterval: mergedConfig.enableRefetch ? mergedConfig.refetchInterval : false,\n    refetchOnWindowFocus: false,\n    retry: 2\n  });\n\n  // Mutation for adding new entries\n  const addEntryMutation = useMutation({\n    mutationFn: (options: CreateTryonHistoryEntryOptions) => \n      mergedConfig.historyService.addEntry(options),\n    onSuccess: (newEntry) => {\n      // Invalidate and refetch history entries\n      queryClient.invalidateQueries({ queryKey: HISTORY_QUERY_KEYS.all });\n      \n      // Optimistically update the cache\n      queryClient.setQueryData<TryonHistoryCollection>(\n        HISTORY_QUERY_KEYS.entries(mergedQueryOptions),\n        (oldData) => {\n          if (!oldData) return oldData;\n          \n          return {\n            ...oldData,\n            entries: [newEntry, ...oldData.entries],\n            totalCount: oldData.totalCount + 1,\n            lastUpdated: new Date().toISOString()\n          };\n        }\n      );\n    }\n  });\n\n  // Mutation for updating entries\n  const updateEntryMutation = useMutation({\n    mutationFn: ({ id, updates }: { id: string; updates: Partial<TryonHistoryEntry> }) =>\n      mergedConfig.historyService.updateEntry(id, updates),\n    onSuccess: (updatedEntry) => {\n      // Invalidate related queries\n      queryClient.invalidateQueries({ queryKey: HISTORY_QUERY_KEYS.entry(updatedEntry.id) });\n      queryClient.invalidateQueries({ queryKey: HISTORY_QUERY_KEYS.entries() });\n      \n      // Update the entry in all relevant caches\n      queryClient.setQueryData(HISTORY_QUERY_KEYS.entry(updatedEntry.id), updatedEntry);\n      \n      // Update the entry in the entries list cache\n      queryClient.setQueryData<TryonHistoryCollection>(\n        HISTORY_QUERY_KEYS.entries(mergedQueryOptions),\n        (oldData) => {\n          if (!oldData) return oldData;\n          \n          return {\n            ...oldData,\n            entries: oldData.entries.map(entry => \n              entry.id === updatedEntry.id ? updatedEntry : entry\n            ),\n            lastUpdated: new Date().toISOString()\n          };\n        }\n      );\n    }\n  });\n\n  // Mutation for deleting entries\n  const deleteEntryMutation = useMutation({\n    mutationFn: (id: string) => mergedConfig.historyService.deleteEntry(id),\n    onSuccess: (success, deletedId) => {\n      if (success) {\n        // Remove from all caches\n        queryClient.removeQueries({ queryKey: HISTORY_QUERY_KEYS.entry(deletedId) });\n        queryClient.invalidateQueries({ queryKey: HISTORY_QUERY_KEYS.entries() });\n        \n        // Optimistically remove from entries list\n        queryClient.setQueryData<TryonHistoryCollection>(\n          HISTORY_QUERY_KEYS.entries(mergedQueryOptions),\n          (oldData) => {\n            if (!oldData) return oldData;\n            \n            return {\n              ...oldData,\n              entries: oldData.entries.filter(entry => entry.id !== deletedId),\n              totalCount: Math.max(0, oldData.totalCount - 1),\n              lastUpdated: new Date().toISOString()\n            };\n          }\n        );\n      }\n    }\n  });\n\n  // Mutation for clearing all entries\n  const clearAllMutation = useMutation({\n    mutationFn: () => mergedConfig.historyService.clearAll(),\n    onSuccess: (success) => {\n      if (success) {\n        // Clear all history-related caches\n        queryClient.removeQueries({ queryKey: HISTORY_QUERY_KEYS.all });\n        \n        // Set empty state\n        queryClient.setQueryData<TryonHistoryCollection>(\n          HISTORY_QUERY_KEYS.entries(mergedQueryOptions),\n          {\n            entries: [],\n            totalCount: 0,\n            currentPage: 0,\n            pageSize: mergedQueryOptions.pageSize!,\n            hasMore: false,\n            lastUpdated: new Date().toISOString()\n          }\n        );\n      }\n    }\n  });\n\n  // Memoized callback functions\n  const addEntry = useCallback(async (options: CreateTryonHistoryEntryOptions) => {\n    return addEntryMutation.mutateAsync(options);\n  }, [addEntryMutation]);\n\n  const updateEntry = useCallback(async (id: string, updates: Partial<TryonHistoryEntry>) => {\n    await updateEntryMutation.mutateAsync({ id, updates });\n  }, [updateEntryMutation]);\n\n  const deleteEntry = useCallback(async (id: string) => {\n    await deleteEntryMutation.mutateAsync(id);\n  }, [deleteEntryMutation]);\n\n  const loadMore = useCallback(async () => {\n    if (!historyQuery.data?.hasMore || historyQuery.isFetching) return;\n    \n    const nextPage = historyQuery.data.currentPage + 1;\n    const nextPageOptions = { ...mergedQueryOptions, page: nextPage };\n    \n    // Fetch next page\n    const nextPageData = await queryClient.fetchQuery({\n      queryKey: HISTORY_QUERY_KEYS.entries(nextPageOptions),\n      queryFn: () => mergedConfig.historyService.getEntries(nextPageOptions),\n      staleTime: mergedConfig.staleTime\n    });\n    \n    // Merge with current data\n    queryClient.setQueryData<TryonHistoryCollection>(\n      HISTORY_QUERY_KEYS.entries(mergedQueryOptions),\n      (oldData) => {\n        if (!oldData) return nextPageData;\n        \n        return {\n          ...nextPageData,\n          entries: [...oldData.entries, ...nextPageData.entries],\n          currentPage: nextPage\n        };\n      }\n    );\n  }, [historyQuery.data, historyQuery.isFetching, mergedQueryOptions, queryClient, mergedConfig.historyService, mergedConfig.staleTime]);\n\n  const refresh = useCallback(async () => {\n    await queryClient.invalidateQueries({ queryKey: HISTORY_QUERY_KEYS.entries(mergedQueryOptions) });\n  }, [queryClient, mergedQueryOptions]);\n\n  const clearAll = useCallback(async () => {\n    await clearAllMutation.mutateAsync();\n  }, [clearAllMutation]);\n\n  // Return hook interface\n  return useMemo<UseTryonHistoryReturn>(() => ({\n    entries: historyQuery.data?.entries || [],\n    isLoading: historyQuery.isLoading || historyQuery.isFetching,\n    error: historyQuery.error,\n    hasMore: historyQuery.data?.hasMore || false,\n    currentPage: historyQuery.data?.currentPage || 0,\n    totalCount: historyQuery.data?.totalCount || 0,\n    addEntry,\n    updateEntry,\n    deleteEntry,\n    loadMore,\n    refresh,\n    clearAll\n  }), [\n    historyQuery.data,\n    historyQuery.isLoading,\n    historyQuery.isFetching,\n    historyQuery.error,\n    addEntry,\n    updateEntry,\n    deleteEntry,\n    loadMore,\n    refresh,\n    clearAll\n  ]);\n}\n\n/**\n * Hook for getting a single history entry by ID\n */\nexport function useTryonHistoryEntry(\n  id: string,\n  config: Pick<UseTryonHistoryConfig, 'historyService' | 'staleTime' | 'cacheTime'> = {}\n) {\n  const mergedConfig = useMemo(() => ({\n    historyService: defaultHistoryService,\n    staleTime: 5 * 60 * 1000,\n    cacheTime: 10 * 60 * 1000,\n    ...config\n  }), [config]);\n\n  return useQuery({\n    queryKey: HISTORY_QUERY_KEYS.entry(id),\n    queryFn: () => mergedConfig.historyService.getEntry(id),\n    staleTime: mergedConfig.staleTime,\n    gcTime: mergedConfig.cacheTime,\n    enabled: Boolean(id),\n    retry: 2\n  });\n}\n\n/**\n * Hook for getting storage statistics\n */\nexport function useTryonHistoryStats(\n  config: Pick<UseTryonHistoryConfig, 'historyService' | 'staleTime' | 'cacheTime'> = {}\n) {\n  const mergedConfig = useMemo(() => ({\n    historyService: defaultHistoryService,\n    staleTime: 60 * 1000, // 1 minute\n    cacheTime: 5 * 60 * 1000, // 5 minutes\n    ...config\n  }), [config]);\n\n  return useQuery({\n    queryKey: HISTORY_QUERY_KEYS.stats(),\n    queryFn: () => mergedConfig.historyService.getStorageStats(),\n    staleTime: mergedConfig.staleTime,\n    gcTime: mergedConfig.cacheTime,\n    refetchOnWindowFocus: false\n  });\n}"],
      names: ["HISTORY_QUERY_KEYS", "useTryonHistory", "useTryonHistoryEntry", "useTryonHistoryStats", "all", "entries", "options", "entry", "id", "stats", "DEFAULT_CONFIG", "historyService", "defaultHistoryService", "defaultQueryOptions", "page", "pageSize", "sortBy", "sortDirection", "enableRefetch", "refetchInterval", "staleTime", "cacheTime", "queryOptions", "config", "queryClient", "useQueryClient", "mergedConfig", "useMemo", "mergedQueryOptions", "historyQuery", "useQuery", "queryKey", "queryFn", "getEntries", "gcTime", "refetchOnWindowFocus", "retry", "addEntryMutation", "useMutation", "mutationFn", "addEntry", "onSuccess", "newEntry", "invalidateQueries", "setQueryData", "oldData", "totalCount", "lastUpdated", "Date", "toISOString", "updateEntryMutation", "updates", "updateEntry", "updatedEntry", "map", "deleteEntryMutation", "deleteEntry", "success", "deletedId", "removeQueries", "filter", "Math", "max", "clearAllMutation", "clearAll", "currentPage", "hasMore", "useCallback", "mutateAsync", "loadMore", "data", "isFetching", "nextPage", "nextPageOptions", "nextPageData", "fetchQuery", "refresh", "isLoading", "error", "getEntry", "enabled", "Boolean", "getStorageStats"],
      mappings: "AAAA,mCAAmC;AACnC,2FAA2F;;;;;;;;;;;;IAiB9EA,kBAAkB;eAAlBA;;IA6CGC,eAAe;eAAfA;;IAuNAC,oBAAoB;eAApBA;;IAwBAC,oBAAoB;eAApBA;;;4BA3SsC;uBACjB;qCASC;AAK/B,MAAMH,qBAAqB;IAChCI,KAAK;QAAC;KAAgB;IACtBC,SAAS,CAACC,UAAuC;YAAC;YAAiB;YAAWA;SAAQ;IACtFC,OAAO,CAACC,KAAe;YAAC;YAAiB;YAASA;SAAG;IACrDC,OAAO,IAAM;YAAC;YAAiB;SAAQ;AACzC;AAoBA;;CAEC,GACD,MAAMC,iBAAkD;IACtDC,gBAAgBC,0CAAqB;IACrCC,qBAAqB;QACnBC,MAAM;QACNC,UAAU;QACVC,QAAQ;QACRC,eAAe;IACjB;IACAC,eAAe;IACfC,iBAAiB;IACjBC,WAAW,IAAI,KAAK;IACpBC,WAAW,KAAK,KAAK,KAAK,aAAa;AACzC;AAKO,SAASpB,gBACdqB,eAAyC,CAAC,CAAC,EAC3CC,SAAgC,CAAC,CAAC;IAElC,MAAMC,cAAcC,IAAAA,0BAAc;IAElC,oCAAoC;IACpC,MAAMC,eAAeC,IAAAA,cAAO,EAAC,IAAO,CAAA;YAClC,GAAGjB,cAAc;YACjB,GAAGa,MAAM;QACX,CAAA,GAAI;QAACA;KAAO;IAEZ,oCAAoC;IACpC,MAAMK,qBAAqBD,IAAAA,cAAO,EAAC,IAAO,CAAA;YACxC,GAAGD,aAAab,mBAAmB;YACnC,GAAGS,YAAY;QACjB,CAAA,GAAI;QAACI,aAAab,mBAAmB;QAAES;KAAa;IAEpD,4BAA4B;IAC5B,MAAMO,eAAeC,IAAAA,oBAAQ,EAAyB;QACpDC,UAAU/B,mBAAmBK,OAAO,CAACuB;QACrCI,SAAS,IAAMN,aAAaf,cAAc,CAACsB,UAAU,CAACL;QACtDR,WAAWM,aAAaN,SAAS;QACjCc,QAAQR,aAAaL,SAAS;QAC9BF,iBAAiBO,aAAaR,aAAa,GAAGQ,aAAaP,eAAe,GAAG;QAC7EgB,sBAAsB;QACtBC,OAAO;IACT;IAEA,kCAAkC;IAClC,MAAMC,mBAAmBC,IAAAA,uBAAW,EAAC;QACnCC,YAAY,CAACjC,UACXoB,aAAaf,cAAc,CAAC6B,QAAQ,CAAClC;QACvCmC,WAAW,CAACC;YACV,yCAAyC;YACzClB,YAAYmB,iBAAiB,CAAC;gBAAEZ,UAAU/B,mBAAmBI,GAAG;YAAC;YAEjE,kCAAkC;YAClCoB,YAAYoB,YAAY,CACtB5C,mBAAmBK,OAAO,CAACuB,qBAC3B,CAACiB;gBACC,IAAI,CAACA,SAAS,OAAOA;gBAErB,OAAO;oBACL,GAAGA,OAAO;oBACVxC,SAAS;wBAACqC;2BAAaG,QAAQxC,OAAO;qBAAC;oBACvCyC,YAAYD,QAAQC,UAAU,GAAG;oBACjCC,aAAa,IAAIC,OAAOC,WAAW;gBACrC;YACF;QAEJ;IACF;IAEA,gCAAgC;IAChC,MAAMC,sBAAsBZ,IAAAA,uBAAW,EAAC;QACtCC,YAAY,CAAC,EAAE/B,EAAE,EAAE2C,OAAO,EAAuD,GAC/EzB,aAAaf,cAAc,CAACyC,WAAW,CAAC5C,IAAI2C;QAC9CV,WAAW,CAACY;YACV,6BAA6B;YAC7B7B,YAAYmB,iBAAiB,CAAC;gBAAEZ,UAAU/B,mBAAmBO,KAAK,CAAC8C,aAAa7C,EAAE;YAAE;YACpFgB,YAAYmB,iBAAiB,CAAC;gBAAEZ,UAAU/B,mBAAmBK,OAAO;YAAG;YAEvE,0CAA0C;YAC1CmB,YAAYoB,YAAY,CAAC5C,mBAAmBO,KAAK,CAAC8C,aAAa7C,EAAE,GAAG6C;YAEpE,6CAA6C;YAC7C7B,YAAYoB,YAAY,CACtB5C,mBAAmBK,OAAO,CAACuB,qBAC3B,CAACiB;gBACC,IAAI,CAACA,SAAS,OAAOA;gBAErB,OAAO;oBACL,GAAGA,OAAO;oBACVxC,SAASwC,QAAQxC,OAAO,CAACiD,GAAG,CAAC/C,CAAAA,QAC3BA,MAAMC,EAAE,KAAK6C,aAAa7C,EAAE,GAAG6C,eAAe9C;oBAEhDwC,aAAa,IAAIC,OAAOC,WAAW;gBACrC;YACF;QAEJ;IACF;IAEA,gCAAgC;IAChC,MAAMM,sBAAsBjB,IAAAA,uBAAW,EAAC;QACtCC,YAAY,CAAC/B,KAAekB,aAAaf,cAAc,CAAC6C,WAAW,CAAChD;QACpEiC,WAAW,CAACgB,SAASC;YACnB,IAAID,SAAS;gBACX,yBAAyB;gBACzBjC,YAAYmC,aAAa,CAAC;oBAAE5B,UAAU/B,mBAAmBO,KAAK,CAACmD;gBAAW;gBAC1ElC,YAAYmB,iBAAiB,CAAC;oBAAEZ,UAAU/B,mBAAmBK,OAAO;gBAAG;gBAEvE,0CAA0C;gBAC1CmB,YAAYoB,YAAY,CACtB5C,mBAAmBK,OAAO,CAACuB,qBAC3B,CAACiB;oBACC,IAAI,CAACA,SAAS,OAAOA;oBAErB,OAAO;wBACL,GAAGA,OAAO;wBACVxC,SAASwC,QAAQxC,OAAO,CAACuD,MAAM,CAACrD,CAAAA,QAASA,MAAMC,EAAE,KAAKkD;wBACtDZ,YAAYe,KAAKC,GAAG,CAAC,GAAGjB,QAAQC,UAAU,GAAG;wBAC7CC,aAAa,IAAIC,OAAOC,WAAW;oBACrC;gBACF;YAEJ;QACF;IACF;IAEA,oCAAoC;IACpC,MAAMc,mBAAmBzB,IAAAA,uBAAW,EAAC;QACnCC,YAAY,IAAMb,aAAaf,cAAc,CAACqD,QAAQ;QACtDvB,WAAW,CAACgB;YACV,IAAIA,SAAS;gBACX,mCAAmC;gBACnCjC,YAAYmC,aAAa,CAAC;oBAAE5B,UAAU/B,mBAAmBI,GAAG;gBAAC;gBAE7D,kBAAkB;gBAClBoB,YAAYoB,YAAY,CACtB5C,mBAAmBK,OAAO,CAACuB,qBAC3B;oBACEvB,SAAS,EAAE;oBACXyC,YAAY;oBACZmB,aAAa;oBACblD,UAAUa,mBAAmBb,QAAQ;oBACrCmD,SAAS;oBACTnB,aAAa,IAAIC,OAAOC,WAAW;gBACrC;YAEJ;QACF;IACF;IAEA,8BAA8B;IAC9B,MAAMT,WAAW2B,IAAAA,kBAAW,EAAC,OAAO7D;QAClC,OAAO+B,iBAAiB+B,WAAW,CAAC9D;IACtC,GAAG;QAAC+B;KAAiB;IAErB,MAAMe,cAAce,IAAAA,kBAAW,EAAC,OAAO3D,IAAY2C;QACjD,MAAMD,oBAAoBkB,WAAW,CAAC;YAAE5D;YAAI2C;QAAQ;IACtD,GAAG;QAACD;KAAoB;IAExB,MAAMM,cAAcW,IAAAA,kBAAW,EAAC,OAAO3D;QACrC,MAAM+C,oBAAoBa,WAAW,CAAC5D;IACxC,GAAG;QAAC+C;KAAoB;IAExB,MAAMc,WAAWF,IAAAA,kBAAW,EAAC;QAC3B,IAAI,CAACtC,aAAayC,IAAI,EAAEJ,WAAWrC,aAAa0C,UAAU,EAAE;QAE5D,MAAMC,WAAW3C,aAAayC,IAAI,CAACL,WAAW,GAAG;QACjD,MAAMQ,kBAAkB;YAAE,GAAG7C,kBAAkB;YAAEd,MAAM0D;QAAS;QAEhE,kBAAkB;QAClB,MAAME,eAAe,MAAMlD,YAAYmD,UAAU,CAAC;YAChD5C,UAAU/B,mBAAmBK,OAAO,CAACoE;YACrCzC,SAAS,IAAMN,aAAaf,cAAc,CAACsB,UAAU,CAACwC;YACtDrD,WAAWM,aAAaN,SAAS;QACnC;QAEA,0BAA0B;QAC1BI,YAAYoB,YAAY,CACtB5C,mBAAmBK,OAAO,CAACuB,qBAC3B,CAACiB;YACC,IAAI,CAACA,SAAS,OAAO6B;YAErB,OAAO;gBACL,GAAGA,YAAY;gBACfrE,SAAS;uBAAIwC,QAAQxC,OAAO;uBAAKqE,aAAarE,OAAO;iBAAC;gBACtD4D,aAAaO;YACf;QACF;IAEJ,GAAG;QAAC3C,aAAayC,IAAI;QAAEzC,aAAa0C,UAAU;QAAE3C;QAAoBJ;QAAaE,aAAaf,cAAc;QAAEe,aAAaN,SAAS;KAAC;IAErI,MAAMwD,UAAUT,IAAAA,kBAAW,EAAC;QAC1B,MAAM3C,YAAYmB,iBAAiB,CAAC;YAAEZ,UAAU/B,mBAAmBK,OAAO,CAACuB;QAAoB;IACjG,GAAG;QAACJ;QAAaI;KAAmB;IAEpC,MAAMoC,WAAWG,IAAAA,kBAAW,EAAC;QAC3B,MAAMJ,iBAAiBK,WAAW;IACpC,GAAG;QAACL;KAAiB;IAErB,wBAAwB;IACxB,OAAOpC,IAAAA,cAAO,EAAwB,IAAO,CAAA;YAC3CtB,SAASwB,aAAayC,IAAI,EAAEjE,WAAW,EAAE;YACzCwE,WAAWhD,aAAagD,SAAS,IAAIhD,aAAa0C,UAAU;YAC5DO,OAAOjD,aAAaiD,KAAK;YACzBZ,SAASrC,aAAayC,IAAI,EAAEJ,WAAW;YACvCD,aAAapC,aAAayC,IAAI,EAAEL,eAAe;YAC/CnB,YAAYjB,aAAayC,IAAI,EAAExB,cAAc;YAC7CN;YACAY;YACAI;YACAa;YACAO;YACAZ;QACF,CAAA,GAAI;QACFnC,aAAayC,IAAI;QACjBzC,aAAagD,SAAS;QACtBhD,aAAa0C,UAAU;QACvB1C,aAAaiD,KAAK;QAClBtC;QACAY;QACAI;QACAa;QACAO;QACAZ;KACD;AACH;AAKO,SAAS9D,qBACdM,EAAU,EACVe,SAAoF,CAAC,CAAC;IAEtF,MAAMG,eAAeC,IAAAA,cAAO,EAAC,IAAO,CAAA;YAClChB,gBAAgBC,0CAAqB;YACrCQ,WAAW,IAAI,KAAK;YACpBC,WAAW,KAAK,KAAK;YACrB,GAAGE,MAAM;QACX,CAAA,GAAI;QAACA;KAAO;IAEZ,OAAOO,IAAAA,oBAAQ,EAAC;QACdC,UAAU/B,mBAAmBO,KAAK,CAACC;QACnCwB,SAAS,IAAMN,aAAaf,cAAc,CAACoE,QAAQ,CAACvE;QACpDY,WAAWM,aAAaN,SAAS;QACjCc,QAAQR,aAAaL,SAAS;QAC9B2D,SAASC,QAAQzE;QACjB4B,OAAO;IACT;AACF;AAKO,SAASjC,qBACdoB,SAAoF,CAAC,CAAC;IAEtF,MAAMG,eAAeC,IAAAA,cAAO,EAAC,IAAO,CAAA;YAClChB,gBAAgBC,0CAAqB;YACrCQ,WAAW,KAAK;YAChBC,WAAW,IAAI,KAAK;YACpB,GAAGE,MAAM;QACX,CAAA,GAAI;QAACA;KAAO;IAEZ,OAAOO,IAAAA,oBAAQ,EAAC;QACdC,UAAU/B,mBAAmBS,KAAK;QAClCuB,SAAS,IAAMN,aAAaf,cAAc,CAACuE,eAAe;QAC1D9D,WAAWM,aAAaN,SAAS;QACjCc,QAAQR,aAAaL,SAAS;QAC9Bc,sBAAsB;IACxB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4f7d625a05cbfd791f05f64e21d0fbc2945ab7a2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ehs10y23g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ehs10y23g();
cov_ehs10y23g().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_ehs10y23g().f[0]++;
  cov_ehs10y23g().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_ehs10y23g().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_ehs10y23g().s[3]++;
_export(exports, {
  HISTORY_QUERY_KEYS: function () {
    /* istanbul ignore next */
    cov_ehs10y23g().f[1]++;
    cov_ehs10y23g().s[4]++;
    return HISTORY_QUERY_KEYS;
  },
  useTryonHistory: function () {
    /* istanbul ignore next */
    cov_ehs10y23g().f[2]++;
    cov_ehs10y23g().s[5]++;
    return useTryonHistory;
  },
  useTryonHistoryEntry: function () {
    /* istanbul ignore next */
    cov_ehs10y23g().f[3]++;
    cov_ehs10y23g().s[6]++;
    return useTryonHistoryEntry;
  },
  useTryonHistoryStats: function () {
    /* istanbul ignore next */
    cov_ehs10y23g().f[4]++;
    cov_ehs10y23g().s[7]++;
    return useTryonHistoryStats;
  }
});
const _reactquery =
/* istanbul ignore next */
(cov_ehs10y23g().s[8]++, require("@tanstack/react-query"));
const _react =
/* istanbul ignore next */
(cov_ehs10y23g().s[9]++, require("react"));
const _tryonHistoryService =
/* istanbul ignore next */
(cov_ehs10y23g().s[10]++, require("../services/tryonHistoryService"));
const HISTORY_QUERY_KEYS =
/* istanbul ignore next */
(cov_ehs10y23g().s[11]++, {
  all: ['tryon-history'],
  entries: options => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[5]++;
    cov_ehs10y23g().s[12]++;
    return ['tryon-history', 'entries', options];
  },
  entry: id => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[6]++;
    cov_ehs10y23g().s[13]++;
    return ['tryon-history', 'entry', id];
  },
  stats: () => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[7]++;
    cov_ehs10y23g().s[14]++;
    return ['tryon-history', 'stats'];
  }
});
/**
 * Default hook configuration
 */
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_ehs10y23g().s[15]++, {
  historyService: _tryonHistoryService.defaultHistoryService,
  defaultQueryOptions: {
    page: 0,
    pageSize: 20,
    sortBy: 'timestamp',
    sortDirection: 'desc'
  },
  enableRefetch: false,
  refetchInterval: 0,
  staleTime: 5 * 60 * 1000,
  cacheTime: 10 * 60 * 1000 // 10 minutes
});
function useTryonHistory(queryOptions =
/* istanbul ignore next */
(cov_ehs10y23g().b[0][0]++, {}), config =
/* istanbul ignore next */
(cov_ehs10y23g().b[1][0]++, {})) {
  /* istanbul ignore next */
  cov_ehs10y23g().f[8]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[16]++, (0, _reactquery.useQueryClient)());
  // Merge configuration with defaults
  const mergedConfig =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[17]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[9]++;
    cov_ehs10y23g().s[18]++;
    return {
      ...DEFAULT_CONFIG,
      ...config
    };
  }, [config]));
  // Merge query options with defaults
  const mergedQueryOptions =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[19]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[10]++;
    cov_ehs10y23g().s[20]++;
    return {
      ...mergedConfig.defaultQueryOptions,
      ...queryOptions
    };
  }, [mergedConfig.defaultQueryOptions, queryOptions]));
  // Query for history entries
  const historyQuery =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[21]++, (0, _reactquery.useQuery)({
    queryKey: HISTORY_QUERY_KEYS.entries(mergedQueryOptions),
    queryFn: () => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[11]++;
      cov_ehs10y23g().s[22]++;
      return mergedConfig.historyService.getEntries(mergedQueryOptions);
    },
    staleTime: mergedConfig.staleTime,
    gcTime: mergedConfig.cacheTime,
    refetchInterval: mergedConfig.enableRefetch ?
    /* istanbul ignore next */
    (cov_ehs10y23g().b[2][0]++, mergedConfig.refetchInterval) :
    /* istanbul ignore next */
    (cov_ehs10y23g().b[2][1]++, false),
    refetchOnWindowFocus: false,
    retry: 2
  }));
  // Mutation for adding new entries
  const addEntryMutation =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[23]++, (0, _reactquery.useMutation)({
    mutationFn: options => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[12]++;
      cov_ehs10y23g().s[24]++;
      return mergedConfig.historyService.addEntry(options);
    },
    onSuccess: newEntry => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[13]++;
      cov_ehs10y23g().s[25]++;
      // Invalidate and refetch history entries
      queryClient.invalidateQueries({
        queryKey: HISTORY_QUERY_KEYS.all
      });
      // Optimistically update the cache
      /* istanbul ignore next */
      cov_ehs10y23g().s[26]++;
      queryClient.setQueryData(HISTORY_QUERY_KEYS.entries(mergedQueryOptions), oldData => {
        /* istanbul ignore next */
        cov_ehs10y23g().f[14]++;
        cov_ehs10y23g().s[27]++;
        if (!oldData) {
          /* istanbul ignore next */
          cov_ehs10y23g().b[3][0]++;
          cov_ehs10y23g().s[28]++;
          return oldData;
        } else
        /* istanbul ignore next */
        {
          cov_ehs10y23g().b[3][1]++;
        }
        cov_ehs10y23g().s[29]++;
        return {
          ...oldData,
          entries: [newEntry, ...oldData.entries],
          totalCount: oldData.totalCount + 1,
          lastUpdated: new Date().toISOString()
        };
      });
    }
  }));
  // Mutation for updating entries
  const updateEntryMutation =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[30]++, (0, _reactquery.useMutation)({
    mutationFn: ({
      id,
      updates
    }) => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[15]++;
      cov_ehs10y23g().s[31]++;
      return mergedConfig.historyService.updateEntry(id, updates);
    },
    onSuccess: updatedEntry => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[16]++;
      cov_ehs10y23g().s[32]++;
      // Invalidate related queries
      queryClient.invalidateQueries({
        queryKey: HISTORY_QUERY_KEYS.entry(updatedEntry.id)
      });
      /* istanbul ignore next */
      cov_ehs10y23g().s[33]++;
      queryClient.invalidateQueries({
        queryKey: HISTORY_QUERY_KEYS.entries()
      });
      // Update the entry in all relevant caches
      /* istanbul ignore next */
      cov_ehs10y23g().s[34]++;
      queryClient.setQueryData(HISTORY_QUERY_KEYS.entry(updatedEntry.id), updatedEntry);
      // Update the entry in the entries list cache
      /* istanbul ignore next */
      cov_ehs10y23g().s[35]++;
      queryClient.setQueryData(HISTORY_QUERY_KEYS.entries(mergedQueryOptions), oldData => {
        /* istanbul ignore next */
        cov_ehs10y23g().f[17]++;
        cov_ehs10y23g().s[36]++;
        if (!oldData) {
          /* istanbul ignore next */
          cov_ehs10y23g().b[4][0]++;
          cov_ehs10y23g().s[37]++;
          return oldData;
        } else
        /* istanbul ignore next */
        {
          cov_ehs10y23g().b[4][1]++;
        }
        cov_ehs10y23g().s[38]++;
        return {
          ...oldData,
          entries: oldData.entries.map(entry => {
            /* istanbul ignore next */
            cov_ehs10y23g().f[18]++;
            cov_ehs10y23g().s[39]++;
            return entry.id === updatedEntry.id ?
            /* istanbul ignore next */
            (cov_ehs10y23g().b[5][0]++, updatedEntry) :
            /* istanbul ignore next */
            (cov_ehs10y23g().b[5][1]++, entry);
          }),
          lastUpdated: new Date().toISOString()
        };
      });
    }
  }));
  // Mutation for deleting entries
  const deleteEntryMutation =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[40]++, (0, _reactquery.useMutation)({
    mutationFn: id => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[19]++;
      cov_ehs10y23g().s[41]++;
      return mergedConfig.historyService.deleteEntry(id);
    },
    onSuccess: (success, deletedId) => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[20]++;
      cov_ehs10y23g().s[42]++;
      if (success) {
        /* istanbul ignore next */
        cov_ehs10y23g().b[6][0]++;
        cov_ehs10y23g().s[43]++;
        // Remove from all caches
        queryClient.removeQueries({
          queryKey: HISTORY_QUERY_KEYS.entry(deletedId)
        });
        /* istanbul ignore next */
        cov_ehs10y23g().s[44]++;
        queryClient.invalidateQueries({
          queryKey: HISTORY_QUERY_KEYS.entries()
        });
        // Optimistically remove from entries list
        /* istanbul ignore next */
        cov_ehs10y23g().s[45]++;
        queryClient.setQueryData(HISTORY_QUERY_KEYS.entries(mergedQueryOptions), oldData => {
          /* istanbul ignore next */
          cov_ehs10y23g().f[21]++;
          cov_ehs10y23g().s[46]++;
          if (!oldData) {
            /* istanbul ignore next */
            cov_ehs10y23g().b[7][0]++;
            cov_ehs10y23g().s[47]++;
            return oldData;
          } else
          /* istanbul ignore next */
          {
            cov_ehs10y23g().b[7][1]++;
          }
          cov_ehs10y23g().s[48]++;
          return {
            ...oldData,
            entries: oldData.entries.filter(entry => {
              /* istanbul ignore next */
              cov_ehs10y23g().f[22]++;
              cov_ehs10y23g().s[49]++;
              return entry.id !== deletedId;
            }),
            totalCount: Math.max(0, oldData.totalCount - 1),
            lastUpdated: new Date().toISOString()
          };
        });
      } else
      /* istanbul ignore next */
      {
        cov_ehs10y23g().b[6][1]++;
      }
    }
  }));
  // Mutation for clearing all entries
  const clearAllMutation =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[50]++, (0, _reactquery.useMutation)({
    mutationFn: () => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[23]++;
      cov_ehs10y23g().s[51]++;
      return mergedConfig.historyService.clearAll();
    },
    onSuccess: success => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[24]++;
      cov_ehs10y23g().s[52]++;
      if (success) {
        /* istanbul ignore next */
        cov_ehs10y23g().b[8][0]++;
        cov_ehs10y23g().s[53]++;
        // Clear all history-related caches
        queryClient.removeQueries({
          queryKey: HISTORY_QUERY_KEYS.all
        });
        // Set empty state
        /* istanbul ignore next */
        cov_ehs10y23g().s[54]++;
        queryClient.setQueryData(HISTORY_QUERY_KEYS.entries(mergedQueryOptions), {
          entries: [],
          totalCount: 0,
          currentPage: 0,
          pageSize: mergedQueryOptions.pageSize,
          hasMore: false,
          lastUpdated: new Date().toISOString()
        });
      } else
      /* istanbul ignore next */
      {
        cov_ehs10y23g().b[8][1]++;
      }
    }
  }));
  // Memoized callback functions
  const addEntry =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[55]++, (0, _react.useCallback)(async options => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[25]++;
    cov_ehs10y23g().s[56]++;
    return addEntryMutation.mutateAsync(options);
  }, [addEntryMutation]));
  const updateEntry =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[57]++, (0, _react.useCallback)(async (id, updates) => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[26]++;
    cov_ehs10y23g().s[58]++;
    await updateEntryMutation.mutateAsync({
      id,
      updates
    });
  }, [updateEntryMutation]));
  const deleteEntry =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[59]++, (0, _react.useCallback)(async id => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[27]++;
    cov_ehs10y23g().s[60]++;
    await deleteEntryMutation.mutateAsync(id);
  }, [deleteEntryMutation]));
  const loadMore =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[61]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[28]++;
    cov_ehs10y23g().s[62]++;
    if (
    /* istanbul ignore next */
    (cov_ehs10y23g().b[10][0]++, !historyQuery.data?.hasMore) ||
    /* istanbul ignore next */
    (cov_ehs10y23g().b[10][1]++, historyQuery.isFetching)) {
      /* istanbul ignore next */
      cov_ehs10y23g().b[9][0]++;
      cov_ehs10y23g().s[63]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ehs10y23g().b[9][1]++;
    }
    const nextPage =
    /* istanbul ignore next */
    (cov_ehs10y23g().s[64]++, historyQuery.data.currentPage + 1);
    const nextPageOptions =
    /* istanbul ignore next */
    (cov_ehs10y23g().s[65]++, {
      ...mergedQueryOptions,
      page: nextPage
    });
    // Fetch next page
    const nextPageData =
    /* istanbul ignore next */
    (cov_ehs10y23g().s[66]++, await queryClient.fetchQuery({
      queryKey: HISTORY_QUERY_KEYS.entries(nextPageOptions),
      queryFn: () => {
        /* istanbul ignore next */
        cov_ehs10y23g().f[29]++;
        cov_ehs10y23g().s[67]++;
        return mergedConfig.historyService.getEntries(nextPageOptions);
      },
      staleTime: mergedConfig.staleTime
    }));
    // Merge with current data
    /* istanbul ignore next */
    cov_ehs10y23g().s[68]++;
    queryClient.setQueryData(HISTORY_QUERY_KEYS.entries(mergedQueryOptions), oldData => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[30]++;
      cov_ehs10y23g().s[69]++;
      if (!oldData) {
        /* istanbul ignore next */
        cov_ehs10y23g().b[11][0]++;
        cov_ehs10y23g().s[70]++;
        return nextPageData;
      } else
      /* istanbul ignore next */
      {
        cov_ehs10y23g().b[11][1]++;
      }
      cov_ehs10y23g().s[71]++;
      return {
        ...nextPageData,
        entries: [...oldData.entries, ...nextPageData.entries],
        currentPage: nextPage
      };
    });
  }, [historyQuery.data, historyQuery.isFetching, mergedQueryOptions, queryClient, mergedConfig.historyService, mergedConfig.staleTime]));
  const refresh =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[72]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[31]++;
    cov_ehs10y23g().s[73]++;
    await queryClient.invalidateQueries({
      queryKey: HISTORY_QUERY_KEYS.entries(mergedQueryOptions)
    });
  }, [queryClient, mergedQueryOptions]));
  const clearAll =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[74]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[32]++;
    cov_ehs10y23g().s[75]++;
    await clearAllMutation.mutateAsync();
  }, [clearAllMutation]));
  // Return hook interface
  /* istanbul ignore next */
  cov_ehs10y23g().s[76]++;
  return (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[33]++;
    cov_ehs10y23g().s[77]++;
    return {
      entries:
      /* istanbul ignore next */
      (cov_ehs10y23g().b[12][0]++, historyQuery.data?.entries) ||
      /* istanbul ignore next */
      (cov_ehs10y23g().b[12][1]++, []),
      isLoading:
      /* istanbul ignore next */
      (cov_ehs10y23g().b[13][0]++, historyQuery.isLoading) ||
      /* istanbul ignore next */
      (cov_ehs10y23g().b[13][1]++, historyQuery.isFetching),
      error: historyQuery.error,
      hasMore:
      /* istanbul ignore next */
      (cov_ehs10y23g().b[14][0]++, historyQuery.data?.hasMore) ||
      /* istanbul ignore next */
      (cov_ehs10y23g().b[14][1]++, false),
      currentPage:
      /* istanbul ignore next */
      (cov_ehs10y23g().b[15][0]++, historyQuery.data?.currentPage) ||
      /* istanbul ignore next */
      (cov_ehs10y23g().b[15][1]++, 0),
      totalCount:
      /* istanbul ignore next */
      (cov_ehs10y23g().b[16][0]++, historyQuery.data?.totalCount) ||
      /* istanbul ignore next */
      (cov_ehs10y23g().b[16][1]++, 0),
      addEntry,
      updateEntry,
      deleteEntry,
      loadMore,
      refresh,
      clearAll
    };
  }, [historyQuery.data, historyQuery.isLoading, historyQuery.isFetching, historyQuery.error, addEntry, updateEntry, deleteEntry, loadMore, refresh, clearAll]);
}
function useTryonHistoryEntry(id, config =
/* istanbul ignore next */
(cov_ehs10y23g().b[17][0]++, {})) {
  /* istanbul ignore next */
  cov_ehs10y23g().f[34]++;
  const mergedConfig =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[78]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[35]++;
    cov_ehs10y23g().s[79]++;
    return {
      historyService: _tryonHistoryService.defaultHistoryService,
      staleTime: 5 * 60 * 1000,
      cacheTime: 10 * 60 * 1000,
      ...config
    };
  }, [config]));
  /* istanbul ignore next */
  cov_ehs10y23g().s[80]++;
  return (0, _reactquery.useQuery)({
    queryKey: HISTORY_QUERY_KEYS.entry(id),
    queryFn: () => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[36]++;
      cov_ehs10y23g().s[81]++;
      return mergedConfig.historyService.getEntry(id);
    },
    staleTime: mergedConfig.staleTime,
    gcTime: mergedConfig.cacheTime,
    enabled: Boolean(id),
    retry: 2
  });
}
function useTryonHistoryStats(config =
/* istanbul ignore next */
(cov_ehs10y23g().b[18][0]++, {})) {
  /* istanbul ignore next */
  cov_ehs10y23g().f[37]++;
  const mergedConfig =
  /* istanbul ignore next */
  (cov_ehs10y23g().s[82]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_ehs10y23g().f[38]++;
    cov_ehs10y23g().s[83]++;
    return {
      historyService: _tryonHistoryService.defaultHistoryService,
      staleTime: 60 * 1000,
      cacheTime: 5 * 60 * 1000,
      ...config
    };
  }, [config]));
  /* istanbul ignore next */
  cov_ehs10y23g().s[84]++;
  return (0, _reactquery.useQuery)({
    queryKey: HISTORY_QUERY_KEYS.stats(),
    queryFn: () => {
      /* istanbul ignore next */
      cov_ehs10y23g().f[39]++;
      cov_ehs10y23g().s[85]++;
      return mergedConfig.historyService.getStorageStats();
    },
    staleTime: mergedConfig.staleTime,
    gcTime: mergedConfig.cacheTime,
    refetchOnWindowFocus: false
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,