e4515fec6527a3880b5e90aba82d26b2
'use client';
"use strict";

/* istanbul ignore next */
function cov_1phs4ui9iw() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/hooks/useImageUpload.ts";
  var hash = "3efd2eca202438baefca8c3d9d3685022d639a5f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/hooks/useImageUpload.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "8": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "9": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "10": {
        start: {
          line: 28,
          column: 32
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "11": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "12": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 45
        }
      },
      "13": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 45
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "15": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 35
        }
      },
      "16": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 23
        }
      },
      "17": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "18": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "19": {
        start: {
          line: 69,
          column: 42
        },
        end: {
          line: 69,
          column: 70
        }
      },
      "20": {
        start: {
          line: 70,
          column: 46
        },
        end: {
          line: 70,
          column: 70
        }
      },
      "21": {
        start: {
          line: 71,
          column: 42
        },
        end: {
          line: 71,
          column: 68
        }
      },
      "22": {
        start: {
          line: 72,
          column: 36
        },
        end: {
          line: 72,
          column: 62
        }
      },
      "23": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 73,
          column: 56
        }
      },
      "24": {
        start: {
          line: 74,
          column: 46
        },
        end: {
          line: 79,
          column: 6
        }
      },
      "25": {
        start: {
          line: 81,
          column: 25
        },
        end: {
          line: 81,
          column: 49
        }
      },
      "26": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 82,
          column: 49
        }
      },
      "27": {
        start: {
          line: 84,
          column: 39
        },
        end: {
          line: 84,
          column: 111
        }
      },
      "28": {
        start: {
          line: 85,
          column: 31
        },
        end: {
          line: 85,
          column: 101
        }
      },
      "29": {
        start: {
          line: 86,
          column: 32
        },
        end: {
          line: 86,
          column: 108
        }
      },
      "30": {
        start: {
          line: 88,
          column: 29
        },
        end: {
          line: 90,
          column: 10
        }
      },
      "31": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 67
        }
      },
      "32": {
        start: {
          line: 92,
          column: 27
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "33": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "34": {
        start: {
          line: 100,
          column: 24
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "35": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "36": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 30
        }
      },
      "37": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 32
        }
      },
      "38": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 31
        }
      },
      "39": {
        start: {
          line: 113,
          column: 25
        },
        end: {
          line: 174,
          column: 6
        }
      },
      "40": {
        start: {
          line: 114,
          column: 23
        },
        end: {
          line: 114,
          column: 25
        }
      },
      "41": {
        start: {
          line: 115,
          column: 25
        },
        end: {
          line: 115,
          column: 27
        }
      },
      "42": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "43": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 122
        }
      },
      "44": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "45": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 153
        }
      },
      "46": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "47": {
        start: {
          line: 126,
          column: 34
        },
        end: {
          line: 141,
          column: 14
        }
      },
      "48": {
        start: {
          line: 127,
          column: 28
        },
        end: {
          line: 127,
          column: 39
        }
      },
      "49": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 138,
          column: 18
        }
      },
      "50": {
        start: {
          line: 129,
          column: 20
        },
        end: {
          line: 137,
          column: 23
        }
      },
      "51": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 37
        }
      },
      "52": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 52
        }
      },
      "53": {
        start: {
          line: 142,
          column: 38
        },
        end: {
          line: 142,
          column: 62
        }
      },
      "54": {
        start: {
          line: 143,
          column: 35
        },
        end: {
          line: 143,
          column: 46
        }
      },
      "55": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 146,
          column: 13
        }
      },
      "56": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 138
        }
      },
      "57": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "58": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 138
        }
      },
      "59": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "60": {
        start: {
          line: 151,
          column: 36
        },
        end: {
          line: 151,
          column: 50
        }
      },
      "61": {
        start: {
          line: 152,
          column: 36
        },
        end: {
          line: 152,
          column: 58
        }
      },
      "62": {
        start: {
          line: 153,
          column: 34
        },
        end: {
          line: 153,
          column: 65
        }
      },
      "63": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 156,
          column: 17
        }
      },
      "64": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 155,
          column: 133
        }
      },
      "65": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 163,
          column: 14
        }
      },
      "66": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 63
        }
      },
      "67": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 170,
          column: 14
        }
      },
      "68": {
        start: {
          line: 176,
          column: 31
        },
        end: {
          line: 214,
          column: 6
        }
      },
      "69": {
        start: {
          line: 177,
          column: 27
        },
        end: {
          line: 177,
          column: 29
        }
      },
      "70": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "71": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 30
        }
      },
      "72": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "73": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 206,
          column: 13
        }
      },
      "74": {
        start: {
          line: 183,
          column: 31
        },
        end: {
          line: 183,
          column: 63
        }
      },
      "75": {
        start: {
          line: 184,
          column: 28
        },
        end: {
          line: 184,
          column: 51
        }
      },
      "76": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 35
        }
      },
      "77": {
        start: {
          line: 185,
          column: 26
        },
        end: {
          line: 185,
          column: 35
        }
      },
      "78": {
        start: {
          line: 186,
          column: 28
        },
        end: {
          line: 186,
          column: 39
        }
      },
      "79": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 191,
          column: 19
        }
      },
      "80": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 41
        }
      },
      "81": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 189,
          column: 41
        }
      },
      "82": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 56
        }
      },
      "83": {
        start: {
          line: 193,
          column: 36
        },
        end: {
          line: 193,
          column: 58
        }
      },
      "84": {
        start: {
          line: 194,
          column: 28
        },
        end: {
          line: 194,
          column: 32
        }
      },
      "85": {
        start: {
          line: 195,
          column: 29
        },
        end: {
          line: 195,
          column: 33
        }
      },
      "86": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 200,
          column: 17
        }
      },
      "87": {
        start: {
          line: 197,
          column: 20
        },
        end: {
          line: 197,
          column: 48
        }
      },
      "88": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 199,
          column: 47
        }
      },
      "89": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 37
        }
      },
      "90": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 39
        }
      },
      "91": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 56
        }
      },
      "92": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 71
        }
      },
      "93": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 45
        }
      },
      "94": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 66
        }
      },
      "95": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 26
        }
      },
      "96": {
        start: {
          line: 216,
          column: 24
        },
        end: {
          line: 259,
          column: 6
        }
      },
      "97": {
        start: {
          line: 217,
          column: 25
        },
        end: {
          line: 217,
          column: 43
        }
      },
      "98": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 37
        }
      },
      "99": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 63
        }
      },
      "100": {
        start: {
          line: 221,
          column: 27
        },
        end: {
          line: 221,
          column: 51
        }
      },
      "101": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "102": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 58
        }
      },
      "103": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 64
        }
      },
      "104": {
        start: {
          line: 227,
          column: 24
        },
        end: {
          line: 227,
          column: 49
        }
      },
      "105": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 68
        }
      },
      "106": {
        start: {
          line: 230,
          column: 27
        },
        end: {
          line: 230,
          column: 57
        }
      },
      "107": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 56
        }
      },
      "108": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "109": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "110": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 236,
          column: 87
        }
      },
      "111": {
        start: {
          line: 238,
          column: 16
        },
        end: {
          line: 238,
          column: 63
        }
      },
      "112": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "113": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 59
        }
      },
      "114": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 35
        }
      },
      "115": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 28
        }
      },
      "116": {
        start: {
          line: 261,
          column: 23
        },
        end: {
          line: 280,
          column: 6
        }
      },
      "117": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "118": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 27
        }
      },
      "119": {
        start: {
          line: 264,
          column: 33
        },
        end: {
          line: 264,
          column: 56
        }
      },
      "120": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 268,
          column: 19
        }
      },
      "121": {
        start: {
          line: 265,
          column: 37
        },
        end: {
          line: 268,
          column: 17
        }
      },
      "122": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 41
        }
      },
      "123": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 37
        }
      },
      "124": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 32
        }
      },
      "125": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 45
        }
      },
      "126": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 24
        }
      },
      "127": {
        start: {
          line: 282,
          column: 24
        },
        end: {
          line: 295,
          column: 6
        }
      },
      "128": {
        start: {
          line: 283,
          column: 24
        },
        end: {
          line: 283,
          column: 26
        }
      },
      "129": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "130": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 290,
          column: 13
        }
      },
      "131": {
        start: {
          line: 286,
          column: 31
        },
        end: {
          line: 286,
          column: 53
        }
      },
      "132": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 37
        }
      },
      "133": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 289,
          column: 74
        }
      },
      "134": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 23
        }
      },
      "135": {
        start: {
          line: 297,
          column: 23
        },
        end: {
          line: 316,
          column: 6
        }
      },
      "136": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 310,
          column: 11
        }
      },
      "137": {
        start: {
          line: 299,
          column: 28
        },
        end: {
          line: 299,
          column: 69
        }
      },
      "138": {
        start: {
          line: 299,
          column: 45
        },
        end: {
          line: 299,
          column: 68
        }
      },
      "139": {
        start: {
          line: 300,
          column: 32
        },
        end: {
          line: 300,
          column: 71
        }
      },
      "140": {
        start: {
          line: 300,
          column: 47
        },
        end: {
          line: 300,
          column: 70
        }
      },
      "141": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 308,
          column: 13
        }
      },
      "142": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 302,
          column: 57
        }
      },
      "143": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 307,
          column: 19
        }
      },
      "144": {
        start: {
          line: 304,
          column: 20
        },
        end: {
          line: 306,
          column: 21
        }
      },
      "145": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 305,
          column: 49
        }
      },
      "146": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 27
        }
      },
      "147": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "148": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 33
        }
      },
      "149": {
        start: {
          line: 318,
          column: 23
        },
        end: {
          line: 334,
          column: 6
        }
      },
      "150": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 326,
          column: 11
        }
      },
      "151": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 46
        }
      },
      "152": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 325,
          column: 15
        }
      },
      "153": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 324,
          column: 17
        }
      },
      "154": {
        start: {
          line: 323,
          column: 20
        },
        end: {
          line: 323,
          column: 45
        }
      },
      "155": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 29
        }
      },
      "156": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 29
        }
      },
      "157": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 23
        }
      },
      "158": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 31
        }
      },
      "159": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 26
        }
      },
      "160": {
        start: {
          line: 336,
          column: 27
        },
        end: {
          line: 338,
          column: 10
        }
      },
      "161": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 38
        }
      },
      "162": {
        start: {
          line: 340,
          column: 34
        },
        end: {
          line: 349,
          column: 6
        }
      },
      "163": {
        start: {
          line: 341,
          column: 22
        },
        end: {
          line: 341,
          column: 58
        }
      },
      "164": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "165": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 31
        }
      },
      "166": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 32
        }
      },
      "167": {
        start: {
          line: 351,
          column: 28
        },
        end: {
          line: 364,
          column: 6
        }
      },
      "168": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 31
        }
      },
      "169": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 32
        }
      },
      "170": {
        start: {
          line: 354,
          column: 22
        },
        end: {
          line: 354,
          column: 58
        }
      },
      "171": {
        start: {
          line: 355,
          column: 30
        },
        end: {
          line: 355,
          column: 94
        }
      },
      "172": {
        start: {
          line: 355,
          column: 49
        },
        end: {
          line: 355,
          column: 93
        }
      },
      "173": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 361,
          column: 11
        }
      },
      "174": {
        start: {
          line: 365,
          column: 28
        },
        end: {
          line: 374,
          column: 10
        }
      },
      "175": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 31
        }
      },
      "176": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 32
        }
      },
      "177": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 373,
          column: 11
        }
      },
      "178": {
        start: {
          line: 375,
          column: 27
        },
        end: {
          line: 378,
          column: 10
        }
      },
      "179": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 31
        }
      },
      "180": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 32
        }
      },
      "181": {
        start: {
          line: 379,
          column: 23
        },
        end: {
          line: 395,
          column: 6
        }
      },
      "182": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 380,
          column: 31
        }
      },
      "183": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 32
        }
      },
      "184": {
        start: {
          line: 382,
          column: 22
        },
        end: {
          line: 382,
          column: 119
        }
      },
      "185": {
        start: {
          line: 382,
          column: 74
        },
        end: {
          line: 382,
          column: 118
        }
      },
      "186": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 388,
          column: 11
        }
      },
      "187": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 391,
          column: 9
        }
      },
      "188": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 31
        }
      },
      "189": {
        start: {
          line: 397,
          column: 4
        },
        end: {
          line: 408,
          column: 11
        }
      },
      "190": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 407,
          column: 10
        }
      },
      "191": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 406,
          column: 15
        }
      },
      "192": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 400,
          column: 50
        }
      },
      "193": {
        start: {
          line: 401,
          column: 16
        },
        end: {
          line: 405,
          column: 19
        }
      },
      "194": {
        start: {
          line: 402,
          column: 20
        },
        end: {
          line: 404,
          column: 21
        }
      },
      "195": {
        start: {
          line: 403,
          column: 24
        },
        end: {
          line: 403,
          column: 49
        }
      },
      "196": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 446,
          column: 6
        }
      },
      "197": {
        start: {
          line: 449,
          column: 19
        },
        end: {
          line: 449,
          column: 60
        }
      },
      "198": {
        start: {
          line: 450,
          column: 29
        },
        end: {
          line: 455,
          column: 6
        }
      },
      "199": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 451,
          column: 28
        }
      },
      "200": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 452,
          column: 39
        }
      },
      "201": {
        start: {
          line: 456,
          column: 4
        },
        end: {
          line: 460,
          column: 6
        }
      },
      "202": {
        start: {
          line: 463,
          column: 19
        },
        end: {
          line: 466,
          column: 26
        }
      },
      "203": {
        start: {
          line: 468,
          column: 4
        },
        end: {
          line: 476,
          column: 7
        }
      },
      "204": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 471,
          column: 9
        }
      },
      "205": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 45
        }
      },
      "206": {
        start: {
          line: 477,
          column: 4
        },
        end: {
          line: 485,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 24
          }
        },
        loc: {
          start: {
            line: 16,
            column: 34
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 20
          },
          end: {
            line: 19,
            column: 21
          }
        },
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 27
          }
        },
        loc: {
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 54
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 28
      },
      "6": {
        name: "useImageUpload",
        decl: {
          start: {
            line: 63,
            column: 9
          },
          end: {
            line: 63,
            column: 23
          }
        },
        loc: {
          start: {
            line: 63,
            column: 56
          },
          end: {
            line: 447,
            column: 1
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 88,
            column: 53
          },
          end: {
            line: 88,
            column: 54
          }
        },
        loc: {
          start: {
            line: 88,
            column: 57
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 88
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 92,
            column: 51
          },
          end: {
            line: 92,
            column: 52
          }
        },
        loc: {
          start: {
            line: 92,
            column: 81
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 92
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 100,
            column: 48
          },
          end: {
            line: 100,
            column: 49
          }
        },
        loc: {
          start: {
            line: 100,
            column: 75
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 100
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 113,
            column: 49
          },
          end: {
            line: 113,
            column: 50
          }
        },
        loc: {
          start: {
            line: 113,
            column: 63
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 113
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 126,
            column: 52
          },
          end: {
            line: 126,
            column: 53
          }
        },
        loc: {
          start: {
            line: 126,
            column: 71
          },
          end: {
            line: 141,
            column: 13
          }
        },
        line: 126
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 128,
            column: 29
          },
          end: {
            line: 128,
            column: 30
          }
        },
        loc: {
          start: {
            line: 128,
            column: 33
          },
          end: {
            line: 138,
            column: 17
          }
        },
        line: 128
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 176,
            column: 55
          },
          end: {
            line: 176,
            column: 56
          }
        },
        loc: {
          start: {
            line: 176,
            column: 69
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 176
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 187,
            column: 34
          },
          end: {
            line: 187,
            column: 35
          }
        },
        loc: {
          start: {
            line: 187,
            column: 53
          },
          end: {
            line: 191,
            column: 17
          }
        },
        line: 187
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 216,
            column: 48
          },
          end: {
            line: 216,
            column: 49
          }
        },
        loc: {
          start: {
            line: 216,
            column: 62
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 216
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 261,
            column: 47
          },
          end: {
            line: 261,
            column: 48
          }
        },
        loc: {
          start: {
            line: 261,
            column: 61
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 261
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 265,
            column: 29
          },
          end: {
            line: 265,
            column: 30
          }
        },
        loc: {
          start: {
            line: 265,
            column: 37
          },
          end: {
            line: 268,
            column: 17
          }
        },
        line: 265
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 282,
            column: 48
          },
          end: {
            line: 282,
            column: 49
          }
        },
        loc: {
          start: {
            line: 282,
            column: 63
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 282
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 297,
            column: 47
          },
          end: {
            line: 297,
            column: 48
          }
        },
        loc: {
          start: {
            line: 297,
            column: 59
          },
          end: {
            line: 314,
            column: 5
          }
        },
        line: 297
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 298,
            column: 25
          },
          end: {
            line: 298,
            column: 26
          }
        },
        loc: {
          start: {
            line: 298,
            column: 33
          },
          end: {
            line: 310,
            column: 9
          }
        },
        line: 298
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 299,
            column: 40
          },
          end: {
            line: 299,
            column: 41
          }
        },
        loc: {
          start: {
            line: 299,
            column: 45
          },
          end: {
            line: 299,
            column: 68
          }
        },
        line: 299
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 300,
            column: 42
          },
          end: {
            line: 300,
            column: 43
          }
        },
        loc: {
          start: {
            line: 300,
            column: 47
          },
          end: {
            line: 300,
            column: 70
          }
        },
        line: 300
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 303,
            column: 62
          },
          end: {
            line: 303,
            column: 63
          }
        },
        loc: {
          start: {
            line: 303,
            column: 69
          },
          end: {
            line: 307,
            column: 17
          }
        },
        line: 303
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 318,
            column: 47
          },
          end: {
            line: 318,
            column: 48
          }
        },
        loc: {
          start: {
            line: 318,
            column: 51
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 318
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 319,
            column: 30
          },
          end: {
            line: 319,
            column: 31
          }
        },
        loc: {
          start: {
            line: 319,
            column: 38
          },
          end: {
            line: 326,
            column: 9
          }
        },
        line: 319
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 321,
            column: 51
          },
          end: {
            line: 321,
            column: 52
          }
        },
        loc: {
          start: {
            line: 321,
            column: 58
          },
          end: {
            line: 325,
            column: 13
          }
        },
        line: 321
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 336,
            column: 51
          },
          end: {
            line: 336,
            column: 52
          }
        },
        loc: {
          start: {
            line: 336,
            column: 55
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 336
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 340,
            column: 58
          },
          end: {
            line: 340,
            column: 59
          }
        },
        loc: {
          start: {
            line: 340,
            column: 67
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 340
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 351,
            column: 52
          },
          end: {
            line: 351,
            column: 53
          }
        },
        loc: {
          start: {
            line: 351,
            column: 61
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 351
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 355,
            column: 41
          },
          end: {
            line: 355,
            column: 42
          }
        },
        loc: {
          start: {
            line: 355,
            column: 49
          },
          end: {
            line: 355,
            column: 93
          }
        },
        line: 355
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 365,
            column: 52
          },
          end: {
            line: 365,
            column: 53
          }
        },
        loc: {
          start: {
            line: 365,
            column: 61
          },
          end: {
            line: 374,
            column: 5
          }
        },
        line: 365
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 375,
            column: 51
          },
          end: {
            line: 375,
            column: 52
          }
        },
        loc: {
          start: {
            line: 375,
            column: 60
          },
          end: {
            line: 378,
            column: 5
          }
        },
        line: 375
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 379,
            column: 47
          },
          end: {
            line: 379,
            column: 48
          }
        },
        loc: {
          start: {
            line: 379,
            column: 56
          },
          end: {
            line: 392,
            column: 5
          }
        },
        line: 379
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 382,
            column: 66
          },
          end: {
            line: 382,
            column: 67
          }
        },
        loc: {
          start: {
            line: 382,
            column: 74
          },
          end: {
            line: 382,
            column: 118
          }
        },
        line: 382
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 397,
            column: 26
          },
          end: {
            line: 397,
            column: 27
          }
        },
        loc: {
          start: {
            line: 397,
            column: 30
          },
          end: {
            line: 408,
            column: 5
          }
        },
        line: 397
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 398,
            column: 15
          },
          end: {
            line: 398,
            column: 16
          }
        },
        loc: {
          start: {
            line: 398,
            column: 19
          },
          end: {
            line: 407,
            column: 9
          }
        },
        line: 398
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 399,
            column: 34
          },
          end: {
            line: 399,
            column: 35
          }
        },
        loc: {
          start: {
            line: 399,
            column: 42
          },
          end: {
            line: 406,
            column: 13
          }
        },
        line: 399
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 401,
            column: 55
          },
          end: {
            line: 401,
            column: 56
          }
        },
        loc: {
          start: {
            line: 401,
            column: 62
          },
          end: {
            line: 405,
            column: 17
          }
        },
        line: 401
      },
      "39": {
        name: "useSingleImageUpload",
        decl: {
          start: {
            line: 448,
            column: 9
          },
          end: {
            line: 448,
            column: 29
          }
        },
        loc: {
          start: {
            line: 448,
            column: 62
          },
          end: {
            line: 461,
            column: 1
          }
        },
        line: 448
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 450,
            column: 53
          },
          end: {
            line: 450,
            column: 54
          }
        },
        loc: {
          start: {
            line: 450,
            column: 67
          },
          end: {
            line: 453,
            column: 5
          }
        },
        line: 450
      },
      "41": {
        name: "useDropzoneUpload",
        decl: {
          start: {
            line: 462,
            column: 9
          },
          end: {
            line: 462,
            column: 26
          }
        },
        loc: {
          start: {
            line: 462,
            column: 59
          },
          end: {
            line: 486,
            column: 1
          }
        },
        line: 462
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 468,
            column: 26
          },
          end: {
            line: 468,
            column: 27
          }
        },
        loc: {
          start: {
            line: 468,
            column: 30
          },
          end: {
            line: 472,
            column: 5
          }
        },
        line: 468
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 63,
            column: 24
          },
          end: {
            line: 63,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 33
          },
          end: {
            line: 63,
            column: 35
          }
        }],
        line: 63
      },
      "1": {
        loc: {
          start: {
            line: 84,
            column: 78
          },
          end: {
            line: 84,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 78
          },
          end: {
            line: 84,
            column: 95
          }
        }, {
          start: {
            line: 84,
            column: 99
          },
          end: {
            line: 84,
            column: 103
          }
        }],
        line: 84
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 68
          },
          end: {
            line: 85,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 68
          },
          end: {
            line: 85,
            column: 85
          }
        }, {
          start: {
            line: 85,
            column: 89
          },
          end: {
            line: 85,
            column: 93
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 86,
            column: 70
          },
          end: {
            line: 86,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 70
          },
          end: {
            line: 86,
            column: 87
          }
        }, {
          start: {
            line: 86,
            column: 91
          },
          end: {
            line: 86,
            column: 95
          }
        }],
        line: 86
      },
      "4": {
        loc: {
          start: {
            line: 100,
            column: 56
          },
          end: {
            line: 100,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 63
          },
          end: {
            line: 100,
            column: 72
          }
        }],
        line: 100
      },
      "5": {
        loc: {
          start: {
            line: 103,
            column: 21
          },
          end: {
            line: 103,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 46
          },
          end: {
            line: 103,
            column: 59
          }
        }, {
          start: {
            line: 103,
            column: 62
          },
          end: {
            line: 103,
            column: 75
          }
        }],
        line: 103
      },
      "6": {
        loc: {
          start: {
            line: 104,
            column: 27
          },
          end: {
            line: 104,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 52
          },
          end: {
            line: 104,
            column: 57
          }
        }, {
          start: {
            line: 104,
            column: 60
          },
          end: {
            line: 104,
            column: 69
          }
        }],
        line: 104
      },
      "7": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "8": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "9": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 146,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 146,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "10": {
        loc: {
          start: {
            line: 144,
            column: 16
          },
          end: {
            line: 144,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 16
          },
          end: {
            line: 144,
            column: 43
          }
        }, {
          start: {
            line: 144,
            column: 47
          },
          end: {
            line: 144,
            column: 76
          }
        }],
        line: 144
      },
      "11": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "12": {
        loc: {
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 147,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 16
          },
          end: {
            line: 147,
            column: 43
          }
        }, {
          start: {
            line: 147,
            column: 47
          },
          end: {
            line: 147,
            column: 76
          }
        }],
        line: 147
      },
      "13": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "14": {
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 156,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "15": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "16": {
        loc: {
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 16
          },
          end: {
            line: 185,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "17": {
        loc: {
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        }, {
          start: {
            line: 198,
            column: 23
          },
          end: {
            line: 200,
            column: 17
          }
        }],
        line: 196
      },
      "18": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "19": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "20": {
        loc: {
          start: {
            line: 301,
            column: 12
          },
          end: {
            line: 308,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 12
          },
          end: {
            line: 308,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "21": {
        loc: {
          start: {
            line: 304,
            column: 20
          },
          end: {
            line: 306,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 20
          },
          end: {
            line: 306,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "22": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "23": {
        loc: {
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 324,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 16
          },
          end: {
            line: 324,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "24": {
        loc: {
          start: {
            line: 341,
            column: 33
          },
          end: {
            line: 341,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 33
          },
          end: {
            line: 341,
            column: 51
          }
        }, {
          start: {
            line: 341,
            column: 55
          },
          end: {
            line: 341,
            column: 57
          }
        }],
        line: 341
      },
      "25": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "26": {
        loc: {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 391,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 389
      },
      "27": {
        loc: {
          start: {
            line: 402,
            column: 20
          },
          end: {
            line: 404,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 402,
            column: 20
          },
          end: {
            line: 404,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 402
      },
      "28": {
        loc: {
          start: {
            line: 435,
            column: 11
          },
          end: {
            line: 442,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 435,
            column: 40
          },
          end: {
            line: 442,
            column: 9
          }
        }, {
          start: {
            line: 442,
            column: 12
          },
          end: {
            line: 442,
            column: 14
          }
        }],
        line: 435
      },
      "29": {
        loc: {
          start: {
            line: 448,
            column: 30
          },
          end: {
            line: 448,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 448,
            column: 39
          },
          end: {
            line: 448,
            column: 41
          }
        }],
        line: 448
      },
      "30": {
        loc: {
          start: {
            line: 462,
            column: 27
          },
          end: {
            line: 462,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 462,
            column: 36
          },
          end: {
            line: 462,
            column: 38
          }
        }],
        line: 462
      },
      "31": {
        loc: {
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 471,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 469,
            column: 8
          },
          end: {
            line: 471,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 469
      },
      "32": {
        loc: {
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 469,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 469,
            column: 12
          },
          end: {
            line: 469,
            column: 43
          }
        }, {
          start: {
            line: 469,
            column: 47
          },
          end: {
            line: 469,
            column: 80
          }
        }],
        line: 469
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0],
      "30": [0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/hooks/useImageUpload.ts"],
      sourcesContent: ["'use client';\n\n// Image Upload Hooks\n// Specialized hooks for handling file upload operations with validation and preview management\n\nimport { useState, useCallback, useRef, useEffect } from 'react';\nimport { \n  useImageValidation,\n  useImageMetadata,\n  useImageThumbnail,\n  processImageForTryon,\n  type ImageProcessingResult,\n  type ImageMetadata\n} from '../business-layer';\nimport { fileToBase64 } from '../utils/image';\n\n/**\n * Upload state enum\n */\nexport enum UploadState {\n  IDLE = 'idle',\n  VALIDATING = 'validating',\n  PROCESSING = 'processing',\n  COMPLETE = 'complete',\n  ERROR = 'error'\n}\n\n/**\n * File validation result\n */\nexport interface FileValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n  metadata?: ImageMetadata;\n}\n\n/**\n * Upload progress information\n */\nexport interface UploadProgress {\n  stage: 'validation' | 'processing' | 'thumbnail' | 'complete';\n  percentage: number;\n  message: string;\n}\n\n/**\n * Upload configuration\n */\nexport interface UploadConfig {\n  /** Maximum file size in bytes */\n  maxSizeBytes?: number;\n  /** Allowed file types */\n  allowedTypes?: string[];\n  /** Auto-generate thumbnails */\n  generateThumbnails?: boolean;\n  /** Thumbnail sizes to generate */\n  thumbnailSizes?: number[];\n  /** Enable drag and drop */\n  enableDragDrop?: boolean;\n  /** Auto-process after upload */\n  autoProcess?: boolean;\n  /** Validation options */\n  validation?: {\n    minWidth?: number;\n    minHeight?: number;\n    maxWidth?: number;\n    maxHeight?: number;\n    aspectRatio?: number;\n    aspectRatioTolerance?: number;\n  };\n}\n\n/**\n * Uploaded file information\n */\nexport interface UploadedFile {\n  file: File;\n  preview: string;\n  thumbnails: Record<number, string>;\n  metadata?: ImageMetadata;\n  processedResult?: ImageProcessingResult;\n  uploadId: string;\n  uploadTime: number;\n}\n\n/**\n * Upload error\n */\nexport interface UploadError {\n  type: 'validation' | 'processing' | 'network' | 'unknown';\n  message: string;\n  code?: string;\n  originalError?: Error;\n}\n\n/**\n * Drag and drop state\n */\nexport interface DragDropState {\n  isDragActive: boolean;\n  isDragAccept: boolean;\n  isDragReject: boolean;\n  draggedFiles: File[];\n}\n\n/**\n * Default upload configuration\n */\nconst DEFAULT_CONFIG: Required<UploadConfig> = {\n  maxSizeBytes: 10 * 1024 * 1024, // 10MB\n  allowedTypes: ['image/jpeg', 'image/png', 'image/webp', 'image/gif'],\n  generateThumbnails: true,\n  thumbnailSizes: [150, 300, 600],\n  enableDragDrop: true,\n  autoProcess: false,\n  validation: {\n    minWidth: 256,\n    minHeight: 256,\n    maxWidth: 4096,\n    maxHeight: 4096,\n    aspectRatio: undefined,\n    aspectRatioTolerance: 0.1\n  }\n};\n\n/**\n * Main image upload hook\n */\nexport function useImageUpload(\n  config: UploadConfig = {},\n  onUpload?: (file: UploadedFile) => void,\n  onError?: (error: UploadError) => void\n) {\n  const finalConfig = { ...DEFAULT_CONFIG, ...config };\n  \n  // State\n  const [uploadState, setUploadState] = useState<UploadState>(UploadState.IDLE);\n  const [uploadedFiles, setUploadedFiles] = useState<UploadedFile[]>([]);\n  const [currentFile, setCurrentFile] = useState<UploadedFile | null>(null);\n  const [progress, setProgress] = useState<UploadProgress | null>(null);\n  const [error, setError] = useState<UploadError | null>(null);\n  const [dragDropState, setDragDropState] = useState<DragDropState>({\n    isDragActive: false,\n    isDragAccept: false,\n    isDragReject: false,\n    draggedFiles: []\n  });\n\n  // Refs\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const uploadIdCounter = useRef(0);\n\n  // Business layer hooks\n  const { data: validationResult } = useImageValidation(currentFile?.file || null, false);\n  const { data: metadata } = useImageMetadata(currentFile?.file || null, false);\n  const { data: thumbnail } = useImageThumbnail(currentFile?.file || null, 150, false);\n\n  // Generate unique upload ID\n  const generateUploadId = useCallback(() => {\n    return `upload_${Date.now()}_${++uploadIdCounter.current}`;\n  }, []);\n\n  // Update progress\n  const updateProgress = useCallback((stage: UploadProgress['stage'], percentage: number, message: string) => {\n    setProgress({ stage, percentage, message });\n  }, []);\n\n  // Handle errors\n  const handleError = useCallback((error: unknown, type: UploadError['type'] = 'unknown') => {\n    const uploadError: UploadError = {\n      type,\n      message: error instanceof Error ? error.message : String(error),\n      originalError: error instanceof Error ? error : undefined\n    };\n\n    setError(uploadError);\n    setUploadState(UploadState.ERROR);\n    onError?.(uploadError);\n  }, [onError]);\n\n  // Validate file\n  const validateFile = useCallback(async (file: File): Promise<FileValidationResult> => {\n    const errors: string[] = [];\n    const warnings: string[] = [];\n\n    // File type validation\n    if (!finalConfig.allowedTypes.includes(file.type)) {\n      errors.push(`File type ${file.type} is not supported. Allowed types: ${finalConfig.allowedTypes.join(', ')}`);\n    }\n\n    // File size validation\n    if (file.size > finalConfig.maxSizeBytes) {\n      errors.push(`File size ${(file.size / 1024 / 1024).toFixed(2)}MB exceeds limit of ${(finalConfig.maxSizeBytes / 1024 / 1024).toFixed(2)}MB`);\n    }\n\n    // Image dimension validation (requires metadata)\n    try {\n      const imageMetadata = await new Promise<ImageMetadata>((resolve, reject) => {\n        const img = new Image();\n        img.onload = () => {\n          resolve({\n            dimensions: { width: img.naturalWidth, height: img.naturalHeight },\n            fileSize: file.size,\n            fileType: file.type,\n            lastModified: new Date(file.lastModified)\n          });\n        };\n        img.onerror = reject;\n        img.src = URL.createObjectURL(file);\n      });\n\n      const { width, height } = imageMetadata.dimensions;\n      const { validation } = finalConfig;\n\n      if (width < validation.minWidth || height < validation.minHeight) {\n        errors.push(`Image dimensions ${width}x${height} are too small. Minimum: ${validation.minWidth}x${validation.minHeight}`);\n      }\n\n      if (width > validation.maxWidth || height > validation.maxHeight) {\n        errors.push(`Image dimensions ${width}x${height} are too large. Maximum: ${validation.maxWidth}x${validation.maxHeight}`);\n      }\n\n      if (validation.aspectRatio) {\n        const aspectRatio = width / height;\n        const targetRatio = validation.aspectRatio;\n        const tolerance = validation.aspectRatioTolerance;\n        \n        if (Math.abs(aspectRatio - targetRatio) > tolerance) {\n          warnings.push(`Image aspect ratio ${aspectRatio.toFixed(2)} differs from recommended ${targetRatio.toFixed(2)}`);\n        }\n      }\n\n      return {\n        isValid: errors.length === 0,\n        errors,\n        warnings,\n        metadata: imageMetadata\n      };\n    } catch (error) {\n      errors.push('Failed to validate image dimensions');\n      return { isValid: false, errors, warnings };\n    }\n  }, [finalConfig]);\n\n  // Generate thumbnails\n  const generateThumbnails = useCallback(async (file: File): Promise<Record<number, string>> => {\n    const thumbnails: Record<number, string> = {};\n\n    if (!finalConfig.generateThumbnails) {\n      return thumbnails;\n    }\n\n    try {\n      for (const size of finalConfig.thumbnailSizes) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        \n        if (!ctx) continue;\n\n        const img = new Image();\n        await new Promise((resolve, reject) => {\n          img.onload = resolve;\n          img.onerror = reject;\n          img.src = URL.createObjectURL(file);\n        });\n\n        // Calculate dimensions maintaining aspect ratio\n        const aspectRatio = img.width / img.height;\n        let width = size;\n        let height = size;\n\n        if (aspectRatio > 1) {\n          height = size / aspectRatio;\n        } else {\n          width = size * aspectRatio;\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n        ctx.drawImage(img, 0, 0, width, height);\n\n        thumbnails[size] = canvas.toDataURL('image/jpeg', 0.8);\n        URL.revokeObjectURL(img.src);\n      }\n    } catch (error) {\n      console.warn('Failed to generate thumbnails:', error);\n    }\n\n    return thumbnails;\n  }, [finalConfig.generateThumbnails, finalConfig.thumbnailSizes]);\n\n  // Process uploaded file\n  const processFile = useCallback(async (file: File): Promise<UploadedFile> => {\n    const uploadId = generateUploadId();\n    \n    setUploadState(UploadState.VALIDATING);\n    updateProgress('validation', 10, 'Validating file...');\n\n    // Validate file\n    const validation = await validateFile(file);\n    if (!validation.isValid) {\n      throw new Error(validation.errors.join(', '));\n    }\n\n    updateProgress('processing', 30, 'Processing image...');\n\n    // Generate preview\n    const preview = URL.createObjectURL(file);\n\n    updateProgress('thumbnail', 60, 'Generating thumbnails...');\n\n    // Generate thumbnails\n    const thumbnails = await generateThumbnails(file);\n\n    updateProgress('complete', 80, 'Finalizing...');\n\n    // Auto-process if enabled\n    let processedResult: ImageProcessingResult | undefined;\n    if (finalConfig.autoProcess) {\n      try {\n        processedResult = await processImageForTryon(file);\n      } catch (error) {\n        console.warn('Auto-processing failed:', error);\n      }\n    }\n\n    const uploadedFile: UploadedFile = {\n      file,\n      preview,\n      thumbnails,\n      metadata: validation.metadata,\n      processedResult,\n      uploadId,\n      uploadTime: Date.now()\n    };\n\n    updateProgress('complete', 100, 'Upload complete');\n    setUploadState(UploadState.COMPLETE);\n\n    return uploadedFile;\n  }, [generateUploadId, updateProgress, validateFile, generateThumbnails, finalConfig.autoProcess]);\n\n  // Handle file upload\n  const uploadFile = useCallback(async (file: File) => {\n    try {\n      setError(null);\n      const uploadedFile = await processFile(file);\n      \n      setUploadedFiles(prev => [...prev, uploadedFile]);\n      setCurrentFile(uploadedFile);\n      onUpload?.(uploadedFile);\n      \n      return uploadedFile;\n    } catch (error) {\n      handleError(error, 'processing');\n      throw error;\n    }\n  }, [processFile, onUpload, handleError]);\n\n  // Handle multiple file uploads\n  const uploadFiles = useCallback(async (files: File[]) => {\n    const results: UploadedFile[] = [];\n    \n    for (const file of files) {\n      try {\n        const result = await uploadFile(file);\n        results.push(result);\n      } catch (error) {\n        console.error('Failed to upload file:', file.name, error);\n      }\n    }\n    \n    return results;\n  }, [uploadFile]);\n\n  // Remove uploaded file\n  const removeFile = useCallback((uploadId: string) => {\n    setUploadedFiles(prev => {\n      const updated = prev.filter(f => f.uploadId !== uploadId);\n      const removedFile = prev.find(f => f.uploadId === uploadId);\n      \n      if (removedFile) {\n        URL.revokeObjectURL(removedFile.preview);\n        Object.values(removedFile.thumbnails).forEach(url => {\n          if (url.startsWith('blob:')) {\n            URL.revokeObjectURL(url);\n          }\n        });\n      }\n      \n      return updated;\n    });\n    \n    if (currentFile?.uploadId === uploadId) {\n      setCurrentFile(null);\n    }\n  }, [currentFile]);\n\n  // Clear all files\n  const clearFiles = useCallback(() => {\n    uploadedFiles.forEach(file => {\n      URL.revokeObjectURL(file.preview);\n      Object.values(file.thumbnails).forEach(url => {\n        if (url.startsWith('blob:')) {\n          URL.revokeObjectURL(url);\n        }\n      });\n    });\n    \n    setUploadedFiles([]);\n    setCurrentFile(null);\n    setError(null);\n    setUploadState(UploadState.IDLE);\n    setProgress(null);\n  }, [uploadedFiles]);\n\n  // Trigger file picker\n  const openFilePicker = useCallback(() => {\n    fileInputRef.current?.click();\n  }, []);\n\n  // Handle file input change\n  const handleFileInputChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(event.target.files || []);\n    if (files.length > 0) {\n      uploadFiles(files);\n    }\n    // Reset input to allow same file selection\n    event.target.value = '';\n  }, [uploadFiles]);\n\n  // Drag and drop handlers\n  const handleDragEnter = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const files = Array.from(event.dataTransfer.files);\n    const hasValidFiles = files.some(file => finalConfig.allowedTypes.includes(file.type));\n    \n    setDragDropState({\n      isDragActive: true,\n      isDragAccept: hasValidFiles,\n      isDragReject: !hasValidFiles,\n      draggedFiles: files\n    });\n  }, [finalConfig.allowedTypes]);\n\n  const handleDragLeave = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    setDragDropState({\n      isDragActive: false,\n      isDragAccept: false,\n      isDragReject: false,\n      draggedFiles: []\n    });\n  }, []);\n\n  const handleDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n\n  const handleDrop = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    \n    const files = Array.from(event.dataTransfer.files).filter(file => \n      finalConfig.allowedTypes.includes(file.type)\n    );\n    \n    setDragDropState({\n      isDragActive: false,\n      isDragAccept: false,\n      isDragReject: false,\n      draggedFiles: []\n    });\n    \n    if (files.length > 0) {\n      uploadFiles(files);\n    }\n  }, [finalConfig.allowedTypes, uploadFiles]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      uploadedFiles.forEach(file => {\n        URL.revokeObjectURL(file.preview);\n        Object.values(file.thumbnails).forEach(url => {\n          if (url.startsWith('blob:')) {\n            URL.revokeObjectURL(url);\n          }\n        });\n      });\n    };\n  }, []);\n\n  return {\n    // State\n    uploadState,\n    uploadedFiles,\n    currentFile,\n    progress,\n    error,\n    dragDropState,\n    \n    // Actions\n    uploadFile,\n    uploadFiles,\n    removeFile,\n    clearFiles,\n    openFilePicker,\n    \n    // File input props\n    fileInputProps: {\n      ref: fileInputRef,\n      type: 'file',\n      accept: finalConfig.allowedTypes.join(','),\n      multiple: true,\n      onChange: handleFileInputChange,\n      style: { display: 'none' }\n    },\n    \n    // Drag and drop props (only if enabled)\n    ...(finalConfig.enableDragDrop ? {\n      dragDropProps: {\n        onDragEnter: handleDragEnter,\n        onDragLeave: handleDragLeave,\n        onDragOver: handleDragOver,\n        onDrop: handleDrop\n      }\n    } : {}),\n    \n    // Utils\n    validateFile,\n    generateThumbnails\n  };\n}\n\n/**\n * Simplified hook for single file upload\n */\nexport function useSingleImageUpload(\n  config: UploadConfig = {},\n  onUpload?: (file: UploadedFile) => void,\n  onError?: (error: UploadError) => void\n) {\n  const upload = useImageUpload(config, onUpload, onError);\n  \n  const uploadSingleFile = useCallback(async (file: File) => {\n    upload.clearFiles(); // Clear previous files\n    return upload.uploadFile(file);\n  }, [upload]);\n  \n  return {\n    ...upload,\n    uploadFile: uploadSingleFile,\n    file: upload.currentFile\n  };\n}\n\n/**\n * Hook for drag and drop only upload\n */\nexport function useDropzoneUpload(\n  config: UploadConfig = {},\n  onUpload?: (files: UploadedFile[]) => void,\n  onError?: (error: UploadError) => void\n) {\n  const upload = useImageUpload(\n    { ...config, enableDragDrop: true },\n    undefined,\n    onError\n  );\n  \n  // Handle batch upload completion\n  useEffect(() => {\n    if (upload.uploadedFiles.length > 0 && upload.uploadState === UploadState.COMPLETE) {\n      onUpload?.(upload.uploadedFiles);\n    }\n  }, [upload.uploadedFiles, upload.uploadState, onUpload]);\n  \n  return {\n    dragDropState: upload.dragDropState,\n    dragDropProps: upload.dragDropProps,\n    uploadedFiles: upload.uploadedFiles,\n    progress: upload.progress,\n    error: upload.error,\n    clearFiles: upload.clearFiles,\n    removeFile: upload.removeFile\n  };\n}"],
      names: ["UploadState", "useDropzoneUpload", "useImageUpload", "useSingleImageUpload", "DEFAULT_CONFIG", "maxSizeBytes", "allowedTypes", "generateThumbnails", "thumbnailSizes", "enableDragDrop", "autoProcess", "validation", "minWidth", "minHeight", "maxWidth", "maxHeight", "aspectRatio", "undefined", "aspectRatioTolerance", "config", "onUpload", "onError", "finalConfig", "uploadState", "setUploadState", "useState", "uploadedFiles", "setUploadedFiles", "currentFile", "setCurrentFile", "progress", "setProgress", "error", "setError", "dragDropState", "setDragDropState", "isDragActive", "isDragAccept", "isDragReject", "draggedFiles", "fileInputRef", "useRef", "uploadIdCounter", "data", "validationResult", "useImageValidation", "file", "metadata", "useImageMetadata", "thumbnail", "useImageThumbnail", "generateUploadId", "useCallback", "Date", "now", "current", "updateProgress", "stage", "percentage", "message", "handleError", "type", "uploadError", "Error", "String", "originalError", "validateFile", "errors", "warnings", "includes", "push", "join", "size", "toFixed", "imageMetadata", "Promise", "resolve", "reject", "img", "Image", "onload", "dimensions", "width", "naturalWidth", "height", "naturalHeight", "fileSize", "fileType", "lastModified", "onerror", "src", "URL", "createObjectURL", "targetRatio", "tolerance", "Math", "abs", "isValid", "length", "thumbnails", "canvas", "document", "createElement", "ctx", "getContext", "drawImage", "toDataURL", "revokeObjectURL", "console", "warn", "processFile", "uploadId", "preview", "processedResult", "processImageForTryon", "uploadedFile", "uploadTime", "uploadFile", "prev", "uploadFiles", "files", "results", "result", "name", "removeFile", "updated", "filter", "f", "removedFile", "find", "Object", "values", "forEach", "url", "startsWith", "clearFiles", "openFilePicker", "click", "handleFileInputChange", "event", "Array", "from", "target", "value", "handleDragEnter", "preventDefault", "stopPropagation", "dataTransfer", "hasValidFiles", "some", "handleDragLeave", "handleDragOver", "handleDrop", "useEffect", "fileInputProps", "ref", "accept", "multiple", "onChange", "style", "display", "dragDropProps", "onDragEnter", "onDragLeave", "onDragOver", "onDrop", "upload", "uploadSingleFile"],
      mappings: "AAAA;;;;;;;;;;;;IAmBYA,WAAW;eAAXA;;IAmiBIC,iBAAiB;eAAjBA;;IArbAC,cAAc;eAAdA;;IA+ZAC,oBAAoB;eAApBA;;;uBA3hByC;+BAQlD;AAMA,IAAA,AAAKH,qCAAAA;;;;;;WAAAA;;AAuFZ;;CAEC,GACD,MAAMI,iBAAyC;IAC7CC,cAAc,KAAK,OAAO;IAC1BC,cAAc;QAAC;QAAc;QAAa;QAAc;KAAY;IACpEC,oBAAoB;IACpBC,gBAAgB;QAAC;QAAK;QAAK;KAAI;IAC/BC,gBAAgB;IAChBC,aAAa;IACbC,YAAY;QACVC,UAAU;QACVC,WAAW;QACXC,UAAU;QACVC,WAAW;QACXC,aAAaC;QACbC,sBAAsB;IACxB;AACF;AAKO,SAAShB,eACdiB,SAAuB,CAAC,CAAC,EACzBC,QAAuC,EACvCC,OAAsC;IAEtC,MAAMC,cAAc;QAAE,GAAGlB,cAAc;QAAE,GAAGe,MAAM;IAAC;IAEnD,QAAQ;IACR,MAAM,CAACI,aAAaC,eAAe,GAAGC,IAAAA,eAAQ;IAC9C,MAAM,CAACC,eAAeC,iBAAiB,GAAGF,IAAAA,eAAQ,EAAiB,EAAE;IACrE,MAAM,CAACG,aAAaC,eAAe,GAAGJ,IAAAA,eAAQ,EAAsB;IACpE,MAAM,CAACK,UAAUC,YAAY,GAAGN,IAAAA,eAAQ,EAAwB;IAChE,MAAM,CAACO,OAAOC,SAAS,GAAGR,IAAAA,eAAQ,EAAqB;IACvD,MAAM,CAACS,eAAeC,iBAAiB,GAAGV,IAAAA,eAAQ,EAAgB;QAChEW,cAAc;QACdC,cAAc;QACdC,cAAc;QACdC,cAAc,EAAE;IAClB;IAEA,OAAO;IACP,MAAMC,eAAeC,IAAAA,aAAM,EAAmB;IAC9C,MAAMC,kBAAkBD,IAAAA,aAAM,EAAC;IAE/B,uBAAuB;IACvB,MAAM,EAAEE,MAAMC,gBAAgB,EAAE,GAAGC,IAAAA,iCAAkB,EAACjB,aAAakB,QAAQ,MAAM;IACjF,MAAM,EAAEH,MAAMI,QAAQ,EAAE,GAAGC,IAAAA,+BAAgB,EAACpB,aAAakB,QAAQ,MAAM;IACvE,MAAM,EAAEH,MAAMM,SAAS,EAAE,GAAGC,IAAAA,gCAAiB,EAACtB,aAAakB,QAAQ,MAAM,KAAK;IAE9E,4BAA4B;IAC5B,MAAMK,mBAAmBC,IAAAA,kBAAW,EAAC;QACnC,OAAO,CAAC,OAAO,EAAEC,KAAKC,GAAG,GAAG,CAAC,EAAE,EAAEZ,gBAAgBa,OAAO,EAAE;IAC5D,GAAG,EAAE;IAEL,kBAAkB;IAClB,MAAMC,iBAAiBJ,IAAAA,kBAAW,EAAC,CAACK,OAAgCC,YAAoBC;QACtF5B,YAAY;YAAE0B;YAAOC;YAAYC;QAAQ;IAC3C,GAAG,EAAE;IAEL,gBAAgB;IAChB,MAAMC,cAAcR,IAAAA,kBAAW,EAAC,CAACpB,OAAgB6B,OAA4B,SAAS;QACpF,MAAMC,cAA2B;YAC/BD;YACAF,SAAS3B,iBAAiB+B,QAAQ/B,MAAM2B,OAAO,GAAGK,OAAOhC;YACzDiC,eAAejC,iBAAiB+B,QAAQ/B,QAAQf;QAClD;QAEAgB,SAAS6B;QACTtC;QACAH,UAAUyC;IACZ,GAAG;QAACzC;KAAQ;IAEZ,gBAAgB;IAChB,MAAM6C,eAAed,IAAAA,kBAAW,EAAC,OAAON;QACtC,MAAMqB,SAAmB,EAAE;QAC3B,MAAMC,WAAqB,EAAE;QAE7B,uBAAuB;QACvB,IAAI,CAAC9C,YAAYhB,YAAY,CAAC+D,QAAQ,CAACvB,KAAKe,IAAI,GAAG;YACjDM,OAAOG,IAAI,CAAC,CAAC,UAAU,EAAExB,KAAKe,IAAI,CAAC,kCAAkC,EAAEvC,YAAYhB,YAAY,CAACiE,IAAI,CAAC,OAAO;QAC9G;QAEA,uBAAuB;QACvB,IAAIzB,KAAK0B,IAAI,GAAGlD,YAAYjB,YAAY,EAAE;YACxC8D,OAAOG,IAAI,CAAC,CAAC,UAAU,EAAE,AAACxB,CAAAA,KAAK0B,IAAI,GAAG,OAAO,IAAG,EAAGC,OAAO,CAAC,GAAG,oBAAoB,EAAE,AAACnD,CAAAA,YAAYjB,YAAY,GAAG,OAAO,IAAG,EAAGoE,OAAO,CAAC,GAAG,EAAE,CAAC;QAC7I;QAEA,iDAAiD;QACjD,IAAI;YACF,MAAMC,gBAAgB,MAAM,IAAIC,QAAuB,CAACC,SAASC;gBAC/D,MAAMC,MAAM,IAAIC;gBAChBD,IAAIE,MAAM,GAAG;oBACXJ,QAAQ;wBACNK,YAAY;4BAAEC,OAAOJ,IAAIK,YAAY;4BAAEC,QAAQN,IAAIO,aAAa;wBAAC;wBACjEC,UAAUxC,KAAK0B,IAAI;wBACnBe,UAAUzC,KAAKe,IAAI;wBACnB2B,cAAc,IAAInC,KAAKP,KAAK0C,YAAY;oBAC1C;gBACF;gBACAV,IAAIW,OAAO,GAAGZ;gBACdC,IAAIY,GAAG,GAAGC,IAAIC,eAAe,CAAC9C;YAChC;YAEA,MAAM,EAAEoC,KAAK,EAAEE,MAAM,EAAE,GAAGV,cAAcO,UAAU;YAClD,MAAM,EAAEtE,UAAU,EAAE,GAAGW;YAEvB,IAAI4D,QAAQvE,WAAWC,QAAQ,IAAIwE,SAASzE,WAAWE,SAAS,EAAE;gBAChEsD,OAAOG,IAAI,CAAC,CAAC,iBAAiB,EAAEY,MAAM,CAAC,EAAEE,OAAO,yBAAyB,EAAEzE,WAAWC,QAAQ,CAAC,CAAC,EAAED,WAAWE,SAAS,EAAE;YAC1H;YAEA,IAAIqE,QAAQvE,WAAWG,QAAQ,IAAIsE,SAASzE,WAAWI,SAAS,EAAE;gBAChEoD,OAAOG,IAAI,CAAC,CAAC,iBAAiB,EAAEY,MAAM,CAAC,EAAEE,OAAO,yBAAyB,EAAEzE,WAAWG,QAAQ,CAAC,CAAC,EAAEH,WAAWI,SAAS,EAAE;YAC1H;YAEA,IAAIJ,WAAWK,WAAW,EAAE;gBAC1B,MAAMA,cAAckE,QAAQE;gBAC5B,MAAMS,cAAclF,WAAWK,WAAW;gBAC1C,MAAM8E,YAAYnF,WAAWO,oBAAoB;gBAEjD,IAAI6E,KAAKC,GAAG,CAAChF,cAAc6E,eAAeC,WAAW;oBACnD1B,SAASE,IAAI,CAAC,CAAC,mBAAmB,EAAEtD,YAAYyD,OAAO,CAAC,GAAG,0BAA0B,EAAEoB,YAAYpB,OAAO,CAAC,IAAI;gBACjH;YACF;YAEA,OAAO;gBACLwB,SAAS9B,OAAO+B,MAAM,KAAK;gBAC3B/B;gBACAC;gBACArB,UAAU2B;YACZ;QACF,EAAE,OAAO1C,OAAO;YACdmC,OAAOG,IAAI,CAAC;YACZ,OAAO;gBAAE2B,SAAS;gBAAO9B;gBAAQC;YAAS;QAC5C;IACF,GAAG;QAAC9C;KAAY;IAEhB,sBAAsB;IACtB,MAAMf,qBAAqB6C,IAAAA,kBAAW,EAAC,OAAON;QAC5C,MAAMqD,aAAqC,CAAC;QAE5C,IAAI,CAAC7E,YAAYf,kBAAkB,EAAE;YACnC,OAAO4F;QACT;QAEA,IAAI;YACF,KAAK,MAAM3B,QAAQlD,YAAYd,cAAc,CAAE;gBAC7C,MAAM4F,SAASC,SAASC,aAAa,CAAC;gBACtC,MAAMC,MAAMH,OAAOI,UAAU,CAAC;gBAE9B,IAAI,CAACD,KAAK;gBAEV,MAAMzB,MAAM,IAAIC;gBAChB,MAAM,IAAIJ,QAAQ,CAACC,SAASC;oBAC1BC,IAAIE,MAAM,GAAGJ;oBACbE,IAAIW,OAAO,GAAGZ;oBACdC,IAAIY,GAAG,GAAGC,IAAIC,eAAe,CAAC9C;gBAChC;gBAEA,gDAAgD;gBAChD,MAAM9B,cAAc8D,IAAII,KAAK,GAAGJ,IAAIM,MAAM;gBAC1C,IAAIF,QAAQV;gBACZ,IAAIY,SAASZ;gBAEb,IAAIxD,cAAc,GAAG;oBACnBoE,SAASZ,OAAOxD;gBAClB,OAAO;oBACLkE,QAAQV,OAAOxD;gBACjB;gBAEAoF,OAAOlB,KAAK,GAAGA;gBACfkB,OAAOhB,MAAM,GAAGA;gBAChBmB,IAAIE,SAAS,CAAC3B,KAAK,GAAG,GAAGI,OAAOE;gBAEhCe,UAAU,CAAC3B,KAAK,GAAG4B,OAAOM,SAAS,CAAC,cAAc;gBAClDf,IAAIgB,eAAe,CAAC7B,IAAIY,GAAG;YAC7B;QACF,EAAE,OAAO1D,OAAO;YACd4E,QAAQC,IAAI,CAAC,kCAAkC7E;QACjD;QAEA,OAAOmE;IACT,GAAG;QAAC7E,YAAYf,kBAAkB;QAAEe,YAAYd,cAAc;KAAC;IAE/D,wBAAwB;IACxB,MAAMsG,cAAc1D,IAAAA,kBAAW,EAAC,OAAON;QACrC,MAAMiE,WAAW5D;QAEjB3B;QACAgC,eAAe,cAAc,IAAI;QAEjC,gBAAgB;QAChB,MAAM7C,aAAa,MAAMuD,aAAapB;QACtC,IAAI,CAACnC,WAAWsF,OAAO,EAAE;YACvB,MAAM,IAAIlC,MAAMpD,WAAWwD,MAAM,CAACI,IAAI,CAAC;QACzC;QAEAf,eAAe,cAAc,IAAI;QAEjC,mBAAmB;QACnB,MAAMwD,UAAUrB,IAAIC,eAAe,CAAC9C;QAEpCU,eAAe,aAAa,IAAI;QAEhC,sBAAsB;QACtB,MAAM2C,aAAa,MAAM5F,mBAAmBuC;QAE5CU,eAAe,YAAY,IAAI;QAE/B,0BAA0B;QAC1B,IAAIyD;QACJ,IAAI3F,YAAYZ,WAAW,EAAE;YAC3B,IAAI;gBACFuG,kBAAkB,MAAMC,IAAAA,mCAAoB,EAACpE;YAC/C,EAAE,OAAOd,OAAO;gBACd4E,QAAQC,IAAI,CAAC,2BAA2B7E;YAC1C;QACF;QAEA,MAAMmF,eAA6B;YACjCrE;YACAkE;YACAb;YACApD,UAAUpC,WAAWoC,QAAQ;YAC7BkE;YACAF;YACAK,YAAY/D,KAAKC,GAAG;QACtB;QAEAE,eAAe,YAAY,KAAK;QAChChC;QAEA,OAAO2F;IACT,GAAG;QAAChE;QAAkBK;QAAgBU;QAAc3D;QAAoBe,YAAYZ,WAAW;KAAC;IAEhG,qBAAqB;IACrB,MAAM2G,aAAajE,IAAAA,kBAAW,EAAC,OAAON;QACpC,IAAI;YACFb,SAAS;YACT,MAAMkF,eAAe,MAAML,YAAYhE;YAEvCnB,iBAAiB2F,CAAAA,OAAQ;uBAAIA;oBAAMH;iBAAa;YAChDtF,eAAesF;YACf/F,WAAW+F;YAEX,OAAOA;QACT,EAAE,OAAOnF,OAAO;YACd4B,YAAY5B,OAAO;YACnB,MAAMA;QACR;IACF,GAAG;QAAC8E;QAAa1F;QAAUwC;KAAY;IAEvC,+BAA+B;IAC/B,MAAM2D,cAAcnE,IAAAA,kBAAW,EAAC,OAAOoE;QACrC,MAAMC,UAA0B,EAAE;QAElC,KAAK,MAAM3E,QAAQ0E,MAAO;YACxB,IAAI;gBACF,MAAME,SAAS,MAAML,WAAWvE;gBAChC2E,QAAQnD,IAAI,CAACoD;YACf,EAAE,OAAO1F,OAAO;gBACd4E,QAAQ5E,KAAK,CAAC,0BAA0Bc,KAAK6E,IAAI,EAAE3F;YACrD;QACF;QAEA,OAAOyF;IACT,GAAG;QAACJ;KAAW;IAEf,uBAAuB;IACvB,MAAMO,aAAaxE,IAAAA,kBAAW,EAAC,CAAC2D;QAC9BpF,iBAAiB2F,CAAAA;YACf,MAAMO,UAAUP,KAAKQ,MAAM,CAACC,CAAAA,IAAKA,EAAEhB,QAAQ,KAAKA;YAChD,MAAMiB,cAAcV,KAAKW,IAAI,CAACF,CAAAA,IAAKA,EAAEhB,QAAQ,KAAKA;YAElD,IAAIiB,aAAa;gBACfrC,IAAIgB,eAAe,CAACqB,YAAYhB,OAAO;gBACvCkB,OAAOC,MAAM,CAACH,YAAY7B,UAAU,EAAEiC,OAAO,CAACC,CAAAA;oBAC5C,IAAIA,IAAIC,UAAU,CAAC,UAAU;wBAC3B3C,IAAIgB,eAAe,CAAC0B;oBACtB;gBACF;YACF;YAEA,OAAOR;QACT;QAEA,IAAIjG,aAAamF,aAAaA,UAAU;YACtClF,eAAe;QACjB;IACF,GAAG;QAACD;KAAY;IAEhB,kBAAkB;IAClB,MAAM2G,aAAanF,IAAAA,kBAAW,EAAC;QAC7B1B,cAAc0G,OAAO,CAACtF,CAAAA;YACpB6C,IAAIgB,eAAe,CAAC7D,KAAKkE,OAAO;YAChCkB,OAAOC,MAAM,CAACrF,KAAKqD,UAAU,EAAEiC,OAAO,CAACC,CAAAA;gBACrC,IAAIA,IAAIC,UAAU,CAAC,UAAU;oBAC3B3C,IAAIgB,eAAe,CAAC0B;gBACtB;YACF;QACF;QAEA1G,iBAAiB,EAAE;QACnBE,eAAe;QACfI,SAAS;QACTT;QACAO,YAAY;IACd,GAAG;QAACL;KAAc;IAElB,sBAAsB;IACtB,MAAM8G,iBAAiBpF,IAAAA,kBAAW,EAAC;QACjCZ,aAAae,OAAO,EAAEkF;IACxB,GAAG,EAAE;IAEL,2BAA2B;IAC3B,MAAMC,wBAAwBtF,IAAAA,kBAAW,EAAC,CAACuF;QACzC,MAAMnB,QAAQoB,MAAMC,IAAI,CAACF,MAAMG,MAAM,CAACtB,KAAK,IAAI,EAAE;QACjD,IAAIA,MAAMtB,MAAM,GAAG,GAAG;YACpBqB,YAAYC;QACd;QACA,2CAA2C;QAC3CmB,MAAMG,MAAM,CAACC,KAAK,GAAG;IACvB,GAAG;QAACxB;KAAY;IAEhB,yBAAyB;IACzB,MAAMyB,kBAAkB5F,IAAAA,kBAAW,EAAC,CAACuF;QACnCA,MAAMM,cAAc;QACpBN,MAAMO,eAAe;QAErB,MAAM1B,QAAQoB,MAAMC,IAAI,CAACF,MAAMQ,YAAY,CAAC3B,KAAK;QACjD,MAAM4B,gBAAgB5B,MAAM6B,IAAI,CAACvG,CAAAA,OAAQxB,YAAYhB,YAAY,CAAC+D,QAAQ,CAACvB,KAAKe,IAAI;QAEpF1B,iBAAiB;YACfC,cAAc;YACdC,cAAc+G;YACd9G,cAAc,CAAC8G;YACf7G,cAAciF;QAChB;IACF,GAAG;QAAClG,YAAYhB,YAAY;KAAC;IAE7B,MAAMgJ,kBAAkBlG,IAAAA,kBAAW,EAAC,CAACuF;QACnCA,MAAMM,cAAc;QACpBN,MAAMO,eAAe;QAErB/G,iBAAiB;YACfC,cAAc;YACdC,cAAc;YACdC,cAAc;YACdC,cAAc,EAAE;QAClB;IACF,GAAG,EAAE;IAEL,MAAMgH,iBAAiBnG,IAAAA,kBAAW,EAAC,CAACuF;QAClCA,MAAMM,cAAc;QACpBN,MAAMO,eAAe;IACvB,GAAG,EAAE;IAEL,MAAMM,aAAapG,IAAAA,kBAAW,EAAC,CAACuF;QAC9BA,MAAMM,cAAc;QACpBN,MAAMO,eAAe;QAErB,MAAM1B,QAAQoB,MAAMC,IAAI,CAACF,MAAMQ,YAAY,CAAC3B,KAAK,EAAEM,MAAM,CAAChF,CAAAA,OACxDxB,YAAYhB,YAAY,CAAC+D,QAAQ,CAACvB,KAAKe,IAAI;QAG7C1B,iBAAiB;YACfC,cAAc;YACdC,cAAc;YACdC,cAAc;YACdC,cAAc,EAAE;QAClB;QAEA,IAAIiF,MAAMtB,MAAM,GAAG,GAAG;YACpBqB,YAAYC;QACd;IACF,GAAG;QAAClG,YAAYhB,YAAY;QAAEiH;KAAY;IAE1C,qBAAqB;IACrBkC,IAAAA,gBAAS,EAAC;QACR,OAAO;YACL/H,cAAc0G,OAAO,CAACtF,CAAAA;gBACpB6C,IAAIgB,eAAe,CAAC7D,KAAKkE,OAAO;gBAChCkB,OAAOC,MAAM,CAACrF,KAAKqD,UAAU,EAAEiC,OAAO,CAACC,CAAAA;oBACrC,IAAIA,IAAIC,UAAU,CAAC,UAAU;wBAC3B3C,IAAIgB,eAAe,CAAC0B;oBACtB;gBACF;YACF;QACF;IACF,GAAG,EAAE;IAEL,OAAO;QACL,QAAQ;QACR9G;QACAG;QACAE;QACAE;QACAE;QACAE;QAEA,UAAU;QACVmF;QACAE;QACAK;QACAW;QACAC;QAEA,mBAAmB;QACnBkB,gBAAgB;YACdC,KAAKnH;YACLqB,MAAM;YACN+F,QAAQtI,YAAYhB,YAAY,CAACiE,IAAI,CAAC;YACtCsF,UAAU;YACVC,UAAUpB;YACVqB,OAAO;gBAAEC,SAAS;YAAO;QAC3B;QAEA,wCAAwC;QACxC,GAAI1I,YAAYb,cAAc,GAAG;YAC/BwJ,eAAe;gBACbC,aAAalB;gBACbmB,aAAab;gBACbc,YAAYb;gBACZc,QAAQb;YACV;QACF,IAAI,CAAC,CAAC;QAEN,QAAQ;QACRtF;QACA3D;IACF;AACF;AAKO,SAASJ,qBACdgB,SAAuB,CAAC,CAAC,EACzBC,QAAuC,EACvCC,OAAsC;IAEtC,MAAMiJ,SAASpK,eAAeiB,QAAQC,UAAUC;IAEhD,MAAMkJ,mBAAmBnH,IAAAA,kBAAW,EAAC,OAAON;QAC1CwH,OAAO/B,UAAU,IAAI,uBAAuB;QAC5C,OAAO+B,OAAOjD,UAAU,CAACvE;IAC3B,GAAG;QAACwH;KAAO;IAEX,OAAO;QACL,GAAGA,MAAM;QACTjD,YAAYkD;QACZzH,MAAMwH,OAAO1I,WAAW;IAC1B;AACF;AAKO,SAAS3B,kBACdkB,SAAuB,CAAC,CAAC,EACzBC,QAA0C,EAC1CC,OAAsC;IAEtC,MAAMiJ,SAASpK,eACb;QAAE,GAAGiB,MAAM;QAAEV,gBAAgB;IAAK,GAClCQ,WACAI;IAGF,iCAAiC;IACjCoI,IAAAA,gBAAS,EAAC;QACR,IAAIa,OAAO5I,aAAa,CAACwE,MAAM,GAAG,KAAKoE,OAAO/I,WAAW,iBAA2B;YAClFH,WAAWkJ,OAAO5I,aAAa;QACjC;IACF,GAAG;QAAC4I,OAAO5I,aAAa;QAAE4I,OAAO/I,WAAW;QAAEH;KAAS;IAEvD,OAAO;QACLc,eAAeoI,OAAOpI,aAAa;QACnC+H,eAAeK,OAAOL,aAAa;QACnCvI,eAAe4I,OAAO5I,aAAa;QACnCI,UAAUwI,OAAOxI,QAAQ;QACzBE,OAAOsI,OAAOtI,KAAK;QACnBuG,YAAY+B,OAAO/B,UAAU;QAC7BX,YAAY0C,OAAO1C,UAAU;IAC/B;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3efd2eca202438baefca8c3d9d3685022d639a5f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1phs4ui9iw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1phs4ui9iw();
cov_1phs4ui9iw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1phs4ui9iw().f[0]++;
  cov_1phs4ui9iw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1phs4ui9iw().s[3]++;
_export(exports, {
  UploadState: function () {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[1]++;
    cov_1phs4ui9iw().s[4]++;
    return UploadState;
  },
  useDropzoneUpload: function () {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[2]++;
    cov_1phs4ui9iw().s[5]++;
    return useDropzoneUpload;
  },
  useImageUpload: function () {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[3]++;
    cov_1phs4ui9iw().s[6]++;
    return useImageUpload;
  },
  useSingleImageUpload: function () {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[4]++;
    cov_1phs4ui9iw().s[7]++;
    return useSingleImageUpload;
  }
});
const _react =
/* istanbul ignore next */
(cov_1phs4ui9iw().s[8]++, require("react"));
const _businesslayer =
/* istanbul ignore next */
(cov_1phs4ui9iw().s[9]++, require("../business-layer"));
var UploadState =
/* istanbul ignore next */
(/*#__PURE__*/cov_1phs4ui9iw().s[10]++, function (UploadState) {
  /* istanbul ignore next */
  cov_1phs4ui9iw().f[5]++;
  cov_1phs4ui9iw().s[11]++;
  UploadState["IDLE"] = "idle";
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[12]++;
  UploadState["VALIDATING"] = "validating";
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[13]++;
  UploadState["PROCESSING"] = "processing";
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[14]++;
  UploadState["COMPLETE"] = "complete";
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[15]++;
  UploadState["ERROR"] = "error";
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[16]++;
  return UploadState;
}({}));
/**
 * Default upload configuration
 */
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_1phs4ui9iw().s[17]++, {
  maxSizeBytes: 10 * 1024 * 1024,
  allowedTypes: ['image/jpeg', 'image/png', 'image/webp', 'image/gif'],
  generateThumbnails: true,
  thumbnailSizes: [150, 300, 600],
  enableDragDrop: true,
  autoProcess: false,
  validation: {
    minWidth: 256,
    minHeight: 256,
    maxWidth: 4096,
    maxHeight: 4096,
    aspectRatio: undefined,
    aspectRatioTolerance: 0.1
  }
});
function useImageUpload(config =
/* istanbul ignore next */
(cov_1phs4ui9iw().b[0][0]++, {}), onUpload, onError) {
  /* istanbul ignore next */
  cov_1phs4ui9iw().f[6]++;
  const finalConfig =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[18]++, {
    ...DEFAULT_CONFIG,
    ...config
  });
  // State
  const [uploadState, setUploadState] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[19]++, (0, _react.useState)("idle"));
  const [uploadedFiles, setUploadedFiles] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[20]++, (0, _react.useState)([]));
  const [currentFile, setCurrentFile] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[21]++, (0, _react.useState)(null));
  const [progress, setProgress] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[22]++, (0, _react.useState)(null));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[23]++, (0, _react.useState)(null));
  const [dragDropState, setDragDropState] =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[24]++, (0, _react.useState)({
    isDragActive: false,
    isDragAccept: false,
    isDragReject: false,
    draggedFiles: []
  }));
  // Refs
  const fileInputRef =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[25]++, (0, _react.useRef)(null));
  const uploadIdCounter =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[26]++, (0, _react.useRef)(0));
  // Business layer hooks
  const {
    data: validationResult
  } =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[27]++, (0, _businesslayer.useImageValidation)(
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[1][0]++, currentFile?.file) ||
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[1][1]++, null), false));
  const {
    data: metadata
  } =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[28]++, (0, _businesslayer.useImageMetadata)(
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[2][0]++, currentFile?.file) ||
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[2][1]++, null), false));
  const {
    data: thumbnail
  } =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[29]++, (0, _businesslayer.useImageThumbnail)(
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[3][0]++, currentFile?.file) ||
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[3][1]++, null), 150, false));
  // Generate unique upload ID
  const generateUploadId =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[30]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[7]++;
    cov_1phs4ui9iw().s[31]++;
    return `upload_${Date.now()}_${++uploadIdCounter.current}`;
  }, []));
  // Update progress
  const updateProgress =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[32]++, (0, _react.useCallback)((stage, percentage, message) => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[8]++;
    cov_1phs4ui9iw().s[33]++;
    setProgress({
      stage,
      percentage,
      message
    });
  }, []));
  // Handle errors
  const handleError =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[34]++, (0, _react.useCallback)((error, type =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().b[4][0]++, 'unknown')) => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[9]++;
    const uploadError =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[35]++, {
      type,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[5][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[5][1]++, String(error)),
      originalError: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[6][0]++, error) :
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[6][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[36]++;
    setError(uploadError);
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[37]++;
    setUploadState("error");
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[38]++;
    onError?.(uploadError);
  }, [onError]));
  // Validate file
  const validateFile =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[39]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[10]++;
    const errors =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[40]++, []);
    const warnings =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[41]++, []);
    // File type validation
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[42]++;
    if (!finalConfig.allowedTypes.includes(file.type)) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[7][0]++;
      cov_1phs4ui9iw().s[43]++;
      errors.push(`File type ${file.type} is not supported. Allowed types: ${finalConfig.allowedTypes.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[7][1]++;
    }
    // File size validation
    cov_1phs4ui9iw().s[44]++;
    if (file.size > finalConfig.maxSizeBytes) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[8][0]++;
      cov_1phs4ui9iw().s[45]++;
      errors.push(`File size ${(file.size / 1024 / 1024).toFixed(2)}MB exceeds limit of ${(finalConfig.maxSizeBytes / 1024 / 1024).toFixed(2)}MB`);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[8][1]++;
    }
    // Image dimension validation (requires metadata)
    cov_1phs4ui9iw().s[46]++;
    try {
      const imageMetadata =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[47]++, await new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[11]++;
        const img =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[48]++, new Image());
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[49]++;
        img.onload = () => {
          /* istanbul ignore next */
          cov_1phs4ui9iw().f[12]++;
          cov_1phs4ui9iw().s[50]++;
          resolve({
            dimensions: {
              width: img.naturalWidth,
              height: img.naturalHeight
            },
            fileSize: file.size,
            fileType: file.type,
            lastModified: new Date(file.lastModified)
          });
        };
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[51]++;
        img.onerror = reject;
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[52]++;
        img.src = URL.createObjectURL(file);
      }));
      const {
        width,
        height
      } =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[53]++, imageMetadata.dimensions);
      const {
        validation
      } =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[54]++, finalConfig);
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[55]++;
      if (
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[10][0]++, width < validation.minWidth) ||
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[10][1]++, height < validation.minHeight)) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().b[9][0]++;
        cov_1phs4ui9iw().s[56]++;
        errors.push(`Image dimensions ${width}x${height} are too small. Minimum: ${validation.minWidth}x${validation.minHeight}`);
      } else
      /* istanbul ignore next */
      {
        cov_1phs4ui9iw().b[9][1]++;
      }
      cov_1phs4ui9iw().s[57]++;
      if (
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[12][0]++, width > validation.maxWidth) ||
      /* istanbul ignore next */
      (cov_1phs4ui9iw().b[12][1]++, height > validation.maxHeight)) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().b[11][0]++;
        cov_1phs4ui9iw().s[58]++;
        errors.push(`Image dimensions ${width}x${height} are too large. Maximum: ${validation.maxWidth}x${validation.maxHeight}`);
      } else
      /* istanbul ignore next */
      {
        cov_1phs4ui9iw().b[11][1]++;
      }
      cov_1phs4ui9iw().s[59]++;
      if (validation.aspectRatio) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().b[13][0]++;
        const aspectRatio =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[60]++, width / height);
        const targetRatio =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[61]++, validation.aspectRatio);
        const tolerance =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[62]++, validation.aspectRatioTolerance);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[63]++;
        if (Math.abs(aspectRatio - targetRatio) > tolerance) {
          /* istanbul ignore next */
          cov_1phs4ui9iw().b[14][0]++;
          cov_1phs4ui9iw().s[64]++;
          warnings.push(`Image aspect ratio ${aspectRatio.toFixed(2)} differs from recommended ${targetRatio.toFixed(2)}`);
        } else
        /* istanbul ignore next */
        {
          cov_1phs4ui9iw().b[14][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1phs4ui9iw().b[13][1]++;
      }
      cov_1phs4ui9iw().s[65]++;
      return {
        isValid: errors.length === 0,
        errors,
        warnings,
        metadata: imageMetadata
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[66]++;
      errors.push('Failed to validate image dimensions');
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[67]++;
      return {
        isValid: false,
        errors,
        warnings
      };
    }
  }, [finalConfig]));
  // Generate thumbnails
  const generateThumbnails =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[68]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[13]++;
    const thumbnails =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[69]++, {});
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[70]++;
    if (!finalConfig.generateThumbnails) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[15][0]++;
      cov_1phs4ui9iw().s[71]++;
      return thumbnails;
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[15][1]++;
    }
    cov_1phs4ui9iw().s[72]++;
    try {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[73]++;
      for (const size of finalConfig.thumbnailSizes) {
        const canvas =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[74]++, document.createElement('canvas'));
        const ctx =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[75]++, canvas.getContext('2d'));
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[76]++;
        if (!ctx) {
          /* istanbul ignore next */
          cov_1phs4ui9iw().b[16][0]++;
          cov_1phs4ui9iw().s[77]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1phs4ui9iw().b[16][1]++;
        }
        const img =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[78]++, new Image());
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[79]++;
        await new Promise((resolve, reject) => {
          /* istanbul ignore next */
          cov_1phs4ui9iw().f[14]++;
          cov_1phs4ui9iw().s[80]++;
          img.onload = resolve;
          /* istanbul ignore next */
          cov_1phs4ui9iw().s[81]++;
          img.onerror = reject;
          /* istanbul ignore next */
          cov_1phs4ui9iw().s[82]++;
          img.src = URL.createObjectURL(file);
        });
        // Calculate dimensions maintaining aspect ratio
        const aspectRatio =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[83]++, img.width / img.height);
        let width =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[84]++, size);
        let height =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[85]++, size);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[86]++;
        if (aspectRatio > 1) {
          /* istanbul ignore next */
          cov_1phs4ui9iw().b[17][0]++;
          cov_1phs4ui9iw().s[87]++;
          height = size / aspectRatio;
        } else {
          /* istanbul ignore next */
          cov_1phs4ui9iw().b[17][1]++;
          cov_1phs4ui9iw().s[88]++;
          width = size * aspectRatio;
        }
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[89]++;
        canvas.width = width;
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[90]++;
        canvas.height = height;
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[91]++;
        ctx.drawImage(img, 0, 0, width, height);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[92]++;
        thumbnails[size] = canvas.toDataURL('image/jpeg', 0.8);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[93]++;
        URL.revokeObjectURL(img.src);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[94]++;
      console.warn('Failed to generate thumbnails:', error);
    }
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[95]++;
    return thumbnails;
  }, [finalConfig.generateThumbnails, finalConfig.thumbnailSizes]));
  // Process uploaded file
  const processFile =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[96]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[15]++;
    const uploadId =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[97]++, generateUploadId());
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[98]++;
    setUploadState("validating");
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[99]++;
    updateProgress('validation', 10, 'Validating file...');
    // Validate file
    const validation =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[100]++, await validateFile(file));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[101]++;
    if (!validation.isValid) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[18][0]++;
      cov_1phs4ui9iw().s[102]++;
      throw new Error(validation.errors.join(', '));
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[18][1]++;
    }
    cov_1phs4ui9iw().s[103]++;
    updateProgress('processing', 30, 'Processing image...');
    // Generate preview
    const preview =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[104]++, URL.createObjectURL(file));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[105]++;
    updateProgress('thumbnail', 60, 'Generating thumbnails...');
    // Generate thumbnails
    const thumbnails =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[106]++, await generateThumbnails(file));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[107]++;
    updateProgress('complete', 80, 'Finalizing...');
    // Auto-process if enabled
    let processedResult;
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[108]++;
    if (finalConfig.autoProcess) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[19][0]++;
      cov_1phs4ui9iw().s[109]++;
      try {
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[110]++;
        processedResult = await (0, _businesslayer.processImageForTryon)(file);
      } catch (error) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[111]++;
        console.warn('Auto-processing failed:', error);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[19][1]++;
    }
    const uploadedFile =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[112]++, {
      file,
      preview,
      thumbnails,
      metadata: validation.metadata,
      processedResult,
      uploadId,
      uploadTime: Date.now()
    });
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[113]++;
    updateProgress('complete', 100, 'Upload complete');
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[114]++;
    setUploadState("complete");
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[115]++;
    return uploadedFile;
  }, [generateUploadId, updateProgress, validateFile, generateThumbnails, finalConfig.autoProcess]));
  // Handle file upload
  const uploadFile =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[116]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[16]++;
    cov_1phs4ui9iw().s[117]++;
    try {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[118]++;
      setError(null);
      const uploadedFile =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[119]++, await processFile(file));
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[120]++;
      setUploadedFiles(prev => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[17]++;
        cov_1phs4ui9iw().s[121]++;
        return [...prev, uploadedFile];
      });
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[122]++;
      setCurrentFile(uploadedFile);
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[123]++;
      onUpload?.(uploadedFile);
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[124]++;
      return uploadedFile;
    } catch (error) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[125]++;
      handleError(error, 'processing');
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[126]++;
      throw error;
    }
  }, [processFile, onUpload, handleError]));
  // Handle multiple file uploads
  const uploadFiles =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[127]++, (0, _react.useCallback)(async files => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[18]++;
    const results =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[128]++, []);
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[129]++;
    for (const file of files) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[130]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_1phs4ui9iw().s[131]++, await uploadFile(file));
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[132]++;
        results.push(result);
      } catch (error) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[133]++;
        console.error('Failed to upload file:', file.name, error);
      }
    }
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[134]++;
    return results;
  }, [uploadFile]));
  // Remove uploaded file
  const removeFile =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[135]++, (0, _react.useCallback)(uploadId => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[19]++;
    cov_1phs4ui9iw().s[136]++;
    setUploadedFiles(prev => {
      /* istanbul ignore next */
      cov_1phs4ui9iw().f[20]++;
      const updated =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[137]++, prev.filter(f => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[21]++;
        cov_1phs4ui9iw().s[138]++;
        return f.uploadId !== uploadId;
      }));
      const removedFile =
      /* istanbul ignore next */
      (cov_1phs4ui9iw().s[139]++, prev.find(f => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[22]++;
        cov_1phs4ui9iw().s[140]++;
        return f.uploadId === uploadId;
      }));
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[141]++;
      if (removedFile) {
        /* istanbul ignore next */
        cov_1phs4ui9iw().b[20][0]++;
        cov_1phs4ui9iw().s[142]++;
        URL.revokeObjectURL(removedFile.preview);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[143]++;
        Object.values(removedFile.thumbnails).forEach(url => {
          /* istanbul ignore next */
          cov_1phs4ui9iw().f[23]++;
          cov_1phs4ui9iw().s[144]++;
          if (url.startsWith('blob:')) {
            /* istanbul ignore next */
            cov_1phs4ui9iw().b[21][0]++;
            cov_1phs4ui9iw().s[145]++;
            URL.revokeObjectURL(url);
          } else
          /* istanbul ignore next */
          {
            cov_1phs4ui9iw().b[21][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1phs4ui9iw().b[20][1]++;
      }
      cov_1phs4ui9iw().s[146]++;
      return updated;
    });
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[147]++;
    if (currentFile?.uploadId === uploadId) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[22][0]++;
      cov_1phs4ui9iw().s[148]++;
      setCurrentFile(null);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[22][1]++;
    }
  }, [currentFile]));
  // Clear all files
  const clearFiles =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[149]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[24]++;
    cov_1phs4ui9iw().s[150]++;
    uploadedFiles.forEach(file => {
      /* istanbul ignore next */
      cov_1phs4ui9iw().f[25]++;
      cov_1phs4ui9iw().s[151]++;
      URL.revokeObjectURL(file.preview);
      /* istanbul ignore next */
      cov_1phs4ui9iw().s[152]++;
      Object.values(file.thumbnails).forEach(url => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[26]++;
        cov_1phs4ui9iw().s[153]++;
        if (url.startsWith('blob:')) {
          /* istanbul ignore next */
          cov_1phs4ui9iw().b[23][0]++;
          cov_1phs4ui9iw().s[154]++;
          URL.revokeObjectURL(url);
        } else
        /* istanbul ignore next */
        {
          cov_1phs4ui9iw().b[23][1]++;
        }
      });
    });
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[155]++;
    setUploadedFiles([]);
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[156]++;
    setCurrentFile(null);
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[157]++;
    setError(null);
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[158]++;
    setUploadState("idle");
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[159]++;
    setProgress(null);
  }, [uploadedFiles]));
  // Trigger file picker
  const openFilePicker =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[160]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[27]++;
    cov_1phs4ui9iw().s[161]++;
    fileInputRef.current?.click();
  }, []));
  // Handle file input change
  const handleFileInputChange =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[162]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[28]++;
    const files =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[163]++, Array.from(
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[24][0]++, event.target.files) ||
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[24][1]++, [])));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[164]++;
    if (files.length > 0) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[25][0]++;
      cov_1phs4ui9iw().s[165]++;
      uploadFiles(files);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[25][1]++;
    }
    // Reset input to allow same file selection
    cov_1phs4ui9iw().s[166]++;
    event.target.value = '';
  }, [uploadFiles]));
  // Drag and drop handlers
  const handleDragEnter =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[167]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[29]++;
    cov_1phs4ui9iw().s[168]++;
    event.preventDefault();
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[169]++;
    event.stopPropagation();
    const files =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[170]++, Array.from(event.dataTransfer.files));
    const hasValidFiles =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[171]++, files.some(file => {
      /* istanbul ignore next */
      cov_1phs4ui9iw().f[30]++;
      cov_1phs4ui9iw().s[172]++;
      return finalConfig.allowedTypes.includes(file.type);
    }));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[173]++;
    setDragDropState({
      isDragActive: true,
      isDragAccept: hasValidFiles,
      isDragReject: !hasValidFiles,
      draggedFiles: files
    });
  }, [finalConfig.allowedTypes]));
  const handleDragLeave =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[174]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[31]++;
    cov_1phs4ui9iw().s[175]++;
    event.preventDefault();
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[176]++;
    event.stopPropagation();
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[177]++;
    setDragDropState({
      isDragActive: false,
      isDragAccept: false,
      isDragReject: false,
      draggedFiles: []
    });
  }, []));
  const handleDragOver =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[178]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[32]++;
    cov_1phs4ui9iw().s[179]++;
    event.preventDefault();
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[180]++;
    event.stopPropagation();
  }, []));
  const handleDrop =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[181]++, (0, _react.useCallback)(event => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[33]++;
    cov_1phs4ui9iw().s[182]++;
    event.preventDefault();
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[183]++;
    event.stopPropagation();
    const files =
    /* istanbul ignore next */
    (cov_1phs4ui9iw().s[184]++, Array.from(event.dataTransfer.files).filter(file => {
      /* istanbul ignore next */
      cov_1phs4ui9iw().f[34]++;
      cov_1phs4ui9iw().s[185]++;
      return finalConfig.allowedTypes.includes(file.type);
    }));
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[186]++;
    setDragDropState({
      isDragActive: false,
      isDragAccept: false,
      isDragReject: false,
      draggedFiles: []
    });
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[187]++;
    if (files.length > 0) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[26][0]++;
      cov_1phs4ui9iw().s[188]++;
      uploadFiles(files);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[26][1]++;
    }
  }, [finalConfig.allowedTypes, uploadFiles]));
  // Cleanup on unmount
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[189]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[35]++;
    cov_1phs4ui9iw().s[190]++;
    return () => {
      /* istanbul ignore next */
      cov_1phs4ui9iw().f[36]++;
      cov_1phs4ui9iw().s[191]++;
      uploadedFiles.forEach(file => {
        /* istanbul ignore next */
        cov_1phs4ui9iw().f[37]++;
        cov_1phs4ui9iw().s[192]++;
        URL.revokeObjectURL(file.preview);
        /* istanbul ignore next */
        cov_1phs4ui9iw().s[193]++;
        Object.values(file.thumbnails).forEach(url => {
          /* istanbul ignore next */
          cov_1phs4ui9iw().f[38]++;
          cov_1phs4ui9iw().s[194]++;
          if (url.startsWith('blob:')) {
            /* istanbul ignore next */
            cov_1phs4ui9iw().b[27][0]++;
            cov_1phs4ui9iw().s[195]++;
            URL.revokeObjectURL(url);
          } else
          /* istanbul ignore next */
          {
            cov_1phs4ui9iw().b[27][1]++;
          }
        });
      });
    };
  }, []);
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[196]++;
  return {
    // State
    uploadState,
    uploadedFiles,
    currentFile,
    progress,
    error,
    dragDropState,
    // Actions
    uploadFile,
    uploadFiles,
    removeFile,
    clearFiles,
    openFilePicker,
    // File input props
    fileInputProps: {
      ref: fileInputRef,
      type: 'file',
      accept: finalConfig.allowedTypes.join(','),
      multiple: true,
      onChange: handleFileInputChange,
      style: {
        display: 'none'
      }
    },
    // Drag and drop props (only if enabled)
    ...(finalConfig.enableDragDrop ?
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[28][0]++, {
      dragDropProps: {
        onDragEnter: handleDragEnter,
        onDragLeave: handleDragLeave,
        onDragOver: handleDragOver,
        onDrop: handleDrop
      }
    }) :
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[28][1]++, {})),
    // Utils
    validateFile,
    generateThumbnails
  };
}
function useSingleImageUpload(config =
/* istanbul ignore next */
(cov_1phs4ui9iw().b[29][0]++, {}), onUpload, onError) {
  /* istanbul ignore next */
  cov_1phs4ui9iw().f[39]++;
  const upload =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[197]++, useImageUpload(config, onUpload, onError));
  const uploadSingleFile =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[198]++, (0, _react.useCallback)(async file => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[40]++;
    cov_1phs4ui9iw().s[199]++;
    upload.clearFiles(); // Clear previous files
    /* istanbul ignore next */
    cov_1phs4ui9iw().s[200]++;
    return upload.uploadFile(file);
  }, [upload]));
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[201]++;
  return {
    ...upload,
    uploadFile: uploadSingleFile,
    file: upload.currentFile
  };
}
function useDropzoneUpload(config =
/* istanbul ignore next */
(cov_1phs4ui9iw().b[30][0]++, {}), onUpload, onError) {
  /* istanbul ignore next */
  cov_1phs4ui9iw().f[41]++;
  const upload =
  /* istanbul ignore next */
  (cov_1phs4ui9iw().s[202]++, useImageUpload({
    ...config,
    enableDragDrop: true
  }, undefined, onError));
  // Handle batch upload completion
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[203]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1phs4ui9iw().f[42]++;
    cov_1phs4ui9iw().s[204]++;
    if (
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[32][0]++, upload.uploadedFiles.length > 0) &&
    /* istanbul ignore next */
    (cov_1phs4ui9iw().b[32][1]++, upload.uploadState === "complete")) {
      /* istanbul ignore next */
      cov_1phs4ui9iw().b[31][0]++;
      cov_1phs4ui9iw().s[205]++;
      onUpload?.(upload.uploadedFiles);
    } else
    /* istanbul ignore next */
    {
      cov_1phs4ui9iw().b[31][1]++;
    }
  }, [upload.uploadedFiles, upload.uploadState, onUpload]);
  /* istanbul ignore next */
  cov_1phs4ui9iw().s[206]++;
  return {
    dragDropState: upload.dragDropState,
    dragDropProps: upload.dragDropProps,
    uploadedFiles: upload.uploadedFiles,
    progress: upload.progress,
    error: upload.error,
    clearFiles: upload.clearFiles,
    removeFile: upload.removeFile
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,