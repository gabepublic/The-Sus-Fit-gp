909bdb38595f623367aa194bdd417ec4
'use client';
"use strict";

/* istanbul ignore next */
function cov_6on5x4e4l() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useUndoRedo.ts";
  var hash = "a5b887b271ea49cc3a174c84bafe90044d9adc97";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useUndoRedo.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "8": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "9": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "10": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 56
        }
      },
      "11": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "12": {
        start: {
          line: 44,
          column: 19
        },
        end: {
          line: 44,
          column: 93
        }
      },
      "13": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 43
        }
      },
      "14": {
        start: {
          line: 46,
          column: 30
        },
        end: {
          line: 59,
          column: 6
        }
      },
      "15": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "16": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 95
        }
      },
      "17": {
        start: {
          line: 64,
          column: 24
        },
        end: {
          line: 68,
          column: 10
        }
      },
      "18": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "19": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 52
        }
      },
      "20": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 81,
          column: 6
        }
      },
      "21": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 76
        }
      },
      "22": {
        start: {
          line: 70,
          column: 33
        },
        end: {
          line: 70,
          column: 76
        }
      },
      "23": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 71,
          column: 126
        }
      },
      "24": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 22
        }
      },
      "25": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 73,
          column: 70
        }
      },
      "26": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "27": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 53
        }
      },
      "28": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 27
        }
      },
      "29": {
        start: {
          line: 82,
          column: 17
        },
        end: {
          line: 97,
          column: 6
        }
      },
      "30": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 46
        }
      },
      "31": {
        start: {
          line: 83,
          column: 33
        },
        end: {
          line: 83,
          column: 46
        }
      },
      "32": {
        start: {
          line: 84,
          column: 33
        },
        end: {
          line: 84,
          column: 117
        }
      },
      "33": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 85,
          column: 49
        }
      },
      "34": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "35": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 26
        }
      },
      "36": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "37": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 51
        }
      },
      "38": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 23
        }
      },
      "39": {
        start: {
          line: 98,
          column: 17
        },
        end: {
          line: 114,
          column: 6
        }
      },
      "40": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 46
        }
      },
      "41": {
        start: {
          line: 99,
          column: 33
        },
        end: {
          line: 99,
          column: 46
        }
      },
      "42": {
        start: {
          line: 100,
          column: 30
        },
        end: {
          line: 100,
          column: 128
        }
      },
      "43": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 49
        }
      },
      "44": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "45": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 26
        }
      },
      "46": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 106,
          column: 13
        }
      },
      "47": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 48
        }
      },
      "48": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 23
        }
      },
      "49": {
        start: {
          line: 115,
          column: 27
        },
        end: {
          line: 118,
          column: 10
        }
      },
      "50": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 76
        }
      },
      "51": {
        start: {
          line: 116,
          column: 33
        },
        end: {
          line: 116,
          column: 76
        }
      },
      "52": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 81
        }
      },
      "53": {
        start: {
          line: 119,
          column: 25
        },
        end: {
          line: 125,
          column: 6
        }
      },
      "54": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 40
        }
      },
      "55": {
        start: {
          line: 120,
          column: 33
        },
        end: {
          line: 120,
          column: 40
        }
      },
      "56": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 51
        }
      },
      "57": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 22
        }
      },
      "58": {
        start: {
          line: 126,
          column: 28
        },
        end: {
          line: 135,
          column: 6
        }
      },
      "59": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 46
        }
      },
      "60": {
        start: {
          line: 127,
          column: 33
        },
        end: {
          line: 127,
          column: 46
        }
      },
      "61": {
        start: {
          line: 128,
          column: 24
        },
        end: {
          line: 128,
          column: 65
        }
      },
      "62": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "63": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 26
        }
      },
      "64": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 23
        }
      },
      "65": {
        start: {
          line: 136,
          column: 25
        },
        end: {
          line: 144,
          column: 6
        }
      },
      "66": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 40
        }
      },
      "67": {
        start: {
          line: 137,
          column: 33
        },
        end: {
          line: 137,
          column: 40
        }
      },
      "68": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 42
        }
      },
      "69": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 22
        }
      },
      "70": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 37
        }
      },
      "71": {
        start: {
          line: 145,
          column: 23
        },
        end: {
          line: 147,
          column: 10
        }
      },
      "72": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 54
        }
      },
      "73": {
        start: {
          line: 148,
          column: 25
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "74": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 60
        }
      },
      "75": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 157,
          column: 6
        }
      },
      "76": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 40
        }
      },
      "77": {
        start: {
          line: 152,
          column: 33
        },
        end: {
          line: 152,
          column: 40
        }
      },
      "78": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 51
        }
      },
      "79": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 22
        }
      },
      "80": {
        start: {
          line: 158,
          column: 26
        },
        end: {
          line: 160,
          column: 10
        }
      },
      "81": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 57
        }
      },
      "82": {
        start: {
          line: 161,
          column: 26
        },
        end: {
          line: 170,
          column: 6
        }
      },
      "83": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 46
        }
      },
      "84": {
        start: {
          line: 162,
          column: 33
        },
        end: {
          line: 162,
          column: 46
        }
      },
      "85": {
        start: {
          line: 163,
          column: 24
        },
        end: {
          line: 163,
          column: 69
        }
      },
      "86": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "87": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 26
        }
      },
      "88": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 23
        }
      },
      "89": {
        start: {
          line: 171,
          column: 25
        },
        end: {
          line: 177,
          column: 6
        }
      },
      "90": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 40
        }
      },
      "91": {
        start: {
          line: 172,
          column: 33
        },
        end: {
          line: 172,
          column: 40
        }
      },
      "92": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 51
        }
      },
      "93": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 22
        }
      },
      "94": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 203,
          column: 7
        }
      },
      "95": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 53
        }
      },
      "96": {
        start: {
          line: 180,
          column: 46
        },
        end: {
          line: 180,
          column: 53
        }
      },
      "97": {
        start: {
          line: 181,
          column: 26
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "98": {
        start: {
          line: 185,
          column: 30
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "99": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 133
        }
      },
      "100": {
        start: {
          line: 187,
          column: 27
        },
        end: {
          line: 187,
          column: 135
        }
      },
      "101": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "102": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 39
        }
      },
      "103": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 23
        }
      },
      "104": {
        start: {
          line: 191,
          column: 19
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "105": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 39
        }
      },
      "106": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 23
        }
      },
      "107": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 60
        }
      },
      "108": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 74
        }
      },
      "109": {
        start: {
          line: 197,
          column: 19
        },
        end: {
          line: 197,
          column: 73
        }
      },
      "110": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 209,
          column: 7
        }
      },
      "111": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 22
        }
      },
      "112": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 229,
          column: 6
        }
      },
      "113": {
        start: {
          line: 232,
          column: 34
        },
        end: {
          line: 234,
          column: 6
        }
      },
      "114": {
        start: {
          line: 235,
          column: 44
        },
        end: {
          line: 235,
          column: 67
        }
      },
      "115": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 36
        }
      },
      "116": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 237,
          column: 53
        }
      },
      "117": {
        start: {
          line: 238,
          column: 18
        },
        end: {
          line: 238,
          column: 39
        }
      },
      "118": {
        start: {
          line: 239,
          column: 17
        },
        end: {
          line: 245,
          column: 6
        }
      },
      "119": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "120": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 46
        }
      },
      "121": {
        start: {
          line: 241,
          column: 36
        },
        end: {
          line: 241,
          column: 44
        }
      },
      "122": {
        start: {
          line: 246,
          column: 17
        },
        end: {
          line: 252,
          column: 6
        }
      },
      "123": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "124": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 46
        }
      },
      "125": {
        start: {
          line: 248,
          column: 36
        },
        end: {
          line: 248,
          column: 44
        }
      },
      "126": {
        start: {
          line: 253,
          column: 22
        },
        end: {
          line: 270,
          column: 6
        }
      },
      "127": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 266,
          column: 11
        }
      },
      "128": {
        start: {
          line: 256,
          column: 31
        },
        end: {
          line: 256,
          column: 62
        }
      },
      "129": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 38
        }
      },
      "130": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 263,
          column: 13
        }
      },
      "131": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 73
        }
      },
      "132": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 261,
          column: 52
        }
      },
      "133": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 34
        }
      },
      "134": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 51
        }
      },
      "135": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 30
        }
      },
      "136": {
        start: {
          line: 271,
          column: 25
        },
        end: {
          line: 278,
          column: 6
        }
      },
      "137": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 274,
          column: 11
        }
      },
      "138": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 27
        }
      },
      "139": {
        start: {
          line: 279,
          column: 23
        },
        end: {
          line: 285,
          column: 6
        }
      },
      "140": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 282,
          column: 10
        }
      },
      "141": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 295,
          column: 6
        }
      },
      "142": {
        start: {
          line: 298,
          column: 40
        },
        end: {
          line: 298,
          column: 67
        }
      },
      "143": {
        start: {
          line: 299,
          column: 58
        },
        end: {
          line: 299,
          column: 81
        }
      },
      "144": {
        start: {
          line: 300,
          column: 28
        },
        end: {
          line: 300,
          column: 48
        }
      },
      "145": {
        start: {
          line: 301,
          column: 28
        },
        end: {
          line: 301,
          column: 52
        }
      },
      "146": {
        start: {
          line: 302,
          column: 23
        },
        end: {
          line: 320,
          column: 6
        }
      },
      "147": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "148": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 26
        }
      },
      "149": {
        start: {
          line: 306,
          column: 24
        },
        end: {
          line: 306,
          column: 76
        }
      },
      "150": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 42
        }
      },
      "151": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 28
        }
      },
      "152": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 34
        }
      },
      "153": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "154": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 50
        }
      },
      "155": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 316,
          column: 28
        }
      },
      "156": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 26
        }
      },
      "157": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 23
        }
      },
      "158": {
        start: {
          line: 321,
          column: 25
        },
        end: {
          line: 327,
          column: 6
        }
      },
      "159": {
        start: {
          line: 322,
          column: 28
        },
        end: {
          line: 322,
          column: 113
        }
      },
      "160": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 49
        }
      },
      "161": {
        start: {
          line: 323,
          column: 39
        },
        end: {
          line: 323,
          column: 47
        }
      },
      "162": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 27
        }
      },
      "163": {
        start: {
          line: 328,
          column: 24
        },
        end: {
          line: 341,
          column: 6
        }
      },
      "164": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 338,
          column: 9
        }
      },
      "165": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 52
        }
      },
      "166": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 43
        }
      },
      "167": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 33
        }
      },
      "168": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 38
        }
      },
      "169": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 337,
          column: 13
        }
      },
      "170": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 54
        }
      },
      "171": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 52
        }
      },
      "172": {
        start: {
          line: 342,
          column: 25
        },
        end: {
          line: 354,
          column: 10
        }
      },
      "173": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 353,
          column: 9
        }
      },
      "174": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 43
        }
      },
      "175": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 33
        }
      },
      "176": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 38
        }
      },
      "177": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 352,
          column: 13
        }
      },
      "178": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 54
        }
      },
      "179": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 52
        }
      },
      "180": {
        start: {
          line: 356,
          column: 4
        },
        end: {
          line: 362,
          column: 11
        }
      },
      "181": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 361,
          column: 10
        }
      },
      "182": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 360,
          column: 13
        }
      },
      "183": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 54
        }
      },
      "184": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 370,
          column: 6
        }
      },
      "185": {
        start: {
          line: 373,
          column: 36
        },
        end: {
          line: 373,
          column: 63
        }
      },
      "186": {
        start: {
          line: 374,
          column: 38
        },
        end: {
          line: 374,
          column: 64
        }
      },
      "187": {
        start: {
          line: 375,
          column: 24
        },
        end: {
          line: 388,
          column: 6
        }
      },
      "188": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "189": {
        start: {
          line: 377,
          column: 32
        },
        end: {
          line: 377,
          column: 63
        }
      },
      "190": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 58
        }
      },
      "191": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 37
        }
      },
      "192": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 24
        }
      },
      "193": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 60
        }
      },
      "194": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 25
        }
      },
      "195": {
        start: {
          line: 389,
          column: 24
        },
        end: {
          line: 407,
          column: 6
        }
      },
      "196": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 403,
          column: 9
        }
      },
      "197": {
        start: {
          line: 391,
          column: 32
        },
        end: {
          line: 391,
          column: 64
        }
      },
      "198": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 398,
          column: 13
        }
      },
      "199": {
        start: {
          line: 393,
          column: 32
        },
        end: {
          line: 393,
          column: 74
        }
      },
      "200": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 396,
          column: 17
        }
      },
      "201": {
        start: {
          line: 395,
          column: 20
        },
        end: {
          line: 395,
          column: 45
        }
      },
      "202": {
        start: {
          line: 397,
          column: 16
        },
        end: {
          line: 397,
          column: 31
        }
      },
      "203": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 25
        }
      },
      "204": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 60
        }
      },
      "205": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 402,
          column: 25
        }
      },
      "206": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 425,
          column: 7
        }
      },
      "207": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 30
        }
      },
      "208": {
        start: {
          line: 410,
          column: 23
        },
        end: {
          line: 410,
          column: 30
        }
      },
      "209": {
        start: {
          line: 411,
          column: 35
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "210": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 26
        }
      },
      "211": {
        start: {
          line: 414,
          column: 33
        },
        end: {
          line: 416,
          column: 17
        }
      },
      "212": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 26
        }
      },
      "213": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 68
        }
      },
      "214": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 421,
          column: 10
        }
      },
      "215": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 44
        }
      },
      "216": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 420,
          column: 75
        }
      },
      "217": {
        start: {
          line: 427,
          column: 4
        },
        end: {
          line: 431,
          column: 7
        }
      },
      "218": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 22
        }
      },
      "219": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 438,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 27
          },
          end: {
            line: 13,
            column: 28
          }
        },
        loc: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 27
          }
        },
        loc: {
          start: {
            line: 16,
            column: 37
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 24
          }
        },
        loc: {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "useUndoRedo",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 20
          }
        },
        loc: {
          start: {
            line: 43,
            column: 72
          },
          end: {
            line: 230,
            column: 1
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 48
          },
          end: {
            line: 64,
            column: 49
          }
        },
        loc: {
          start: {
            line: 64,
            column: 52
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 53
          },
          end: {
            line: 69,
            column: 54
          }
        },
        loc: {
          start: {
            line: 69,
            column: 118
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 82,
            column: 41
          },
          end: {
            line: 82,
            column: 42
          }
        },
        loc: {
          start: {
            line: 82,
            column: 45
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 82
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 98,
            column: 41
          },
          end: {
            line: 98,
            column: 42
          }
        },
        loc: {
          start: {
            line: 98,
            column: 45
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 98
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 115,
            column: 51
          },
          end: {
            line: 115,
            column: 52
          }
        },
        loc: {
          start: {
            line: 115,
            column: 76
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 115
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 119,
            column: 49
          },
          end: {
            line: 119,
            column: 50
          }
        },
        loc: {
          start: {
            line: 119,
            column: 53
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 119
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 126,
            column: 52
          },
          end: {
            line: 126,
            column: 53
          }
        },
        loc: {
          start: {
            line: 126,
            column: 61
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 126
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 136,
            column: 49
          },
          end: {
            line: 136,
            column: 50
          }
        },
        loc: {
          start: {
            line: 136,
            column: 53
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 136
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 145,
            column: 47
          },
          end: {
            line: 145,
            column: 48
          }
        },
        loc: {
          start: {
            line: 145,
            column: 51
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 145
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 148,
            column: 49
          },
          end: {
            line: 148,
            column: 50
          }
        },
        loc: {
          start: {
            line: 148,
            column: 55
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 148
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 151,
            column: 44
          },
          end: {
            line: 151,
            column: 45
          }
        },
        loc: {
          start: {
            line: 151,
            column: 62
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 151
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 158,
            column: 50
          },
          end: {
            line: 158,
            column: 51
          }
        },
        loc: {
          start: {
            line: 158,
            column: 54
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 158
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 161,
            column: 50
          },
          end: {
            line: 161,
            column: 51
          }
        },
        loc: {
          start: {
            line: 161,
            column: 65
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 161
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 171,
            column: 49
          },
          end: {
            line: 171,
            column: 50
          }
        },
        loc: {
          start: {
            line: 171,
            column: 62
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 171
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 179,
            column: 26
          },
          end: {
            line: 179,
            column: 27
          }
        },
        loc: {
          start: {
            line: 179,
            column: 30
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 179
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 185,
            column: 30
          },
          end: {
            line: 185,
            column: 31
          }
        },
        loc: {
          start: {
            line: 185,
            column: 39
          },
          end: {
            line: 195,
            column: 9
          }
        },
        line: 185
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 197,
            column: 16
          }
        },
        loc: {
          start: {
            line: 197,
            column: 19
          },
          end: {
            line: 197,
            column: 73
          }
        },
        line: 197
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 205,
            column: 26
          },
          end: {
            line: 205,
            column: 27
          }
        },
        loc: {
          start: {
            line: 205,
            column: 30
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 205
      },
      "24": {
        name: "useSimpleUndoRedo",
        decl: {
          start: {
            line: 231,
            column: 9
          },
          end: {
            line: 231,
            column: 26
          }
        },
        loc: {
          start: {
            line: 231,
            column: 62
          },
          end: {
            line: 296,
            column: 1
          }
        },
        line: 231
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 239,
            column: 41
          },
          end: {
            line: 239,
            column: 42
          }
        },
        loc: {
          start: {
            line: 239,
            column: 45
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 239
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 241,
            column: 28
          },
          end: {
            line: 241,
            column: 29
          }
        },
        loc: {
          start: {
            line: 241,
            column: 36
          },
          end: {
            line: 241,
            column: 44
          }
        },
        line: 241
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 246,
            column: 41
          },
          end: {
            line: 246,
            column: 42
          }
        },
        loc: {
          start: {
            line: 246,
            column: 45
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 246
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 248,
            column: 28
          },
          end: {
            line: 248,
            column: 29
          }
        },
        loc: {
          start: {
            line: 248,
            column: 36
          },
          end: {
            line: 248,
            column: 44
          }
        },
        line: 248
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 253,
            column: 46
          },
          end: {
            line: 253,
            column: 47
          }
        },
        loc: {
          start: {
            line: 253,
            column: 58
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 253
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 254,
            column: 20
          }
        },
        loc: {
          start: {
            line: 254,
            column: 27
          },
          end: {
            line: 266,
            column: 9
          }
        },
        line: 254
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 271,
            column: 49
          },
          end: {
            line: 271,
            column: 50
          }
        },
        loc: {
          start: {
            line: 271,
            column: 53
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 271
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 279,
            column: 47
          },
          end: {
            line: 279,
            column: 48
          }
        },
        loc: {
          start: {
            line: 279,
            column: 51
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 279
      },
      "33": {
        name: "useOperationBatching",
        decl: {
          start: {
            line: 297,
            column: 9
          },
          end: {
            line: 297,
            column: 29
          }
        },
        loc: {
          start: {
            line: 297,
            column: 71
          },
          end: {
            line: 371,
            column: 1
          }
        },
        line: 297
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 302,
            column: 47
          },
          end: {
            line: 302,
            column: 48
          }
        },
        loc: {
          start: {
            line: 302,
            column: 62
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 302
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 314,
            column: 45
          },
          end: {
            line: 314,
            column: 46
          }
        },
        loc: {
          start: {
            line: 314,
            column: 49
          },
          end: {
            line: 316,
            column: 9
          }
        },
        line: 314
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 321,
            column: 49
          },
          end: {
            line: 321,
            column: 50
          }
        },
        loc: {
          start: {
            line: 321,
            column: 104
          },
          end: {
            line: 325,
            column: 5
          }
        },
        line: 321
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 323,
            column: 31
          },
          end: {
            line: 323,
            column: 32
          }
        },
        loc: {
          start: {
            line: 323,
            column: 39
          },
          end: {
            line: 323,
            column: 47
          }
        },
        line: 323
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 328,
            column: 48
          },
          end: {
            line: 328,
            column: 49
          }
        },
        loc: {
          start: {
            line: 328,
            column: 52
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 328
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 342,
            column: 49
          },
          end: {
            line: 342,
            column: 50
          }
        },
        loc: {
          start: {
            line: 342,
            column: 53
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 342
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 356,
            column: 26
          },
          end: {
            line: 356,
            column: 27
          }
        },
        loc: {
          start: {
            line: 356,
            column: 30
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 356
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 357,
            column: 15
          },
          end: {
            line: 357,
            column: 16
          }
        },
        loc: {
          start: {
            line: 357,
            column: 19
          },
          end: {
            line: 361,
            column: 9
          }
        },
        line: 357
      },
      "42": {
        name: "useHistoryPersistence",
        decl: {
          start: {
            line: 372,
            column: 9
          },
          end: {
            line: 372,
            column: 30
          }
        },
        loc: {
          start: {
            line: 372,
            column: 79
          },
          end: {
            line: 439,
            column: 1
          }
        },
        line: 372
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 375,
            column: 48
          },
          end: {
            line: 375,
            column: 49
          }
        },
        loc: {
          start: {
            line: 375,
            column: 52
          },
          end: {
            line: 385,
            column: 5
          }
        },
        line: 375
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 389,
            column: 48
          },
          end: {
            line: 389,
            column: 49
          }
        },
        loc: {
          start: {
            line: 389,
            column: 52
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 389
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 409,
            column: 26
          },
          end: {
            line: 409,
            column: 27
          }
        },
        loc: {
          start: {
            line: 409,
            column: 30
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 409
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 411,
            column: 35
          },
          end: {
            line: 411,
            column: 36
          }
        },
        loc: {
          start: {
            line: 411,
            column: 39
          },
          end: {
            line: 413,
            column: 9
          }
        },
        line: 411
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 414,
            column: 45
          },
          end: {
            line: 414,
            column: 46
          }
        },
        loc: {
          start: {
            line: 414,
            column: 49
          },
          end: {
            line: 416,
            column: 9
          }
        },
        line: 414
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 418,
            column: 15
          },
          end: {
            line: 418,
            column: 16
          }
        },
        loc: {
          start: {
            line: 418,
            column: 19
          },
          end: {
            line: 421,
            column: 9
          }
        },
        line: 418
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 427,
            column: 26
          },
          end: {
            line: 427,
            column: 27
          }
        },
        loc: {
          start: {
            line: 427,
            column: 30
          },
          end: {
            line: 429,
            column: 5
          }
        },
        line: 427
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 58
          },
          end: {
            line: 43,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 43,
            column: 68
          },
          end: {
            line: 43,
            column: 70
          }
        }],
        line: 43
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "4": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "5": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 83,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 83,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "6": {
        loc: {
          start: {
            line: 84,
            column: 33
          },
          end: {
            line: 84,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 59
          },
          end: {
            line: 84,
            column: 110
          }
        }, {
          start: {
            line: 84,
            column: 113
          },
          end: {
            line: 84,
            column: 117
          }
        }],
        line: 84
      },
      "7": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "8": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 99,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 99,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 100,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 81
          },
          end: {
            line: 100,
            column: 121
          }
        }, {
          start: {
            line: 100,
            column: 124
          },
          end: {
            line: 100,
            column: 128
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "12": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "13": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 76
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "14": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "15": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "16": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "17": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "18": {
        loc: {
          start: {
            line: 146,
            column: 15
          },
          end: {
            line: 146,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 15
          },
          end: {
            line: 146,
            column: 47
          }
        }, {
          start: {
            line: 146,
            column: 51
          },
          end: {
            line: 146,
            column: 53
          }
        }],
        line: 146
      },
      "19": {
        loc: {
          start: {
            line: 149,
            column: 15
          },
          end: {
            line: 149,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 15
          },
          end: {
            line: 149,
            column: 51
          }
        }, {
          start: {
            line: 149,
            column: 55
          },
          end: {
            line: 149,
            column: 59
          }
        }],
        line: 149
      },
      "20": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 152,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "21": {
        loc: {
          start: {
            line: 159,
            column: 15
          },
          end: {
            line: 159,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 15
          },
          end: {
            line: 159,
            column: 50
          }
        }, {
          start: {
            line: 159,
            column: 54
          },
          end: {
            line: 159,
            column: 56
          }
        }],
        line: 159
      },
      "22": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "23": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "24": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 172,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 172,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "25": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 180,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 180,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "26": {
        loc: {
          start: {
            line: 186,
            column: 27
          },
          end: {
            line: 186,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 60
          },
          end: {
            line: 186,
            column: 67
          }
        }, {
          start: {
            line: 186,
            column: 70
          },
          end: {
            line: 186,
            column: 72
          }
        }],
        line: 186
      },
      "27": {
        loc: {
          start: {
            line: 186,
            column: 27
          },
          end: {
            line: 186,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 27
          },
          end: {
            line: 186,
            column: 40
          }
        }, {
          start: {
            line: 186,
            column: 44
          },
          end: {
            line: 186,
            column: 57
          }
        }],
        line: 186
      },
      "28": {
        loc: {
          start: {
            line: 186,
            column: 75
          },
          end: {
            line: 186,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 92
          },
          end: {
            line: 186,
            column: 100
          }
        }, {
          start: {
            line: 186,
            column: 103
          },
          end: {
            line: 186,
            column: 105
          }
        }],
        line: 186
      },
      "29": {
        loc: {
          start: {
            line: 187,
            column: 30
          },
          end: {
            line: 187,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 63
          },
          end: {
            line: 187,
            column: 69
          }
        }, {
          start: {
            line: 187,
            column: 72
          },
          end: {
            line: 187,
            column: 74
          }
        }],
        line: 187
      },
      "30": {
        loc: {
          start: {
            line: 187,
            column: 30
          },
          end: {
            line: 187,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 30
          },
          end: {
            line: 187,
            column: 43
          }
        }, {
          start: {
            line: 187,
            column: 47
          },
          end: {
            line: 187,
            column: 60
          }
        }],
        line: 187
      },
      "31": {
        loc: {
          start: {
            line: 187,
            column: 77
          },
          end: {
            line: 187,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 94
          },
          end: {
            line: 187,
            column: 102
          }
        }, {
          start: {
            line: 187,
            column: 105
          },
          end: {
            line: 187,
            column: 107
          }
        }],
        line: 187
      },
      "32": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: 191,
            column: 19
          },
          end: {
            line: 194,
            column: 13
          }
        }],
        line: 188
      },
      "33": {
        loc: {
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 188,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 188,
            column: 44
          }
        }, {
          start: {
            line: 188,
            column: 48
          },
          end: {
            line: 188,
            column: 79
          }
        }],
        line: 188
      },
      "34": {
        loc: {
          start: {
            line: 191,
            column: 19
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 19
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "35": {
        loc: {
          start: {
            line: 191,
            column: 23
          },
          end: {
            line: 191,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 23
          },
          end: {
            line: 191,
            column: 51
          }
        }, {
          start: {
            line: 191,
            column: 55
          },
          end: {
            line: 191,
            column: 86
          }
        }],
        line: 191
      },
      "36": {
        loc: {
          start: {
            line: 231,
            column: 41
          },
          end: {
            line: 231,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 231,
            column: 58
          },
          end: {
            line: 231,
            column: 60
          }
        }],
        line: 231
      },
      "37": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "38": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "39": {
        loc: {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 263,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 263,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "40": {
        loc: {
          start: {
            line: 297,
            column: 47
          },
          end: {
            line: 297,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 297,
            column: 65
          },
          end: {
            line: 297,
            column: 69
          }
        }],
        line: 297
      },
      "41": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "42": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "43": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "44": {
        loc: {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "45": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 353,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "46": {
        loc: {
          start: {
            line: 349,
            column: 12
          },
          end: {
            line: 352,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 12
          },
          end: {
            line: 352,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      },
      "47": {
        loc: {
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 360,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 360,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "48": {
        loc: {
          start: {
            line: 372,
            column: 48
          },
          end: {
            line: 372,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 372,
            column: 61
          },
          end: {
            line: 372,
            column: 77
          }
        }],
        line: 372
      },
      "49": {
        loc: {
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 398,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 398,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "50": {
        loc: {
          start: {
            line: 394,
            column: 16
          },
          end: {
            line: 396,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 16
          },
          end: {
            line: 396,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 394
      },
      "51": {
        loc: {
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 410,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 410,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 410
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useUndoRedo.ts"],
      sourcesContent: ["'use client';\n\n// Undo/Redo React Hooks\n// React hooks for managing undo/redo operations with keyboard shortcuts\n\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useManagedCanvas, type ManagedCanvas } from '../providers/CanvasProvider';\nimport {\n  UndoRedoManager,\n  createUndoRedoManager,\n  OperationType,\n  type UndoRedoConfig,\n  type UndoRedoState,\n  type Operation,\n  type CompositeOperation,\n  DEFAULT_UNDO_REDO_CONFIG\n} from '../utils/undoRedoStack';\n\n/**\n * Undo/Redo hook options\n */\nexport interface UseUndoRedoOptions {\n  /** Undo/Redo configuration */\n  config?: Partial<UndoRedoConfig>;\n  /** Enable keyboard shortcuts (Ctrl+Z, Ctrl+Y) */\n  enableKeyboardShortcuts?: boolean;\n  /** Custom keyboard shortcuts */\n  keyboardShortcuts?: {\n    undo?: string[];\n    redo?: string[];\n  };\n  /** Callback when operation is executed */\n  onOperationExecuted?: (operation: Operation | CompositeOperation) => void;\n  /** Callback when undo is performed */\n  onUndo?: (operation: Operation | CompositeOperation) => void;\n  /** Callback when redo is performed */\n  onRedo?: (operation: Operation | CompositeOperation) => void;\n  /** Callback when history is cleared */\n  onHistoryCleared?: () => void;\n}\n\n/**\n * Default keyboard shortcuts\n */\nconst DEFAULT_SHORTCUTS = {\n  undo: ['ctrl+z', 'cmd+z'],\n  redo: ['ctrl+y', 'cmd+y', 'ctrl+shift+z', 'cmd+shift+z']\n};\n\n/**\n * Main undo/redo hook\n */\nexport function useUndoRedo(\n  canvasWidth: number,\n  canvasHeight: number,\n  canvasId?: string,\n  options: UseUndoRedoOptions = {}\n): {\n  canvas: ManagedCanvas;\n  manager: UndoRedoManager;\n  state: UndoRedoState;\n  canUndo: boolean;\n  canRedo: boolean;\n  undo: () => boolean;\n  redo: () => boolean;\n  executeOperation: (\n    type: OperationType,\n    description: string,\n    operationFn: () => void | Promise<void>,\n    operationData?: Record<string, unknown>,\n    metadata?: Record<string, unknown>\n  ) => Promise<string>;\n  startComposite: (description: string, metadata?: Record<string, unknown>) => string;\n  endComposite: () => void;\n  jumpToOperation: (index: number) => boolean;\n  clearHistory: () => void;\n  getHistory: () => (Operation | CompositeOperation)[];\n  getOperation: (id: string) => Operation | CompositeOperation | null;\n  cleanup: (targetMemoryMB?: number) => void;\n  exportHistory: () => string;\n  importHistory: (historyData: string) => boolean;\n  updateConfig: (newConfig: Partial<UndoRedoConfig>) => void;\n} {\n  const canvas = useManagedCanvas(canvasWidth, canvasHeight, canvasId);\n  const managerRef = useRef<UndoRedoManager>();\n  const [state, setState] = useState<UndoRedoState>({\n    currentIndex: -1,\n    operations: [],\n    canUndo: false,\n    canRedo: false,\n    memoryUsage: 0,\n    stats: {\n      totalOperations: 0,\n      undoCount: 0,\n      redoCount: 0,\n      memoryPeakUsage: 0,\n      lastCleanup: Date.now()\n    }\n  });\n\n  // Initialize manager\n  if (!managerRef.current) {\n    managerRef.current = createUndoRedoManager(canvas, options.config);\n  }\n\n  const updateState = useCallback(() => {\n    if (managerRef.current) {\n      setState(managerRef.current.getState());\n    }\n  }, []);\n\n  const executeOperation = useCallback(async (\n    type: OperationType,\n    description: string,\n    operationFn: () => void | Promise<void>,\n    operationData?: Record<string, unknown>,\n    metadata?: Record<string, unknown>\n  ): Promise<string> => {\n    if (!managerRef.current) throw new Error('Manager not initialized');\n    \n    const operationId = await managerRef.current.executeOperation(\n      type,\n      description,\n      operationFn,\n      operationData,\n      metadata\n    );\n    \n    updateState();\n    \n    const operation = managerRef.current.getOperation(operationId);\n    if (operation) {\n      options.onOperationExecuted?.(operation);\n    }\n    \n    return operationId;\n  }, [updateState, options]);\n\n  const undo = useCallback((): boolean => {\n    if (!managerRef.current) return false;\n    \n    const currentOperation = state.currentIndex >= 0 \n      ? managerRef.current.getHistory()[state.currentIndex] \n      : null;\n    \n    const success = managerRef.current.undo();\n    if (success) {\n      updateState();\n      if (currentOperation) {\n        options.onUndo?.(currentOperation);\n      }\n    }\n    return success;\n  }, [state.currentIndex, updateState, options]);\n\n  const redo = useCallback((): boolean => {\n    if (!managerRef.current) return false;\n    \n    const nextOperation = state.currentIndex + 1 < state.operations.length\n      ? state.operations[state.currentIndex + 1]\n      : null;\n    \n    const success = managerRef.current.redo();\n    if (success) {\n      updateState();\n      if (nextOperation) {\n        options.onRedo?.(nextOperation);\n      }\n    }\n    return success;\n  }, [state.currentIndex, state.operations, updateState, options]);\n\n  const startComposite = useCallback((description: string, metadata?: Record<string, unknown>): string => {\n    if (!managerRef.current) throw new Error('Manager not initialized');\n    return managerRef.current.startCompositeOperation(description, metadata);\n  }, []);\n\n  const endComposite = useCallback((): void => {\n    if (!managerRef.current) return;\n    managerRef.current.endCompositeOperation();\n    updateState();\n  }, [updateState]);\n\n  const jumpToOperation = useCallback((index: number): boolean => {\n    if (!managerRef.current) return false;\n    const success = managerRef.current.jumpToOperation(index);\n    if (success) {\n      updateState();\n    }\n    return success;\n  }, [updateState]);\n\n  const clearHistory = useCallback((): void => {\n    if (!managerRef.current) return;\n    managerRef.current.clearHistory();\n    updateState();\n    options.onHistoryCleared?.();\n  }, [updateState, options]);\n\n  const getHistory = useCallback((): (Operation | CompositeOperation)[] => {\n    return managerRef.current?.getHistory() || [];\n  }, []);\n\n  const getOperation = useCallback((id: string): Operation | CompositeOperation | null => {\n    return managerRef.current?.getOperation(id) || null;\n  }, []);\n\n  const cleanup = useCallback((targetMemoryMB?: number): void => {\n    if (!managerRef.current) return;\n    managerRef.current.cleanup(targetMemoryMB);\n    updateState();\n  }, [updateState]);\n\n  const exportHistory = useCallback((): string => {\n    return managerRef.current?.exportHistory() || '';\n  }, []);\n\n  const importHistory = useCallback((historyData: string): boolean => {\n    if (!managerRef.current) return false;\n    const success = managerRef.current.importHistory(historyData);\n    if (success) {\n      updateState();\n    }\n    return success;\n  }, [updateState]);\n\n  const updateConfig = useCallback((newConfig: Partial<UndoRedoConfig>): void => {\n    if (!managerRef.current) return;\n    managerRef.current.updateConfig(newConfig);\n    updateState();\n  }, [updateState]);\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    if (!options.enableKeyboardShortcuts) return;\n\n    const shortcuts = { ...DEFAULT_SHORTCUTS, ...options.keyboardShortcuts };\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      const key = `${event.ctrlKey || event.metaKey ? 'ctrl+' : ''}${event.shiftKey ? 'shift+' : ''}${event.key.toLowerCase()}`;\n      const cmdKey = `${event.ctrlKey || event.metaKey ? 'cmd+' : ''}${event.shiftKey ? 'shift+' : ''}${event.key.toLowerCase()}`;\n\n      if (shortcuts.undo.includes(key) || shortcuts.undo.includes(cmdKey)) {\n        event.preventDefault();\n        undo();\n      } else if (shortcuts.redo.includes(key) || shortcuts.redo.includes(cmdKey)) {\n        event.preventDefault();\n        redo();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [options.enableKeyboardShortcuts, options.keyboardShortcuts, undo, redo]);\n\n  // Update state when operations change\n  useEffect(() => {\n    updateState();\n  }, [updateState]);\n\n  return {\n    canvas,\n    manager: managerRef.current,\n    state,\n    canUndo: state.canUndo,\n    canRedo: state.canRedo,\n    undo,\n    redo,\n    executeOperation,\n    startComposite,\n    endComposite,\n    jumpToOperation,\n    clearHistory,\n    getHistory,\n    getOperation,\n    cleanup,\n    exportHistory,\n    importHistory,\n    updateConfig\n  };\n}\n\n/**\n * Hook for simple undo/redo operations without full state management\n */\nexport function useSimpleUndoRedo<T>(\n  initialState: T,\n  maxHistorySize: number = 50\n): {\n  state: T;\n  canUndo: boolean;\n  canRedo: boolean;\n  undo: () => void;\n  redo: () => void;\n  pushState: (newState: T) => void;\n  clearHistory: () => void;\n  getHistory: () => T[];\n} {\n  const [history, setHistory] = useState<T[]>([initialState]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const canUndo = currentIndex > 0;\n  const canRedo = currentIndex < history.length - 1;\n  const state = history[currentIndex];\n\n  const undo = useCallback(() => {\n    if (canUndo) {\n      setCurrentIndex(prev => prev - 1);\n    }\n  }, [canUndo]);\n\n  const redo = useCallback(() => {\n    if (canRedo) {\n      setCurrentIndex(prev => prev + 1);\n    }\n  }, [canRedo]);\n\n  const pushState = useCallback((newState: T) => {\n    setHistory(prev => {\n      // Remove any states after current index\n      const newHistory = prev.slice(0, currentIndex + 1);\n      newHistory.push(newState);\n      \n      // Enforce max history size\n      if (newHistory.length > maxHistorySize) {\n        newHistory.splice(0, newHistory.length - maxHistorySize);\n        setCurrentIndex(maxHistorySize - 1);\n        return newHistory;\n      }\n      \n      setCurrentIndex(newHistory.length - 1);\n      return newHistory;\n    });\n  }, [currentIndex, maxHistorySize]);\n\n  const clearHistory = useCallback(() => {\n    setHistory([state]);\n    setCurrentIndex(0);\n  }, [state]);\n\n  const getHistory = useCallback(() => {\n    return [...history];\n  }, [history]);\n\n  return {\n    state,\n    canUndo,\n    canRedo,\n    undo,\n    redo,\n    pushState,\n    clearHistory,\n    getHistory\n  };\n}\n\n/**\n * Hook for operation batching and atomic commits\n */\nexport function useOperationBatching(\n  undoRedoManager: UndoRedoManager,\n  autoCommitDelay: number = 1000\n): {\n  startBatch: (description: string) => string;\n  addOperation: (\n    type: OperationType,\n    description: string,\n    operationFn: () => void | Promise<void>,\n    operationData?: Record<string, unknown>\n  ) => Promise<string>;\n  commitBatch: () => void;\n  discardBatch: () => void;\n  isBatching: boolean;\n  batchOperationCount: number;\n} {\n  const [isBatching, setIsBatching] = useState(false);\n  const [batchOperationCount, setBatchOperationCount] = useState(0);\n  const batchTimeoutRef = useRef<NodeJS.Timeout>();\n  const currentBatchRef = useRef<string | null>(null);\n\n  const startBatch = useCallback((description: string): string => {\n    if (currentBatchRef.current) {\n      commitBatch();\n    }\n\n    const batchId = undoRedoManager.startCompositeOperation(description);\n    currentBatchRef.current = batchId;\n    setIsBatching(true);\n    setBatchOperationCount(0);\n\n    // Auto-commit after delay\n    if (batchTimeoutRef.current) {\n      clearTimeout(batchTimeoutRef.current);\n    }\n    \n    batchTimeoutRef.current = setTimeout(() => {\n      commitBatch();\n    }, autoCommitDelay);\n\n    return batchId;\n  }, [autoCommitDelay]);\n\n  const addOperation = useCallback(async (\n    type: OperationType,\n    description: string,\n    operationFn: () => void | Promise<void>,\n    operationData?: Record<string, unknown>\n  ): Promise<string> => {\n    const operationId = await undoRedoManager.executeOperation(\n      type,\n      description,\n      operationFn,\n      operationData\n    );\n\n    setBatchOperationCount(prev => prev + 1);\n    return operationId;\n  }, [undoRedoManager]);\n\n  const commitBatch = useCallback(() => {\n    if (currentBatchRef.current) {\n      undoRedoManager.endCompositeOperation();\n      currentBatchRef.current = null;\n      setIsBatching(false);\n      setBatchOperationCount(0);\n\n      if (batchTimeoutRef.current) {\n        clearTimeout(batchTimeoutRef.current);\n        batchTimeoutRef.current = undefined;\n      }\n    }\n  }, [undoRedoManager]);\n\n  const discardBatch = useCallback(() => {\n    if (currentBatchRef.current) {\n      // Note: In a real implementation, you'd need to revert operations\n      // For now, we just clear the batch state\n      currentBatchRef.current = null;\n      setIsBatching(false);\n      setBatchOperationCount(0);\n\n      if (batchTimeoutRef.current) {\n        clearTimeout(batchTimeoutRef.current);\n        batchTimeoutRef.current = undefined;\n      }\n    }\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (batchTimeoutRef.current) {\n        clearTimeout(batchTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    startBatch,\n    addOperation,\n    commitBatch,\n    discardBatch,\n    isBatching,\n    batchOperationCount\n  };\n}\n\n/**\n * Hook for history persistence\n */\nexport function useHistoryPersistence(\n  undoRedoManager: UndoRedoManager,\n  storageKey: string = 'canvas-history'\n): {\n  saveHistory: () => boolean;\n  loadHistory: () => boolean;\n  autoSave: boolean;\n  setAutoSave: (enabled: boolean) => void;\n  lastSaved: Date | null;\n} {\n  const [autoSave, setAutoSave] = useState(false);\n  const [lastSaved, setLastSaved] = useState<Date | null>(null);\n\n  const saveHistory = useCallback((): boolean => {\n    try {\n      const historyData = undoRedoManager.exportHistory();\n      localStorage.setItem(storageKey, historyData);\n      setLastSaved(new Date());\n      return true;\n    } catch (error) {\n      console.error('Failed to save history:', error);\n      return false;\n    }\n  }, [undoRedoManager, storageKey]);\n\n  const loadHistory = useCallback((): boolean => {\n    try {\n      const historyData = localStorage.getItem(storageKey);\n      if (historyData) {\n        const success = undoRedoManager.importHistory(historyData);\n        if (success) {\n          setLastSaved(new Date());\n        }\n        return success;\n      }\n      return false;\n    } catch (error) {\n      console.error('Failed to load history:', error);\n      return false;\n    }\n  }, [undoRedoManager, storageKey]);\n\n  // Auto-save functionality\n  useEffect(() => {\n    if (!autoSave) return;\n\n    const handleBeforeUnload = () => {\n      saveHistory();\n    };\n\n    const autoSaveInterval = setInterval(() => {\n      saveHistory();\n    }, 30000); // Save every 30 seconds\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      clearInterval(autoSaveInterval);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [autoSave, saveHistory]);\n\n  // Load history on mount\n  useEffect(() => {\n    loadHistory();\n  }, [loadHistory]);\n\n  return {\n    saveHistory,\n    loadHistory,\n    autoSave,\n    setAutoSave,\n    lastSaved\n  };\n}"],
      names: ["useHistoryPersistence", "useOperationBatching", "useSimpleUndoRedo", "useUndoRedo", "DEFAULT_SHORTCUTS", "undo", "redo", "canvasWidth", "canvasHeight", "canvasId", "options", "canvas", "useManagedCanvas", "managerRef", "useRef", "state", "setState", "useState", "currentIndex", "operations", "canUndo", "canRedo", "memoryUsage", "stats", "totalOperations", "undoCount", "redoCount", "memoryPeakUsage", "lastCleanup", "Date", "now", "current", "createUndoRedoManager", "config", "updateState", "useCallback", "getState", "executeOperation", "type", "description", "operationFn", "operationData", "metadata", "Error", "operationId", "operation", "getOperation", "onOperationExecuted", "currentOperation", "getHistory", "success", "onUndo", "nextOperation", "length", "onRedo", "startComposite", "startCompositeOperation", "endComposite", "endCompositeOperation", "jumpToOperation", "index", "clearHistory", "onHistoryCleared", "id", "cleanup", "targetMemoryMB", "exportHistory", "importHistory", "historyData", "updateConfig", "newConfig", "useEffect", "enableKeyboardShortcuts", "shortcuts", "keyboardShortcuts", "handleKeyDown", "event", "key", "ctrlKey", "metaKey", "shiftKey", "toLowerCase", "cmdKey", "includes", "preventDefault", "document", "addEventListener", "removeEventListener", "manager", "initialState", "maxHistorySize", "history", "setHistory", "setCurrentIndex", "prev", "pushState", "newState", "newHistory", "slice", "push", "splice", "undoRedoManager", "autoCommitDelay", "isBatching", "setIsBatching", "batchOperationCount", "setBatchOperationCount", "batchTimeoutRef", "currentBatchRef", "startBatch", "commitBatch", "batchId", "clearTimeout", "setTimeout", "addOperation", "undefined", "discardBatch", "storageKey", "autoSave", "setAutoSave", "lastSaved", "setLastSaved", "saveHistory", "localStorage", "setItem", "error", "console", "loadHistory", "getItem", "handleBeforeUnload", "autoSaveInterval", "setInterval", "window", "clearInterval"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a5b887b271ea49cc3a174c84bafe90044d9adc97"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6on5x4e4l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6on5x4e4l();
cov_6on5x4e4l().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_6on5x4e4l().f[0]++;
  cov_6on5x4e4l().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_6on5x4e4l().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_6on5x4e4l().s[3]++;
_export(exports, {
  useHistoryPersistence: function () {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[1]++;
    cov_6on5x4e4l().s[4]++;
    return useHistoryPersistence;
  },
  useOperationBatching: function () {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[2]++;
    cov_6on5x4e4l().s[5]++;
    return useOperationBatching;
  },
  useSimpleUndoRedo: function () {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[3]++;
    cov_6on5x4e4l().s[6]++;
    return useSimpleUndoRedo;
  },
  useUndoRedo: function () {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[4]++;
    cov_6on5x4e4l().s[7]++;
    return useUndoRedo;
  }
});
const _react =
/* istanbul ignore next */
(cov_6on5x4e4l().s[8]++, require("react"));
const _CanvasProvider =
/* istanbul ignore next */
(cov_6on5x4e4l().s[9]++, require("../providers/CanvasProvider"));
const _undoRedoStack =
/* istanbul ignore next */
(cov_6on5x4e4l().s[10]++, require("../utils/undoRedoStack"));
/**
 * Default keyboard shortcuts
 */
const DEFAULT_SHORTCUTS =
/* istanbul ignore next */
(cov_6on5x4e4l().s[11]++, {
  undo: ['ctrl+z', 'cmd+z'],
  redo: ['ctrl+y', 'cmd+y', 'ctrl+shift+z', 'cmd+shift+z']
});
function useUndoRedo(canvasWidth, canvasHeight, canvasId, options =
/* istanbul ignore next */
(cov_6on5x4e4l().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_6on5x4e4l().f[5]++;
  const canvas =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[12]++, (0, _CanvasProvider.useManagedCanvas)(canvasWidth, canvasHeight, canvasId));
  const managerRef =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[13]++, (0, _react.useRef)());
  const [state, setState] =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[14]++, (0, _react.useState)({
    currentIndex: -1,
    operations: [],
    canUndo: false,
    canRedo: false,
    memoryUsage: 0,
    stats: {
      totalOperations: 0,
      undoCount: 0,
      redoCount: 0,
      memoryPeakUsage: 0,
      lastCleanup: Date.now()
    }
  }));
  // Initialize manager
  /* istanbul ignore next */
  cov_6on5x4e4l().s[15]++;
  if (!managerRef.current) {
    /* istanbul ignore next */
    cov_6on5x4e4l().b[1][0]++;
    cov_6on5x4e4l().s[16]++;
    managerRef.current = (0, _undoRedoStack.createUndoRedoManager)(canvas, options.config);
  } else
  /* istanbul ignore next */
  {
    cov_6on5x4e4l().b[1][1]++;
  }
  const updateState =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[17]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[6]++;
    cov_6on5x4e4l().s[18]++;
    if (managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[2][0]++;
      cov_6on5x4e4l().s[19]++;
      setState(managerRef.current.getState());
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[2][1]++;
    }
  }, []));
  const executeOperation =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[20]++, (0, _react.useCallback)(async (type, description, operationFn, operationData, metadata) => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[7]++;
    cov_6on5x4e4l().s[21]++;
    if (!managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[3][0]++;
      cov_6on5x4e4l().s[22]++;
      throw new Error('Manager not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[3][1]++;
    }
    const operationId =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[23]++, await managerRef.current.executeOperation(type, description, operationFn, operationData, metadata));
    /* istanbul ignore next */
    cov_6on5x4e4l().s[24]++;
    updateState();
    const operation =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[25]++, managerRef.current.getOperation(operationId));
    /* istanbul ignore next */
    cov_6on5x4e4l().s[26]++;
    if (operation) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[4][0]++;
      cov_6on5x4e4l().s[27]++;
      options.onOperationExecuted?.(operation);
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[4][1]++;
    }
    cov_6on5x4e4l().s[28]++;
    return operationId;
  }, [updateState, options]));
  const undo =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[29]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[8]++;
    cov_6on5x4e4l().s[30]++;
    if (!managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[5][0]++;
      cov_6on5x4e4l().s[31]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[5][1]++;
    }
    const currentOperation =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[32]++, state.currentIndex >= 0 ?
    /* istanbul ignore next */
    (cov_6on5x4e4l().b[6][0]++, managerRef.current.getHistory()[state.currentIndex]) :
    /* istanbul ignore next */
    (cov_6on5x4e4l().b[6][1]++, null));
    const success =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[33]++, managerRef.current.undo());
    /* istanbul ignore next */
    cov_6on5x4e4l().s[34]++;
    if (success) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[7][0]++;
      cov_6on5x4e4l().s[35]++;
      updateState();
      /* istanbul ignore next */
      cov_6on5x4e4l().s[36]++;
      if (currentOperation) {
        /* istanbul ignore next */
        cov_6on5x4e4l().b[8][0]++;
        cov_6on5x4e4l().s[37]++;
        options.onUndo?.(currentOperation);
      } else
      /* istanbul ignore next */
      {
        cov_6on5x4e4l().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[7][1]++;
    }
    cov_6on5x4e4l().s[38]++;
    return success;
  }, [state.currentIndex, updateState, options]));
  const redo =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[39]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[9]++;
    cov_6on5x4e4l().s[40]++;
    if (!managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[9][0]++;
      cov_6on5x4e4l().s[41]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[9][1]++;
    }
    const nextOperation =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[42]++, state.currentIndex + 1 < state.operations.length ?
    /* istanbul ignore next */
    (cov_6on5x4e4l().b[10][0]++, state.operations[state.currentIndex + 1]) :
    /* istanbul ignore next */
    (cov_6on5x4e4l().b[10][1]++, null));
    const success =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[43]++, managerRef.current.redo());
    /* istanbul ignore next */
    cov_6on5x4e4l().s[44]++;
    if (success) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[11][0]++;
      cov_6on5x4e4l().s[45]++;
      updateState();
      /* istanbul ignore next */
      cov_6on5x4e4l().s[46]++;
      if (nextOperation) {
        /* istanbul ignore next */
        cov_6on5x4e4l().b[12][0]++;
        cov_6on5x4e4l().s[47]++;
        options.onRedo?.(nextOperation);
      } else
      /* istanbul ignore next */
      {
        cov_6on5x4e4l().b[12][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[11][1]++;
    }
    cov_6on5x4e4l().s[48]++;
    return success;
  }, [state.currentIndex, state.operations, updateState, options]));
  const startComposite =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[49]++, (0, _react.useCallback)((description, metadata) => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[10]++;
    cov_6on5x4e4l().s[50]++;
    if (!managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[13][0]++;
      cov_6on5x4e4l().s[51]++;
      throw new Error('Manager not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[13][1]++;
    }
    cov_6on5x4e4l().s[52]++;
    return managerRef.current.startCompositeOperation(description, metadata);
  }, []));
  const endComposite =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[53]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[11]++;
    cov_6on5x4e4l().s[54]++;
    if (!managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[14][0]++;
      cov_6on5x4e4l().s[55]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[14][1]++;
    }
    cov_6on5x4e4l().s[56]++;
    managerRef.current.endCompositeOperation();
    /* istanbul ignore next */
    cov_6on5x4e4l().s[57]++;
    updateState();
  }, [updateState]));
  const jumpToOperation =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[58]++, (0, _react.useCallback)(index => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[12]++;
    cov_6on5x4e4l().s[59]++;
    if (!managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[15][0]++;
      cov_6on5x4e4l().s[60]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[15][1]++;
    }
    const success =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[61]++, managerRef.current.jumpToOperation(index));
    /* istanbul ignore next */
    cov_6on5x4e4l().s[62]++;
    if (success) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[16][0]++;
      cov_6on5x4e4l().s[63]++;
      updateState();
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[16][1]++;
    }
    cov_6on5x4e4l().s[64]++;
    return success;
  }, [updateState]));
  const clearHistory =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[65]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[13]++;
    cov_6on5x4e4l().s[66]++;
    if (!managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[17][0]++;
      cov_6on5x4e4l().s[67]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[17][1]++;
    }
    cov_6on5x4e4l().s[68]++;
    managerRef.current.clearHistory();
    /* istanbul ignore next */
    cov_6on5x4e4l().s[69]++;
    updateState();
    /* istanbul ignore next */
    cov_6on5x4e4l().s[70]++;
    options.onHistoryCleared?.();
  }, [updateState, options]));
  const getHistory =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[71]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[14]++;
    cov_6on5x4e4l().s[72]++;
    return /* istanbul ignore next */(cov_6on5x4e4l().b[18][0]++, managerRef.current?.getHistory()) ||
    /* istanbul ignore next */
    (cov_6on5x4e4l().b[18][1]++, []);
  }, []));
  const getOperation =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[73]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[15]++;
    cov_6on5x4e4l().s[74]++;
    return /* istanbul ignore next */(cov_6on5x4e4l().b[19][0]++, managerRef.current?.getOperation(id)) ||
    /* istanbul ignore next */
    (cov_6on5x4e4l().b[19][1]++, null);
  }, []));
  const cleanup =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[75]++, (0, _react.useCallback)(targetMemoryMB => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[16]++;
    cov_6on5x4e4l().s[76]++;
    if (!managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[20][0]++;
      cov_6on5x4e4l().s[77]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[20][1]++;
    }
    cov_6on5x4e4l().s[78]++;
    managerRef.current.cleanup(targetMemoryMB);
    /* istanbul ignore next */
    cov_6on5x4e4l().s[79]++;
    updateState();
  }, [updateState]));
  const exportHistory =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[80]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[17]++;
    cov_6on5x4e4l().s[81]++;
    return /* istanbul ignore next */(cov_6on5x4e4l().b[21][0]++, managerRef.current?.exportHistory()) ||
    /* istanbul ignore next */
    (cov_6on5x4e4l().b[21][1]++, '');
  }, []));
  const importHistory =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[82]++, (0, _react.useCallback)(historyData => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[18]++;
    cov_6on5x4e4l().s[83]++;
    if (!managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[22][0]++;
      cov_6on5x4e4l().s[84]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[22][1]++;
    }
    const success =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[85]++, managerRef.current.importHistory(historyData));
    /* istanbul ignore next */
    cov_6on5x4e4l().s[86]++;
    if (success) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[23][0]++;
      cov_6on5x4e4l().s[87]++;
      updateState();
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[23][1]++;
    }
    cov_6on5x4e4l().s[88]++;
    return success;
  }, [updateState]));
  const updateConfig =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[89]++, (0, _react.useCallback)(newConfig => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[19]++;
    cov_6on5x4e4l().s[90]++;
    if (!managerRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[24][0]++;
      cov_6on5x4e4l().s[91]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[24][1]++;
    }
    cov_6on5x4e4l().s[92]++;
    managerRef.current.updateConfig(newConfig);
    /* istanbul ignore next */
    cov_6on5x4e4l().s[93]++;
    updateState();
  }, [updateState]));
  // Keyboard shortcuts
  /* istanbul ignore next */
  cov_6on5x4e4l().s[94]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[20]++;
    cov_6on5x4e4l().s[95]++;
    if (!options.enableKeyboardShortcuts) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[25][0]++;
      cov_6on5x4e4l().s[96]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[25][1]++;
    }
    const shortcuts =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[97]++, {
      ...DEFAULT_SHORTCUTS,
      ...options.keyboardShortcuts
    });
    /* istanbul ignore next */
    cov_6on5x4e4l().s[98]++;
    const handleKeyDown = event => {
      /* istanbul ignore next */
      cov_6on5x4e4l().f[21]++;
      const key =
      /* istanbul ignore next */
      (cov_6on5x4e4l().s[99]++, `${
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[27][0]++, event.ctrlKey) ||
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[27][1]++, event.metaKey) ?
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[26][0]++, 'ctrl+') :
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[26][1]++, '')}${event.shiftKey ?
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[28][0]++, 'shift+') :
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[28][1]++, '')}${event.key.toLowerCase()}`);
      const cmdKey =
      /* istanbul ignore next */
      (cov_6on5x4e4l().s[100]++, `${
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[30][0]++, event.ctrlKey) ||
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[30][1]++, event.metaKey) ?
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[29][0]++, 'cmd+') :
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[29][1]++, '')}${event.shiftKey ?
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[31][0]++, 'shift+') :
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[31][1]++, '')}${event.key.toLowerCase()}`);
      /* istanbul ignore next */
      cov_6on5x4e4l().s[101]++;
      if (
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[33][0]++, shortcuts.undo.includes(key)) ||
      /* istanbul ignore next */
      (cov_6on5x4e4l().b[33][1]++, shortcuts.undo.includes(cmdKey))) {
        /* istanbul ignore next */
        cov_6on5x4e4l().b[32][0]++;
        cov_6on5x4e4l().s[102]++;
        event.preventDefault();
        /* istanbul ignore next */
        cov_6on5x4e4l().s[103]++;
        undo();
      } else {
        /* istanbul ignore next */
        cov_6on5x4e4l().b[32][1]++;
        cov_6on5x4e4l().s[104]++;
        if (
        /* istanbul ignore next */
        (cov_6on5x4e4l().b[35][0]++, shortcuts.redo.includes(key)) ||
        /* istanbul ignore next */
        (cov_6on5x4e4l().b[35][1]++, shortcuts.redo.includes(cmdKey))) {
          /* istanbul ignore next */
          cov_6on5x4e4l().b[34][0]++;
          cov_6on5x4e4l().s[105]++;
          event.preventDefault();
          /* istanbul ignore next */
          cov_6on5x4e4l().s[106]++;
          redo();
        } else
        /* istanbul ignore next */
        {
          cov_6on5x4e4l().b[34][1]++;
        }
      }
    };
    /* istanbul ignore next */
    cov_6on5x4e4l().s[107]++;
    document.addEventListener('keydown', handleKeyDown);
    /* istanbul ignore next */
    cov_6on5x4e4l().s[108]++;
    return () => {
      /* istanbul ignore next */
      cov_6on5x4e4l().f[22]++;
      cov_6on5x4e4l().s[109]++;
      return document.removeEventListener('keydown', handleKeyDown);
    };
  }, [options.enableKeyboardShortcuts, options.keyboardShortcuts, undo, redo]);
  // Update state when operations change
  /* istanbul ignore next */
  cov_6on5x4e4l().s[110]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[23]++;
    cov_6on5x4e4l().s[111]++;
    updateState();
  }, [updateState]);
  /* istanbul ignore next */
  cov_6on5x4e4l().s[112]++;
  return {
    canvas,
    manager: managerRef.current,
    state,
    canUndo: state.canUndo,
    canRedo: state.canRedo,
    undo,
    redo,
    executeOperation,
    startComposite,
    endComposite,
    jumpToOperation,
    clearHistory,
    getHistory,
    getOperation,
    cleanup,
    exportHistory,
    importHistory,
    updateConfig
  };
}
function useSimpleUndoRedo(initialState, maxHistorySize =
/* istanbul ignore next */
(cov_6on5x4e4l().b[36][0]++, 50)) {
  /* istanbul ignore next */
  cov_6on5x4e4l().f[24]++;
  const [history, setHistory] =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[113]++, (0, _react.useState)([initialState]));
  const [currentIndex, setCurrentIndex] =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[114]++, (0, _react.useState)(0));
  const canUndo =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[115]++, currentIndex > 0);
  const canRedo =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[116]++, currentIndex < history.length - 1);
  const state =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[117]++, history[currentIndex]);
  const undo =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[118]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[25]++;
    cov_6on5x4e4l().s[119]++;
    if (canUndo) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[37][0]++;
      cov_6on5x4e4l().s[120]++;
      setCurrentIndex(prev => {
        /* istanbul ignore next */
        cov_6on5x4e4l().f[26]++;
        cov_6on5x4e4l().s[121]++;
        return prev - 1;
      });
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[37][1]++;
    }
  }, [canUndo]));
  const redo =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[122]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[27]++;
    cov_6on5x4e4l().s[123]++;
    if (canRedo) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[38][0]++;
      cov_6on5x4e4l().s[124]++;
      setCurrentIndex(prev => {
        /* istanbul ignore next */
        cov_6on5x4e4l().f[28]++;
        cov_6on5x4e4l().s[125]++;
        return prev + 1;
      });
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[38][1]++;
    }
  }, [canRedo]));
  const pushState =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[126]++, (0, _react.useCallback)(newState => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[29]++;
    cov_6on5x4e4l().s[127]++;
    setHistory(prev => {
      /* istanbul ignore next */
      cov_6on5x4e4l().f[30]++;
      // Remove any states after current index
      const newHistory =
      /* istanbul ignore next */
      (cov_6on5x4e4l().s[128]++, prev.slice(0, currentIndex + 1));
      /* istanbul ignore next */
      cov_6on5x4e4l().s[129]++;
      newHistory.push(newState);
      // Enforce max history size
      /* istanbul ignore next */
      cov_6on5x4e4l().s[130]++;
      if (newHistory.length > maxHistorySize) {
        /* istanbul ignore next */
        cov_6on5x4e4l().b[39][0]++;
        cov_6on5x4e4l().s[131]++;
        newHistory.splice(0, newHistory.length - maxHistorySize);
        /* istanbul ignore next */
        cov_6on5x4e4l().s[132]++;
        setCurrentIndex(maxHistorySize - 1);
        /* istanbul ignore next */
        cov_6on5x4e4l().s[133]++;
        return newHistory;
      } else
      /* istanbul ignore next */
      {
        cov_6on5x4e4l().b[39][1]++;
      }
      cov_6on5x4e4l().s[134]++;
      setCurrentIndex(newHistory.length - 1);
      /* istanbul ignore next */
      cov_6on5x4e4l().s[135]++;
      return newHistory;
    });
  }, [currentIndex, maxHistorySize]));
  const clearHistory =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[136]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[31]++;
    cov_6on5x4e4l().s[137]++;
    setHistory([state]);
    /* istanbul ignore next */
    cov_6on5x4e4l().s[138]++;
    setCurrentIndex(0);
  }, [state]));
  const getHistory =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[139]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[32]++;
    cov_6on5x4e4l().s[140]++;
    return [...history];
  }, [history]));
  /* istanbul ignore next */
  cov_6on5x4e4l().s[141]++;
  return {
    state,
    canUndo,
    canRedo,
    undo,
    redo,
    pushState,
    clearHistory,
    getHistory
  };
}
function useOperationBatching(undoRedoManager, autoCommitDelay =
/* istanbul ignore next */
(cov_6on5x4e4l().b[40][0]++, 1000)) {
  /* istanbul ignore next */
  cov_6on5x4e4l().f[33]++;
  const [isBatching, setIsBatching] =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[142]++, (0, _react.useState)(false));
  const [batchOperationCount, setBatchOperationCount] =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[143]++, (0, _react.useState)(0));
  const batchTimeoutRef =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[144]++, (0, _react.useRef)());
  const currentBatchRef =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[145]++, (0, _react.useRef)(null));
  const startBatch =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[146]++, (0, _react.useCallback)(description => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[34]++;
    cov_6on5x4e4l().s[147]++;
    if (currentBatchRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[41][0]++;
      cov_6on5x4e4l().s[148]++;
      commitBatch();
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[41][1]++;
    }
    const batchId =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[149]++, undoRedoManager.startCompositeOperation(description));
    /* istanbul ignore next */
    cov_6on5x4e4l().s[150]++;
    currentBatchRef.current = batchId;
    /* istanbul ignore next */
    cov_6on5x4e4l().s[151]++;
    setIsBatching(true);
    /* istanbul ignore next */
    cov_6on5x4e4l().s[152]++;
    setBatchOperationCount(0);
    // Auto-commit after delay
    /* istanbul ignore next */
    cov_6on5x4e4l().s[153]++;
    if (batchTimeoutRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[42][0]++;
      cov_6on5x4e4l().s[154]++;
      clearTimeout(batchTimeoutRef.current);
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[42][1]++;
    }
    cov_6on5x4e4l().s[155]++;
    batchTimeoutRef.current = setTimeout(() => {
      /* istanbul ignore next */
      cov_6on5x4e4l().f[35]++;
      cov_6on5x4e4l().s[156]++;
      commitBatch();
    }, autoCommitDelay);
    /* istanbul ignore next */
    cov_6on5x4e4l().s[157]++;
    return batchId;
  }, [autoCommitDelay]));
  const addOperation =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[158]++, (0, _react.useCallback)(async (type, description, operationFn, operationData) => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[36]++;
    const operationId =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[159]++, await undoRedoManager.executeOperation(type, description, operationFn, operationData));
    /* istanbul ignore next */
    cov_6on5x4e4l().s[160]++;
    setBatchOperationCount(prev => {
      /* istanbul ignore next */
      cov_6on5x4e4l().f[37]++;
      cov_6on5x4e4l().s[161]++;
      return prev + 1;
    });
    /* istanbul ignore next */
    cov_6on5x4e4l().s[162]++;
    return operationId;
  }, [undoRedoManager]));
  const commitBatch =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[163]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[38]++;
    cov_6on5x4e4l().s[164]++;
    if (currentBatchRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[43][0]++;
      cov_6on5x4e4l().s[165]++;
      undoRedoManager.endCompositeOperation();
      /* istanbul ignore next */
      cov_6on5x4e4l().s[166]++;
      currentBatchRef.current = null;
      /* istanbul ignore next */
      cov_6on5x4e4l().s[167]++;
      setIsBatching(false);
      /* istanbul ignore next */
      cov_6on5x4e4l().s[168]++;
      setBatchOperationCount(0);
      /* istanbul ignore next */
      cov_6on5x4e4l().s[169]++;
      if (batchTimeoutRef.current) {
        /* istanbul ignore next */
        cov_6on5x4e4l().b[44][0]++;
        cov_6on5x4e4l().s[170]++;
        clearTimeout(batchTimeoutRef.current);
        /* istanbul ignore next */
        cov_6on5x4e4l().s[171]++;
        batchTimeoutRef.current = undefined;
      } else
      /* istanbul ignore next */
      {
        cov_6on5x4e4l().b[44][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[43][1]++;
    }
  }, [undoRedoManager]));
  const discardBatch =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[172]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[39]++;
    cov_6on5x4e4l().s[173]++;
    if (currentBatchRef.current) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[45][0]++;
      cov_6on5x4e4l().s[174]++;
      // Note: In a real implementation, you'd need to revert operations
      // For now, we just clear the batch state
      currentBatchRef.current = null;
      /* istanbul ignore next */
      cov_6on5x4e4l().s[175]++;
      setIsBatching(false);
      /* istanbul ignore next */
      cov_6on5x4e4l().s[176]++;
      setBatchOperationCount(0);
      /* istanbul ignore next */
      cov_6on5x4e4l().s[177]++;
      if (batchTimeoutRef.current) {
        /* istanbul ignore next */
        cov_6on5x4e4l().b[46][0]++;
        cov_6on5x4e4l().s[178]++;
        clearTimeout(batchTimeoutRef.current);
        /* istanbul ignore next */
        cov_6on5x4e4l().s[179]++;
        batchTimeoutRef.current = undefined;
      } else
      /* istanbul ignore next */
      {
        cov_6on5x4e4l().b[46][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[45][1]++;
    }
  }, []));
  // Cleanup on unmount
  /* istanbul ignore next */
  cov_6on5x4e4l().s[180]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[40]++;
    cov_6on5x4e4l().s[181]++;
    return () => {
      /* istanbul ignore next */
      cov_6on5x4e4l().f[41]++;
      cov_6on5x4e4l().s[182]++;
      if (batchTimeoutRef.current) {
        /* istanbul ignore next */
        cov_6on5x4e4l().b[47][0]++;
        cov_6on5x4e4l().s[183]++;
        clearTimeout(batchTimeoutRef.current);
      } else
      /* istanbul ignore next */
      {
        cov_6on5x4e4l().b[47][1]++;
      }
    };
  }, []);
  /* istanbul ignore next */
  cov_6on5x4e4l().s[184]++;
  return {
    startBatch,
    addOperation,
    commitBatch,
    discardBatch,
    isBatching,
    batchOperationCount
  };
}
function useHistoryPersistence(undoRedoManager, storageKey =
/* istanbul ignore next */
(cov_6on5x4e4l().b[48][0]++, 'canvas-history')) {
  /* istanbul ignore next */
  cov_6on5x4e4l().f[42]++;
  const [autoSave, setAutoSave] =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[185]++, (0, _react.useState)(false));
  const [lastSaved, setLastSaved] =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[186]++, (0, _react.useState)(null));
  const saveHistory =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[187]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[43]++;
    cov_6on5x4e4l().s[188]++;
    try {
      const historyData =
      /* istanbul ignore next */
      (cov_6on5x4e4l().s[189]++, undoRedoManager.exportHistory());
      /* istanbul ignore next */
      cov_6on5x4e4l().s[190]++;
      localStorage.setItem(storageKey, historyData);
      /* istanbul ignore next */
      cov_6on5x4e4l().s[191]++;
      setLastSaved(new Date());
      /* istanbul ignore next */
      cov_6on5x4e4l().s[192]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_6on5x4e4l().s[193]++;
      console.error('Failed to save history:', error);
      /* istanbul ignore next */
      cov_6on5x4e4l().s[194]++;
      return false;
    }
  }, [undoRedoManager, storageKey]));
  const loadHistory =
  /* istanbul ignore next */
  (cov_6on5x4e4l().s[195]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[44]++;
    cov_6on5x4e4l().s[196]++;
    try {
      const historyData =
      /* istanbul ignore next */
      (cov_6on5x4e4l().s[197]++, localStorage.getItem(storageKey));
      /* istanbul ignore next */
      cov_6on5x4e4l().s[198]++;
      if (historyData) {
        /* istanbul ignore next */
        cov_6on5x4e4l().b[49][0]++;
        const success =
        /* istanbul ignore next */
        (cov_6on5x4e4l().s[199]++, undoRedoManager.importHistory(historyData));
        /* istanbul ignore next */
        cov_6on5x4e4l().s[200]++;
        if (success) {
          /* istanbul ignore next */
          cov_6on5x4e4l().b[50][0]++;
          cov_6on5x4e4l().s[201]++;
          setLastSaved(new Date());
        } else
        /* istanbul ignore next */
        {
          cov_6on5x4e4l().b[50][1]++;
        }
        cov_6on5x4e4l().s[202]++;
        return success;
      } else
      /* istanbul ignore next */
      {
        cov_6on5x4e4l().b[49][1]++;
      }
      cov_6on5x4e4l().s[203]++;
      return false;
    } catch (error) {
      /* istanbul ignore next */
      cov_6on5x4e4l().s[204]++;
      console.error('Failed to load history:', error);
      /* istanbul ignore next */
      cov_6on5x4e4l().s[205]++;
      return false;
    }
  }, [undoRedoManager, storageKey]));
  // Auto-save functionality
  /* istanbul ignore next */
  cov_6on5x4e4l().s[206]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[45]++;
    cov_6on5x4e4l().s[207]++;
    if (!autoSave) {
      /* istanbul ignore next */
      cov_6on5x4e4l().b[51][0]++;
      cov_6on5x4e4l().s[208]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_6on5x4e4l().b[51][1]++;
    }
    cov_6on5x4e4l().s[209]++;
    const handleBeforeUnload = () => {
      /* istanbul ignore next */
      cov_6on5x4e4l().f[46]++;
      cov_6on5x4e4l().s[210]++;
      saveHistory();
    };
    const autoSaveInterval =
    /* istanbul ignore next */
    (cov_6on5x4e4l().s[211]++, setInterval(() => {
      /* istanbul ignore next */
      cov_6on5x4e4l().f[47]++;
      cov_6on5x4e4l().s[212]++;
      saveHistory();
    }, 30000)); // Save every 30 seconds
    /* istanbul ignore next */
    cov_6on5x4e4l().s[213]++;
    window.addEventListener('beforeunload', handleBeforeUnload);
    /* istanbul ignore next */
    cov_6on5x4e4l().s[214]++;
    return () => {
      /* istanbul ignore next */
      cov_6on5x4e4l().f[48]++;
      cov_6on5x4e4l().s[215]++;
      clearInterval(autoSaveInterval);
      /* istanbul ignore next */
      cov_6on5x4e4l().s[216]++;
      window.removeEventListener('beforeunload', handleBeforeUnload);
    };
  }, [autoSave, saveHistory]);
  // Load history on mount
  /* istanbul ignore next */
  cov_6on5x4e4l().s[217]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_6on5x4e4l().f[49]++;
    cov_6on5x4e4l().s[218]++;
    loadHistory();
  }, [loadHistory]);
  /* istanbul ignore next */
  cov_6on5x4e4l().s[219]++;
  return {
    saveHistory,
    loadHistory,
    autoSave,
    setAutoSave,
    lastSaved
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNm9uNXg0ZTRsIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwidXNlSGlzdG9yeVBlcnNpc3RlbmNlIiwiZiIsInVzZU9wZXJhdGlvbkJhdGNoaW5nIiwidXNlU2ltcGxlVW5kb1JlZG8iLCJ1c2VVbmRvUmVkbyIsIkRFRkFVTFRfU0hPUlRDVVRTIiwidW5kbyIsInJlZG8iLCJjYW52YXNXaWR0aCIsImNhbnZhc0hlaWdodCIsImNhbnZhc0lkIiwib3B0aW9ucyIsImIiLCJjYW52YXMiLCJfQ2FudmFzUHJvdmlkZXIiLCJ1c2VNYW5hZ2VkQ2FudmFzIiwibWFuYWdlclJlZiIsIl9yZWFjdCIsInVzZVJlZiIsInN0YXRlIiwic2V0U3RhdGUiLCJ1c2VTdGF0ZSIsImN1cnJlbnRJbmRleCIsIm9wZXJhdGlvbnMiLCJjYW5VbmRvIiwiY2FuUmVkbyIsIm1lbW9yeVVzYWdlIiwic3RhdHMiLCJ0b3RhbE9wZXJhdGlvbnMiLCJ1bmRvQ291bnQiLCJyZWRvQ291bnQiLCJtZW1vcnlQZWFrVXNhZ2UiLCJsYXN0Q2xlYW51cCIsIkRhdGUiLCJub3ciLCJjdXJyZW50IiwiX3VuZG9SZWRvU3RhY2siLCJjcmVhdGVVbmRvUmVkb01hbmFnZXIiLCJjb25maWciLCJ1cGRhdGVTdGF0ZSIsInVzZUNhbGxiYWNrIiwiZ2V0U3RhdGUiLCJleGVjdXRlT3BlcmF0aW9uIiwidHlwZSIsImRlc2NyaXB0aW9uIiwib3BlcmF0aW9uRm4iLCJvcGVyYXRpb25EYXRhIiwibWV0YWRhdGEiLCJFcnJvciIsIm9wZXJhdGlvbklkIiwib3BlcmF0aW9uIiwiZ2V0T3BlcmF0aW9uIiwib25PcGVyYXRpb25FeGVjdXRlZCIsImN1cnJlbnRPcGVyYXRpb24iLCJnZXRIaXN0b3J5Iiwic3VjY2VzcyIsIm9uVW5kbyIsIm5leHRPcGVyYXRpb24iLCJsZW5ndGgiLCJvblJlZG8iLCJzdGFydENvbXBvc2l0ZSIsInN0YXJ0Q29tcG9zaXRlT3BlcmF0aW9uIiwiZW5kQ29tcG9zaXRlIiwiZW5kQ29tcG9zaXRlT3BlcmF0aW9uIiwianVtcFRvT3BlcmF0aW9uIiwiaW5kZXgiLCJjbGVhckhpc3RvcnkiLCJvbkhpc3RvcnlDbGVhcmVkIiwiaWQiLCJjbGVhbnVwIiwidGFyZ2V0TWVtb3J5TUIiLCJleHBvcnRIaXN0b3J5IiwiaW1wb3J0SGlzdG9yeSIsImhpc3RvcnlEYXRhIiwidXBkYXRlQ29uZmlnIiwibmV3Q29uZmlnIiwidXNlRWZmZWN0IiwiZW5hYmxlS2V5Ym9hcmRTaG9ydGN1dHMiLCJzaG9ydGN1dHMiLCJrZXlib2FyZFNob3J0Y3V0cyIsImhhbmRsZUtleURvd24iLCJldmVudCIsImtleSIsImN0cmxLZXkiLCJtZXRhS2V5Iiwic2hpZnRLZXkiLCJ0b0xvd2VyQ2FzZSIsImNtZEtleSIsImluY2x1ZGVzIiwicHJldmVudERlZmF1bHQiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwibWFuYWdlciIsImluaXRpYWxTdGF0ZSIsIm1heEhpc3RvcnlTaXplIiwiaGlzdG9yeSIsInNldEhpc3RvcnkiLCJzZXRDdXJyZW50SW5kZXgiLCJwcmV2IiwicHVzaFN0YXRlIiwibmV3U3RhdGUiLCJuZXdIaXN0b3J5Iiwic2xpY2UiLCJwdXNoIiwic3BsaWNlIiwidW5kb1JlZG9NYW5hZ2VyIiwiYXV0b0NvbW1pdERlbGF5IiwiaXNCYXRjaGluZyIsInNldElzQmF0Y2hpbmciLCJiYXRjaE9wZXJhdGlvbkNvdW50Iiwic2V0QmF0Y2hPcGVyYXRpb25Db3VudCIsImJhdGNoVGltZW91dFJlZiIsImN1cnJlbnRCYXRjaFJlZiIsInN0YXJ0QmF0Y2giLCJjb21taXRCYXRjaCIsImJhdGNoSWQiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiYWRkT3BlcmF0aW9uIiwidW5kZWZpbmVkIiwiZGlzY2FyZEJhdGNoIiwic3RvcmFnZUtleSIsImF1dG9TYXZlIiwic2V0QXV0b1NhdmUiLCJsYXN0U2F2ZWQiLCJzZXRMYXN0U2F2ZWQiLCJzYXZlSGlzdG9yeSIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJlcnJvciIsImNvbnNvbGUiLCJsb2FkSGlzdG9yeSIsImdldEl0ZW0iLCJoYW5kbGVCZWZvcmVVbmxvYWQiLCJhdXRvU2F2ZUludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJ3aW5kb3ciLCJjbGVhckludGVydmFsIl0sInNvdXJjZXMiOlsiL1VzZXJzL3dpbGxzdHJlZXRlci9XZWJzdG9ybVByb2plY3RzL3ZpYmUtY29kaW5nL3Rob3NlLXBlb3BsZS9UaGUtU3VzLUZpdC1ncC9zcmMvYnVzaW5lc3MtbGF5ZXIvaG9va3MvdXNlVW5kb1JlZG8udHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG4vLyBVbmRvL1JlZG8gUmVhY3QgSG9va3Ncbi8vIFJlYWN0IGhvb2tzIGZvciBtYW5hZ2luZyB1bmRvL3JlZG8gb3BlcmF0aW9ucyB3aXRoIGtleWJvYXJkIHNob3J0Y3V0c1xuXG5pbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlTWFuYWdlZENhbnZhcywgdHlwZSBNYW5hZ2VkQ2FudmFzIH0gZnJvbSAnLi4vcHJvdmlkZXJzL0NhbnZhc1Byb3ZpZGVyJztcbmltcG9ydCB7XG4gIFVuZG9SZWRvTWFuYWdlcixcbiAgY3JlYXRlVW5kb1JlZG9NYW5hZ2VyLFxuICBPcGVyYXRpb25UeXBlLFxuICB0eXBlIFVuZG9SZWRvQ29uZmlnLFxuICB0eXBlIFVuZG9SZWRvU3RhdGUsXG4gIHR5cGUgT3BlcmF0aW9uLFxuICB0eXBlIENvbXBvc2l0ZU9wZXJhdGlvbixcbiAgREVGQVVMVF9VTkRPX1JFRE9fQ09ORklHXG59IGZyb20gJy4uL3V0aWxzL3VuZG9SZWRvU3RhY2snO1xuXG4vKipcbiAqIFVuZG8vUmVkbyBob29rIG9wdGlvbnNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBVc2VVbmRvUmVkb09wdGlvbnMge1xuICAvKiogVW5kby9SZWRvIGNvbmZpZ3VyYXRpb24gKi9cbiAgY29uZmlnPzogUGFydGlhbDxVbmRvUmVkb0NvbmZpZz47XG4gIC8qKiBFbmFibGUga2V5Ym9hcmQgc2hvcnRjdXRzIChDdHJsK1osIEN0cmwrWSkgKi9cbiAgZW5hYmxlS2V5Ym9hcmRTaG9ydGN1dHM/OiBib29sZWFuO1xuICAvKiogQ3VzdG9tIGtleWJvYXJkIHNob3J0Y3V0cyAqL1xuICBrZXlib2FyZFNob3J0Y3V0cz86IHtcbiAgICB1bmRvPzogc3RyaW5nW107XG4gICAgcmVkbz86IHN0cmluZ1tdO1xuICB9O1xuICAvKiogQ2FsbGJhY2sgd2hlbiBvcGVyYXRpb24gaXMgZXhlY3V0ZWQgKi9cbiAgb25PcGVyYXRpb25FeGVjdXRlZD86IChvcGVyYXRpb246IE9wZXJhdGlvbiB8IENvbXBvc2l0ZU9wZXJhdGlvbikgPT4gdm9pZDtcbiAgLyoqIENhbGxiYWNrIHdoZW4gdW5kbyBpcyBwZXJmb3JtZWQgKi9cbiAgb25VbmRvPzogKG9wZXJhdGlvbjogT3BlcmF0aW9uIHwgQ29tcG9zaXRlT3BlcmF0aW9uKSA9PiB2b2lkO1xuICAvKiogQ2FsbGJhY2sgd2hlbiByZWRvIGlzIHBlcmZvcm1lZCAqL1xuICBvblJlZG8/OiAob3BlcmF0aW9uOiBPcGVyYXRpb24gfCBDb21wb3NpdGVPcGVyYXRpb24pID0+IHZvaWQ7XG4gIC8qKiBDYWxsYmFjayB3aGVuIGhpc3RvcnkgaXMgY2xlYXJlZCAqL1xuICBvbkhpc3RvcnlDbGVhcmVkPzogKCkgPT4gdm9pZDtcbn1cblxuLyoqXG4gKiBEZWZhdWx0IGtleWJvYXJkIHNob3J0Y3V0c1xuICovXG5jb25zdCBERUZBVUxUX1NIT1JUQ1VUUyA9IHtcbiAgdW5kbzogWydjdHJsK3onLCAnY21kK3onXSxcbiAgcmVkbzogWydjdHJsK3knLCAnY21kK3knLCAnY3RybCtzaGlmdCt6JywgJ2NtZCtzaGlmdCt6J11cbn07XG5cbi8qKlxuICogTWFpbiB1bmRvL3JlZG8gaG9va1xuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlVW5kb1JlZG8oXG4gIGNhbnZhc1dpZHRoOiBudW1iZXIsXG4gIGNhbnZhc0hlaWdodDogbnVtYmVyLFxuICBjYW52YXNJZD86IHN0cmluZyxcbiAgb3B0aW9uczogVXNlVW5kb1JlZG9PcHRpb25zID0ge31cbik6IHtcbiAgY2FudmFzOiBNYW5hZ2VkQ2FudmFzO1xuICBtYW5hZ2VyOiBVbmRvUmVkb01hbmFnZXI7XG4gIHN0YXRlOiBVbmRvUmVkb1N0YXRlO1xuICBjYW5VbmRvOiBib29sZWFuO1xuICBjYW5SZWRvOiBib29sZWFuO1xuICB1bmRvOiAoKSA9PiBib29sZWFuO1xuICByZWRvOiAoKSA9PiBib29sZWFuO1xuICBleGVjdXRlT3BlcmF0aW9uOiAoXG4gICAgdHlwZTogT3BlcmF0aW9uVHlwZSxcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nLFxuICAgIG9wZXJhdGlvbkZuOiAoKSA9PiB2b2lkIHwgUHJvbWlzZTx2b2lkPixcbiAgICBvcGVyYXRpb25EYXRhPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj4sXG4gICAgbWV0YWRhdGE/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPlxuICApID0+IFByb21pc2U8c3RyaW5nPjtcbiAgc3RhcnRDb21wb3NpdGU6IChkZXNjcmlwdGlvbjogc3RyaW5nLCBtZXRhZGF0YT86IFJlY29yZDxzdHJpbmcsIHVua25vd24+KSA9PiBzdHJpbmc7XG4gIGVuZENvbXBvc2l0ZTogKCkgPT4gdm9pZDtcbiAganVtcFRvT3BlcmF0aW9uOiAoaW5kZXg6IG51bWJlcikgPT4gYm9vbGVhbjtcbiAgY2xlYXJIaXN0b3J5OiAoKSA9PiB2b2lkO1xuICBnZXRIaXN0b3J5OiAoKSA9PiAoT3BlcmF0aW9uIHwgQ29tcG9zaXRlT3BlcmF0aW9uKVtdO1xuICBnZXRPcGVyYXRpb246IChpZDogc3RyaW5nKSA9PiBPcGVyYXRpb24gfCBDb21wb3NpdGVPcGVyYXRpb24gfCBudWxsO1xuICBjbGVhbnVwOiAodGFyZ2V0TWVtb3J5TUI/OiBudW1iZXIpID0+IHZvaWQ7XG4gIGV4cG9ydEhpc3Rvcnk6ICgpID0+IHN0cmluZztcbiAgaW1wb3J0SGlzdG9yeTogKGhpc3RvcnlEYXRhOiBzdHJpbmcpID0+IGJvb2xlYW47XG4gIHVwZGF0ZUNvbmZpZzogKG5ld0NvbmZpZzogUGFydGlhbDxVbmRvUmVkb0NvbmZpZz4pID0+IHZvaWQ7XG59IHtcbiAgY29uc3QgY2FudmFzID0gdXNlTWFuYWdlZENhbnZhcyhjYW52YXNXaWR0aCwgY2FudmFzSGVpZ2h0LCBjYW52YXNJZCk7XG4gIGNvbnN0IG1hbmFnZXJSZWYgPSB1c2VSZWY8VW5kb1JlZG9NYW5hZ2VyPigpO1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlPFVuZG9SZWRvU3RhdGU+KHtcbiAgICBjdXJyZW50SW5kZXg6IC0xLFxuICAgIG9wZXJhdGlvbnM6IFtdLFxuICAgIGNhblVuZG86IGZhbHNlLFxuICAgIGNhblJlZG86IGZhbHNlLFxuICAgIG1lbW9yeVVzYWdlOiAwLFxuICAgIHN0YXRzOiB7XG4gICAgICB0b3RhbE9wZXJhdGlvbnM6IDAsXG4gICAgICB1bmRvQ291bnQ6IDAsXG4gICAgICByZWRvQ291bnQ6IDAsXG4gICAgICBtZW1vcnlQZWFrVXNhZ2U6IDAsXG4gICAgICBsYXN0Q2xlYW51cDogRGF0ZS5ub3coKVxuICAgIH1cbiAgfSk7XG5cbiAgLy8gSW5pdGlhbGl6ZSBtYW5hZ2VyXG4gIGlmICghbWFuYWdlclJlZi5jdXJyZW50KSB7XG4gICAgbWFuYWdlclJlZi5jdXJyZW50ID0gY3JlYXRlVW5kb1JlZG9NYW5hZ2VyKGNhbnZhcywgb3B0aW9ucy5jb25maWcpO1xuICB9XG5cbiAgY29uc3QgdXBkYXRlU3RhdGUgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKG1hbmFnZXJSZWYuY3VycmVudCkge1xuICAgICAgc2V0U3RhdGUobWFuYWdlclJlZi5jdXJyZW50LmdldFN0YXRlKCkpO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIGNvbnN0IGV4ZWN1dGVPcGVyYXRpb24gPSB1c2VDYWxsYmFjayhhc3luYyAoXG4gICAgdHlwZTogT3BlcmF0aW9uVHlwZSxcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nLFxuICAgIG9wZXJhdGlvbkZuOiAoKSA9PiB2b2lkIHwgUHJvbWlzZTx2b2lkPixcbiAgICBvcGVyYXRpb25EYXRhPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj4sXG4gICAgbWV0YWRhdGE/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPlxuICApOiBQcm9taXNlPHN0cmluZz4gPT4ge1xuICAgIGlmICghbWFuYWdlclJlZi5jdXJyZW50KSB0aHJvdyBuZXcgRXJyb3IoJ01hbmFnZXIgbm90IGluaXRpYWxpemVkJyk7XG4gICAgXG4gICAgY29uc3Qgb3BlcmF0aW9uSWQgPSBhd2FpdCBtYW5hZ2VyUmVmLmN1cnJlbnQuZXhlY3V0ZU9wZXJhdGlvbihcbiAgICAgIHR5cGUsXG4gICAgICBkZXNjcmlwdGlvbixcbiAgICAgIG9wZXJhdGlvbkZuLFxuICAgICAgb3BlcmF0aW9uRGF0YSxcbiAgICAgIG1ldGFkYXRhXG4gICAgKTtcbiAgICBcbiAgICB1cGRhdGVTdGF0ZSgpO1xuICAgIFxuICAgIGNvbnN0IG9wZXJhdGlvbiA9IG1hbmFnZXJSZWYuY3VycmVudC5nZXRPcGVyYXRpb24ob3BlcmF0aW9uSWQpO1xuICAgIGlmIChvcGVyYXRpb24pIHtcbiAgICAgIG9wdGlvbnMub25PcGVyYXRpb25FeGVjdXRlZD8uKG9wZXJhdGlvbik7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBvcGVyYXRpb25JZDtcbiAgfSwgW3VwZGF0ZVN0YXRlLCBvcHRpb25zXSk7XG5cbiAgY29uc3QgdW5kbyA9IHVzZUNhbGxiYWNrKCgpOiBib29sZWFuID0+IHtcbiAgICBpZiAoIW1hbmFnZXJSZWYuY3VycmVudCkgcmV0dXJuIGZhbHNlO1xuICAgIFxuICAgIGNvbnN0IGN1cnJlbnRPcGVyYXRpb24gPSBzdGF0ZS5jdXJyZW50SW5kZXggPj0gMCBcbiAgICAgID8gbWFuYWdlclJlZi5jdXJyZW50LmdldEhpc3RvcnkoKVtzdGF0ZS5jdXJyZW50SW5kZXhdIFxuICAgICAgOiBudWxsO1xuICAgIFxuICAgIGNvbnN0IHN1Y2Nlc3MgPSBtYW5hZ2VyUmVmLmN1cnJlbnQudW5kbygpO1xuICAgIGlmIChzdWNjZXNzKSB7XG4gICAgICB1cGRhdGVTdGF0ZSgpO1xuICAgICAgaWYgKGN1cnJlbnRPcGVyYXRpb24pIHtcbiAgICAgICAgb3B0aW9ucy5vblVuZG8/LihjdXJyZW50T3BlcmF0aW9uKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN1Y2Nlc3M7XG4gIH0sIFtzdGF0ZS5jdXJyZW50SW5kZXgsIHVwZGF0ZVN0YXRlLCBvcHRpb25zXSk7XG5cbiAgY29uc3QgcmVkbyA9IHVzZUNhbGxiYWNrKCgpOiBib29sZWFuID0+IHtcbiAgICBpZiAoIW1hbmFnZXJSZWYuY3VycmVudCkgcmV0dXJuIGZhbHNlO1xuICAgIFxuICAgIGNvbnN0IG5leHRPcGVyYXRpb24gPSBzdGF0ZS5jdXJyZW50SW5kZXggKyAxIDwgc3RhdGUub3BlcmF0aW9ucy5sZW5ndGhcbiAgICAgID8gc3RhdGUub3BlcmF0aW9uc1tzdGF0ZS5jdXJyZW50SW5kZXggKyAxXVxuICAgICAgOiBudWxsO1xuICAgIFxuICAgIGNvbnN0IHN1Y2Nlc3MgPSBtYW5hZ2VyUmVmLmN1cnJlbnQucmVkbygpO1xuICAgIGlmIChzdWNjZXNzKSB7XG4gICAgICB1cGRhdGVTdGF0ZSgpO1xuICAgICAgaWYgKG5leHRPcGVyYXRpb24pIHtcbiAgICAgICAgb3B0aW9ucy5vblJlZG8/LihuZXh0T3BlcmF0aW9uKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN1Y2Nlc3M7XG4gIH0sIFtzdGF0ZS5jdXJyZW50SW5kZXgsIHN0YXRlLm9wZXJhdGlvbnMsIHVwZGF0ZVN0YXRlLCBvcHRpb25zXSk7XG5cbiAgY29uc3Qgc3RhcnRDb21wb3NpdGUgPSB1c2VDYWxsYmFjaygoZGVzY3JpcHRpb246IHN0cmluZywgbWV0YWRhdGE/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik6IHN0cmluZyA9PiB7XG4gICAgaWYgKCFtYW5hZ2VyUmVmLmN1cnJlbnQpIHRocm93IG5ldyBFcnJvcignTWFuYWdlciBub3QgaW5pdGlhbGl6ZWQnKTtcbiAgICByZXR1cm4gbWFuYWdlclJlZi5jdXJyZW50LnN0YXJ0Q29tcG9zaXRlT3BlcmF0aW9uKGRlc2NyaXB0aW9uLCBtZXRhZGF0YSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBlbmRDb21wb3NpdGUgPSB1c2VDYWxsYmFjaygoKTogdm9pZCA9PiB7XG4gICAgaWYgKCFtYW5hZ2VyUmVmLmN1cnJlbnQpIHJldHVybjtcbiAgICBtYW5hZ2VyUmVmLmN1cnJlbnQuZW5kQ29tcG9zaXRlT3BlcmF0aW9uKCk7XG4gICAgdXBkYXRlU3RhdGUoKTtcbiAgfSwgW3VwZGF0ZVN0YXRlXSk7XG5cbiAgY29uc3QganVtcFRvT3BlcmF0aW9uID0gdXNlQ2FsbGJhY2soKGluZGV4OiBudW1iZXIpOiBib29sZWFuID0+IHtcbiAgICBpZiAoIW1hbmFnZXJSZWYuY3VycmVudCkgcmV0dXJuIGZhbHNlO1xuICAgIGNvbnN0IHN1Y2Nlc3MgPSBtYW5hZ2VyUmVmLmN1cnJlbnQuanVtcFRvT3BlcmF0aW9uKGluZGV4KTtcbiAgICBpZiAoc3VjY2Vzcykge1xuICAgICAgdXBkYXRlU3RhdGUoKTtcbiAgICB9XG4gICAgcmV0dXJuIHN1Y2Nlc3M7XG4gIH0sIFt1cGRhdGVTdGF0ZV0pO1xuXG4gIGNvbnN0IGNsZWFySGlzdG9yeSA9IHVzZUNhbGxiYWNrKCgpOiB2b2lkID0+IHtcbiAgICBpZiAoIW1hbmFnZXJSZWYuY3VycmVudCkgcmV0dXJuO1xuICAgIG1hbmFnZXJSZWYuY3VycmVudC5jbGVhckhpc3RvcnkoKTtcbiAgICB1cGRhdGVTdGF0ZSgpO1xuICAgIG9wdGlvbnMub25IaXN0b3J5Q2xlYXJlZD8uKCk7XG4gIH0sIFt1cGRhdGVTdGF0ZSwgb3B0aW9uc10pO1xuXG4gIGNvbnN0IGdldEhpc3RvcnkgPSB1c2VDYWxsYmFjaygoKTogKE9wZXJhdGlvbiB8IENvbXBvc2l0ZU9wZXJhdGlvbilbXSA9PiB7XG4gICAgcmV0dXJuIG1hbmFnZXJSZWYuY3VycmVudD8uZ2V0SGlzdG9yeSgpIHx8IFtdO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgZ2V0T3BlcmF0aW9uID0gdXNlQ2FsbGJhY2soKGlkOiBzdHJpbmcpOiBPcGVyYXRpb24gfCBDb21wb3NpdGVPcGVyYXRpb24gfCBudWxsID0+IHtcbiAgICByZXR1cm4gbWFuYWdlclJlZi5jdXJyZW50Py5nZXRPcGVyYXRpb24oaWQpIHx8IG51bGw7XG4gIH0sIFtdKTtcblxuICBjb25zdCBjbGVhbnVwID0gdXNlQ2FsbGJhY2soKHRhcmdldE1lbW9yeU1CPzogbnVtYmVyKTogdm9pZCA9PiB7XG4gICAgaWYgKCFtYW5hZ2VyUmVmLmN1cnJlbnQpIHJldHVybjtcbiAgICBtYW5hZ2VyUmVmLmN1cnJlbnQuY2xlYW51cCh0YXJnZXRNZW1vcnlNQik7XG4gICAgdXBkYXRlU3RhdGUoKTtcbiAgfSwgW3VwZGF0ZVN0YXRlXSk7XG5cbiAgY29uc3QgZXhwb3J0SGlzdG9yeSA9IHVzZUNhbGxiYWNrKCgpOiBzdHJpbmcgPT4ge1xuICAgIHJldHVybiBtYW5hZ2VyUmVmLmN1cnJlbnQ/LmV4cG9ydEhpc3RvcnkoKSB8fCAnJztcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGltcG9ydEhpc3RvcnkgPSB1c2VDYWxsYmFjaygoaGlzdG9yeURhdGE6IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xuICAgIGlmICghbWFuYWdlclJlZi5jdXJyZW50KSByZXR1cm4gZmFsc2U7XG4gICAgY29uc3Qgc3VjY2VzcyA9IG1hbmFnZXJSZWYuY3VycmVudC5pbXBvcnRIaXN0b3J5KGhpc3RvcnlEYXRhKTtcbiAgICBpZiAoc3VjY2Vzcykge1xuICAgICAgdXBkYXRlU3RhdGUoKTtcbiAgICB9XG4gICAgcmV0dXJuIHN1Y2Nlc3M7XG4gIH0sIFt1cGRhdGVTdGF0ZV0pO1xuXG4gIGNvbnN0IHVwZGF0ZUNvbmZpZyA9IHVzZUNhbGxiYWNrKChuZXdDb25maWc6IFBhcnRpYWw8VW5kb1JlZG9Db25maWc+KTogdm9pZCA9PiB7XG4gICAgaWYgKCFtYW5hZ2VyUmVmLmN1cnJlbnQpIHJldHVybjtcbiAgICBtYW5hZ2VyUmVmLmN1cnJlbnQudXBkYXRlQ29uZmlnKG5ld0NvbmZpZyk7XG4gICAgdXBkYXRlU3RhdGUoKTtcbiAgfSwgW3VwZGF0ZVN0YXRlXSk7XG5cbiAgLy8gS2V5Ym9hcmQgc2hvcnRjdXRzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFvcHRpb25zLmVuYWJsZUtleWJvYXJkU2hvcnRjdXRzKSByZXR1cm47XG5cbiAgICBjb25zdCBzaG9ydGN1dHMgPSB7IC4uLkRFRkFVTFRfU0hPUlRDVVRTLCAuLi5vcHRpb25zLmtleWJvYXJkU2hvcnRjdXRzIH07XG5cbiAgICBjb25zdCBoYW5kbGVLZXlEb3duID0gKGV2ZW50OiBLZXlib2FyZEV2ZW50KSA9PiB7XG4gICAgICBjb25zdCBrZXkgPSBgJHtldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkgPyAnY3RybCsnIDogJyd9JHtldmVudC5zaGlmdEtleSA/ICdzaGlmdCsnIDogJyd9JHtldmVudC5rZXkudG9Mb3dlckNhc2UoKX1gO1xuICAgICAgY29uc3QgY21kS2V5ID0gYCR7ZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5ID8gJ2NtZCsnIDogJyd9JHtldmVudC5zaGlmdEtleSA/ICdzaGlmdCsnIDogJyd9JHtldmVudC5rZXkudG9Mb3dlckNhc2UoKX1gO1xuXG4gICAgICBpZiAoc2hvcnRjdXRzLnVuZG8uaW5jbHVkZXMoa2V5KSB8fCBzaG9ydGN1dHMudW5kby5pbmNsdWRlcyhjbWRLZXkpKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHVuZG8oKTtcbiAgICAgIH0gZWxzZSBpZiAoc2hvcnRjdXRzLnJlZG8uaW5jbHVkZXMoa2V5KSB8fCBzaG9ydGN1dHMucmVkby5pbmNsdWRlcyhjbWRLZXkpKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHJlZG8oKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZUtleURvd24pO1xuICAgIHJldHVybiAoKSA9PiBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlS2V5RG93bik7XG4gIH0sIFtvcHRpb25zLmVuYWJsZUtleWJvYXJkU2hvcnRjdXRzLCBvcHRpb25zLmtleWJvYXJkU2hvcnRjdXRzLCB1bmRvLCByZWRvXSk7XG5cbiAgLy8gVXBkYXRlIHN0YXRlIHdoZW4gb3BlcmF0aW9ucyBjaGFuZ2VcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICB1cGRhdGVTdGF0ZSgpO1xuICB9LCBbdXBkYXRlU3RhdGVdKTtcblxuICByZXR1cm4ge1xuICAgIGNhbnZhcyxcbiAgICBtYW5hZ2VyOiBtYW5hZ2VyUmVmLmN1cnJlbnQsXG4gICAgc3RhdGUsXG4gICAgY2FuVW5kbzogc3RhdGUuY2FuVW5kbyxcbiAgICBjYW5SZWRvOiBzdGF0ZS5jYW5SZWRvLFxuICAgIHVuZG8sXG4gICAgcmVkbyxcbiAgICBleGVjdXRlT3BlcmF0aW9uLFxuICAgIHN0YXJ0Q29tcG9zaXRlLFxuICAgIGVuZENvbXBvc2l0ZSxcbiAgICBqdW1wVG9PcGVyYXRpb24sXG4gICAgY2xlYXJIaXN0b3J5LFxuICAgIGdldEhpc3RvcnksXG4gICAgZ2V0T3BlcmF0aW9uLFxuICAgIGNsZWFudXAsXG4gICAgZXhwb3J0SGlzdG9yeSxcbiAgICBpbXBvcnRIaXN0b3J5LFxuICAgIHVwZGF0ZUNvbmZpZ1xuICB9O1xufVxuXG4vKipcbiAqIEhvb2sgZm9yIHNpbXBsZSB1bmRvL3JlZG8gb3BlcmF0aW9ucyB3aXRob3V0IGZ1bGwgc3RhdGUgbWFuYWdlbWVudFxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlU2ltcGxlVW5kb1JlZG88VD4oXG4gIGluaXRpYWxTdGF0ZTogVCxcbiAgbWF4SGlzdG9yeVNpemU6IG51bWJlciA9IDUwXG4pOiB7XG4gIHN0YXRlOiBUO1xuICBjYW5VbmRvOiBib29sZWFuO1xuICBjYW5SZWRvOiBib29sZWFuO1xuICB1bmRvOiAoKSA9PiB2b2lkO1xuICByZWRvOiAoKSA9PiB2b2lkO1xuICBwdXNoU3RhdGU6IChuZXdTdGF0ZTogVCkgPT4gdm9pZDtcbiAgY2xlYXJIaXN0b3J5OiAoKSA9PiB2b2lkO1xuICBnZXRIaXN0b3J5OiAoKSA9PiBUW107XG59IHtcbiAgY29uc3QgW2hpc3RvcnksIHNldEhpc3RvcnldID0gdXNlU3RhdGU8VFtdPihbaW5pdGlhbFN0YXRlXSk7XG4gIGNvbnN0IFtjdXJyZW50SW5kZXgsIHNldEN1cnJlbnRJbmRleF0gPSB1c2VTdGF0ZSgwKTtcblxuICBjb25zdCBjYW5VbmRvID0gY3VycmVudEluZGV4ID4gMDtcbiAgY29uc3QgY2FuUmVkbyA9IGN1cnJlbnRJbmRleCA8IGhpc3RvcnkubGVuZ3RoIC0gMTtcbiAgY29uc3Qgc3RhdGUgPSBoaXN0b3J5W2N1cnJlbnRJbmRleF07XG5cbiAgY29uc3QgdW5kbyA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAoY2FuVW5kbykge1xuICAgICAgc2V0Q3VycmVudEluZGV4KHByZXYgPT4gcHJldiAtIDEpO1xuICAgIH1cbiAgfSwgW2NhblVuZG9dKTtcblxuICBjb25zdCByZWRvID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChjYW5SZWRvKSB7XG4gICAgICBzZXRDdXJyZW50SW5kZXgocHJldiA9PiBwcmV2ICsgMSk7XG4gICAgfVxuICB9LCBbY2FuUmVkb10pO1xuXG4gIGNvbnN0IHB1c2hTdGF0ZSA9IHVzZUNhbGxiYWNrKChuZXdTdGF0ZTogVCkgPT4ge1xuICAgIHNldEhpc3RvcnkocHJldiA9PiB7XG4gICAgICAvLyBSZW1vdmUgYW55IHN0YXRlcyBhZnRlciBjdXJyZW50IGluZGV4XG4gICAgICBjb25zdCBuZXdIaXN0b3J5ID0gcHJldi5zbGljZSgwLCBjdXJyZW50SW5kZXggKyAxKTtcbiAgICAgIG5ld0hpc3RvcnkucHVzaChuZXdTdGF0ZSk7XG4gICAgICBcbiAgICAgIC8vIEVuZm9yY2UgbWF4IGhpc3Rvcnkgc2l6ZVxuICAgICAgaWYgKG5ld0hpc3RvcnkubGVuZ3RoID4gbWF4SGlzdG9yeVNpemUpIHtcbiAgICAgICAgbmV3SGlzdG9yeS5zcGxpY2UoMCwgbmV3SGlzdG9yeS5sZW5ndGggLSBtYXhIaXN0b3J5U2l6ZSk7XG4gICAgICAgIHNldEN1cnJlbnRJbmRleChtYXhIaXN0b3J5U2l6ZSAtIDEpO1xuICAgICAgICByZXR1cm4gbmV3SGlzdG9yeTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgc2V0Q3VycmVudEluZGV4KG5ld0hpc3RvcnkubGVuZ3RoIC0gMSk7XG4gICAgICByZXR1cm4gbmV3SGlzdG9yeTtcbiAgICB9KTtcbiAgfSwgW2N1cnJlbnRJbmRleCwgbWF4SGlzdG9yeVNpemVdKTtcblxuICBjb25zdCBjbGVhckhpc3RvcnkgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0SGlzdG9yeShbc3RhdGVdKTtcbiAgICBzZXRDdXJyZW50SW5kZXgoMCk7XG4gIH0sIFtzdGF0ZV0pO1xuXG4gIGNvbnN0IGdldEhpc3RvcnkgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgcmV0dXJuIFsuLi5oaXN0b3J5XTtcbiAgfSwgW2hpc3RvcnldKTtcblxuICByZXR1cm4ge1xuICAgIHN0YXRlLFxuICAgIGNhblVuZG8sXG4gICAgY2FuUmVkbyxcbiAgICB1bmRvLFxuICAgIHJlZG8sXG4gICAgcHVzaFN0YXRlLFxuICAgIGNsZWFySGlzdG9yeSxcbiAgICBnZXRIaXN0b3J5XG4gIH07XG59XG5cbi8qKlxuICogSG9vayBmb3Igb3BlcmF0aW9uIGJhdGNoaW5nIGFuZCBhdG9taWMgY29tbWl0c1xuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlT3BlcmF0aW9uQmF0Y2hpbmcoXG4gIHVuZG9SZWRvTWFuYWdlcjogVW5kb1JlZG9NYW5hZ2VyLFxuICBhdXRvQ29tbWl0RGVsYXk6IG51bWJlciA9IDEwMDBcbik6IHtcbiAgc3RhcnRCYXRjaDogKGRlc2NyaXB0aW9uOiBzdHJpbmcpID0+IHN0cmluZztcbiAgYWRkT3BlcmF0aW9uOiAoXG4gICAgdHlwZTogT3BlcmF0aW9uVHlwZSxcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nLFxuICAgIG9wZXJhdGlvbkZuOiAoKSA9PiB2b2lkIHwgUHJvbWlzZTx2b2lkPixcbiAgICBvcGVyYXRpb25EYXRhPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj5cbiAgKSA9PiBQcm9taXNlPHN0cmluZz47XG4gIGNvbW1pdEJhdGNoOiAoKSA9PiB2b2lkO1xuICBkaXNjYXJkQmF0Y2g6ICgpID0+IHZvaWQ7XG4gIGlzQmF0Y2hpbmc6IGJvb2xlYW47XG4gIGJhdGNoT3BlcmF0aW9uQ291bnQ6IG51bWJlcjtcbn0ge1xuICBjb25zdCBbaXNCYXRjaGluZywgc2V0SXNCYXRjaGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtiYXRjaE9wZXJhdGlvbkNvdW50LCBzZXRCYXRjaE9wZXJhdGlvbkNvdW50XSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBiYXRjaFRpbWVvdXRSZWYgPSB1c2VSZWY8Tm9kZUpTLlRpbWVvdXQ+KCk7XG4gIGNvbnN0IGN1cnJlbnRCYXRjaFJlZiA9IHVzZVJlZjxzdHJpbmcgfCBudWxsPihudWxsKTtcblxuICBjb25zdCBzdGFydEJhdGNoID0gdXNlQ2FsbGJhY2soKGRlc2NyaXB0aW9uOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAgIGlmIChjdXJyZW50QmF0Y2hSZWYuY3VycmVudCkge1xuICAgICAgY29tbWl0QmF0Y2goKTtcbiAgICB9XG5cbiAgICBjb25zdCBiYXRjaElkID0gdW5kb1JlZG9NYW5hZ2VyLnN0YXJ0Q29tcG9zaXRlT3BlcmF0aW9uKGRlc2NyaXB0aW9uKTtcbiAgICBjdXJyZW50QmF0Y2hSZWYuY3VycmVudCA9IGJhdGNoSWQ7XG4gICAgc2V0SXNCYXRjaGluZyh0cnVlKTtcbiAgICBzZXRCYXRjaE9wZXJhdGlvbkNvdW50KDApO1xuXG4gICAgLy8gQXV0by1jb21taXQgYWZ0ZXIgZGVsYXlcbiAgICBpZiAoYmF0Y2hUaW1lb3V0UmVmLmN1cnJlbnQpIHtcbiAgICAgIGNsZWFyVGltZW91dChiYXRjaFRpbWVvdXRSZWYuY3VycmVudCk7XG4gICAgfVxuICAgIFxuICAgIGJhdGNoVGltZW91dFJlZi5jdXJyZW50ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBjb21taXRCYXRjaCgpO1xuICAgIH0sIGF1dG9Db21taXREZWxheSk7XG5cbiAgICByZXR1cm4gYmF0Y2hJZDtcbiAgfSwgW2F1dG9Db21taXREZWxheV0pO1xuXG4gIGNvbnN0IGFkZE9wZXJhdGlvbiA9IHVzZUNhbGxiYWNrKGFzeW5jIChcbiAgICB0eXBlOiBPcGVyYXRpb25UeXBlLFxuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmcsXG4gICAgb3BlcmF0aW9uRm46ICgpID0+IHZvaWQgfCBQcm9taXNlPHZvaWQ+LFxuICAgIG9wZXJhdGlvbkRhdGE/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPlxuICApOiBQcm9taXNlPHN0cmluZz4gPT4ge1xuICAgIGNvbnN0IG9wZXJhdGlvbklkID0gYXdhaXQgdW5kb1JlZG9NYW5hZ2VyLmV4ZWN1dGVPcGVyYXRpb24oXG4gICAgICB0eXBlLFxuICAgICAgZGVzY3JpcHRpb24sXG4gICAgICBvcGVyYXRpb25GbixcbiAgICAgIG9wZXJhdGlvbkRhdGFcbiAgICApO1xuXG4gICAgc2V0QmF0Y2hPcGVyYXRpb25Db3VudChwcmV2ID0+IHByZXYgKyAxKTtcbiAgICByZXR1cm4gb3BlcmF0aW9uSWQ7XG4gIH0sIFt1bmRvUmVkb01hbmFnZXJdKTtcblxuICBjb25zdCBjb21taXRCYXRjaCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAoY3VycmVudEJhdGNoUmVmLmN1cnJlbnQpIHtcbiAgICAgIHVuZG9SZWRvTWFuYWdlci5lbmRDb21wb3NpdGVPcGVyYXRpb24oKTtcbiAgICAgIGN1cnJlbnRCYXRjaFJlZi5jdXJyZW50ID0gbnVsbDtcbiAgICAgIHNldElzQmF0Y2hpbmcoZmFsc2UpO1xuICAgICAgc2V0QmF0Y2hPcGVyYXRpb25Db3VudCgwKTtcblxuICAgICAgaWYgKGJhdGNoVGltZW91dFJlZi5jdXJyZW50KSB7XG4gICAgICAgIGNsZWFyVGltZW91dChiYXRjaFRpbWVvdXRSZWYuY3VycmVudCk7XG4gICAgICAgIGJhdGNoVGltZW91dFJlZi5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW3VuZG9SZWRvTWFuYWdlcl0pO1xuXG4gIGNvbnN0IGRpc2NhcmRCYXRjaCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBpZiAoY3VycmVudEJhdGNoUmVmLmN1cnJlbnQpIHtcbiAgICAgIC8vIE5vdGU6IEluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgeW91J2QgbmVlZCB0byByZXZlcnQgb3BlcmF0aW9uc1xuICAgICAgLy8gRm9yIG5vdywgd2UganVzdCBjbGVhciB0aGUgYmF0Y2ggc3RhdGVcbiAgICAgIGN1cnJlbnRCYXRjaFJlZi5jdXJyZW50ID0gbnVsbDtcbiAgICAgIHNldElzQmF0Y2hpbmcoZmFsc2UpO1xuICAgICAgc2V0QmF0Y2hPcGVyYXRpb25Db3VudCgwKTtcblxuICAgICAgaWYgKGJhdGNoVGltZW91dFJlZi5jdXJyZW50KSB7XG4gICAgICAgIGNsZWFyVGltZW91dChiYXRjaFRpbWVvdXRSZWYuY3VycmVudCk7XG4gICAgICAgIGJhdGNoVGltZW91dFJlZi5jdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW10pO1xuXG4gIC8vIENsZWFudXAgb24gdW5tb3VudFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAoYmF0Y2hUaW1lb3V0UmVmLmN1cnJlbnQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KGJhdGNoVGltZW91dFJlZi5jdXJyZW50KTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIHtcbiAgICBzdGFydEJhdGNoLFxuICAgIGFkZE9wZXJhdGlvbixcbiAgICBjb21taXRCYXRjaCxcbiAgICBkaXNjYXJkQmF0Y2gsXG4gICAgaXNCYXRjaGluZyxcbiAgICBiYXRjaE9wZXJhdGlvbkNvdW50XG4gIH07XG59XG5cbi8qKlxuICogSG9vayBmb3IgaGlzdG9yeSBwZXJzaXN0ZW5jZVxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlSGlzdG9yeVBlcnNpc3RlbmNlKFxuICB1bmRvUmVkb01hbmFnZXI6IFVuZG9SZWRvTWFuYWdlcixcbiAgc3RvcmFnZUtleTogc3RyaW5nID0gJ2NhbnZhcy1oaXN0b3J5J1xuKToge1xuICBzYXZlSGlzdG9yeTogKCkgPT4gYm9vbGVhbjtcbiAgbG9hZEhpc3Rvcnk6ICgpID0+IGJvb2xlYW47XG4gIGF1dG9TYXZlOiBib29sZWFuO1xuICBzZXRBdXRvU2F2ZTogKGVuYWJsZWQ6IGJvb2xlYW4pID0+IHZvaWQ7XG4gIGxhc3RTYXZlZDogRGF0ZSB8IG51bGw7XG59IHtcbiAgY29uc3QgW2F1dG9TYXZlLCBzZXRBdXRvU2F2ZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtsYXN0U2F2ZWQsIHNldExhc3RTYXZlZF0gPSB1c2VTdGF0ZTxEYXRlIHwgbnVsbD4obnVsbCk7XG5cbiAgY29uc3Qgc2F2ZUhpc3RvcnkgPSB1c2VDYWxsYmFjaygoKTogYm9vbGVhbiA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGhpc3RvcnlEYXRhID0gdW5kb1JlZG9NYW5hZ2VyLmV4cG9ydEhpc3RvcnkoKTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHN0b3JhZ2VLZXksIGhpc3RvcnlEYXRhKTtcbiAgICAgIHNldExhc3RTYXZlZChuZXcgRGF0ZSgpKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gc2F2ZSBoaXN0b3J5OicsIGVycm9yKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0sIFt1bmRvUmVkb01hbmFnZXIsIHN0b3JhZ2VLZXldKTtcblxuICBjb25zdCBsb2FkSGlzdG9yeSA9IHVzZUNhbGxiYWNrKCgpOiBib29sZWFuID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgaGlzdG9yeURhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShzdG9yYWdlS2V5KTtcbiAgICAgIGlmIChoaXN0b3J5RGF0YSkge1xuICAgICAgICBjb25zdCBzdWNjZXNzID0gdW5kb1JlZG9NYW5hZ2VyLmltcG9ydEhpc3RvcnkoaGlzdG9yeURhdGEpO1xuICAgICAgICBpZiAoc3VjY2Vzcykge1xuICAgICAgICAgIHNldExhc3RTYXZlZChuZXcgRGF0ZSgpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3VjY2VzcztcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGxvYWQgaGlzdG9yeTonLCBlcnJvcik7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9LCBbdW5kb1JlZG9NYW5hZ2VyLCBzdG9yYWdlS2V5XSk7XG5cbiAgLy8gQXV0by1zYXZlIGZ1bmN0aW9uYWxpdHlcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWF1dG9TYXZlKSByZXR1cm47XG5cbiAgICBjb25zdCBoYW5kbGVCZWZvcmVVbmxvYWQgPSAoKSA9PiB7XG4gICAgICBzYXZlSGlzdG9yeSgpO1xuICAgIH07XG5cbiAgICBjb25zdCBhdXRvU2F2ZUludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgc2F2ZUhpc3RvcnkoKTtcbiAgICB9LCAzMDAwMCk7IC8vIFNhdmUgZXZlcnkgMzAgc2Vjb25kc1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2JlZm9yZXVubG9hZCcsIGhhbmRsZUJlZm9yZVVubG9hZCk7XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY2xlYXJJbnRlcnZhbChhdXRvU2F2ZUludGVydmFsKTtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdiZWZvcmV1bmxvYWQnLCBoYW5kbGVCZWZvcmVVbmxvYWQpO1xuICAgIH07XG4gIH0sIFthdXRvU2F2ZSwgc2F2ZUhpc3RvcnldKTtcblxuICAvLyBMb2FkIGhpc3Rvcnkgb24gbW91bnRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBsb2FkSGlzdG9yeSgpO1xuICB9LCBbbG9hZEhpc3RvcnldKTtcblxuICByZXR1cm4ge1xuICAgIHNhdmVIaXN0b3J5LFxuICAgIGxvYWRIaXN0b3J5LFxuICAgIGF1dG9TYXZlLFxuICAgIHNldEF1dG9TYXZlLFxuICAgIGxhc3RTYXZlZFxuICB9O1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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