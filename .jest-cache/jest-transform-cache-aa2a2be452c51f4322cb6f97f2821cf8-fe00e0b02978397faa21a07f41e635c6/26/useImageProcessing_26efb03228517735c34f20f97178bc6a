3bb3b378a9dd3f49d456c22dde458393
'use client';
"use strict";

/* istanbul ignore next */
function cov_1pr92c2cpo() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/queries/useImageProcessing.ts";
  var hash = "b577c846f826316abbb8a4c01f67ced5d1f67414";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/queries/useImageProcessing.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 40
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 32
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 34
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 39
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 33
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 34
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 34
        }
      },
      "14": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 52
        }
      },
      "15": {
        start: {
          line: 45,
          column: 15
        },
        end: {
          line: 45,
          column: 31
        }
      },
      "16": {
        start: {
          line: 46,
          column: 25
        },
        end: {
          line: 46,
          column: 60
        }
      },
      "17": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 56
        }
      },
      "18": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 51
        }
      },
      "19": {
        start: {
          line: 49,
          column: 39
        },
        end: {
          line: 49,
          column: 51
        }
      },
      "20": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 41
        }
      },
      "21": {
        start: {
          line: 51,
          column: 27
        },
        end: {
          line: 51,
          column: 40
        }
      },
      "22": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 20
        }
      },
      "23": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 66
        }
      },
      "24": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "25": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 19
        }
      },
      "26": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "27": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "28": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 53
        }
      },
      "29": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "30": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 30
        }
      },
      "31": {
        start: {
          line: 69,
          column: 17
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "32": {
        start: {
          line: 72,
          column: 32
        },
        end: {
          line: 72,
          column: 88
        }
      },
      "33": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "34": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "35": {
        start: {
          line: 75,
          column: 23
        },
        end: {
          line: 75,
          column: 95
        }
      },
      "36": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "37": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 57
        }
      },
      "38": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 39
        }
      },
      "39": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 25
        }
      },
      "40": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "41": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 31
        }
      },
      "42": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 18
        }
      },
      "43": {
        start: {
          line: 89,
          column: 45
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "44": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 70
        }
      },
      "45": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 76
        }
      },
      "46": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 70
        }
      },
      "47": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 78
        }
      },
      "48": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 76
        }
      },
      "49": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 72
        }
      },
      "50": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 58
        }
      },
      "51": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 36
        }
      },
      "52": {
        start: {
          line: 101,
          column: 33
        },
        end: {
          line: 105,
          column: 1
        }
      },
      "53": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 135,
          column: 1
        }
      },
      "54": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "55": {
        start: {
          line: 115,
          column: 31
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "56": {
        start: {
          line: 121,
          column: 26
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "57": {
        start: {
          line: 126,
          column: 31
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "58": {
        start: {
          line: 131,
          column: 15
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "59": {
        start: {
          line: 137,
          column: 24
        },
        end: {
          line: 137,
          column: 57
        }
      },
      "60": {
        start: {
          line: 138,
          column: 36
        },
        end: {
          line: 158,
          column: 6
        }
      },
      "61": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "62": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 78
        }
      },
      "63": {
        start: {
          line: 143,
          column: 40
        },
        end: {
          line: 143,
          column: 85
        }
      },
      "64": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 147,
          column: 19
        }
      },
      "65": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 38
        }
      },
      "66": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 120
        }
      },
      "67": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 74
        }
      },
      "68": {
        start: {
          line: 159,
          column: 39
        },
        end: {
          line: 177,
          column: 6
        }
      },
      "69": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "70": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 87
        }
      },
      "71": {
        start: {
          line: 164,
          column: 40
        },
        end: {
          line: 164,
          column: 85
        }
      },
      "72": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 169,
          column: 19
        }
      },
      "73": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 38
        }
      },
      "74": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 123
        }
      },
      "75": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 189,
          column: 6
        }
      },
      "76": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 44
        }
      },
      "77": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 47
        }
      },
      "78": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "79": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 59
        }
      },
      "80": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 195,
          column: 59
        }
      },
      "81": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "82": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 78
        }
      },
      "83": {
        start: {
          line: 199,
          column: 40
        },
        end: {
          line: 199,
          column: 85
        }
      },
      "84": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 203,
          column: 19
        }
      },
      "85": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 38
        }
      },
      "86": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 232,
          column: 7
        }
      },
      "87": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 59
        }
      },
      "88": {
        start: {
          line: 216,
          column: 23
        },
        end: {
          line: 216,
          column: 59
        }
      },
      "89": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 227,
          column: 13
        }
      },
      "90": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 84
        }
      },
      "91": {
        start: {
          line: 220,
          column: 40
        },
        end: {
          line: 220,
          column: 85
        }
      },
      "92": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 225,
          column: 19
        }
      },
      "93": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 38
        }
      },
      "94": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 277,
          column: 7
        }
      },
      "95": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 59
        }
      },
      "96": {
        start: {
          line: 238,
          column: 23
        },
        end: {
          line: 238,
          column: 59
        }
      },
      "97": {
        start: {
          line: 239,
          column: 27
        },
        end: {
          line: 239,
          column: 29
        }
      },
      "98": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 272,
          column: 13
        }
      },
      "99": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 244,
          column: 17
        }
      },
      "100": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 243,
          column: 56
        }
      },
      "101": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 248,
          column: 17
        }
      },
      "102": {
        start: {
          line: 247,
          column: 20
        },
        end: {
          line: 247,
          column: 66
        }
      },
      "103": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 260,
          column: 17
        }
      },
      "104": {
        start: {
          line: 251,
          column: 37
        },
        end: {
          line: 251,
          column: 91
        }
      },
      "105": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 254,
          column: 21
        }
      },
      "106": {
        start: {
          line: 253,
          column: 24
        },
        end: {
          line: 253,
          column: 84
        }
      },
      "107": {
        start: {
          line: 255,
          column: 20
        },
        end: {
          line: 257,
          column: 21
        }
      },
      "108": {
        start: {
          line: 256,
          column: 24
        },
        end: {
          line: 256,
          column: 86
        }
      },
      "109": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 71
        }
      },
      "110": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 264,
          column: 18
        }
      },
      "111": {
        start: {
          line: 266,
          column: 40
        },
        end: {
          line: 266,
          column: 85
        }
      },
      "112": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 270,
          column: 19
        }
      },
      "113": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 38
        }
      },
      "114": {
        start: {
          line: 280,
          column: 24
        },
        end: {
          line: 280,
          column: 57
        }
      },
      "115": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 306,
          column: 7
        }
      },
      "116": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "117": {
        start: {
          line: 284,
          column: 33
        },
        end: {
          line: 284,
          column: 58
        }
      },
      "118": {
        start: {
          line: 285,
          column: 47
        },
        end: {
          line: 285,
          column: 157
        }
      },
      "119": {
        start: {
          line: 285,
          column: 94
        },
        end: {
          line: 285,
          column: 156
        }
      },
      "120": {
        start: {
          line: 286,
          column: 31
        },
        end: {
          line: 286,
          column: 88
        }
      },
      "121": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 287,
          column: 46
        }
      },
      "122": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 30
        }
      },
      "123": {
        start: {
          line: 290,
          column: 40
        },
        end: {
          line: 290,
          column: 85
        }
      },
      "124": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 296,
          column: 19
        }
      },
      "125": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 38
        }
      },
      "126": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 304,
          column: 15
        }
      },
      "127": {
        start: {
          line: 309,
          column: 29
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "128": {
        start: {
          line: 313,
          column: 40
        },
        end: {
          line: 320,
          column: 6
        }
      },
      "129": {
        start: {
          line: 321,
          column: 21
        },
        end: {
          line: 321,
          column: 43
        }
      },
      "130": {
        start: {
          line: 322,
          column: 22
        },
        end: {
          line: 322,
          column: 51
        }
      },
      "131": {
        start: {
          line: 323,
          column: 21
        },
        end: {
          line: 330,
          column: 6
        }
      },
      "132": {
        start: {
          line: 331,
          column: 23
        },
        end: {
          line: 333,
          column: 10
        }
      },
      "133": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 79
        }
      },
      "134": {
        start: {
          line: 334,
          column: 29
        },
        end: {
          line: 350,
          column: 10
        }
      },
      "135": {
        start: {
          line: 335,
          column: 28
        },
        end: {
          line: 335,
          column: 66
        }
      },
      "136": {
        start: {
          line: 336,
          column: 31
        },
        end: {
          line: 336,
          column: 91
        }
      },
      "137": {
        start: {
          line: 336,
          column: 63
        },
        end: {
          line: 336,
          column: 90
        }
      },
      "138": {
        start: {
          line: 337,
          column: 28
        },
        end: {
          line: 337,
          column: 85
        }
      },
      "139": {
        start: {
          line: 337,
          column: 60
        },
        end: {
          line: 337,
          column: 84
        }
      },
      "140": {
        start: {
          line: 338,
          column: 27
        },
        end: {
          line: 338,
          column: 50
        }
      },
      "141": {
        start: {
          line: 339,
          column: 30
        },
        end: {
          line: 339,
          column: 114
        }
      },
      "142": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 349,
          column: 11
        }
      },
      "143": {
        start: {
          line: 351,
          column: 29
        },
        end: {
          line: 409,
          column: 6
        }
      },
      "144": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 35
        }
      },
      "145": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 36
        }
      },
      "146": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 45
        }
      },
      "147": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 27
        }
      },
      "148": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "149": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 378,
          column: 13
        }
      },
      "150": {
        start: {
          line: 360,
          column: 20
        },
        end: {
          line: 360,
          column: 103
        }
      },
      "151": {
        start: {
          line: 361,
          column: 20
        },
        end: {
          line: 361,
          column: 26
        }
      },
      "152": {
        start: {
          line: 363,
          column: 20
        },
        end: {
          line: 363,
          column: 103
        }
      },
      "153": {
        start: {
          line: 364,
          column: 20
        },
        end: {
          line: 364,
          column: 26
        }
      },
      "154": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 366,
          column: 116
        }
      },
      "155": {
        start: {
          line: 367,
          column: 20
        },
        end: {
          line: 367,
          column: 26
        }
      },
      "156": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 369,
          column: 89
        }
      },
      "157": {
        start: {
          line: 370,
          column: 20
        },
        end: {
          line: 370,
          column: 26
        }
      },
      "158": {
        start: {
          line: 372,
          column: 37
        },
        end: {
          line: 372,
          column: 67
        }
      },
      "159": {
        start: {
          line: 373,
          column: 20
        },
        end: {
          line: 373,
          column: 135
        }
      },
      "160": {
        start: {
          line: 374,
          column: 20
        },
        end: {
          line: 374,
          column: 50
        }
      },
      "161": {
        start: {
          line: 375,
          column: 20
        },
        end: {
          line: 375,
          column: 26
        }
      },
      "162": {
        start: {
          line: 377,
          column: 20
        },
        end: {
          line: 377,
          column: 80
        }
      },
      "163": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 38
        }
      },
      "164": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 33
        }
      },
      "165": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 38
        }
      },
      "166": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 32
        }
      },
      "167": {
        start: {
          line: 384,
          column: 35
        },
        end: {
          line: 384,
          column: 71
        }
      },
      "168": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 46
        }
      },
      "169": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 67
        }
      },
      "170": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 124
        }
      },
      "171": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 388,
          column: 58
        }
      },
      "172": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 35
        }
      },
      "173": {
        start: {
          line: 391,
          column: 12
        },
        end: {
          line: 391,
          column: 38
        }
      },
      "174": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 71
        }
      },
      "175": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 43
        }
      },
      "176": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 398,
          column: 15
        }
      },
      "177": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 63
        }
      },
      "178": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 46
        }
      },
      "179": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 402,
          column: 31
        }
      },
      "180": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 33
        }
      },
      "181": {
        start: {
          line: 410,
          column: 31
        },
        end: {
          line: 426,
          column: 6
        }
      },
      "182": {
        start: {
          line: 411,
          column: 29
        },
        end: {
          line: 418,
          column: 10
        }
      },
      "183": {
        start: {
          line: 411,
          column: 61
        },
        end: {
          line: 411,
          column: 86
        }
      },
      "184": {
        start: {
          line: 412,
          column: 34
        },
        end: {
          line: 416,
          column: 13
        }
      },
      "185": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 73
        }
      },
      "186": {
        start: {
          line: 419,
          column: 31
        },
        end: {
          line: 419,
          column: 86
        }
      },
      "187": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 422,
          column: 9
        }
      },
      "188": {
        start: {
          line: 420,
          column: 20
        },
        end: {
          line: 420,
          column: 21
        }
      },
      "189": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 421,
          column: 46
        }
      },
      "190": {
        start: {
          line: 427,
          column: 23
        },
        end: {
          line: 449,
          column: 6
        }
      },
      "191": {
        start: {
          line: 428,
          column: 21
        },
        end: {
          line: 436,
          column: 9
        }
      },
      "192": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 437,
          column: 36
        }
      },
      "193": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 27
        }
      },
      "194": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 442,
          column: 9
        }
      },
      "195": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 441,
          column: 33
        }
      },
      "196": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 23
        }
      },
      "197": {
        start: {
          line: 450,
          column: 28
        },
        end: {
          line: 463,
          column: 6
        }
      },
      "198": {
        start: {
          line: 451,
          column: 22
        },
        end: {
          line: 451,
          column: 76
        }
      },
      "199": {
        start: {
          line: 451,
          column: 57
        },
        end: {
          line: 451,
          column: 75
        }
      },
      "200": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 452,
          column: 39
        }
      },
      "201": {
        start: {
          line: 452,
          column: 26
        },
        end: {
          line: 452,
          column: 39
        }
      },
      "202": {
        start: {
          line: 453,
          column: 21
        },
        end: {
          line: 453,
          column: 44
        }
      },
      "203": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 457,
          column: 9
        }
      },
      "204": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 456,
          column: 25
        }
      },
      "205": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 458,
          column: 42
        }
      },
      "206": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 27
        }
      },
      "207": {
        start: {
          line: 460,
          column: 8
        },
        end: {
          line: 460,
          column: 20
        }
      },
      "208": {
        start: {
          line: 464,
          column: 23
        },
        end: {
          line: 474,
          column: 6
        }
      },
      "209": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 470,
          column: 9
        }
      },
      "210": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 466,
          column: 34
        }
      },
      "211": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 38
        }
      },
      "212": {
        start: {
          line: 469,
          column: 12
        },
        end: {
          line: 469,
          column: 93
        }
      },
      "213": {
        start: {
          line: 469,
          column: 63
        },
        end: {
          line: 469,
          column: 91
        }
      },
      "214": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 27
        }
      },
      "215": {
        start: {
          line: 475,
          column: 23
        },
        end: {
          line: 478,
          column: 10
        }
      },
      "216": {
        start: {
          line: 479,
          column: 24
        },
        end: {
          line: 483,
          column: 6
        }
      },
      "217": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 29
        }
      },
      "218": {
        start: {
          line: 484,
          column: 21
        },
        end: {
          line: 488,
          column: 10
        }
      },
      "219": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 487,
          column: 10
        }
      },
      "220": {
        start: {
          line: 489,
          column: 4
        },
        end: {
          line: 498,
          column: 6
        }
      },
      "221": {
        start: {
          line: 501,
          column: 4
        },
        end: {
          line: 516,
          column: 7
        }
      },
      "222": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 512,
          column: 14
        }
      },
      "223": {
        start: {
          line: 519,
          column: 24
        },
        end: {
          line: 519,
          column: 57
        }
      },
      "224": {
        start: {
          line: 520,
          column: 23
        },
        end: {
          line: 532,
          column: 6
        }
      },
      "225": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 529,
          column: 9
        }
      },
      "226": {
        start: {
          line: 522,
          column: 12
        },
        end: {
          line: 524,
          column: 15
        }
      },
      "227": {
        start: {
          line: 523,
          column: 36
        },
        end: {
          line: 523,
          column: 79
        }
      },
      "228": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 528,
          column: 15
        }
      },
      "229": {
        start: {
          line: 533,
          column: 26
        },
        end: {
          line: 546,
          column: 6
        }
      },
      "230": {
        start: {
          line: 534,
          column: 22
        },
        end: {
          line: 534,
          column: 49
        }
      },
      "231": {
        start: {
          line: 535,
          column: 24
        },
        end: {
          line: 537,
          column: 10
        }
      },
      "232": {
        start: {
          line: 538,
          column: 8
        },
        end: {
          line: 543,
          column: 10
        }
      },
      "233": {
        start: {
          line: 540,
          column: 47
        },
        end: {
          line: 540,
          column: 59
        }
      },
      "234": {
        start: {
          line: 541,
          column: 46
        },
        end: {
          line: 541,
          column: 57
        }
      },
      "235": {
        start: {
          line: 542,
          column: 48
        },
        end: {
          line: 542,
          column: 90
        }
      },
      "236": {
        start: {
          line: 547,
          column: 28
        },
        end: {
          line: 555,
          column: 6
        }
      },
      "237": {
        start: {
          line: 548,
          column: 25
        },
        end: {
          line: 551,
          column: 15
        }
      },
      "238": {
        start: {
          line: 548,
          column: 43
        },
        end: {
          line: 551,
          column: 14
        }
      },
      "239": {
        start: {
          line: 550,
          column: 29
        },
        end: {
          line: 550,
          column: 77
        }
      },
      "240": {
        start: {
          line: 552,
          column: 8
        },
        end: {
          line: 552,
          column: 43
        }
      },
      "241": {
        start: {
          line: 556,
          column: 4
        },
        end: {
          line: 560,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 13,
            column: 31
          }
        },
        loc: {
          start: {
            line: 13,
            column: 41
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 26
          }
        },
        loc: {
          start: {
            line: 16,
            column: 36
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 19,
            column: 30
          }
        },
        loc: {
          start: {
            line: 19,
            column: 40
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 22,
            column: 26
          }
        },
        loc: {
          start: {
            line: 22,
            column: 36
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 23
          }
        },
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 25
          }
        },
        loc: {
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 30
          }
        },
        loc: {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 23
          },
          end: {
            line: 34,
            column: 24
          }
        },
        loc: {
          start: {
            line: 34,
            column: 34
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 25
          }
        },
        loc: {
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 25
          }
        },
        loc: {
          start: {
            line: 40,
            column: 35
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 48,
            column: 33
          }
        },
        loc: {
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 48
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 52,
            column: 39
          },
          end: {
            line: 52,
            column: 40
          }
        },
        loc: {
          start: {
            line: 52,
            column: 61
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "13": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 56,
            column: 34
          }
        },
        loc: {
          start: {
            line: 56,
            column: 53
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 56
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 89,
            column: 45
          },
          end: {
            line: 89,
            column: 46
          }
        },
        loc: {
          start: {
            line: 89,
            column: 80
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 89
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 110,
            column: 14
          },
          end: {
            line: 110,
            column: 15
          }
        },
        loc: {
          start: {
            line: 110,
            column: 24
          },
          end: {
            line: 114,
            column: 9
          }
        },
        line: 110
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 115,
            column: 15
          },
          end: {
            line: 115,
            column: 16
          }
        },
        loc: {
          start: {
            line: 115,
            column: 31
          },
          end: {
            line: 120,
            column: 9
          }
        },
        line: 115
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        },
        loc: {
          start: {
            line: 121,
            column: 26
          },
          end: {
            line: 125,
            column: 9
          }
        },
        line: 121
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 126,
            column: 16
          },
          end: {
            line: 126,
            column: 17
          }
        },
        loc: {
          start: {
            line: 126,
            column: 31
          },
          end: {
            line: 130,
            column: 9
          }
        },
        line: 126
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 131,
            column: 11
          },
          end: {
            line: 131,
            column: 12
          }
        },
        loc: {
          start: {
            line: 131,
            column: 15
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 131
      },
      "20": {
        name: "useImageProcessing",
        decl: {
          start: {
            line: 136,
            column: 9
          },
          end: {
            line: 136,
            column: 27
          }
        },
        loc: {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 136
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 139,
            column: 20
          },
          end: {
            line: 139,
            column: 21
          }
        },
        loc: {
          start: {
            line: 139,
            column: 34
          },
          end: {
            line: 150,
            column: 9
          }
        },
        line: 139
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 151,
            column: 19
          },
          end: {
            line: 151,
            column: 20
          }
        },
        loc: {
          start: {
            line: 151,
            column: 35
          },
          end: {
            line: 154,
            column: 9
          }
        },
        line: 151
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 155,
            column: 17
          },
          end: {
            line: 155,
            column: 18
          }
        },
        loc: {
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 157,
            column: 9
          }
        },
        line: 155
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 160,
            column: 20
          },
          end: {
            line: 160,
            column: 21
          }
        },
        loc: {
          start: {
            line: 160,
            column: 47
          },
          end: {
            line: 172,
            column: 9
          }
        },
        line: 160
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 173,
            column: 19
          },
          end: {
            line: 173,
            column: 20
          }
        },
        loc: {
          start: {
            line: 173,
            column: 39
          },
          end: {
            line: 176,
            column: 9
          }
        },
        line: 173
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 185,
            column: 15
          },
          end: {
            line: 185,
            column: 16
          }
        },
        loc: {
          start: {
            line: 185,
            column: 19
          },
          end: {
            line: 188,
            column: 9
          }
        },
        line: 185
      },
      "27": {
        name: "useImageMetadata",
        decl: {
          start: {
            line: 191,
            column: 9
          },
          end: {
            line: 191,
            column: 25
          }
        },
        loc: {
          start: {
            line: 191,
            column: 48
          },
          end: {
            line: 211,
            column: 1
          }
        },
        line: 191
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 194,
            column: 17
          },
          end: {
            line: 194,
            column: 18
          }
        },
        loc: {
          start: {
            line: 194,
            column: 27
          },
          end: {
            line: 206,
            column: 9
          }
        },
        line: 194
      },
      "29": {
        name: "useImageThumbnail",
        decl: {
          start: {
            line: 212,
            column: 9
          },
          end: {
            line: 212,
            column: 26
          }
        },
        loc: {
          start: {
            line: 212,
            column: 61
          },
          end: {
            line: 233,
            column: 1
          }
        },
        line: 212
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 215,
            column: 17
          },
          end: {
            line: 215,
            column: 18
          }
        },
        loc: {
          start: {
            line: 215,
            column: 27
          },
          end: {
            line: 228,
            column: 9
          }
        },
        line: 215
      },
      "31": {
        name: "useImageValidation",
        decl: {
          start: {
            line: 234,
            column: 9
          },
          end: {
            line: 234,
            column: 27
          }
        },
        loc: {
          start: {
            line: 234,
            column: 50
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 234
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 237,
            column: 17
          },
          end: {
            line: 237,
            column: 18
          }
        },
        loc: {
          start: {
            line: 237,
            column: 27
          },
          end: {
            line: 273,
            column: 9
          }
        },
        line: 237
      },
      "33": {
        name: "useFormatConversion",
        decl: {
          start: {
            line: 279,
            column: 9
          },
          end: {
            line: 279,
            column: 28
          }
        },
        loc: {
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 307,
            column: 1
          }
        },
        line: 279
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 282,
            column: 20
          },
          end: {
            line: 282,
            column: 21
          }
        },
        loc: {
          start: {
            line: 282,
            column: 67
          },
          end: {
            line: 299,
            column: 9
          }
        },
        line: 282
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 285,
            column: 76
          },
          end: {
            line: 285,
            column: 77
          }
        },
        loc: {
          start: {
            line: 285,
            column: 94
          },
          end: {
            line: 285,
            column: 156
          }
        },
        line: 285
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 300,
            column: 19
          },
          end: {
            line: 300,
            column: 20
          }
        },
        loc: {
          start: {
            line: 300,
            column: 53
          },
          end: {
            line: 305,
            column: 9
          }
        },
        line: 300
      },
      "37": {
        name: "useBatchImageProcessing",
        decl: {
          start: {
            line: 308,
            column: 9
          },
          end: {
            line: 308,
            column: 32
          }
        },
        loc: {
          start: {
            line: 308,
            column: 46
          },
          end: {
            line: 499,
            column: 1
          }
        },
        line: 308
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 331,
            column: 47
          },
          end: {
            line: 331,
            column: 48
          }
        },
        loc: {
          start: {
            line: 331,
            column: 51
          },
          end: {
            line: 333,
            column: 5
          }
        },
        line: 331
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 334,
            column: 53
          },
          end: {
            line: 334,
            column: 54
          }
        },
        loc: {
          start: {
            line: 334,
            column: 57
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 334
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 336,
            column: 55
          },
          end: {
            line: 336,
            column: 56
          }
        },
        loc: {
          start: {
            line: 336,
            column: 63
          },
          end: {
            line: 336,
            column: 90
          }
        },
        line: 336
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 337,
            column: 52
          },
          end: {
            line: 337,
            column: 53
          }
        },
        loc: {
          start: {
            line: 337,
            column: 60
          },
          end: {
            line: 337,
            column: 84
          }
        },
        line: 337
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 351,
            column: 53
          },
          end: {
            line: 351,
            column: 54
          }
        },
        loc: {
          start: {
            line: 351,
            column: 67
          },
          end: {
            line: 406,
            column: 5
          }
        },
        line: 351
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 410,
            column: 55
          },
          end: {
            line: 410,
            column: 56
          }
        },
        loc: {
          start: {
            line: 410,
            column: 59
          },
          end: {
            line: 423,
            column: 5
          }
        },
        line: 410
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 411,
            column: 53
          },
          end: {
            line: 411,
            column: 54
          }
        },
        loc: {
          start: {
            line: 411,
            column: 61
          },
          end: {
            line: 411,
            column: 86
          }
        },
        line: 411
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 411,
            column: 93
          },
          end: {
            line: 411,
            column: 94
          }
        },
        loc: {
          start: {
            line: 411,
            column: 101
          },
          end: {
            line: 418,
            column: 9
          }
        },
        line: 411
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 427,
            column: 47
          },
          end: {
            line: 427,
            column: 48
          }
        },
        loc: {
          start: {
            line: 427,
            column: 96
          },
          end: {
            line: 444,
            column: 5
          }
        },
        line: 427
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 450,
            column: 52
          },
          end: {
            line: 450,
            column: 53
          }
        },
        loc: {
          start: {
            line: 450,
            column: 62
          },
          end: {
            line: 461,
            column: 5
          }
        },
        line: 450
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 451,
            column: 49
          },
          end: {
            line: 451,
            column: 50
          }
        },
        loc: {
          start: {
            line: 451,
            column: 57
          },
          end: {
            line: 451,
            column: 75
          }
        },
        line: 451
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 464,
            column: 47
          },
          end: {
            line: 464,
            column: 48
          }
        },
        loc: {
          start: {
            line: 464,
            column: 72
          },
          end: {
            line: 472,
            column: 5
          }
        },
        line: 464
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 469,
            column: 55
          },
          end: {
            line: 469,
            column: 56
          }
        },
        loc: {
          start: {
            line: 469,
            column: 63
          },
          end: {
            line: 469,
            column: 91
          }
        },
        line: 469
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 475,
            column: 47
          },
          end: {
            line: 475,
            column: 48
          }
        },
        loc: {
          start: {
            line: 475,
            column: 51
          },
          end: {
            line: 478,
            column: 5
          }
        },
        line: 475
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 479,
            column: 48
          },
          end: {
            line: 479,
            column: 49
          }
        },
        loc: {
          start: {
            line: 479,
            column: 52
          },
          end: {
            line: 481,
            column: 5
          }
        },
        line: 479
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 484,
            column: 45
          },
          end: {
            line: 484,
            column: 46
          }
        },
        loc: {
          start: {
            line: 484,
            column: 49
          },
          end: {
            line: 488,
            column: 5
          }
        },
        line: 484
      },
      "54": {
        name: "useProcessingStats",
        decl: {
          start: {
            line: 500,
            column: 9
          },
          end: {
            line: 500,
            column: 27
          }
        },
        loc: {
          start: {
            line: 500,
            column: 30
          },
          end: {
            line: 517,
            column: 1
          }
        },
        line: 500
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 503,
            column: 17
          },
          end: {
            line: 503,
            column: 18
          }
        },
        loc: {
          start: {
            line: 503,
            column: 27
          },
          end: {
            line: 513,
            column: 9
          }
        },
        line: 503
      },
      "56": {
        name: "useImageProcessingCache",
        decl: {
          start: {
            line: 518,
            column: 9
          },
          end: {
            line: 518,
            column: 32
          }
        },
        loc: {
          start: {
            line: 518,
            column: 35
          },
          end: {
            line: 561,
            column: 1
          }
        },
        line: 518
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 520,
            column: 47
          },
          end: {
            line: 520,
            column: 48
          }
        },
        loc: {
          start: {
            line: 520,
            column: 58
          },
          end: {
            line: 530,
            column: 5
          }
        },
        line: 520
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 523,
            column: 27
          },
          end: {
            line: 523,
            column: 28
          }
        },
        loc: {
          start: {
            line: 523,
            column: 36
          },
          end: {
            line: 523,
            column: 79
          }
        },
        line: 523
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 533,
            column: 50
          },
          end: {
            line: 533,
            column: 51
          }
        },
        loc: {
          start: {
            line: 533,
            column: 54
          },
          end: {
            line: 544,
            column: 5
          }
        },
        line: 533
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 540,
            column: 42
          },
          end: {
            line: 540,
            column: 43
          }
        },
        loc: {
          start: {
            line: 540,
            column: 47
          },
          end: {
            line: 540,
            column: 59
          }
        },
        line: 540
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 541,
            column: 41
          },
          end: {
            line: 541,
            column: 42
          }
        },
        loc: {
          start: {
            line: 541,
            column: 46
          },
          end: {
            line: 541,
            column: 57
          }
        },
        line: 541
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 542,
            column: 43
          },
          end: {
            line: 542,
            column: 44
          }
        },
        loc: {
          start: {
            line: 542,
            column: 48
          },
          end: {
            line: 542,
            column: 90
          }
        },
        line: 542
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 547,
            column: 52
          },
          end: {
            line: 547,
            column: 53
          }
        },
        loc: {
          start: {
            line: 547,
            column: 67
          },
          end: {
            line: 553,
            column: 5
          }
        },
        line: 547
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 548,
            column: 35
          },
          end: {
            line: 548,
            column: 36
          }
        },
        loc: {
          start: {
            line: 548,
            column: 43
          },
          end: {
            line: 551,
            column: 14
          }
        },
        line: 548
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 550,
            column: 25
          },
          end: {
            line: 550,
            column: 26
          }
        },
        loc: {
          start: {
            line: 550,
            column: 29
          },
          end: {
            line: 550,
            column: 77
          }
        },
        line: 550
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "1": {
        loc: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 29
          },
          end: {
            line: 53,
            column: 45
          }
        }, {
          start: {
            line: 53,
            column: 48
          },
          end: {
            line: 53,
            column: 65
          }
        }],
        line: 53
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 57,
            column: 20
          }
        }, {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 27
          }
        }, {
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 57,
            column: 45
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 20
          }
        }, {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 60,
            column: 47
          }
        }, {
          start: {
            line: 60,
            column: 51
          },
          end: {
            line: 60,
            column: 76
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "7": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 66,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: 66,
            column: 17
          },
          end: {
            line: 66,
            column: 31
          }
        }],
        line: 66
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 32
          },
          end: {
            line: 72,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 32
          },
          end: {
            line: 72,
            column: 53
          }
        }, {
          start: {
            line: 72,
            column: 57
          },
          end: {
            line: 72,
            column: 88
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 29
          }
        }, {
          start: {
            line: 74,
            column: 33
          },
          end: {
            line: 74,
            column: 79
          }
        }],
        line: 74
      },
      "11": {
        loc: {
          start: {
            line: 75,
            column: 23
          },
          end: {
            line: 75,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 47
          },
          end: {
            line: 75,
            column: 88
          }
        }, {
          start: {
            line: 75,
            column: 91
          },
          end: {
            line: 75,
            column: 95
          }
        }],
        line: 75
      },
      "12": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: 78,
            column: 19
          },
          end: {
            line: 80,
            column: 13
          }
        }],
        line: 76
      },
      "13": {
        loc: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 20
          }
        }, {
          start: {
            line: 76,
            column: 25
          },
          end: {
            line: 76,
            column: 33
          }
        }, {
          start: {
            line: 76,
            column: 37
          },
          end: {
            line: 76,
            column: 45
          }
        }],
        line: 76
      },
      "14": {
        loc: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "15": {
        loc: {
          start: {
            line: 191,
            column: 32
          },
          end: {
            line: 191,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 191,
            column: 42
          },
          end: {
            line: 191,
            column: 46
          }
        }],
        line: 191
      },
      "16": {
        loc: {
          start: {
            line: 193,
            column: 18
          },
          end: {
            line: 193,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 193,
            column: 25
          },
          end: {
            line: 193,
            column: 90
          }
        }, {
          start: {
            line: 193,
            column: 93
          },
          end: {
            line: 193,
            column: 95
          }
        }],
        line: 193
      },
      "17": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "18": {
        loc: {
          start: {
            line: 207,
            column: 17
          },
          end: {
            line: 207,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 17
          },
          end: {
            line: 207,
            column: 24
          }
        }, {
          start: {
            line: 207,
            column: 28
          },
          end: {
            line: 207,
            column: 34
          }
        }],
        line: 207
      },
      "19": {
        loc: {
          start: {
            line: 212,
            column: 33
          },
          end: {
            line: 212,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 212,
            column: 40
          },
          end: {
            line: 212,
            column: 43
          }
        }],
        line: 212
      },
      "20": {
        loc: {
          start: {
            line: 212,
            column: 45
          },
          end: {
            line: 212,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 212,
            column: 55
          },
          end: {
            line: 212,
            column: 59
          }
        }],
        line: 212
      },
      "21": {
        loc: {
          start: {
            line: 214,
            column: 18
          },
          end: {
            line: 214,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 25
          },
          end: {
            line: 214,
            column: 97
          }
        }, {
          start: {
            line: 214,
            column: 100
          },
          end: {
            line: 214,
            column: 102
          }
        }],
        line: 214
      },
      "22": {
        loc: {
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 216,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 216,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "23": {
        loc: {
          start: {
            line: 229,
            column: 17
          },
          end: {
            line: 229,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 17
          },
          end: {
            line: 229,
            column: 24
          }
        }, {
          start: {
            line: 229,
            column: 28
          },
          end: {
            line: 229,
            column: 34
          }
        }],
        line: 229
      },
      "24": {
        loc: {
          start: {
            line: 234,
            column: 34
          },
          end: {
            line: 234,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 234,
            column: 44
          },
          end: {
            line: 234,
            column: 48
          }
        }],
        line: 234
      },
      "25": {
        loc: {
          start: {
            line: 236,
            column: 18
          },
          end: {
            line: 236,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 25
          },
          end: {
            line: 236,
            column: 92
          }
        }, {
          start: {
            line: 236,
            column: 95
          },
          end: {
            line: 236,
            column: 97
          }
        }],
        line: 236
      },
      "26": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "27": {
        loc: {
          start: {
            line: 242,
            column: 16
          },
          end: {
            line: 244,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 16
          },
          end: {
            line: 244,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "28": {
        loc: {
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 248,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 248,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "29": {
        loc: {
          start: {
            line: 252,
            column: 20
          },
          end: {
            line: 254,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 20
          },
          end: {
            line: 254,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "30": {
        loc: {
          start: {
            line: 252,
            column: 24
          },
          end: {
            line: 252,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 24
          },
          end: {
            line: 252,
            column: 55
          }
        }, {
          start: {
            line: 252,
            column: 59
          },
          end: {
            line: 252,
            column: 91
          }
        }],
        line: 252
      },
      "31": {
        loc: {
          start: {
            line: 255,
            column: 20
          },
          end: {
            line: 257,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 20
          },
          end: {
            line: 257,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "32": {
        loc: {
          start: {
            line: 255,
            column: 24
          },
          end: {
            line: 255,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 24
          },
          end: {
            line: 255,
            column: 56
          }
        }, {
          start: {
            line: 255,
            column: 60
          },
          end: {
            line: 255,
            column: 93
          }
        }],
        line: 255
      },
      "33": {
        loc: {
          start: {
            line: 274,
            column: 17
          },
          end: {
            line: 274,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 17
          },
          end: {
            line: 274,
            column: 24
          }
        }, {
          start: {
            line: 274,
            column: 28
          },
          end: {
            line: 274,
            column: 34
          }
        }],
        line: 274
      },
      "34": {
        loc: {
          start: {
            line: 282,
            column: 49
          },
          end: {
            line: 282,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 282,
            column: 59
          },
          end: {
            line: 282,
            column: 62
          }
        }],
        line: 282
      },
      "35": {
        loc: {
          start: {
            line: 308,
            column: 33
          },
          end: {
            line: 308,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 308,
            column: 42
          },
          end: {
            line: 308,
            column: 44
          }
        }],
        line: 308
      },
      "36": {
        loc: {
          start: {
            line: 339,
            column: 30
          },
          end: {
            line: 339,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 339,
            column: 47
          },
          end: {
            line: 339,
            column: 110
          }
        }, {
          start: {
            line: 339,
            column: 113
          },
          end: {
            line: 339,
            column: 114
          }
        }],
        line: 339
      },
      "37": {
        loc: {
          start: {
            line: 358,
            column: 12
          },
          end: {
            line: 378,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 359,
            column: 16
          },
          end: {
            line: 361,
            column: 26
          }
        }, {
          start: {
            line: 362,
            column: 16
          },
          end: {
            line: 364,
            column: 26
          }
        }, {
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 367,
            column: 26
          }
        }, {
          start: {
            line: 368,
            column: 16
          },
          end: {
            line: 370,
            column: 26
          }
        }, {
          start: {
            line: 371,
            column: 16
          },
          end: {
            line: 375,
            column: 26
          }
        }, {
          start: {
            line: 376,
            column: 16
          },
          end: {
            line: 377,
            column: 80
          }
        }],
        line: 358
      },
      "38": {
        loc: {
          start: {
            line: 366,
            column: 89
          },
          end: {
            line: 366,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 366,
            column: 89
          },
          end: {
            line: 366,
            column: 107
          }
        }, {
          start: {
            line: 366,
            column: 111
          },
          end: {
            line: 366,
            column: 114
          }
        }],
        line: 366
      },
      "39": {
        loc: {
          start: {
            line: 384,
            column: 51
          },
          end: {
            line: 384,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 384,
            column: 51
          },
          end: {
            line: 384,
            column: 65
          }
        }, {
          start: {
            line: 384,
            column: 69
          },
          end: {
            line: 384,
            column: 70
          }
        }],
        line: 384
      },
      "40": {
        loc: {
          start: {
            line: 427,
            column: 74
          },
          end: {
            line: 427,
            column: 93
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 427,
            column: 85
          },
          end: {
            line: 427,
            column: 93
          }
        }],
        line: 427
      },
      "41": {
        loc: {
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 442,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 440,
            column: 8
          },
          end: {
            line: 442,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 440
      },
      "42": {
        loc: {
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 452,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 8
          },
          end: {
            line: 452,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 452
      },
      "43": {
        loc: {
          start: {
            line: 454,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 454
      },
      "44": {
        loc: {
          start: {
            line: 464,
            column: 48
          },
          end: {
            line: 464,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 464,
            column: 64
          },
          end: {
            line: 464,
            column: 69
          }
        }],
        line: 464
      },
      "45": {
        loc: {
          start: {
            line: 465,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 465,
            column: 8
          },
          end: {
            line: 470,
            column: 9
          }
        }, {
          start: {
            line: 468,
            column: 15
          },
          end: {
            line: 470,
            column: 9
          }
        }],
        line: 465
      },
      "46": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 529,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 529,
            column: 9
          }
        }, {
          start: {
            line: 525,
            column: 15
          },
          end: {
            line: 529,
            column: 9
          }
        }],
        line: 521
      },
      "47": {
        loc: {
          start: {
            line: 542,
            column: 48
          },
          end: {
            line: 542,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 542,
            column: 48
          },
          end: {
            line: 542,
            column: 59
          }
        }, {
          start: {
            line: 542,
            column: 63
          },
          end: {
            line: 542,
            column: 90
          }
        }],
        line: 542
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0, 0, 0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/queries/useImageProcessing.ts"],
      sourcesContent: ["'use client';\n\n// Image Processing React Query Hooks\n// React Query integration for image processing operations with progress tracking\n\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useCallback, useRef, useState } from 'react';\nimport {\n  processImageForTryon,\n  processImageAdvanced,\n  processImagesInBatch,\n  createImageThumbnail,\n  extractImageMetadata,\n  convertImageFormat,\n  validateImageDimensions,\n  ImageFormat,\n  type ImageProcessingResult,\n  type AdvancedImageProcessingResult,\n  type AdvancedImageProcessingOptions,\n  type ImageMetadata\n} from '../utils/imageProcessing';\nimport {\n  classifyTryonError,\n  logAndClassifyError,\n  type ClassifiedError\n} from '../utils/errorHandling';\n\n/**\n * Image processing operation types\n */\nexport enum ImageProcessingOperation {\n  BASIC_PROCESSING = 'basic_processing',\n  ADVANCED_PROCESSING = 'advanced_processing',\n  BATCH_PROCESSING = 'batch_processing',\n  THUMBNAIL_GENERATION = 'thumbnail_generation',\n  METADATA_EXTRACTION = 'metadata_extraction',\n  FORMAT_CONVERSION = 'format_conversion',\n  VALIDATION = 'validation'\n}\n\n/**\n * Processing queue item\n */\nexport interface ProcessingQueueItem {\n  id: string;\n  operation: ImageProcessingOperation;\n  file: File;\n  options?: any;\n  priority: 'low' | 'normal' | 'high';\n  status: 'pending' | 'processing' | 'completed' | 'failed';\n  progress: number;\n  result?: any;\n  error?: ClassifiedError;\n  startTime?: number;\n  endTime?: number;\n  estimatedTime?: number;\n}\n\n/**\n * Batch processing configuration\n */\nexport interface BatchProcessingConfig {\n  maxConcurrent: number;\n  retryAttempts: number;\n  retryDelay: number;\n  progressCallback?: (completed: number, total: number, currentItem: ProcessingQueueItem) => void;\n  itemCompleteCallback?: (item: ProcessingQueueItem) => void;\n  errorCallback?: (item: ProcessingQueueItem, error: ClassifiedError) => void;\n}\n\n/**\n * Image processing stats\n */\nexport interface ProcessingStats {\n  totalProcessed: number;\n  totalFailed: number;\n  averageProcessingTime: number;\n  totalProcessingTime: number;\n  peakMemoryUsage: number;\n  cacheHitRate: number;\n}\n\n/**\n * Processing queue state\n */\nexport interface ProcessingQueueState {\n  queue: ProcessingQueueItem[];\n  activeItems: ProcessingQueueItem[];\n  completedItems: ProcessingQueueItem[];\n  failedItems: ProcessingQueueItem[];\n  isProcessing: boolean;\n  totalProgress: number;\n}\n\n/**\n * Default batch processing configuration\n */\nconst DEFAULT_BATCH_CONFIG: BatchProcessingConfig = {\n  maxConcurrent: 3,\n  retryAttempts: 2,\n  retryDelay: 1000\n};\n\n/**\n * Query keys for React Query\n */\nexport const imageProcessingKeys = {\n  all: ['imageProcessing'] as const,\n  metadata: (fileId: string) => [...imageProcessingKeys.all, 'metadata', fileId] as const,\n  thumbnail: (fileId: string, size: number) => [...imageProcessingKeys.all, 'thumbnail', fileId, size] as const,\n  validation: (fileId: string) => [...imageProcessingKeys.all, 'validation', fileId] as const,\n  processing: (operationId: string) => [...imageProcessingKeys.all, 'processing', operationId] as const,\n  stats: () => [...imageProcessingKeys.all, 'stats'] as const\n};\n\n/**\n * Basic image processing hook for try-on operations\n */\nexport function useImageProcessing() {\n  const queryClient = useQueryClient();\n\n  const basicProcessingMutation = useMutation({\n    mutationFn: async (file: File): Promise<ImageProcessingResult> => {\n      try {\n        return await processImageForTryon(file);\n      } catch (error) {\n        const classifiedError = classifyTryonError(error);\n        logAndClassifyError(error, { operation: 'basic_processing', fileName: file.name });\n        throw classifiedError;\n      }\n    },\n    onSuccess: (result, file) => {\n      // Cache the result\n      queryClient.setQueryData(\n        imageProcessingKeys.processing(`basic_${file.name}_${file.lastModified}`),\n        result\n      );\n    },\n    onError: (error: ClassifiedError, file) => {\n      console.error(`Failed to process image ${file.name}:`, error);\n    }\n  });\n\n  const advancedProcessingMutation = useMutation({\n    mutationFn: async ({\n      file,\n      options\n    }: {\n      file: File;\n      options?: Partial<AdvancedImageProcessingOptions>;\n    }): Promise<AdvancedImageProcessingResult> => {\n      try {\n        return await processImageAdvanced(file, options);\n      } catch (error) {\n        const classifiedError = classifyTryonError(error);\n        logAndClassifyError(error, { \n          operation: 'advanced_processing', \n          fileName: file.name,\n          options \n        });\n        throw classifiedError;\n      }\n    },\n    onSuccess: (result, { file }) => {\n      // Cache the result\n      queryClient.setQueryData(\n        imageProcessingKeys.processing(`advanced_${file.name}_${file.lastModified}`),\n        result\n      );\n    }\n  });\n\n  return {\n    processBasic: basicProcessingMutation.mutateAsync,\n    processAdvanced: advancedProcessingMutation.mutateAsync,\n    isProcessingBasic: basicProcessingMutation.isPending,\n    isProcessingAdvanced: advancedProcessingMutation.isPending,\n    basicError: basicProcessingMutation.error,\n    advancedError: advancedProcessingMutation.error,\n    reset: () => {\n      basicProcessingMutation.reset();\n      advancedProcessingMutation.reset();\n    }\n  };\n}\n\n/**\n * Image metadata extraction hook\n */\nexport function useImageMetadata(file: File | null, enabled: boolean = true) {\n  return useQuery({\n    queryKey: file ? imageProcessingKeys.metadata(`${file.name}_${file.lastModified}`) : [],\n    queryFn: async (): Promise<ImageMetadata> => {\n      if (!file) throw new Error('No file provided');\n      try {\n        return await extractImageMetadata(file);\n      } catch (error) {\n        const classifiedError = classifyTryonError(error);\n        logAndClassifyError(error, { operation: 'metadata_extraction', fileName: file.name });\n        throw classifiedError;\n      }\n    },\n    enabled: enabled && !!file,\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    gcTime: 10 * 60 * 1000 // 10 minutes\n  });\n}\n\n/**\n * Image thumbnail generation hook\n */\nexport function useImageThumbnail(file: File | null, size: number = 150, enabled: boolean = true) {\n  return useQuery({\n    queryKey: file ? imageProcessingKeys.thumbnail(`${file.name}_${file.lastModified}`, size) : [],\n    queryFn: async (): Promise<string> => {\n      if (!file) throw new Error('No file provided');\n      try {\n        return await createImageThumbnail(file, size);\n      } catch (error) {\n        const classifiedError = classifyTryonError(error);\n        logAndClassifyError(error, { \n          operation: 'thumbnail_generation', \n          fileName: file.name,\n          size \n        });\n        throw classifiedError;\n      }\n    },\n    enabled: enabled && !!file,\n    staleTime: 10 * 60 * 1000, // 10 minutes\n    gcTime: 30 * 60 * 1000 // 30 minutes\n  });\n}\n\n/**\n * Image validation hook\n */\nexport function useImageValidation(file: File | null, enabled: boolean = true) {\n  return useQuery({\n    queryKey: file ? imageProcessingKeys.validation(`${file.name}_${file.lastModified}`) : [],\n    queryFn: async (): Promise<{ isValid: boolean; errors: string[] }> => {\n      if (!file) throw new Error('No file provided');\n      \n      const errors: string[] = [];\n      \n      try {\n        // Basic file type validation\n        if (!file.type.startsWith('image/')) {\n          errors.push('File is not an image');\n        }\n        \n        // File size validation (10MB max)\n        if (file.size > 10 * 1024 * 1024) {\n          errors.push('File size too large (max 10MB)');\n        }\n        \n        // Dimension validation\n        try {\n          const metadata = await extractImageMetadata(file);\n          if (metadata.dimensions.width < 256 || metadata.dimensions.height < 256) {\n            errors.push('Image dimensions too small (minimum 256x256)');\n          }\n          if (metadata.dimensions.width > 4096 || metadata.dimensions.height > 4096) {\n            errors.push('Image dimensions too large (maximum 4096x4096)');\n          }\n        } catch (error) {\n          errors.push('Failed to validate image dimensions');\n        }\n        \n        return {\n          isValid: errors.length === 0,\n          errors\n        };\n      } catch (error) {\n        const classifiedError = classifyTryonError(error);\n        logAndClassifyError(error, { operation: 'validation', fileName: file.name });\n        throw classifiedError;\n      }\n    },\n    enabled: enabled && !!file,\n    staleTime: 2 * 60 * 1000, // 2 minutes\n    gcTime: 5 * 60 * 1000 // 5 minutes\n  });\n}\n\n/**\n * Format conversion hook\n */\nexport function useFormatConversion() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async ({\n      file,\n      targetFormat,\n      quality = 0.9\n    }: {\n      file: File;\n      targetFormat: ImageFormat;\n      quality?: number;\n    }): Promise<string> => {\n      try {\n        const imageUrl = URL.createObjectURL(file);\n        const { convertImageFormat } = await import('../utils/imageProcessing');\n        const result = await convertImageFormat(imageUrl, targetFormat, quality);\n        URL.revokeObjectURL(imageUrl);\n        return result;\n      } catch (error) {\n        const classifiedError = classifyTryonError(error);\n        logAndClassifyError(error, { \n          operation: 'format_conversion', \n          fileName: file.name,\n          targetFormat,\n          quality \n        });\n        throw classifiedError;\n      }\n    },\n    onSuccess: (result, { file, targetFormat }) => {\n      // Invalidate related queries\n      queryClient.invalidateQueries({\n        queryKey: imageProcessingKeys.metadata(`${file.name}_${file.lastModified}`)\n      });\n    }\n  });\n}\n\n/**\n * Batch processing hook with queue management\n */\nexport function useBatchImageProcessing(config: Partial<BatchProcessingConfig> = {}) {\n  const processingConfig = { ...DEFAULT_BATCH_CONFIG, ...config };\n  const [queueState, setQueueState] = useState<ProcessingQueueState>({\n    queue: [],\n    activeItems: [],\n    completedItems: [],\n    failedItems: [],\n    isProcessing: false,\n    totalProgress: 0\n  });\n  \n  const queueRef = useRef<ProcessingQueueItem[]>([]);\n  const activeRef = useRef<Map<string, ProcessingQueueItem>>(new Map());\n  const statsRef = useRef<ProcessingStats>({\n    totalProcessed: 0,\n    totalFailed: 0,\n    averageProcessingTime: 0,\n    totalProcessingTime: 0,\n    peakMemoryUsage: 0,\n    cacheHitRate: 0\n  });\n\n  const generateId = useCallback(() => {\n    return `proc_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }, []);\n\n  const updateQueueState = useCallback(() => {\n    const activeItems = Array.from(activeRef.current.values());\n    const completedItems = queueRef.current.filter(item => item.status === 'completed');\n    const failedItems = queueRef.current.filter(item => item.status === 'failed');\n    const totalItems = queueRef.current.length;\n    const totalProgress = totalItems > 0 \n      ? (completedItems.length + failedItems.length) / totalItems * 100 \n      : 0;\n\n    setQueueState({\n      queue: [...queueRef.current],\n      activeItems,\n      completedItems,\n      failedItems,\n      isProcessing: activeItems.length > 0,\n      totalProgress\n    });\n  }, []);\n\n  const processQueueItem = useCallback(async (item: ProcessingQueueItem): Promise<void> => {\n    item.status = 'processing';\n    item.startTime = Date.now();\n    activeRef.current.set(item.id, item);\n    updateQueueState();\n\n    try {\n      let result: any;\n      \n      switch (item.operation) {\n        case ImageProcessingOperation.BASIC_PROCESSING:\n          result = await processImageForTryon(item.file, item.options);\n          break;\n        case ImageProcessingOperation.ADVANCED_PROCESSING:\n          result = await processImageAdvanced(item.file, item.options);\n          break;\n        case ImageProcessingOperation.THUMBNAIL_GENERATION:\n          result = await createImageThumbnail(item.file, item.options?.size || 150);\n          break;\n        case ImageProcessingOperation.METADATA_EXTRACTION:\n          result = await extractImageMetadata(item.file);\n          break;\n        case ImageProcessingOperation.FORMAT_CONVERSION:\n          const imageUrl = URL.createObjectURL(item.file);\n          result = await convertImageFormat(imageUrl, item.options.targetFormat, item.options.quality);\n          URL.revokeObjectURL(imageUrl);\n          break;\n        default:\n          throw new Error(`Unsupported operation: ${item.operation}`);\n      }\n\n      item.status = 'completed';\n      item.result = result;\n      item.endTime = Date.now();\n      item.progress = 100;\n      \n      // Update stats\n      const processingTime = item.endTime - (item.startTime || 0);\n      statsRef.current.totalProcessed++;\n      statsRef.current.totalProcessingTime += processingTime;\n      statsRef.current.averageProcessingTime = \n        statsRef.current.totalProcessingTime / statsRef.current.totalProcessed;\n\n      processingConfig.itemCompleteCallback?.(item);\n    } catch (error) {\n      item.status = 'failed';\n      item.endTime = Date.now();\n      item.error = classifyTryonError(error);\n      \n      statsRef.current.totalFailed++;\n      \n      logAndClassifyError(error, {\n        operation: item.operation,\n        fileName: item.file.name,\n        itemId: item.id\n      });\n\n      processingConfig.errorCallback?.(item, item.error);\n    } finally {\n      activeRef.current.delete(item.id);\n      updateQueueState();\n      \n      // Process next items in queue\n      processNextInQueue();\n    }\n  }, [processingConfig, updateQueueState]);\n\n  const processNextInQueue = useCallback(() => {\n    const pendingItems = queueRef.current\n      .filter(item => item.status === 'pending')\n      .sort((a, b) => {\n        const priorityOrder = { high: 3, normal: 2, low: 1 };\n        return priorityOrder[b.priority] - priorityOrder[a.priority];\n      });\n\n    const availableSlots = processingConfig.maxConcurrent - activeRef.current.size;\n    \n    for (let i = 0; i < Math.min(availableSlots, pendingItems.length); i++) {\n      processQueueItem(pendingItems[i]);\n    }\n  }, [processingConfig.maxConcurrent, processQueueItem]);\n\n  const addToQueue = useCallback((\n    operation: ImageProcessingOperation,\n    file: File,\n    options?: any,\n    priority: 'low' | 'normal' | 'high' = 'normal'\n  ): string => {\n    const item: ProcessingQueueItem = {\n      id: generateId(),\n      operation,\n      file,\n      options,\n      priority,\n      status: 'pending',\n      progress: 0\n    };\n\n    queueRef.current.push(item);\n    updateQueueState();\n    \n    // Start processing if under capacity\n    if (activeRef.current.size < processingConfig.maxConcurrent) {\n      processNextInQueue();\n    }\n\n    return item.id;\n  }, [generateId, processingConfig.maxConcurrent, updateQueueState, processNextInQueue]);\n\n  const removeFromQueue = useCallback((itemId: string): boolean => {\n    const index = queueRef.current.findIndex(item => item.id === itemId);\n    if (index === -1) return false;\n\n    const item = queueRef.current[index];\n    if (item.status === 'processing') {\n      // Cannot remove active items\n      return false;\n    }\n\n    queueRef.current.splice(index, 1);\n    updateQueueState();\n    return true;\n  }, [updateQueueState]);\n\n  const clearQueue = useCallback((includeActive: boolean = false) => {\n    if (includeActive) {\n      queueRef.current = [];\n      activeRef.current.clear();\n    } else {\n      queueRef.current = queueRef.current.filter(item => item.status === 'processing');\n    }\n    updateQueueState();\n  }, [updateQueueState]);\n\n  const pauseQueue = useCallback(() => {\n    // Implementation would pause processing new items\n    // For now, just stop processing new items\n  }, []);\n\n  const resumeQueue = useCallback(() => {\n    processNextInQueue();\n  }, [processNextInQueue]);\n\n  const getStats = useCallback((): ProcessingStats => {\n    return { ...statsRef.current };\n  }, []);\n\n  return {\n    queueState,\n    addToQueue,\n    removeFromQueue,\n    clearQueue,\n    pauseQueue,\n    resumeQueue,\n    getStats,\n    processingConfig\n  };\n}\n\n/**\n * Processing statistics hook\n */\nexport function useProcessingStats() {\n  return useQuery({\n    queryKey: imageProcessingKeys.stats(),\n    queryFn: async (): Promise<ProcessingStats> => {\n      // This would typically fetch from a backend or local storage\n      return {\n        totalProcessed: 0,\n        totalFailed: 0,\n        averageProcessingTime: 0,\n        totalProcessingTime: 0,\n        peakMemoryUsage: 0,\n        cacheHitRate: 0\n      };\n    },\n    staleTime: 30 * 1000, // 30 seconds\n    gcTime: 2 * 60 * 1000 // 2 minutes\n  });\n}\n\n/**\n * Cache management for image processing\n */\nexport function useImageProcessingCache() {\n  const queryClient = useQueryClient();\n\n  const clearCache = useCallback((pattern?: string) => {\n    if (pattern) {\n      queryClient.invalidateQueries({\n        predicate: (query) => query.queryKey.toString().includes(pattern)\n      });\n    } else {\n      queryClient.invalidateQueries({\n        queryKey: imageProcessingKeys.all\n      });\n    }\n  }, [queryClient]);\n\n  const getCacheStats = useCallback(() => {\n    const cache = queryClient.getQueryCache();\n    const queries = cache.findAll({ queryKey: imageProcessingKeys.all });\n    \n    return {\n      totalQueries: queries.length,\n      activeQueries: queries.filter(q => q.isActive()).length,\n      stalequeries: queries.filter(q => q.isStale()).length,\n      invalidQueries: queries.filter(q => q.isStale() && q.getObserversCount() === 0).length\n    };\n  }, [queryClient]);\n\n  const preloadMetadata = useCallback(async (files: File[]) => {\n    const promises = files.map(file => \n      queryClient.prefetchQuery({\n        queryKey: imageProcessingKeys.metadata(`${file.name}_${file.lastModified}`),\n        queryFn: () => extractImageMetadata(file)\n      })\n    );\n    \n    await Promise.allSettled(promises);\n  }, [queryClient]);\n\n  return {\n    clearCache,\n    getCacheStats,\n    preloadMetadata\n  };\n}"],
      names: ["ImageProcessingOperation", "imageProcessingKeys", "useBatchImageProcessing", "useFormatConversion", "useImageMetadata", "useImageProcessing", "useImageProcessingCache", "useImageThumbnail", "useImageValidation", "useProcessingStats", "DEFAULT_BATCH_CONFIG", "maxConcurrent", "retryAttempts", "retryDelay", "all", "metadata", "fileId", "thumbnail", "size", "validation", "processing", "operationId", "stats", "queryClient", "useQueryClient", "basicProcessingMutation", "useMutation", "mutationFn", "file", "processImageForTryon", "error", "classifiedError", "classifyTryonError", "logAndClassifyError", "operation", "fileName", "name", "onSuccess", "result", "setQueryData", "lastModified", "onError", "console", "advancedProcessingMutation", "options", "processImageAdvanced", "processBasic", "mutateAsync", "processAdvanced", "isProcessingBasic", "isPending", "isProcessingAdvanced", "basicError", "advancedError", "reset", "enabled", "useQuery", "queryKey", "queryFn", "Error", "extractImageMetadata", "staleTime", "gcTime", "createImageThumbnail", "errors", "type", "startsWith", "push", "dimensions", "width", "height", "isValid", "length", "targetFormat", "quality", "imageUrl", "URL", "createObjectURL", "convertImageFormat", "revokeObjectURL", "invalidateQueries", "config", "processingConfig", "queueState", "setQueueState", "useState", "queue", "activeItems", "completedItems", "failedItems", "isProcessing", "totalProgress", "queueRef", "useRef", "activeRef", "Map", "statsRef", "totalProcessed", "totalFailed", "averageProcessingTime", "totalProcessingTime", "peakMemoryUsage", "cacheHitRate", "generateId", "useCallback", "Date", "now", "Math", "random", "toString", "substr", "updateQueueState", "Array", "from", "current", "values", "filter", "item", "status", "totalItems", "processQueueItem", "startTime", "set", "id", "endTime", "progress", "processingTime", "itemCompleteCallback", "itemId", "errorCallback", "delete", "processNextInQueue", "pendingItems", "sort", "a", "b", "priorityOrder", "high", "normal", "low", "priority", "availableSlots", "i", "min", "addToQueue", "removeFromQueue", "index", "findIndex", "splice", "clearQueue", "includeActive", "clear", "pauseQueue", "resumeQueue", "getStats", "clearCache", "pattern", "predicate", "query", "includes", "getCacheStats", "cache", "getQueryCache", "queries", "findAll", "totalQueries", "activeQueries", "q", "isActive", "stalequeries", "isStale", "invalidQueries", "getObserversCount", "preloadMetadata", "files", "promises", "map", "prefetchQuery", "Promise", "allSettled"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b577c846f826316abbb8a4c01f67ced5d1f67414"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1pr92c2cpo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1pr92c2cpo();
cov_1pr92c2cpo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[0]++;
  cov_1pr92c2cpo().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1pr92c2cpo().s[3]++;
_export(exports, {
  ImageProcessingOperation: function () {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[1]++;
    cov_1pr92c2cpo().s[4]++;
    return ImageProcessingOperation;
  },
  imageProcessingKeys: function () {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[2]++;
    cov_1pr92c2cpo().s[5]++;
    return imageProcessingKeys;
  },
  useBatchImageProcessing: function () {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[3]++;
    cov_1pr92c2cpo().s[6]++;
    return useBatchImageProcessing;
  },
  useFormatConversion: function () {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[4]++;
    cov_1pr92c2cpo().s[7]++;
    return useFormatConversion;
  },
  useImageMetadata: function () {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[5]++;
    cov_1pr92c2cpo().s[8]++;
    return useImageMetadata;
  },
  useImageProcessing: function () {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[6]++;
    cov_1pr92c2cpo().s[9]++;
    return useImageProcessing;
  },
  useImageProcessingCache: function () {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[7]++;
    cov_1pr92c2cpo().s[10]++;
    return useImageProcessingCache;
  },
  useImageThumbnail: function () {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[8]++;
    cov_1pr92c2cpo().s[11]++;
    return useImageThumbnail;
  },
  useImageValidation: function () {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[9]++;
    cov_1pr92c2cpo().s[12]++;
    return useImageValidation;
  },
  useProcessingStats: function () {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[10]++;
    cov_1pr92c2cpo().s[13]++;
    return useProcessingStats;
  }
});
const _reactquery =
/* istanbul ignore next */
(cov_1pr92c2cpo().s[14]++, require("@tanstack/react-query"));
const _react =
/* istanbul ignore next */
(cov_1pr92c2cpo().s[15]++, require("react"));
const _imageProcessing =
/* istanbul ignore next */
(cov_1pr92c2cpo().s[16]++, require("../utils/imageProcessing"));
const _errorHandling =
/* istanbul ignore next */
(cov_1pr92c2cpo().s[17]++, require("../utils/errorHandling"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[11]++;
  cov_1pr92c2cpo().s[18]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1pr92c2cpo().b[0][0]++;
    cov_1pr92c2cpo().s[19]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1pr92c2cpo().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[20]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[21]++, new WeakMap());
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[22]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[12]++;
    cov_1pr92c2cpo().s[23]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[13]++;
  cov_1pr92c2cpo().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1pr92c2cpo().b[2][0]++;
    cov_1pr92c2cpo().s[25]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1pr92c2cpo().b[2][1]++;
  }
  cov_1pr92c2cpo().s[26]++;
  if (
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1pr92c2cpo().b[4][0]++;
    cov_1pr92c2cpo().s[27]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1pr92c2cpo().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[28]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[29]++;
  if (
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1pr92c2cpo().b[6][0]++;
    cov_1pr92c2cpo().s[30]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1pr92c2cpo().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[31]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[32]++,
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[33]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1pr92c2cpo().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1pr92c2cpo().s[35]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1pr92c2cpo().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1pr92c2cpo().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_1pr92c2cpo().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1pr92c2cpo().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1pr92c2cpo().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1pr92c2cpo().b[12][0]++;
        cov_1pr92c2cpo().s[37]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1pr92c2cpo().b[12][1]++;
        cov_1pr92c2cpo().s[38]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1pr92c2cpo().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[39]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[40]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1pr92c2cpo().b[14][0]++;
    cov_1pr92c2cpo().s[41]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1pr92c2cpo().b[14][1]++;
  }
  cov_1pr92c2cpo().s[42]++;
  return newObj;
}
var ImageProcessingOperation =
/* istanbul ignore next */
(/*#__PURE__*/cov_1pr92c2cpo().s[43]++, function (ImageProcessingOperation) {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[14]++;
  cov_1pr92c2cpo().s[44]++;
  ImageProcessingOperation["BASIC_PROCESSING"] = "basic_processing";
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[45]++;
  ImageProcessingOperation["ADVANCED_PROCESSING"] = "advanced_processing";
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[46]++;
  ImageProcessingOperation["BATCH_PROCESSING"] = "batch_processing";
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[47]++;
  ImageProcessingOperation["THUMBNAIL_GENERATION"] = "thumbnail_generation";
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[48]++;
  ImageProcessingOperation["METADATA_EXTRACTION"] = "metadata_extraction";
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[49]++;
  ImageProcessingOperation["FORMAT_CONVERSION"] = "format_conversion";
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[50]++;
  ImageProcessingOperation["VALIDATION"] = "validation";
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[51]++;
  return ImageProcessingOperation;
}({}));
/**
 * Default batch processing configuration
 */
const DEFAULT_BATCH_CONFIG =
/* istanbul ignore next */
(cov_1pr92c2cpo().s[52]++, {
  maxConcurrent: 3,
  retryAttempts: 2,
  retryDelay: 1000
});
const imageProcessingKeys =
/* istanbul ignore next */
(cov_1pr92c2cpo().s[53]++, {
  all: ['imageProcessing'],
  metadata: fileId => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[15]++;
    cov_1pr92c2cpo().s[54]++;
    return [...imageProcessingKeys.all, 'metadata', fileId];
  },
  thumbnail: (fileId, size) => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[16]++;
    cov_1pr92c2cpo().s[55]++;
    return [...imageProcessingKeys.all, 'thumbnail', fileId, size];
  },
  validation: fileId => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[17]++;
    cov_1pr92c2cpo().s[56]++;
    return [...imageProcessingKeys.all, 'validation', fileId];
  },
  processing: operationId => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[18]++;
    cov_1pr92c2cpo().s[57]++;
    return [...imageProcessingKeys.all, 'processing', operationId];
  },
  stats: () => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[19]++;
    cov_1pr92c2cpo().s[58]++;
    return [...imageProcessingKeys.all, 'stats'];
  }
});
function useImageProcessing() {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[20]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[59]++, (0, _reactquery.useQueryClient)());
  const basicProcessingMutation =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[60]++, (0, _reactquery.useMutation)({
    mutationFn: async file => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[21]++;
      cov_1pr92c2cpo().s[61]++;
      try {
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[62]++;
        return await (0, _imageProcessing.processImageForTryon)(file);
      } catch (error) {
        const classifiedError =
        /* istanbul ignore next */
        (cov_1pr92c2cpo().s[63]++, (0, _errorHandling.classifyTryonError)(error));
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[64]++;
        (0, _errorHandling.logAndClassifyError)(error, {
          operation: 'basic_processing',
          fileName: file.name
        });
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[65]++;
        throw classifiedError;
      }
    },
    onSuccess: (result, file) => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[22]++;
      cov_1pr92c2cpo().s[66]++;
      // Cache the result
      queryClient.setQueryData(imageProcessingKeys.processing(`basic_${file.name}_${file.lastModified}`), result);
    },
    onError: (error, file) => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[23]++;
      cov_1pr92c2cpo().s[67]++;
      console.error(`Failed to process image ${file.name}:`, error);
    }
  }));
  const advancedProcessingMutation =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[68]++, (0, _reactquery.useMutation)({
    mutationFn: async ({
      file,
      options
    }) => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[24]++;
      cov_1pr92c2cpo().s[69]++;
      try {
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[70]++;
        return await (0, _imageProcessing.processImageAdvanced)(file, options);
      } catch (error) {
        const classifiedError =
        /* istanbul ignore next */
        (cov_1pr92c2cpo().s[71]++, (0, _errorHandling.classifyTryonError)(error));
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[72]++;
        (0, _errorHandling.logAndClassifyError)(error, {
          operation: 'advanced_processing',
          fileName: file.name,
          options
        });
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[73]++;
        throw classifiedError;
      }
    },
    onSuccess: (result, {
      file
    }) => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[25]++;
      cov_1pr92c2cpo().s[74]++;
      // Cache the result
      queryClient.setQueryData(imageProcessingKeys.processing(`advanced_${file.name}_${file.lastModified}`), result);
    }
  }));
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[75]++;
  return {
    processBasic: basicProcessingMutation.mutateAsync,
    processAdvanced: advancedProcessingMutation.mutateAsync,
    isProcessingBasic: basicProcessingMutation.isPending,
    isProcessingAdvanced: advancedProcessingMutation.isPending,
    basicError: basicProcessingMutation.error,
    advancedError: advancedProcessingMutation.error,
    reset: () => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[26]++;
      cov_1pr92c2cpo().s[76]++;
      basicProcessingMutation.reset();
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[77]++;
      advancedProcessingMutation.reset();
    }
  };
}
function useImageMetadata(file, enabled =
/* istanbul ignore next */
(cov_1pr92c2cpo().b[15][0]++, true)) {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[27]++;
  cov_1pr92c2cpo().s[78]++;
  return (0, _reactquery.useQuery)({
    queryKey: file ?
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[16][0]++, imageProcessingKeys.metadata(`${file.name}_${file.lastModified}`)) :
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[16][1]++, []),
    queryFn: async () => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[28]++;
      cov_1pr92c2cpo().s[79]++;
      if (!file) {
        /* istanbul ignore next */
        cov_1pr92c2cpo().b[17][0]++;
        cov_1pr92c2cpo().s[80]++;
        throw new Error('No file provided');
      } else
      /* istanbul ignore next */
      {
        cov_1pr92c2cpo().b[17][1]++;
      }
      cov_1pr92c2cpo().s[81]++;
      try {
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[82]++;
        return await (0, _imageProcessing.extractImageMetadata)(file);
      } catch (error) {
        const classifiedError =
        /* istanbul ignore next */
        (cov_1pr92c2cpo().s[83]++, (0, _errorHandling.classifyTryonError)(error));
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[84]++;
        (0, _errorHandling.logAndClassifyError)(error, {
          operation: 'metadata_extraction',
          fileName: file.name
        });
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[85]++;
        throw classifiedError;
      }
    },
    enabled:
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[18][0]++, enabled) &&
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[18][1]++, !!file),
    staleTime: 5 * 60 * 1000,
    gcTime: 10 * 60 * 1000 // 10 minutes
  });
}
function useImageThumbnail(file, size =
/* istanbul ignore next */
(cov_1pr92c2cpo().b[19][0]++, 150), enabled =
/* istanbul ignore next */
(cov_1pr92c2cpo().b[20][0]++, true)) {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[29]++;
  cov_1pr92c2cpo().s[86]++;
  return (0, _reactquery.useQuery)({
    queryKey: file ?
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[21][0]++, imageProcessingKeys.thumbnail(`${file.name}_${file.lastModified}`, size)) :
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[21][1]++, []),
    queryFn: async () => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[30]++;
      cov_1pr92c2cpo().s[87]++;
      if (!file) {
        /* istanbul ignore next */
        cov_1pr92c2cpo().b[22][0]++;
        cov_1pr92c2cpo().s[88]++;
        throw new Error('No file provided');
      } else
      /* istanbul ignore next */
      {
        cov_1pr92c2cpo().b[22][1]++;
      }
      cov_1pr92c2cpo().s[89]++;
      try {
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[90]++;
        return await (0, _imageProcessing.createImageThumbnail)(file, size);
      } catch (error) {
        const classifiedError =
        /* istanbul ignore next */
        (cov_1pr92c2cpo().s[91]++, (0, _errorHandling.classifyTryonError)(error));
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[92]++;
        (0, _errorHandling.logAndClassifyError)(error, {
          operation: 'thumbnail_generation',
          fileName: file.name,
          size
        });
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[93]++;
        throw classifiedError;
      }
    },
    enabled:
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[23][0]++, enabled) &&
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[23][1]++, !!file),
    staleTime: 10 * 60 * 1000,
    gcTime: 30 * 60 * 1000 // 30 minutes
  });
}
function useImageValidation(file, enabled =
/* istanbul ignore next */
(cov_1pr92c2cpo().b[24][0]++, true)) {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[31]++;
  cov_1pr92c2cpo().s[94]++;
  return (0, _reactquery.useQuery)({
    queryKey: file ?
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[25][0]++, imageProcessingKeys.validation(`${file.name}_${file.lastModified}`)) :
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[25][1]++, []),
    queryFn: async () => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[32]++;
      cov_1pr92c2cpo().s[95]++;
      if (!file) {
        /* istanbul ignore next */
        cov_1pr92c2cpo().b[26][0]++;
        cov_1pr92c2cpo().s[96]++;
        throw new Error('No file provided');
      } else
      /* istanbul ignore next */
      {
        cov_1pr92c2cpo().b[26][1]++;
      }
      const errors =
      /* istanbul ignore next */
      (cov_1pr92c2cpo().s[97]++, []);
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[98]++;
      try {
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[99]++;
        // Basic file type validation
        if (!file.type.startsWith('image/')) {
          /* istanbul ignore next */
          cov_1pr92c2cpo().b[27][0]++;
          cov_1pr92c2cpo().s[100]++;
          errors.push('File is not an image');
        } else
        /* istanbul ignore next */
        {
          cov_1pr92c2cpo().b[27][1]++;
        }
        // File size validation (10MB max)
        cov_1pr92c2cpo().s[101]++;
        if (file.size > 10 * 1024 * 1024) {
          /* istanbul ignore next */
          cov_1pr92c2cpo().b[28][0]++;
          cov_1pr92c2cpo().s[102]++;
          errors.push('File size too large (max 10MB)');
        } else
        /* istanbul ignore next */
        {
          cov_1pr92c2cpo().b[28][1]++;
        }
        // Dimension validation
        cov_1pr92c2cpo().s[103]++;
        try {
          const metadata =
          /* istanbul ignore next */
          (cov_1pr92c2cpo().s[104]++, await (0, _imageProcessing.extractImageMetadata)(file));
          /* istanbul ignore next */
          cov_1pr92c2cpo().s[105]++;
          if (
          /* istanbul ignore next */
          (cov_1pr92c2cpo().b[30][0]++, metadata.dimensions.width < 256) ||
          /* istanbul ignore next */
          (cov_1pr92c2cpo().b[30][1]++, metadata.dimensions.height < 256)) {
            /* istanbul ignore next */
            cov_1pr92c2cpo().b[29][0]++;
            cov_1pr92c2cpo().s[106]++;
            errors.push('Image dimensions too small (minimum 256x256)');
          } else
          /* istanbul ignore next */
          {
            cov_1pr92c2cpo().b[29][1]++;
          }
          cov_1pr92c2cpo().s[107]++;
          if (
          /* istanbul ignore next */
          (cov_1pr92c2cpo().b[32][0]++, metadata.dimensions.width > 4096) ||
          /* istanbul ignore next */
          (cov_1pr92c2cpo().b[32][1]++, metadata.dimensions.height > 4096)) {
            /* istanbul ignore next */
            cov_1pr92c2cpo().b[31][0]++;
            cov_1pr92c2cpo().s[108]++;
            errors.push('Image dimensions too large (maximum 4096x4096)');
          } else
          /* istanbul ignore next */
          {
            cov_1pr92c2cpo().b[31][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_1pr92c2cpo().s[109]++;
          errors.push('Failed to validate image dimensions');
        }
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[110]++;
        return {
          isValid: errors.length === 0,
          errors
        };
      } catch (error) {
        const classifiedError =
        /* istanbul ignore next */
        (cov_1pr92c2cpo().s[111]++, (0, _errorHandling.classifyTryonError)(error));
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[112]++;
        (0, _errorHandling.logAndClassifyError)(error, {
          operation: 'validation',
          fileName: file.name
        });
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[113]++;
        throw classifiedError;
      }
    },
    enabled:
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[33][0]++, enabled) &&
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[33][1]++, !!file),
    staleTime: 2 * 60 * 1000,
    gcTime: 5 * 60 * 1000 // 5 minutes
  });
}
function useFormatConversion() {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[33]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[114]++, (0, _reactquery.useQueryClient)());
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[115]++;
  return (0, _reactquery.useMutation)({
    mutationFn: async ({
      file,
      targetFormat,
      quality =
      /* istanbul ignore next */
      (cov_1pr92c2cpo().b[34][0]++, 0.9)
    }) => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[34]++;
      cov_1pr92c2cpo().s[116]++;
      try {
        const imageUrl =
        /* istanbul ignore next */
        (cov_1pr92c2cpo().s[117]++, URL.createObjectURL(file));
        const {
          convertImageFormat
        } =
        /* istanbul ignore next */
        (cov_1pr92c2cpo().s[118]++, await Promise.resolve().then(() => {
          /* istanbul ignore next */
          cov_1pr92c2cpo().f[35]++;
          cov_1pr92c2cpo().s[119]++;
          return /*#__PURE__*/_interop_require_wildcard(require("../utils/imageProcessing"));
        }));
        const result =
        /* istanbul ignore next */
        (cov_1pr92c2cpo().s[120]++, await convertImageFormat(imageUrl, targetFormat, quality));
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[121]++;
        URL.revokeObjectURL(imageUrl);
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[122]++;
        return result;
      } catch (error) {
        const classifiedError =
        /* istanbul ignore next */
        (cov_1pr92c2cpo().s[123]++, (0, _errorHandling.classifyTryonError)(error));
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[124]++;
        (0, _errorHandling.logAndClassifyError)(error, {
          operation: 'format_conversion',
          fileName: file.name,
          targetFormat,
          quality
        });
        /* istanbul ignore next */
        cov_1pr92c2cpo().s[125]++;
        throw classifiedError;
      }
    },
    onSuccess: (result, {
      file,
      targetFormat
    }) => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[36]++;
      cov_1pr92c2cpo().s[126]++;
      // Invalidate related queries
      queryClient.invalidateQueries({
        queryKey: imageProcessingKeys.metadata(`${file.name}_${file.lastModified}`)
      });
    }
  });
}
function useBatchImageProcessing(config =
/* istanbul ignore next */
(cov_1pr92c2cpo().b[35][0]++, {})) {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[37]++;
  const processingConfig =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[127]++, {
    ...DEFAULT_BATCH_CONFIG,
    ...config
  });
  const [queueState, setQueueState] =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[128]++, (0, _react.useState)({
    queue: [],
    activeItems: [],
    completedItems: [],
    failedItems: [],
    isProcessing: false,
    totalProgress: 0
  }));
  const queueRef =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[129]++, (0, _react.useRef)([]));
  const activeRef =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[130]++, (0, _react.useRef)(new Map()));
  const statsRef =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[131]++, (0, _react.useRef)({
    totalProcessed: 0,
    totalFailed: 0,
    averageProcessingTime: 0,
    totalProcessingTime: 0,
    peakMemoryUsage: 0,
    cacheHitRate: 0
  }));
  const generateId =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[132]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[38]++;
    cov_1pr92c2cpo().s[133]++;
    return `proc_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }, []));
  const updateQueueState =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[134]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[39]++;
    const activeItems =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[135]++, Array.from(activeRef.current.values()));
    const completedItems =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[136]++, queueRef.current.filter(item => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[40]++;
      cov_1pr92c2cpo().s[137]++;
      return item.status === 'completed';
    }));
    const failedItems =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[138]++, queueRef.current.filter(item => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[41]++;
      cov_1pr92c2cpo().s[139]++;
      return item.status === 'failed';
    }));
    const totalItems =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[140]++, queueRef.current.length);
    const totalProgress =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[141]++, totalItems > 0 ?
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[36][0]++, (completedItems.length + failedItems.length) / totalItems * 100) :
    /* istanbul ignore next */
    (cov_1pr92c2cpo().b[36][1]++, 0));
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[142]++;
    setQueueState({
      queue: [...queueRef.current],
      activeItems,
      completedItems,
      failedItems,
      isProcessing: activeItems.length > 0,
      totalProgress
    });
  }, []));
  const processQueueItem =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[143]++, (0, _react.useCallback)(async item => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[42]++;
    cov_1pr92c2cpo().s[144]++;
    item.status = 'processing';
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[145]++;
    item.startTime = Date.now();
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[146]++;
    activeRef.current.set(item.id, item);
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[147]++;
    updateQueueState();
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[148]++;
    try {
      let result;
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[149]++;
      switch (item.operation) {
        case "basic_processing":
          /* istanbul ignore next */
          cov_1pr92c2cpo().b[37][0]++;
          cov_1pr92c2cpo().s[150]++;
          result = await (0, _imageProcessing.processImageForTryon)(item.file, item.options);
          /* istanbul ignore next */
          cov_1pr92c2cpo().s[151]++;
          break;
        case "advanced_processing":
          /* istanbul ignore next */
          cov_1pr92c2cpo().b[37][1]++;
          cov_1pr92c2cpo().s[152]++;
          result = await (0, _imageProcessing.processImageAdvanced)(item.file, item.options);
          /* istanbul ignore next */
          cov_1pr92c2cpo().s[153]++;
          break;
        case "thumbnail_generation":
          /* istanbul ignore next */
          cov_1pr92c2cpo().b[37][2]++;
          cov_1pr92c2cpo().s[154]++;
          result = await (0, _imageProcessing.createImageThumbnail)(item.file,
          /* istanbul ignore next */
          (cov_1pr92c2cpo().b[38][0]++, item.options?.size) ||
          /* istanbul ignore next */
          (cov_1pr92c2cpo().b[38][1]++, 150));
          /* istanbul ignore next */
          cov_1pr92c2cpo().s[155]++;
          break;
        case "metadata_extraction":
          /* istanbul ignore next */
          cov_1pr92c2cpo().b[37][3]++;
          cov_1pr92c2cpo().s[156]++;
          result = await (0, _imageProcessing.extractImageMetadata)(item.file);
          /* istanbul ignore next */
          cov_1pr92c2cpo().s[157]++;
          break;
        case "format_conversion":
          /* istanbul ignore next */
          cov_1pr92c2cpo().b[37][4]++;
          const imageUrl =
          /* istanbul ignore next */
          (cov_1pr92c2cpo().s[158]++, URL.createObjectURL(item.file));
          /* istanbul ignore next */
          cov_1pr92c2cpo().s[159]++;
          result = await (0, _imageProcessing.convertImageFormat)(imageUrl, item.options.targetFormat, item.options.quality);
          /* istanbul ignore next */
          cov_1pr92c2cpo().s[160]++;
          URL.revokeObjectURL(imageUrl);
          /* istanbul ignore next */
          cov_1pr92c2cpo().s[161]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1pr92c2cpo().b[37][5]++;
          cov_1pr92c2cpo().s[162]++;
          throw new Error(`Unsupported operation: ${item.operation}`);
      }
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[163]++;
      item.status = 'completed';
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[164]++;
      item.result = result;
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[165]++;
      item.endTime = Date.now();
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[166]++;
      item.progress = 100;
      // Update stats
      const processingTime =
      /* istanbul ignore next */
      (cov_1pr92c2cpo().s[167]++, item.endTime - (
      /* istanbul ignore next */
      (cov_1pr92c2cpo().b[39][0]++, item.startTime) ||
      /* istanbul ignore next */
      (cov_1pr92c2cpo().b[39][1]++, 0)));
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[168]++;
      statsRef.current.totalProcessed++;
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[169]++;
      statsRef.current.totalProcessingTime += processingTime;
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[170]++;
      statsRef.current.averageProcessingTime = statsRef.current.totalProcessingTime / statsRef.current.totalProcessed;
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[171]++;
      processingConfig.itemCompleteCallback?.(item);
    } catch (error) {
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[172]++;
      item.status = 'failed';
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[173]++;
      item.endTime = Date.now();
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[174]++;
      item.error = (0, _errorHandling.classifyTryonError)(error);
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[175]++;
      statsRef.current.totalFailed++;
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[176]++;
      (0, _errorHandling.logAndClassifyError)(error, {
        operation: item.operation,
        fileName: item.file.name,
        itemId: item.id
      });
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[177]++;
      processingConfig.errorCallback?.(item, item.error);
    } finally {
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[178]++;
      activeRef.current.delete(item.id);
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[179]++;
      updateQueueState();
      // Process next items in queue
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[180]++;
      processNextInQueue();
    }
  }, [processingConfig, updateQueueState]));
  const processNextInQueue =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[181]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[43]++;
    const pendingItems =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[182]++, queueRef.current.filter(item => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[44]++;
      cov_1pr92c2cpo().s[183]++;
      return item.status === 'pending';
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[45]++;
      const priorityOrder =
      /* istanbul ignore next */
      (cov_1pr92c2cpo().s[184]++, {
        high: 3,
        normal: 2,
        low: 1
      });
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[185]++;
      return priorityOrder[b.priority] - priorityOrder[a.priority];
    }));
    const availableSlots =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[186]++, processingConfig.maxConcurrent - activeRef.current.size);
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[187]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[188]++, 0); i < Math.min(availableSlots, pendingItems.length); i++) {
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[189]++;
      processQueueItem(pendingItems[i]);
    }
  }, [processingConfig.maxConcurrent, processQueueItem]));
  const addToQueue =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[190]++, (0, _react.useCallback)((operation, file, options, priority =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[40][0]++, 'normal')) => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[46]++;
    const item =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[191]++, {
      id: generateId(),
      operation,
      file,
      options,
      priority,
      status: 'pending',
      progress: 0
    });
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[192]++;
    queueRef.current.push(item);
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[193]++;
    updateQueueState();
    // Start processing if under capacity
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[194]++;
    if (activeRef.current.size < processingConfig.maxConcurrent) {
      /* istanbul ignore next */
      cov_1pr92c2cpo().b[41][0]++;
      cov_1pr92c2cpo().s[195]++;
      processNextInQueue();
    } else
    /* istanbul ignore next */
    {
      cov_1pr92c2cpo().b[41][1]++;
    }
    cov_1pr92c2cpo().s[196]++;
    return item.id;
  }, [generateId, processingConfig.maxConcurrent, updateQueueState, processNextInQueue]));
  const removeFromQueue =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[197]++, (0, _react.useCallback)(itemId => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[47]++;
    const index =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[198]++, queueRef.current.findIndex(item => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[48]++;
      cov_1pr92c2cpo().s[199]++;
      return item.id === itemId;
    }));
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[200]++;
    if (index === -1) {
      /* istanbul ignore next */
      cov_1pr92c2cpo().b[42][0]++;
      cov_1pr92c2cpo().s[201]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1pr92c2cpo().b[42][1]++;
    }
    const item =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[202]++, queueRef.current[index]);
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[203]++;
    if (item.status === 'processing') {
      /* istanbul ignore next */
      cov_1pr92c2cpo().b[43][0]++;
      cov_1pr92c2cpo().s[204]++;
      // Cannot remove active items
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1pr92c2cpo().b[43][1]++;
    }
    cov_1pr92c2cpo().s[205]++;
    queueRef.current.splice(index, 1);
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[206]++;
    updateQueueState();
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[207]++;
    return true;
  }, [updateQueueState]));
  const clearQueue =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[208]++, (0, _react.useCallback)((includeActive =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().b[44][0]++, false)) => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[49]++;
    cov_1pr92c2cpo().s[209]++;
    if (includeActive) {
      /* istanbul ignore next */
      cov_1pr92c2cpo().b[45][0]++;
      cov_1pr92c2cpo().s[210]++;
      queueRef.current = [];
      /* istanbul ignore next */
      cov_1pr92c2cpo().s[211]++;
      activeRef.current.clear();
    } else {
      /* istanbul ignore next */
      cov_1pr92c2cpo().b[45][1]++;
      cov_1pr92c2cpo().s[212]++;
      queueRef.current = queueRef.current.filter(item => {
        /* istanbul ignore next */
        cov_1pr92c2cpo().f[50]++;
        cov_1pr92c2cpo().s[213]++;
        return item.status === 'processing';
      });
    }
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[214]++;
    updateQueueState();
  }, [updateQueueState]));
  const pauseQueue =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[215]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[51]++;
  } // Implementation would pause processing new items
  // For now, just stop processing new items
  , []));
  const resumeQueue =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[216]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[52]++;
    cov_1pr92c2cpo().s[217]++;
    processNextInQueue();
  }, [processNextInQueue]));
  const getStats =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[218]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[53]++;
    cov_1pr92c2cpo().s[219]++;
    return {
      ...statsRef.current
    };
  }, []));
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[220]++;
  return {
    queueState,
    addToQueue,
    removeFromQueue,
    clearQueue,
    pauseQueue,
    resumeQueue,
    getStats,
    processingConfig
  };
}
function useProcessingStats() {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[54]++;
  cov_1pr92c2cpo().s[221]++;
  return (0, _reactquery.useQuery)({
    queryKey: imageProcessingKeys.stats(),
    queryFn: async () => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[55]++;
      cov_1pr92c2cpo().s[222]++;
      // This would typically fetch from a backend or local storage
      return {
        totalProcessed: 0,
        totalFailed: 0,
        averageProcessingTime: 0,
        totalProcessingTime: 0,
        peakMemoryUsage: 0,
        cacheHitRate: 0
      };
    },
    staleTime: 30 * 1000,
    gcTime: 2 * 60 * 1000 // 2 minutes
  });
}
function useImageProcessingCache() {
  /* istanbul ignore next */
  cov_1pr92c2cpo().f[56]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[223]++, (0, _reactquery.useQueryClient)());
  const clearCache =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[224]++, (0, _react.useCallback)(pattern => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[57]++;
    cov_1pr92c2cpo().s[225]++;
    if (pattern) {
      /* istanbul ignore next */
      cov_1pr92c2cpo().b[46][0]++;
      cov_1pr92c2cpo().s[226]++;
      queryClient.invalidateQueries({
        predicate: query => {
          /* istanbul ignore next */
          cov_1pr92c2cpo().f[58]++;
          cov_1pr92c2cpo().s[227]++;
          return query.queryKey.toString().includes(pattern);
        }
      });
    } else {
      /* istanbul ignore next */
      cov_1pr92c2cpo().b[46][1]++;
      cov_1pr92c2cpo().s[228]++;
      queryClient.invalidateQueries({
        queryKey: imageProcessingKeys.all
      });
    }
  }, [queryClient]));
  const getCacheStats =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[229]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[59]++;
    const cache =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[230]++, queryClient.getQueryCache());
    const queries =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[231]++, cache.findAll({
      queryKey: imageProcessingKeys.all
    }));
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[232]++;
    return {
      totalQueries: queries.length,
      activeQueries: queries.filter(q => {
        /* istanbul ignore next */
        cov_1pr92c2cpo().f[60]++;
        cov_1pr92c2cpo().s[233]++;
        return q.isActive();
      }).length,
      stalequeries: queries.filter(q => {
        /* istanbul ignore next */
        cov_1pr92c2cpo().f[61]++;
        cov_1pr92c2cpo().s[234]++;
        return q.isStale();
      }).length,
      invalidQueries: queries.filter(q => {
        /* istanbul ignore next */
        cov_1pr92c2cpo().f[62]++;
        cov_1pr92c2cpo().s[235]++;
        return /* istanbul ignore next */(cov_1pr92c2cpo().b[47][0]++, q.isStale()) &&
        /* istanbul ignore next */
        (cov_1pr92c2cpo().b[47][1]++, q.getObserversCount() === 0);
      }).length
    };
  }, [queryClient]));
  const preloadMetadata =
  /* istanbul ignore next */
  (cov_1pr92c2cpo().s[236]++, (0, _react.useCallback)(async files => {
    /* istanbul ignore next */
    cov_1pr92c2cpo().f[63]++;
    const promises =
    /* istanbul ignore next */
    (cov_1pr92c2cpo().s[237]++, files.map(file => {
      /* istanbul ignore next */
      cov_1pr92c2cpo().f[64]++;
      cov_1pr92c2cpo().s[238]++;
      return queryClient.prefetchQuery({
        queryKey: imageProcessingKeys.metadata(`${file.name}_${file.lastModified}`),
        queryFn: () => {
          /* istanbul ignore next */
          cov_1pr92c2cpo().f[65]++;
          cov_1pr92c2cpo().s[239]++;
          return (0, _imageProcessing.extractImageMetadata)(file);
        }
      });
    }));
    /* istanbul ignore next */
    cov_1pr92c2cpo().s[240]++;
    await Promise.allSettled(promises);
  }, [queryClient]));
  /* istanbul ignore next */
  cov_1pr92c2cpo().s[241]++;
  return {
    clearCache,
    getCacheStats,
    preloadMetadata
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,