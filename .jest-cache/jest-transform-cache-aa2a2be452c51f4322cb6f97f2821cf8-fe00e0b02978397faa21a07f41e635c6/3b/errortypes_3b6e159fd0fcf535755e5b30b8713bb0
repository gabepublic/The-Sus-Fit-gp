7f6b76ff99e170e04b2bfa21b0e11e87
// Business Layer Error Types
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    createApiError: function() {
        return createApiError;
    },
    createBusinessLayerError: function() {
        return createBusinessLayerError;
    },
    createNetworkError: function() {
        return createNetworkError;
    },
    createTimeoutError: function() {
        return createTimeoutError;
    },
    createValidationError: function() {
        return createValidationError;
    }
});
const createBusinessLayerError = (message, code, details)=>({
        name: 'BusinessLayerError',
        message,
        code,
        details,
        timestamp: new Date().toISOString()
    });
const createApiError = (message, status, endpoint, method, requestData)=>({
        ...createBusinessLayerError(message, `API_ERROR_${status}`),
        name: 'ApiError',
        status,
        endpoint,
        method,
        requestData
    });
const createValidationError = (message, field, value, constraint)=>({
        ...createBusinessLayerError(message, 'VALIDATION_ERROR'),
        name: 'ValidationError',
        field,
        value,
        constraint
    });
const createNetworkError = (message, isRetryable = true)=>({
        ...createBusinessLayerError(message, 'NETWORK_ERROR'),
        name: 'NetworkError',
        isNetworkError: true,
        isRetryable
    });
const createTimeoutError = (message, duration)=>({
        ...createBusinessLayerError(message, 'TIMEOUT_ERROR'),
        name: 'TimeoutError',
        isTimeout: true,
        duration
    });

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsc3RyZWV0ZXIvV2Vic3Rvcm1Qcm9qZWN0cy92aWJlLWNvZGluZy90aG9zZS1wZW9wbGUvVGhlLVN1cy1GaXQtZ3Avc3JjL2J1c2luZXNzLWxheWVyL3R5cGVzL2Vycm9yLnR5cGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEJ1c2luZXNzIExheWVyIEVycm9yIFR5cGVzXG5cbmV4cG9ydCBpbnRlcmZhY2UgQnVzaW5lc3NMYXllckVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb2RlPzogc3RyaW5nO1xuICBzdGF0dXM/OiBudW1iZXI7XG4gIGRldGFpbHM/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPjtcbiAgdGltZXN0YW1wPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwaUVycm9yIGV4dGVuZHMgQnVzaW5lc3NMYXllckVycm9yIHtcbiAgZW5kcG9pbnQ/OiBzdHJpbmc7XG4gIG1ldGhvZD86IHN0cmluZztcbiAgcmVxdWVzdERhdGE/OiB1bmtub3duO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFZhbGlkYXRpb25FcnJvciBleHRlbmRzIEJ1c2luZXNzTGF5ZXJFcnJvciB7XG4gIGZpZWxkPzogc3RyaW5nO1xuICB2YWx1ZT86IHVua25vd247XG4gIGNvbnN0cmFpbnQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTmV0d29ya0Vycm9yIGV4dGVuZHMgQnVzaW5lc3NMYXllckVycm9yIHtcbiAgaXNOZXR3b3JrRXJyb3I6IHRydWU7XG4gIGlzUmV0cnlhYmxlPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUaW1lb3V0RXJyb3IgZXh0ZW5kcyBCdXNpbmVzc0xheWVyRXJyb3Ige1xuICBpc1RpbWVvdXQ6IHRydWU7XG4gIGR1cmF0aW9uPzogbnVtYmVyO1xufVxuXG4vLyBFcnJvciBmYWN0b3J5IGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IGNyZWF0ZUJ1c2luZXNzTGF5ZXJFcnJvciA9IChcbiAgbWVzc2FnZTogc3RyaW5nLFxuICBjb2RlPzogc3RyaW5nLFxuICBkZXRhaWxzPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj5cbik6IEJ1c2luZXNzTGF5ZXJFcnJvciA9PiAoe1xuICBuYW1lOiAnQnVzaW5lc3NMYXllckVycm9yJyxcbiAgbWVzc2FnZSxcbiAgY29kZSxcbiAgZGV0YWlscyxcbiAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG59KTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUFwaUVycm9yID0gKFxuICBtZXNzYWdlOiBzdHJpbmcsXG4gIHN0YXR1czogbnVtYmVyLFxuICBlbmRwb2ludD86IHN0cmluZyxcbiAgbWV0aG9kPzogc3RyaW5nLFxuICByZXF1ZXN0RGF0YT86IHVua25vd25cbik6IEFwaUVycm9yID0+ICh7XG4gIC4uLmNyZWF0ZUJ1c2luZXNzTGF5ZXJFcnJvcihtZXNzYWdlLCBgQVBJX0VSUk9SXyR7c3RhdHVzfWApLFxuICBuYW1lOiAnQXBpRXJyb3InLFxuICBzdGF0dXMsXG4gIGVuZHBvaW50LFxuICBtZXRob2QsXG4gIHJlcXVlc3REYXRhLFxufSk7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVWYWxpZGF0aW9uRXJyb3IgPSAoXG4gIG1lc3NhZ2U6IHN0cmluZyxcbiAgZmllbGQ/OiBzdHJpbmcsXG4gIHZhbHVlPzogdW5rbm93bixcbiAgY29uc3RyYWludD86IHN0cmluZ1xuKTogVmFsaWRhdGlvbkVycm9yID0+ICh7XG4gIC4uLmNyZWF0ZUJ1c2luZXNzTGF5ZXJFcnJvcihtZXNzYWdlLCAnVkFMSURBVElPTl9FUlJPUicpLFxuICBuYW1lOiAnVmFsaWRhdGlvbkVycm9yJyxcbiAgZmllbGQsXG4gIHZhbHVlLFxuICBjb25zdHJhaW50LFxufSk7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVOZXR3b3JrRXJyb3IgPSAoXG4gIG1lc3NhZ2U6IHN0cmluZyxcbiAgaXNSZXRyeWFibGUgPSB0cnVlXG4pOiBOZXR3b3JrRXJyb3IgPT4gKHtcbiAgLi4uY3JlYXRlQnVzaW5lc3NMYXllckVycm9yKG1lc3NhZ2UsICdORVRXT1JLX0VSUk9SJyksXG4gIG5hbWU6ICdOZXR3b3JrRXJyb3InLFxuICBpc05ldHdvcmtFcnJvcjogdHJ1ZSxcbiAgaXNSZXRyeWFibGUsXG59KTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZVRpbWVvdXRFcnJvciA9IChcbiAgbWVzc2FnZTogc3RyaW5nLFxuICBkdXJhdGlvbj86IG51bWJlclxuKTogVGltZW91dEVycm9yID0+ICh7XG4gIC4uLmNyZWF0ZUJ1c2luZXNzTGF5ZXJFcnJvcihtZXNzYWdlLCAnVElNRU9VVF9FUlJPUicpLFxuICBuYW1lOiAnVGltZW91dEVycm9yJyxcbiAgaXNUaW1lb3V0OiB0cnVlLFxuICBkdXJhdGlvbixcbn0pOyJdLCJuYW1lcyI6WyJjcmVhdGVBcGlFcnJvciIsImNyZWF0ZUJ1c2luZXNzTGF5ZXJFcnJvciIsImNyZWF0ZU5ldHdvcmtFcnJvciIsImNyZWF0ZVRpbWVvdXRFcnJvciIsImNyZWF0ZVZhbGlkYXRpb25FcnJvciIsIm1lc3NhZ2UiLCJjb2RlIiwiZGV0YWlscyIsIm5hbWUiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJzdGF0dXMiLCJlbmRwb2ludCIsIm1ldGhvZCIsInJlcXVlc3REYXRhIiwiZmllbGQiLCJ2YWx1ZSIsImNvbnN0cmFpbnQiLCJpc1JldHJ5YWJsZSIsImlzTmV0d29ya0Vycm9yIiwiZHVyYXRpb24iLCJpc1RpbWVvdXQiXSwibWFwcGluZ3MiOiJBQUFBLDZCQUE2Qjs7Ozs7Ozs7Ozs7O0lBNENoQkEsY0FBYztlQUFkQTs7SUFaQUMsd0JBQXdCO2VBQXhCQTs7SUF3Q0FDLGtCQUFrQjtlQUFsQkE7O0lBVUFDLGtCQUFrQjtlQUFsQkE7O0lBdkJBQyxxQkFBcUI7ZUFBckJBOzs7QUEzQk4sTUFBTUgsMkJBQTJCLENBQ3RDSSxTQUNBQyxNQUNBQyxVQUN3QixDQUFBO1FBQ3hCQyxNQUFNO1FBQ05IO1FBQ0FDO1FBQ0FDO1FBQ0FFLFdBQVcsSUFBSUMsT0FBT0MsV0FBVztJQUNuQyxDQUFBO0FBRU8sTUFBTVgsaUJBQWlCLENBQzVCSyxTQUNBTyxRQUNBQyxVQUNBQyxRQUNBQyxjQUNjLENBQUE7UUFDZCxHQUFHZCx5QkFBeUJJLFNBQVMsQ0FBQyxVQUFVLEVBQUVPLFFBQVEsQ0FBQztRQUMzREosTUFBTTtRQUNOSTtRQUNBQztRQUNBQztRQUNBQztJQUNGLENBQUE7QUFFTyxNQUFNWCx3QkFBd0IsQ0FDbkNDLFNBQ0FXLE9BQ0FDLE9BQ0FDLGFBQ3FCLENBQUE7UUFDckIsR0FBR2pCLHlCQUF5QkksU0FBUyxtQkFBbUI7UUFDeERHLE1BQU07UUFDTlE7UUFDQUM7UUFDQUM7SUFDRixDQUFBO0FBRU8sTUFBTWhCLHFCQUFxQixDQUNoQ0csU0FDQWMsY0FBYyxJQUFJLEdBQ0EsQ0FBQTtRQUNsQixHQUFHbEIseUJBQXlCSSxTQUFTLGdCQUFnQjtRQUNyREcsTUFBTTtRQUNOWSxnQkFBZ0I7UUFDaEJEO0lBQ0YsQ0FBQTtBQUVPLE1BQU1oQixxQkFBcUIsQ0FDaENFLFNBQ0FnQixXQUNrQixDQUFBO1FBQ2xCLEdBQUdwQix5QkFBeUJJLFNBQVMsZ0JBQWdCO1FBQ3JERyxNQUFNO1FBQ05jLFdBQVc7UUFDWEQ7SUFDRixDQUFBIn0=