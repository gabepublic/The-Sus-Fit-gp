{"version":3,"names":["cov_8ub1bmdch","actualCoverage","s","useEnhancedPageState","f","useLegacyPageInterface","usePageComponentState","DEFAULT_MIGRATION_OPTIONS","enableNewFeatures","showDeprecationWarnings","process","env","NODE_ENV","onStateChange","enhancedErrorHandling","enableProgressTracking","options","b","finalOptions","showToast","_index","useToast","deprecationWarnings","_react","useRef","workflow","_useTryonWorkflow","useTryonWorkflow","timeoutMs","compressionLimitKB","debug","addDeprecationWarning","useCallback","method","suggestion","warning","current","includes","push","console","warn","legacyState","isCapturing","leftCardImage","rightCardImage","showPolaroid","userImageFile","apparelImageFile","generatedImage","hasError","useEffect","legacyHandlers","handleUserFileUpload","file","handleApparelFileUpload","handleLeftCardImageUpload","imageUrl","handleRightCardImageUpload","handleCameraButtonClick","startGeneration","handleGenerationStart","log","handleGenerationComplete","handleClosePolaroid","closePolaroid","handleRetryGeneration","retryGeneration","migrateToNewInterface","import","hookUsage","stateMapping","actionMapping","enhancedFeatures","migration","isUsingNewArchitecture","newWorkflowState","workflowState","compatibility","migrationOptions","enhanced","progress","WorkflowState","GENERATING","canGenerate","canRetry","validationErrors","reset","resetWorkflow","clearError","getMigrationGuide"],"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/hooks/useBackwardCompatibility.ts"],"sourcesContent":["'use client';\n\n// Backward Compatibility Layer\n// Maintains compatibility with existing page component state structure while providing migration path\n\nimport { useCallback, useEffect, useRef } from 'react';\nimport { useTryonWorkflow, type WorkflowState } from './useTryonWorkflow';\nimport { useToast } from './index';\n\n/**\n * Legacy page component state interface (exact match from page.tsx)\n */\nexport interface LegacyPageState {\n  isCapturing: boolean;\n  leftCardImage: string | null;\n  rightCardImage: string | null;\n  showPolaroid: boolean;\n  userImageFile: File | null;\n  apparelImageFile: File | null;\n  generatedImage: string | null;\n  hasError: boolean;\n}\n\n/**\n * Legacy page component handlers interface (exact match from page.tsx)\n */\nexport interface LegacyPageHandlers {\n  handleUserFileUpload: (file: File) => void;\n  handleApparelFileUpload: (file: File) => void;\n  handleLeftCardImageUpload: (imageUrl: string) => Promise<void>;\n  handleRightCardImageUpload: (imageUrl: string) => Promise<void>;\n  handleCameraButtonClick: () => Promise<void>;\n  handleGenerationStart: () => void;\n  handleGenerationComplete: (imageUrl: string) => void;\n  handleClosePolaroid: () => void;\n  handleRetryGeneration: () => void;\n}\n\n/**\n * Migration options for gradual transition\n */\nexport interface MigrationOptions {\n  /** Enable new features while maintaining legacy interface */\n  enableNewFeatures?: boolean;\n  /** Show deprecation warnings in development */\n  showDeprecationWarnings?: boolean;\n  /** Custom migration callbacks */\n  onStateChange?: (newState: any, legacyState: LegacyPageState) => void;\n  /** Enable enhanced error handling */\n  enhancedErrorHandling?: boolean;\n  /** Enable progress tracking */\n  enableProgressTracking?: boolean;\n}\n\n/**\n * Default migration options\n */\nconst DEFAULT_MIGRATION_OPTIONS: Required<MigrationOptions> = {\n  enableNewFeatures: true,\n  showDeprecationWarnings: process.env.NODE_ENV === 'development',\n  onStateChange: () => {},\n  enhancedErrorHandling: true,\n  enableProgressTracking: true\n};\n\n/**\n * Backward compatibility hook that provides exact legacy interface\n * while internally using the new bridge layer architecture\n */\nexport function useLegacyPageInterface(\n  options: MigrationOptions = {}\n): LegacyPageState & LegacyPageHandlers & {\n  // Additional helper methods for migration\n  migration: {\n    isUsingNewArchitecture: boolean;\n    newWorkflowState: WorkflowState;\n    deprecationWarnings: string[];\n    migrateToNewInterface: () => any;\n  };\n} {\n  const finalOptions = { ...DEFAULT_MIGRATION_OPTIONS, ...options };\n  const { showToast } = useToast();\n  const deprecationWarnings = useRef<string[]>([]);\n\n  // Use the new workflow internally\n  const workflow = useTryonWorkflow(\n    {\n      timeoutMs: 60000,\n      compressionLimitKB: 2048,\n      debug: process.env.NODE_ENV === 'development'\n    },\n    showToast\n  );\n\n  // Track deprecation warnings\n  const addDeprecationWarning = useCallback((method: string, suggestion: string) => {\n    if (finalOptions.showDeprecationWarnings) {\n      const warning = `DEPRECATED: ${method} - ${suggestion}`;\n      if (!deprecationWarnings.current.includes(warning)) {\n        deprecationWarnings.current.push(warning);\n        console.warn(warning);\n      }\n    }\n  }, [finalOptions.showDeprecationWarnings]);\n\n  // Map new state to legacy state format (exact field mapping)\n  const legacyState: LegacyPageState = {\n    isCapturing: workflow.isCapturing,\n    leftCardImage: workflow.leftCardImage,\n    rightCardImage: workflow.rightCardImage,\n    showPolaroid: workflow.showPolaroid,\n    userImageFile: workflow.userImageFile,\n    apparelImageFile: workflow.apparelImageFile,\n    generatedImage: workflow.generatedImage,\n    hasError: workflow.hasError\n  };\n\n  // Notify about state changes for migration assistance\n  useEffect(() => {\n    if (finalOptions.onStateChange) {\n      finalOptions.onStateChange(workflow, legacyState);\n    }\n  }, [workflow, legacyState, finalOptions]);\n\n  // Legacy handlers that map to new workflow methods\n  const legacyHandlers: LegacyPageHandlers = {\n    handleUserFileUpload: useCallback((file: File) => {\n      if (finalOptions.showDeprecationWarnings) {\n        addDeprecationWarning(\n          'handleUserFileUpload', \n          'Consider using useBridgeLayer().actions.uploadUserImage for enhanced validation and progress tracking'\n        );\n      }\n      workflow.handleUserFileUpload(file);\n    }, [workflow, addDeprecationWarning, finalOptions.showDeprecationWarnings]),\n\n    handleApparelFileUpload: useCallback((file: File) => {\n      if (finalOptions.showDeprecationWarnings) {\n        addDeprecationWarning(\n          'handleApparelFileUpload', \n          'Consider using useBridgeLayer().actions.uploadApparelImage for enhanced validation and progress tracking'\n        );\n      }\n      workflow.handleApparelFileUpload(file);\n    }, [workflow, addDeprecationWarning, finalOptions.showDeprecationWarnings]),\n\n    handleLeftCardImageUpload: useCallback(async (imageUrl: string) => {\n      if (finalOptions.showDeprecationWarnings) {\n        addDeprecationWarning(\n          'handleLeftCardImageUpload', \n          'Consider using useBridgeLayer().actions.uploadUserImage with File objects for better type safety'\n        );\n      }\n      await workflow.handleLeftCardImageUpload(imageUrl);\n    }, [workflow, addDeprecationWarning, finalOptions.showDeprecationWarnings]),\n\n    handleRightCardImageUpload: useCallback(async (imageUrl: string) => {\n      if (finalOptions.showDeprecationWarnings) {\n        addDeprecationWarning(\n          'handleRightCardImageUpload', \n          'Consider using useBridgeLayer().actions.uploadApparelImage with File objects for better type safety'\n        );\n      }\n      await workflow.handleRightCardImageUpload(imageUrl);\n    }, [workflow, addDeprecationWarning, finalOptions.showDeprecationWarnings]),\n\n    handleCameraButtonClick: useCallback(async () => {\n      if (finalOptions.showDeprecationWarnings) {\n        addDeprecationWarning(\n          'handleCameraButtonClick', \n          'Consider using useBridgeLayer().actions.generate for enhanced error handling and progress tracking'\n        );\n      }\n      await workflow.startGeneration();\n    }, [workflow, addDeprecationWarning, finalOptions.showDeprecationWarnings]),\n\n    handleGenerationStart: useCallback(() => {\n      if (finalOptions.showDeprecationWarnings) {\n        addDeprecationWarning(\n          'handleGenerationStart', \n          'This callback is now handled automatically by the workflow. Consider using onGenerationStart in BridgeLayerConfig'\n        );\n      }\n      console.log('Generation started (legacy handler)');\n    }, [addDeprecationWarning, finalOptions.showDeprecationWarnings]),\n\n    handleGenerationComplete: useCallback((imageUrl: string) => {\n      if (finalOptions.showDeprecationWarnings) {\n        addDeprecationWarning(\n          'handleGenerationComplete', \n          'This callback is now handled automatically by the workflow. Consider using onGenerationComplete in BridgeLayerConfig'\n        );\n      }\n      console.log('Generation complete (legacy handler):', imageUrl);\n    }, [addDeprecationWarning, finalOptions.showDeprecationWarnings]),\n\n    handleClosePolaroid: useCallback(() => {\n      if (finalOptions.showDeprecationWarnings) {\n        addDeprecationWarning(\n          'handleClosePolaroid', \n          'Consider using useBridgeLayer().actions.hideResult for consistent naming'\n        );\n      }\n      workflow.closePolaroid();\n    }, [workflow, addDeprecationWarning, finalOptions.showDeprecationWarnings]),\n\n    handleRetryGeneration: useCallback(() => {\n      if (finalOptions.showDeprecationWarnings) {\n        addDeprecationWarning(\n          'handleRetryGeneration', \n          'Consider using useBridgeLayer().actions.retry for enhanced retry logic'\n        );\n      }\n      workflow.retryGeneration();\n    }, [workflow, addDeprecationWarning, finalOptions.showDeprecationWarnings])\n  };\n\n  // Migration helper\n  const migrateToNewInterface = useCallback(() => {\n    return {\n      // Import suggestion\n      import: 'import { useBridgeLayer } from \"@/hooks/useBridgeLayer\"',\n      \n      // New hook usage\n      hookUsage: `\nconst { state, actions } = useBridgeLayer({\n  workflow: { timeoutMs: 60000, compressionLimitKB: 2048 },\n  ui: { showDetailedProgress: true },\n  callbacks: {\n    onGenerationStart: () => console.log('Generation started'),\n    onGenerationComplete: (imageUrl) => console.log('Generation complete:', imageUrl)\n  }\n});`,\n      \n      // State mapping\n      stateMapping: {\n        'isCapturing': 'state.isLoading',\n        'leftCardImage': 'state.userImagePreview',\n        'rightCardImage': 'state.apparelImagePreview', \n        'showPolaroid': 'state.showResult',\n        'userImageFile': 'advanced.workflow.userImageFile',\n        'apparelImageFile': 'advanced.workflow.apparelImageFile',\n        'generatedImage': 'state.resultImage',\n        'hasError': '!!state.errorMessage'\n      },\n      \n      // Action mapping\n      actionMapping: {\n        'handleUserFileUpload': 'actions.uploadUserImage',\n        'handleApparelFileUpload': 'actions.uploadApparelImage',\n        'handleCameraButtonClick': 'actions.generate',\n        'handleClosePolaroid': 'actions.hideResult',\n        'handleRetryGeneration': 'actions.retry'\n      },\n      \n      // Enhanced features available\n      enhancedFeatures: [\n        'Built-in validation with user-friendly error messages',\n        'Progress tracking with detailed status updates',\n        'Automatic retry logic with exponential backoff',\n        'Thumbnail generation and preview management',\n        'Drag and drop support',\n        'Image processing and optimization',\n        'Download and share functionality',\n        'Type-safe interfaces throughout'\n      ]\n    };\n  }, []);\n\n  return {\n    // Legacy state (exact match)\n    ...legacyState,\n    \n    // Legacy handlers (exact match)\n    ...legacyHandlers,\n    \n    // Migration assistance\n    migration: {\n      isUsingNewArchitecture: true,\n      newWorkflowState: workflow.workflowState,\n      deprecationWarnings: deprecationWarnings.current,\n      migrateToNewInterface\n    }\n  };\n}\n\n/**\n * Direct replacement hook for existing page.tsx\n * Drop-in replacement that requires no code changes\n */\nexport function usePageComponentState() {\n  const compatibility = useLegacyPageInterface();\n  \n  // Return only the exact state and handlers that page.tsx expects\n  return {\n    isCapturing: compatibility.isCapturing,\n    leftCardImage: compatibility.leftCardImage,\n    rightCardImage: compatibility.rightCardImage,\n    showPolaroid: compatibility.showPolaroid,\n    userImageFile: compatibility.userImageFile,\n    apparelImageFile: compatibility.apparelImageFile,\n    generatedImage: compatibility.generatedImage,\n    hasError: compatibility.hasError,\n    \n    handleUserFileUpload: compatibility.handleUserFileUpload,\n    handleApparelFileUpload: compatibility.handleApparelFileUpload,\n    handleLeftCardImageUpload: compatibility.handleLeftCardImageUpload,\n    handleRightCardImageUpload: compatibility.handleRightCardImageUpload,\n    handleCameraButtonClick: compatibility.handleCameraButtonClick,\n    handleGenerationStart: compatibility.handleGenerationStart,\n    handleGenerationComplete: compatibility.handleGenerationComplete,\n    handleClosePolaroid: compatibility.handleClosePolaroid,\n    handleRetryGeneration: compatibility.handleRetryGeneration\n  };\n}\n\n/**\n * Enhanced hook that adds new features while maintaining compatibility\n */\nexport function useEnhancedPageState(migrationOptions: MigrationOptions = {}) {\n  const compatibility = useLegacyPageInterface(migrationOptions);\n  \n  return {\n    // All legacy functionality\n    ...compatibility,\n    \n    // Additional enhanced features\n    enhanced: {\n      progress: compatibility.migration.newWorkflowState === WorkflowState.GENERATING ? \n        (compatibility as any).progress || 0 : 0,\n      \n      canGenerate: !compatibility.isCapturing && \n                   !!compatibility.userImageFile && \n                   !!compatibility.apparelImageFile,\n      \n      canRetry: compatibility.hasError,\n      \n      validationErrors: [] as string[], // Could be expanded to show validation details\n      \n      // New enhanced actions\n      reset: () => (compatibility as any).resetWorkflow?.(),\n      clearError: () => (compatibility as any).clearError?.(),\n      \n      // Migration helper\n      getMigrationGuide: compatibility.migration.migrateToNewInterface\n    }\n  };\n}"],"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","ignoreList":[]}