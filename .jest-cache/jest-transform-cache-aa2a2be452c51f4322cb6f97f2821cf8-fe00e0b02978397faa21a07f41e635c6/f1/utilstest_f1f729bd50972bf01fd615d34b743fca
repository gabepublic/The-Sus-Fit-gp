bc837ee509209e39e5a17bc556360b0a
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _utils = require("../../src/test/utils");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Test component
const TestComponent = ({ children })=>/*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
        "data-testid": "test-component",
        children: children
    });
describe('test/utils', ()=>{
    it('custom render function works correctly', ()=>{
        (0, _utils.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestComponent, {
            children: "Test content"
        }));
        expect(_utils.screen.getByTestId('test-component')).toBeInTheDocument();
        expect(_utils.screen.getByText('Test content')).toBeInTheDocument();
    });
    it('screen is properly exported', ()=>{
        (0, _utils.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestComponent, {
            children: "Screen test"
        }));
        expect(_utils.screen.getByText('Screen test')).toBeInTheDocument();
    });
    it('render accepts options parameter', ()=>{
        const { container } = (0, _utils.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestComponent, {
            children: "Options test"
        }));
        expect(container).toBeInTheDocument();
        expect(_utils.screen.getByText('Options test')).toBeInTheDocument();
    });
    it('works with complex components', ()=>{
        const ComplexComponent = ()=>/*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("h1", {
                        children: "Title"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                        children: "Description"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        children: "Click me"
                    })
                ]
            });
        (0, _utils.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(ComplexComponent, {}));
        expect(_utils.screen.getByRole('heading')).toHaveTextContent('Title');
        expect(_utils.screen.getByText('Description')).toBeInTheDocument();
        expect(_utils.screen.getByRole('button')).toHaveTextContent('Click me');
    });
    it('maintains React Testing Library functionality', ()=>{
        (0, _utils.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestComponent, {
            children: "RTL test"
        }));
        // Test that all RTL queries work
        expect(_utils.screen.getByTestId('test-component')).toBeInTheDocument();
        expect(_utils.screen.getByText('RTL test')).toBeInTheDocument();
        expect(_utils.screen.queryByText('Non-existent')).not.toBeInTheDocument();
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsc3RyZWV0ZXIvV2Vic3Rvcm1Qcm9qZWN0cy92aWJlLWNvZGluZy90aG9zZS1wZW9wbGUvVGhlLVN1cy1GaXQtZ3AvX190ZXN0c19fL3Rlc3QvdXRpbHMudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4gfSBmcm9tICdAL3Rlc3QvdXRpbHMnXG5cbi8vIFRlc3QgY29tcG9uZW50XG5jb25zdCBUZXN0Q29tcG9uZW50ID0gKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0pID0+IChcbiAgPGRpdiBkYXRhLXRlc3RpZD1cInRlc3QtY29tcG9uZW50XCI+e2NoaWxkcmVufTwvZGl2PlxuKVxuXG5kZXNjcmliZSgndGVzdC91dGlscycsICgpID0+IHtcbiAgaXQoJ2N1c3RvbSByZW5kZXIgZnVuY3Rpb24gd29ya3MgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIHJlbmRlcig8VGVzdENvbXBvbmVudD5UZXN0IGNvbnRlbnQ8L1Rlc3RDb21wb25lbnQ+KVxuICAgIFxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXN0SWQoJ3Rlc3QtY29tcG9uZW50JykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnVGVzdCBjb250ZW50JykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnc2NyZWVuIGlzIHByb3Blcmx5IGV4cG9ydGVkJywgKCkgPT4ge1xuICAgIHJlbmRlcig8VGVzdENvbXBvbmVudD5TY3JlZW4gdGVzdDwvVGVzdENvbXBvbmVudD4pXG4gICAgXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1NjcmVlbiB0ZXN0JykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgncmVuZGVyIGFjY2VwdHMgb3B0aW9ucyBwYXJhbWV0ZXInLCAoKSA9PiB7XG4gICAgY29uc3QgeyBjb250YWluZXIgfSA9IHJlbmRlcihcbiAgICAgIDxUZXN0Q29tcG9uZW50Pk9wdGlvbnMgdGVzdDwvVGVzdENvbXBvbmVudD5cbiAgICApXG4gICAgXG4gICAgZXhwZWN0KGNvbnRhaW5lcikudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdPcHRpb25zIHRlc3QnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCd3b3JrcyB3aXRoIGNvbXBsZXggY29tcG9uZW50cycsICgpID0+IHtcbiAgICBjb25zdCBDb21wbGV4Q29tcG9uZW50ID0gKCkgPT4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGgxPlRpdGxlPC9oMT5cbiAgICAgICAgPHA+RGVzY3JpcHRpb248L3A+XG4gICAgICAgIDxidXR0b24+Q2xpY2sgbWU8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgICBcbiAgICByZW5kZXIoPENvbXBsZXhDb21wb25lbnQgLz4pXG4gICAgXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVJvbGUoJ2hlYWRpbmcnKSkudG9IYXZlVGV4dENvbnRlbnQoJ1RpdGxlJylcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnRGVzY3JpcHRpb24nKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlSb2xlKCdidXR0b24nKSkudG9IYXZlVGV4dENvbnRlbnQoJ0NsaWNrIG1lJylcbiAgfSlcblxuICBpdCgnbWFpbnRhaW5zIFJlYWN0IFRlc3RpbmcgTGlicmFyeSBmdW5jdGlvbmFsaXR5JywgKCkgPT4ge1xuICAgIHJlbmRlcig8VGVzdENvbXBvbmVudD5SVEwgdGVzdDwvVGVzdENvbXBvbmVudD4pXG4gICAgXG4gICAgLy8gVGVzdCB0aGF0IGFsbCBSVEwgcXVlcmllcyB3b3JrXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRlc3RJZCgndGVzdC1jb21wb25lbnQnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdSVEwgdGVzdCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5xdWVyeUJ5VGV4dCgnTm9uLWV4aXN0ZW50JykpLm5vdC50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG59KSAiXSwibmFtZXMiOlsiVGVzdENvbXBvbmVudCIsImNoaWxkcmVuIiwiZGl2IiwiZGF0YS10ZXN0aWQiLCJkZXNjcmliZSIsIml0IiwicmVuZGVyIiwiZXhwZWN0Iiwic2NyZWVuIiwiZ2V0QnlUZXN0SWQiLCJ0b0JlSW5UaGVEb2N1bWVudCIsImdldEJ5VGV4dCIsImNvbnRhaW5lciIsIkNvbXBsZXhDb21wb25lbnQiLCJoMSIsInAiLCJidXR0b24iLCJnZXRCeVJvbGUiLCJ0b0hhdmVUZXh0Q29udGVudCIsInF1ZXJ5QnlUZXh0Iiwibm90Il0sIm1hcHBpbmdzIjoiOzs7Ozs4REFBa0I7dUJBQ2E7Ozs7OztBQUUvQixpQkFBaUI7QUFDakIsTUFBTUEsZ0JBQWdCLENBQUMsRUFBRUMsUUFBUSxFQUFpQyxpQkFDaEUscUJBQUNDO1FBQUlDLGVBQVk7a0JBQWtCRjs7QUFHckNHLFNBQVMsY0FBYztJQUNyQkMsR0FBRywwQ0FBMEM7UUFDM0NDLElBQUFBLGFBQU0sZ0JBQUMscUJBQUNOO3NCQUFjOztRQUV0Qk8sT0FBT0MsYUFBTSxDQUFDQyxXQUFXLENBQUMsbUJBQW1CQyxpQkFBaUI7UUFDOURILE9BQU9DLGFBQU0sQ0FBQ0csU0FBUyxDQUFDLGlCQUFpQkQsaUJBQWlCO0lBQzVEO0lBRUFMLEdBQUcsK0JBQStCO1FBQ2hDQyxJQUFBQSxhQUFNLGdCQUFDLHFCQUFDTjtzQkFBYzs7UUFFdEJPLE9BQU9DLGFBQU0sQ0FBQ0csU0FBUyxDQUFDLGdCQUFnQkQsaUJBQWlCO0lBQzNEO0lBRUFMLEdBQUcsb0NBQW9DO1FBQ3JDLE1BQU0sRUFBRU8sU0FBUyxFQUFFLEdBQUdOLElBQUFBLGFBQU0sZ0JBQzFCLHFCQUFDTjtzQkFBYzs7UUFHakJPLE9BQU9LLFdBQVdGLGlCQUFpQjtRQUNuQ0gsT0FBT0MsYUFBTSxDQUFDRyxTQUFTLENBQUMsaUJBQWlCRCxpQkFBaUI7SUFDNUQ7SUFFQUwsR0FBRyxpQ0FBaUM7UUFDbEMsTUFBTVEsbUJBQW1CLGtCQUN2QixzQkFBQ1g7O2tDQUNDLHFCQUFDWTtrQ0FBRzs7a0NBQ0oscUJBQUNDO2tDQUFFOztrQ0FDSCxxQkFBQ0M7a0NBQU87Ozs7UUFJWlYsSUFBQUEsYUFBTSxnQkFBQyxxQkFBQ087UUFFUk4sT0FBT0MsYUFBTSxDQUFDUyxTQUFTLENBQUMsWUFBWUMsaUJBQWlCLENBQUM7UUFDdERYLE9BQU9DLGFBQU0sQ0FBQ0csU0FBUyxDQUFDLGdCQUFnQkQsaUJBQWlCO1FBQ3pESCxPQUFPQyxhQUFNLENBQUNTLFNBQVMsQ0FBQyxXQUFXQyxpQkFBaUIsQ0FBQztJQUN2RDtJQUVBYixHQUFHLGlEQUFpRDtRQUNsREMsSUFBQUEsYUFBTSxnQkFBQyxxQkFBQ047c0JBQWM7O1FBRXRCLGlDQUFpQztRQUNqQ08sT0FBT0MsYUFBTSxDQUFDQyxXQUFXLENBQUMsbUJBQW1CQyxpQkFBaUI7UUFDOURILE9BQU9DLGFBQU0sQ0FBQ0csU0FBUyxDQUFDLGFBQWFELGlCQUFpQjtRQUN0REgsT0FBT0MsYUFBTSxDQUFDVyxXQUFXLENBQUMsaUJBQWlCQyxHQUFHLENBQUNWLGlCQUFpQjtJQUNsRTtBQUNGIn0=