270bbabca8816b8f134ddf20af59cf98
// Try-On History Storage Service
// Implements persistent storage for try-on history using localStorage with compression
"use strict";

/* istanbul ignore next */
function cov_1kfju6r5a3() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/services/tryonHistoryService.ts";
  var hash = "720962dd696c5c3d6815694427ec0b4d6b4d1ad9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/services/tryonHistoryService.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "6": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 21,
          column: 60
        }
      },
      "7": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "8": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "9": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 76
        }
      },
      "10": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 48,
          column: 38
        }
      },
      "11": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "12": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "13": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 21
        }
      },
      "14": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "15": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 82
        }
      },
      "16": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 61,
          column: 49
        }
      },
      "17": {
        start: {
          line: 63,
          column: 36
        },
        end: {
          line: 63,
          column: 120
        }
      },
      "18": {
        start: {
          line: 65,
          column: 32
        },
        end: {
          line: 65,
          column: 112
        }
      },
      "19": {
        start: {
          line: 67,
          column: 34
        },
        end: {
          line: 67,
          column: 146
        }
      },
      "20": {
        start: {
          line: 67,
          column: 83
        },
        end: {
          line: 67,
          column: 144
        }
      },
      "21": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "22": {
        start: {
          line: 79,
          column: 72
        },
        end: {
          line: 79,
          column: 112
        }
      },
      "23": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "24": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 91
        }
      },
      "25": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 25
        }
      },
      "26": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 20
        }
      },
      "27": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 97,
          column: 10
        }
      },
      "28": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 33
        }
      },
      "29": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "30": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "31": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 65
        }
      },
      "32": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "33": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 87
        }
      },
      "34": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "35": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 79
        }
      },
      "36": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "37": {
        start: {
          line: 118,
          column: 33
        },
        end: {
          line: 122,
          column: 17
        }
      },
      "38": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 86
        }
      },
      "39": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 74
        }
      },
      "40": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 69
        }
      },
      "41": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "42": {
        start: {
          line: 134,
          column: 32
        },
        end: {
          line: 134,
          column: 74
        }
      },
      "43": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 62
        }
      },
      "44": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 68
        }
      },
      "45": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 22
        }
      },
      "46": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "47": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 80
        }
      },
      "48": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 147,
          column: 92
        }
      },
      "49": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 60
        }
      },
      "50": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 82
        }
      },
      "51": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 76
        }
      },
      "52": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 62
        }
      },
      "53": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "54": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 27
        }
      },
      "55": {
        start: {
          line: 162,
          column: 23
        },
        end: {
          line: 164,
          column: 89
        }
      },
      "56": {
        start: {
          line: 164,
          column: 23
        },
        end: {
          line: 164,
          column: 88
        }
      },
      "57": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 55
        }
      },
      "58": {
        start: {
          line: 170,
          column: 23
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "59": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "60": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 66
        }
      },
      "61": {
        start: {
          line: 175,
          column: 48
        },
        end: {
          line: 175,
          column: 64
        }
      },
      "62": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "63": {
        start: {
          line: 179,
          column: 30
        },
        end: {
          line: 179,
          column: 67
        }
      },
      "64": {
        start: {
          line: 180,
          column: 28
        },
        end: {
          line: 180,
          column: 63
        }
      },
      "65": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 184,
          column: 15
        }
      },
      "66": {
        start: {
          line: 182,
          column: 34
        },
        end: {
          line: 182,
          column: 59
        }
      },
      "67": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 70
        }
      },
      "68": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "69": {
        start: {
          line: 188,
          column: 31
        },
        end: {
          line: 188,
          column: 63
        }
      },
      "70": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 164
        }
      },
      "71": {
        start: {
          line: 189,
          column: 48
        },
        end: {
          line: 189,
          column: 162
        }
      },
      "72": {
        start: {
          line: 189,
          column: 72
        },
        end: {
          line: 189,
          column: 110
        }
      },
      "73": {
        start: {
          line: 192,
          column: 23
        },
        end: {
          line: 192,
          column: 52
        }
      },
      "74": {
        start: {
          line: 193,
          column: 30
        },
        end: {
          line: 193,
          column: 61
        }
      },
      "75": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 218,
          column: 11
        }
      },
      "76": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "77": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 198,
          column: 51
        }
      },
      "78": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 199,
          column: 51
        }
      },
      "79": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 200,
          column: 26
        }
      },
      "80": {
        start: {
          line: 202,
          column: 20
        },
        end: {
          line: 202,
          column: 51
        }
      },
      "81": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 51
        }
      },
      "82": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 26
        }
      },
      "83": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 206,
          column: 50
        }
      },
      "84": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 50
        }
      },
      "85": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 26
        }
      },
      "86": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 210,
          column: 41
        }
      },
      "87": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 211,
          column: 41
        }
      },
      "88": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "89": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 70
        }
      },
      "90": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 70
        }
      },
      "91": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 24
        }
      },
      "92": {
        start: {
          line: 224,
          column: 22
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "93": {
        start: {
          line: 237,
          column: 32
        },
        end: {
          line: 237,
          column: 78
        }
      },
      "94": {
        start: {
          line: 239,
          column: 26
        },
        end: {
          line: 239,
          column: 61
        }
      },
      "95": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "96": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 131
        }
      },
      "97": {
        start: {
          line: 244,
          column: 22
        },
        end: {
          line: 244,
          column: 45
        }
      },
      "98": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 38
        }
      },
      "99": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 55
        }
      },
      "100": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 34
        }
      },
      "101": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 31
        }
      },
      "102": {
        start: {
          line: 255,
          column: 27
        },
        end: {
          line: 255,
          column: 50
        }
      },
      "103": {
        start: {
          line: 256,
          column: 32
        },
        end: {
          line: 256,
          column: 78
        }
      },
      "104": {
        start: {
          line: 258,
          column: 21
        },
        end: {
          line: 258,
          column: 38
        }
      },
      "105": {
        start: {
          line: 259,
          column: 25
        },
        end: {
          line: 259,
          column: 47
        }
      },
      "106": {
        start: {
          line: 260,
          column: 27
        },
        end: {
          line: 260,
          column: 42
        }
      },
      "107": {
        start: {
          line: 261,
          column: 25
        },
        end: {
          line: 261,
          column: 46
        }
      },
      "108": {
        start: {
          line: 262,
          column: 33
        },
        end: {
          line: 262,
          column: 76
        }
      },
      "109": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 270,
          column: 10
        }
      },
      "110": {
        start: {
          line: 275,
          column: 24
        },
        end: {
          line: 275,
          column: 47
        }
      },
      "111": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 62
        }
      },
      "112": {
        start: {
          line: 276,
          column: 37
        },
        end: {
          line: 276,
          column: 52
        }
      },
      "113": {
        start: {
          line: 281,
          column: 24
        },
        end: {
          line: 281,
          column: 47
        }
      },
      "114": {
        start: {
          line: 282,
          column: 27
        },
        end: {
          line: 282,
          column: 70
        }
      },
      "115": {
        start: {
          line: 282,
          column: 54
        },
        end: {
          line: 282,
          column: 69
        }
      },
      "116": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "117": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 69
        }
      },
      "118": {
        start: {
          line: 287,
          column: 29
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "119": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 43
        }
      },
      "120": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 34
        }
      },
      "121": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 28
        }
      },
      "122": {
        start: {
          line: 301,
          column: 24
        },
        end: {
          line: 301,
          column: 47
        }
      },
      "123": {
        start: {
          line: 302,
          column: 32
        },
        end: {
          line: 302,
          column: 72
        }
      },
      "124": {
        start: {
          line: 302,
          column: 56
        },
        end: {
          line: 302,
          column: 71
        }
      },
      "125": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "126": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 25
        }
      },
      "127": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 42
        }
      },
      "128": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 20
        }
      },
      "129": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "130": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 75
        }
      },
      "131": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 24
        }
      },
      "132": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 61
        }
      },
      "133": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 25
        }
      },
      "134": {
        start: {
          line: 323,
          column: 24
        },
        end: {
          line: 323,
          column: 47
        }
      },
      "135": {
        start: {
          line: 324,
          column: 26
        },
        end: {
          line: 324,
          column: 27
        }
      },
      "136": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 327,
          column: 11
        }
      },
      "137": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 53
        }
      },
      "138": {
        start: {
          line: 328,
          column: 27
        },
        end: {
          line: 328,
          column: 71
        }
      },
      "139": {
        start: {
          line: 328,
          column: 48
        },
        end: {
          line: 328,
          column: 63
        }
      },
      "140": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 334,
          column: 10
        }
      },
      "141": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 39
        }
      },
      "142": {
        start: {
          line: 344,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "143": {
        start: {
          line: 346,
          column: 33
        },
        end: {
          line: 346,
          column: 133
        }
      },
      "144": {
        start: {
          line: 346,
          column: 57
        },
        end: {
          line: 346,
          column: 132
        }
      },
      "145": {
        start: {
          line: 348,
          column: 36
        },
        end: {
          line: 348,
          column: 59
        }
      },
      "146": {
        start: {
          line: 349,
          column: 32
        },
        end: {
          line: 349,
          column: 79
        }
      },
      "147": {
        start: {
          line: 349,
          column: 69
        },
        end: {
          line: 349,
          column: 77
        }
      },
      "148": {
        start: {
          line: 351,
          column: 31
        },
        end: {
          line: 351,
          column: 87
        }
      },
      "149": {
        start: {
          line: 351,
          column: 60
        },
        end: {
          line: 351,
          column: 86
        }
      },
      "150": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 354,
          column: 13
        }
      },
      "151": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 353,
          column: 25
        }
      },
      "152": {
        start: {
          line: 356,
          column: 34
        },
        end: {
          line: 359,
          column: 13
        }
      },
      "153": {
        start: {
          line: 360,
          column: 35
        },
        end: {
          line: 360,
          column: 77
        }
      },
      "154": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 45
        }
      },
      "155": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 37
        }
      },
      "156": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 62
        }
      },
      "157": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 365,
          column: 53
        }
      },
      "158": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 374,
          column: 10
        }
      },
      "159": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "160": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 83
        }
      },
      "161": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 59
        }
      },
      "162": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 386,
          column: 10
        }
      },
      "163": {
        start: {
          line: 389,
          column: 30
        },
        end: {
          line: 389,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 16
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 14,
            column: 38
          }
        },
        loc: {
          start: {
            line: 14,
            column: 48
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 17,
            column: 28
          }
        },
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "generateHistoryId",
        decl: {
          start: {
            line: 42,
            column: 13
          },
          end: {
            line: 42,
            column: 30
          }
        },
        loc: {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 42
      },
      "4": {
        name: "calculateEntrySize",
        decl: {
          start: {
            line: 47,
            column: 13
          },
          end: {
            line: 47,
            column: 31
          }
        },
        loc: {
          start: {
            line: 47,
            column: 39
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 47
      },
      "5": {
        name: "compressHistoryEntry",
        decl: {
          start: {
            line: 55,
            column: 19
          },
          end: {
            line: 55,
            column: 39
          }
        },
        loc: {
          start: {
            line: 55,
            column: 55
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 55
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 67,
            column: 76
          },
          end: {
            line: 67,
            column: 77
          }
        },
        loc: {
          start: {
            line: 67,
            column: 83
          },
          end: {
            line: 67,
            column: 144
          }
        },
        line: 67
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 65
          },
          end: {
            line: 79,
            column: 66
          }
        },
        loc: {
          start: {
            line: 79,
            column: 72
          },
          end: {
            line: 79,
            column: 112
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 93
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        },
        loc: {
          start: {
            line: 102,
            column: 26
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 102
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        loc: {
          start: {
            line: 132,
            column: 25
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 132
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 143,
            column: 6
          },
          end: {
            line: 143,
            column: 7
          }
        },
        loc: {
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 143
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 157,
            column: 6
          },
          end: {
            line: 157,
            column: 7
          }
        },
        loc: {
          start: {
            line: 157,
            column: 38
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 157
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 164,
            column: 15
          },
          end: {
            line: 164,
            column: 16
          }
        },
        loc: {
          start: {
            line: 164,
            column: 23
          },
          end: {
            line: 164,
            column: 88
          }
        },
        line: 164
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 169,
            column: 6
          },
          end: {
            line: 169,
            column: 7
          }
        },
        loc: {
          start: {
            line: 169,
            column: 50
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 169
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 175,
            column: 39
          },
          end: {
            line: 175,
            column: 40
          }
        },
        loc: {
          start: {
            line: 175,
            column: 48
          },
          end: {
            line: 175,
            column: 64
          }
        },
        line: 175
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 181,
            column: 39
          },
          end: {
            line: 181,
            column: 40
          }
        },
        loc: {
          start: {
            line: 181,
            column: 48
          },
          end: {
            line: 184,
            column: 13
          }
        },
        line: 181
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 189,
            column: 39
          },
          end: {
            line: 189,
            column: 40
          }
        },
        loc: {
          start: {
            line: 189,
            column: 48
          },
          end: {
            line: 189,
            column: 162
          }
        },
        line: 189
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 189,
            column: 65
          },
          end: {
            line: 189,
            column: 66
          }
        },
        loc: {
          start: {
            line: 189,
            column: 72
          },
          end: {
            line: 189,
            column: 110
          }
        },
        line: 189
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 194,
            column: 22
          },
          end: {
            line: 194,
            column: 23
          }
        },
        loc: {
          start: {
            line: 194,
            column: 30
          },
          end: {
            line: 218,
            column: 9
          }
        },
        line: 194
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 223,
            column: 6
          },
          end: {
            line: 223,
            column: 7
          }
        },
        loc: {
          start: {
            line: 223,
            column: 30
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 223
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 254,
            column: 6
          },
          end: {
            line: 254,
            column: 7
          }
        },
        loc: {
          start: {
            line: 254,
            column: 37
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 254
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 274,
            column: 6
          },
          end: {
            line: 274,
            column: 7
          }
        },
        loc: {
          start: {
            line: 274,
            column: 25
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 274
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 276,
            column: 28
          },
          end: {
            line: 276,
            column: 29
          }
        },
        loc: {
          start: {
            line: 276,
            column: 37
          },
          end: {
            line: 276,
            column: 52
          }
        },
        line: 276
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 280,
            column: 6
          },
          end: {
            line: 280,
            column: 7
          }
        },
        loc: {
          start: {
            line: 280,
            column: 37
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 280
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 282,
            column: 45
          },
          end: {
            line: 282,
            column: 46
          }
        },
        loc: {
          start: {
            line: 282,
            column: 54
          },
          end: {
            line: 282,
            column: 69
          }
        },
        line: 282
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 300,
            column: 6
          },
          end: {
            line: 300,
            column: 7
          }
        },
        loc: {
          start: {
            line: 300,
            column: 28
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 300
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 302,
            column: 47
          },
          end: {
            line: 302,
            column: 48
          }
        },
        loc: {
          start: {
            line: 302,
            column: 56
          },
          end: {
            line: 302,
            column: 71
          }
        },
        line: 302
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 311,
            column: 6
          },
          end: {
            line: 311,
            column: 7
          }
        },
        loc: {
          start: {
            line: 311,
            column: 23
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 311
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 322,
            column: 6
          },
          end: {
            line: 322,
            column: 7
          }
        },
        loc: {
          start: {
            line: 322,
            column: 30
          },
          end: {
            line: 335,
            column: 5
          }
        },
        line: 322
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 325,
            column: 24
          },
          end: {
            line: 325,
            column: 25
          }
        },
        loc: {
          start: {
            line: 325,
            column: 33
          },
          end: {
            line: 327,
            column: 9
          }
        },
        line: 325
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 328,
            column: 39
          },
          end: {
            line: 328,
            column: 40
          }
        },
        loc: {
          start: {
            line: 328,
            column: 48
          },
          end: {
            line: 328,
            column: 63
          }
        },
        line: 328
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 338,
            column: 6
          },
          end: {
            line: 338,
            column: 7
          }
        },
        loc: {
          start: {
            line: 338,
            column: 28
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 338
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 343,
            column: 6
          },
          end: {
            line: 343,
            column: 7
          }
        },
        loc: {
          start: {
            line: 343,
            column: 35
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 343
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 346,
            column: 48
          },
          end: {
            line: 346,
            column: 49
          }
        },
        loc: {
          start: {
            line: 346,
            column: 57
          },
          end: {
            line: 346,
            column: 132
          }
        },
        line: 346
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 349,
            column: 60
          },
          end: {
            line: 349,
            column: 61
          }
        },
        loc: {
          start: {
            line: 349,
            column: 69
          },
          end: {
            line: 349,
            column: 77
          }
        },
        line: 349
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 351,
            column: 51
          },
          end: {
            line: 351,
            column: 52
          }
        },
        loc: {
          start: {
            line: 351,
            column: 60
          },
          end: {
            line: 351,
            column: 86
          }
        },
        line: 351
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 370,
            column: 6
          },
          end: {
            line: 370,
            column: 7
          }
        },
        loc: {
          start: {
            line: 370,
            column: 30
          },
          end: {
            line: 380,
            column: 5
          }
        },
        line: 370
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 383,
            column: 6
          },
          end: {
            line: 383,
            column: 7
          }
        },
        loc: {
          start: {
            line: 383,
            column: 18
          },
          end: {
            line: 387,
            column: 5
          }
        },
        line: 383
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "1": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "2": {
        loc: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 93,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 93,
            column: 25
          },
          end: {
            line: 93,
            column: 27
          }
        }],
        line: 93
      },
      "3": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "4": {
        loc: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 45
          }
        }, {
          start: {
            line: 105,
            column: 49
          },
          end: {
            line: 105,
            column: 69
          }
        }],
        line: 105
      },
      "5": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "6": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "7": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "8": {
        loc: {
          start: {
            line: 135,
            column: 19
          },
          end: {
            line: 135,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 33
          },
          end: {
            line: 135,
            column: 56
          }
        }, {
          start: {
            line: 135,
            column: 59
          },
          end: {
            line: 135,
            column: 61
          }
        }],
        line: 135
      },
      "9": {
        loc: {
          start: {
            line: 147,
            column: 40
          },
          end: {
            line: 147,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 40
          },
          end: {
            line: 147,
            column: 83
          }
        }, {
          start: {
            line: 147,
            column: 87
          },
          end: {
            line: 147,
            column: 91
          }
        }],
        line: 147
      },
      "10": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "11": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 36
          }
        }, {
          start: {
            line: 158,
            column: 40
          },
          end: {
            line: 158,
            column: 80
          }
        }],
        line: 158
      },
      "12": {
        loc: {
          start: {
            line: 169,
            column: 36
          },
          end: {
            line: 169,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 169,
            column: 46
          },
          end: {
            line: 169,
            column: 48
          }
        }],
        line: 169
      },
      "13": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "14": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "15": {
        loc: {
          start: {
            line: 183,
            column: 23
          },
          end: {
            line: 183,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 23
          },
          end: {
            line: 183,
            column: 45
          }
        }, {
          start: {
            line: 183,
            column: 49
          },
          end: {
            line: 183,
            column: 69
          }
        }],
        line: 183
      },
      "16": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "17": {
        loc: {
          start: {
            line: 189,
            column: 48
          },
          end: {
            line: 189,
            column: 162
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 48
          },
          end: {
            line: 189,
            column: 111
          }
        }, {
          start: {
            line: 189,
            column: 115
          },
          end: {
            line: 189,
            column: 162
          }
        }],
        line: 189
      },
      "18": {
        loc: {
          start: {
            line: 192,
            column: 23
          },
          end: {
            line: 192,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 23
          },
          end: {
            line: 192,
            column: 37
          }
        }, {
          start: {
            line: 192,
            column: 41
          },
          end: {
            line: 192,
            column: 52
          }
        }],
        line: 192
      },
      "19": {
        loc: {
          start: {
            line: 193,
            column: 30
          },
          end: {
            line: 193,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 30
          },
          end: {
            line: 193,
            column: 51
          }
        }, {
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 193,
            column: 61
          }
        }],
        line: 193
      },
      "20": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 212,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 200,
            column: 26
          }
        }, {
          start: {
            line: 201,
            column: 16
          },
          end: {
            line: 204,
            column: 26
          }
        }, {
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 208,
            column: 26
          }
        }, {
          start: {
            line: 209,
            column: 16
          },
          end: {
            line: 211,
            column: 41
          }
        }],
        line: 196
      },
      "21": {
        loc: {
          start: {
            line: 202,
            column: 29
          },
          end: {
            line: 202,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 29
          },
          end: {
            line: 202,
            column: 45
          }
        }, {
          start: {
            line: 202,
            column: 49
          },
          end: {
            line: 202,
            column: 50
          }
        }],
        line: 202
      },
      "22": {
        loc: {
          start: {
            line: 203,
            column: 29
          },
          end: {
            line: 203,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 29
          },
          end: {
            line: 203,
            column: 45
          }
        }, {
          start: {
            line: 203,
            column: 49
          },
          end: {
            line: 203,
            column: 50
          }
        }],
        line: 203
      },
      "23": {
        loc: {
          start: {
            line: 206,
            column: 29
          },
          end: {
            line: 206,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 206,
            column: 44
          },
          end: {
            line: 206,
            column: 45
          }
        }, {
          start: {
            line: 206,
            column: 48
          },
          end: {
            line: 206,
            column: 49
          }
        }],
        line: 206
      },
      "24": {
        loc: {
          start: {
            line: 207,
            column: 29
          },
          end: {
            line: 207,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 207,
            column: 44
          },
          end: {
            line: 207,
            column: 45
          }
        }, {
          start: {
            line: 207,
            column: 48
          },
          end: {
            line: 207,
            column: 49
          }
        }],
        line: 207
      },
      "25": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        }, {
          start: {
            line: 215,
            column: 19
          },
          end: {
            line: 217,
            column: 13
          }
        }],
        line: 213
      },
      "26": {
        loc: {
          start: {
            line: 214,
            column: 23
          },
          end: {
            line: 214,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 41
          },
          end: {
            line: 214,
            column: 43
          }
        }, {
          start: {
            line: 214,
            column: 46
          },
          end: {
            line: 214,
            column: 69
          }
        }],
        line: 214
      },
      "27": {
        loc: {
          start: {
            line: 214,
            column: 46
          },
          end: {
            line: 214,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 64
          },
          end: {
            line: 214,
            column: 65
          }
        }, {
          start: {
            line: 214,
            column: 68
          },
          end: {
            line: 214,
            column: 69
          }
        }],
        line: 214
      },
      "28": {
        loc: {
          start: {
            line: 216,
            column: 23
          },
          end: {
            line: 216,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 216,
            column: 41
          },
          end: {
            line: 216,
            column: 43
          }
        }, {
          start: {
            line: 216,
            column: 46
          },
          end: {
            line: 216,
            column: 69
          }
        }],
        line: 216
      },
      "29": {
        loc: {
          start: {
            line: 216,
            column: 46
          },
          end: {
            line: 216,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 216,
            column: 64
          },
          end: {
            line: 216,
            column: 65
          }
        }, {
          start: {
            line: 216,
            column: 68
          },
          end: {
            line: 216,
            column: 69
          }
        }],
        line: 216
      },
      "30": {
        loc: {
          start: {
            line: 232,
            column: 18
          },
          end: {
            line: 232,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 18
          },
          end: {
            line: 232,
            column: 30
          }
        }, {
          start: {
            line: 232,
            column: 34
          },
          end: {
            line: 232,
            column: 36
          }
        }],
        line: 232
      },
      "31": {
        loc: {
          start: {
            line: 233,
            column: 24
          },
          end: {
            line: 233,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 24
          },
          end: {
            line: 233,
            column: 42
          }
        }, {
          start: {
            line: 233,
            column: 46
          },
          end: {
            line: 233,
            column: 51
          }
        }],
        line: 233
      },
      "32": {
        loc: {
          start: {
            line: 234,
            column: 19
          },
          end: {
            line: 234,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 19
          },
          end: {
            line: 234,
            column: 32
          }
        }, {
          start: {
            line: 234,
            column: 36
          },
          end: {
            line: 234,
            column: 38
          }
        }],
        line: 234
      },
      "33": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "34": {
        loc: {
          start: {
            line: 254,
            column: 23
          },
          end: {
            line: 254,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 254,
            column: 33
          },
          end: {
            line: 254,
            column: 35
          }
        }],
        line: 254
      },
      "35": {
        loc: {
          start: {
            line: 258,
            column: 21
          },
          end: {
            line: 258,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 21
          },
          end: {
            line: 258,
            column: 33
          }
        }, {
          start: {
            line: 258,
            column: 37
          },
          end: {
            line: 258,
            column: 38
          }
        }],
        line: 258
      },
      "36": {
        loc: {
          start: {
            line: 259,
            column: 25
          },
          end: {
            line: 259,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 25
          },
          end: {
            line: 259,
            column: 41
          }
        }, {
          start: {
            line: 259,
            column: 45
          },
          end: {
            line: 259,
            column: 47
          }
        }],
        line: 259
      },
      "37": {
        loc: {
          start: {
            line: 276,
            column: 15
          },
          end: {
            line: 276,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 15
          },
          end: {
            line: 276,
            column: 53
          }
        }, {
          start: {
            line: 276,
            column: 57
          },
          end: {
            line: 276,
            column: 61
          }
        }],
        line: 276
      },
      "38": {
        loc: {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "39": {
        loc: {
          start: {
            line: 292,
            column: 23
          },
          end: {
            line: 292,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 23
          },
          end: {
            line: 292,
            column: 40
          }
        }, {
          start: {
            line: 292,
            column: 44
          },
          end: {
            line: 292,
            column: 73
          }
        }],
        line: 292
      },
      "40": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "41": {
        loc: {
          start: {
            line: 346,
            column: 57
          },
          end: {
            line: 346,
            column: 132
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 57
          },
          end: {
            line: 346,
            column: 65
          }
        }, {
          start: {
            line: 346,
            column: 69
          },
          end: {
            line: 346,
            column: 89
          }
        }, {
          start: {
            line: 346,
            column: 93
          },
          end: {
            line: 346,
            column: 109
          }
        }, {
          start: {
            line: 346,
            column: 113
          },
          end: {
            line: 346,
            column: 132
          }
        }],
        line: 346
      },
      "42": {
        loc: {
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 354,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 354,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0, 0, 0],
      "42": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/services/tryonHistoryService.ts"],
      sourcesContent: ["// Try-On History Storage Service\n// Implements persistent storage for try-on history using localStorage with compression\n\nimport { \n  compressBase64, \n  getBase64Size, \n  CompressionFailedError \n} from '../utils/imageProcessing';\nimport type {\n  TryonHistoryEntry,\n  TryonHistoryCollection,\n  TryonHistoryQueryOptions,\n  CreateTryonHistoryEntryOptions,\n  TryonHistoryService,\n  TryonHistoryStorageConfig\n} from '../types/history.types';\n\n/**\n * Default configuration for history storage\n */\nconst DEFAULT_CONFIG: Required<TryonHistoryStorageConfig> = {\n  storageType: 'localStorage',\n  maxEntries: 50,\n  maxEntrySizeKB: 2048, // 2MB per entry\n  compressImages: true,\n  compressionQuality: 0.8,\n  autoCleanup: true,\n  encryptionKey: ''\n};\n\n/**\n * Storage keys for localStorage\n */\nconst STORAGE_KEYS = {\n  ENTRIES: 'susfit_tryon_history_entries',\n  CONFIG: 'susfit_tryon_history_config',\n  METADATA: 'susfit_tryon_history_metadata'\n} as const;\n\n/**\n * Generate a unique ID for history entries\n */\nfunction generateHistoryId(): string {\n  return `tryon_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\n/**\n * Calculate the size of a history entry in KB\n */\nfunction calculateEntrySize(entry: TryonHistoryEntry): number {\n  const json = JSON.stringify(entry);\n  return new Blob([json]).size / 1024;\n}\n\n/**\n * Compress images in a history entry\n */\nasync function compressHistoryEntry(\n  entry: TryonHistoryEntry, \n  config: TryonHistoryStorageConfig\n): Promise<TryonHistoryEntry> {\n  if (!config.compressImages) {\n    return entry;\n  }\n\n  try {\n    const maxSizeKB = config.maxEntrySizeKB! / (2 + entry.apparelImages.length);\n    const quality = config.compressionQuality!;\n\n    // Compress generated image\n    const compressedGenerated = await compressBase64(\n      entry.generatedImage, \n      maxSizeKB, \n      quality\n    );\n\n    // Compress model image\n    const compressedModel = await compressBase64(\n      entry.modelImage, \n      maxSizeKB, \n      quality\n    );\n\n    // Compress apparel images\n    const compressedApparel = await Promise.all(\n      entry.apparelImages.map(img => compressBase64(img, maxSizeKB, quality))\n    );\n\n    return {\n      ...entry,\n      generatedImage: compressedGenerated,\n      modelImage: compressedModel,\n      apparelImages: compressedApparel,\n      metadata: {\n        ...entry.metadata,\n        imageProcessingResults: {\n          ...entry.metadata?.imageProcessingResults,\n          finalImageSizes: {\n            modelImageSize: getBase64Size(compressedModel),\n            apparelImageSizes: compressedApparel.map(img => getBase64Size(img))\n          }\n        }\n      }\n    };\n  } catch (error) {\n    if (error instanceof CompressionFailedError) {\n      console.warn('Failed to compress history entry images, using original', error);\n      return entry;\n    }\n    throw error;\n  }\n}\n\n/**\n * localStorage-based Try-On History Service implementation\n */\nexport class LocalStorageTryonHistoryService implements TryonHistoryService {\n  private config: Required<TryonHistoryStorageConfig>;\n\n  constructor(config: Partial<TryonHistoryStorageConfig> = {}) {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n    this.initializeStorage();\n  }\n\n  /**\n   * Initialize localStorage storage\n   */\n  private initializeStorage(): void {\n    try {\n      // Check if localStorage is available\n      if (typeof window === 'undefined' || !window.localStorage) {\n        throw new Error('localStorage is not available');\n      }\n\n      // Initialize config if not exists\n      if (!localStorage.getItem(STORAGE_KEYS.CONFIG)) {\n        localStorage.setItem(STORAGE_KEYS.CONFIG, JSON.stringify(this.config));\n      }\n\n      // Initialize entries array if not exists\n      if (!localStorage.getItem(STORAGE_KEYS.ENTRIES)) {\n        localStorage.setItem(STORAGE_KEYS.ENTRIES, JSON.stringify([]));\n      }\n\n      // Initialize metadata if not exists\n      if (!localStorage.getItem(STORAGE_KEYS.METADATA)) {\n        const metadata = {\n          version: '1.0.0',\n          createdAt: new Date().toISOString(),\n          lastUpdated: new Date().toISOString()\n        };\n        localStorage.setItem(STORAGE_KEYS.METADATA, JSON.stringify(metadata));\n      }\n    } catch (error) {\n      console.error('Failed to initialize history storage:', error);\n      throw new Error('History storage initialization failed');\n    }\n  }\n\n  /**\n   * Get all stored entries from localStorage\n   */\n  private getStoredEntries(): TryonHistoryEntry[] {\n    try {\n      const entriesJson = localStorage.getItem(STORAGE_KEYS.ENTRIES);\n      return entriesJson ? JSON.parse(entriesJson) : [];\n    } catch (error) {\n      console.error('Failed to parse stored entries:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Save entries to localStorage\n   */\n  private saveEntries(entries: TryonHistoryEntry[]): void {\n    try {\n      localStorage.setItem(STORAGE_KEYS.ENTRIES, JSON.stringify(entries));\n      \n      // Update metadata\n      const metadata = JSON.parse(localStorage.getItem(STORAGE_KEYS.METADATA) || '{}');\n      metadata.lastUpdated = new Date().toISOString();\n      localStorage.setItem(STORAGE_KEYS.METADATA, JSON.stringify(metadata));\n    } catch (error) {\n      console.error('Failed to save entries to localStorage:', error);\n      throw new Error('Failed to save history entries');\n    }\n  }\n\n  /**\n   * Perform cleanup if needed\n   */\n  private performCleanupIfNeeded(entries: TryonHistoryEntry[]): TryonHistoryEntry[] {\n    if (!this.config.autoCleanup || entries.length <= this.config.maxEntries) {\n      return entries;\n    }\n\n    // Sort by timestamp and keep only the most recent entries\n    const sorted = [...entries].sort((a, b) => \n      new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n    );\n    \n    return sorted.slice(0, this.config.maxEntries);\n  }\n\n  /**\n   * Filter and sort entries based on query options\n   */\n  private filterAndSortEntries(\n    entries: TryonHistoryEntry[], \n    options: TryonHistoryQueryOptions = {}\n  ): TryonHistoryEntry[] {\n    let filtered = [...entries];\n\n    // Apply favorites filter\n    if (options.favoritesOnly) {\n      filtered = filtered.filter(entry => entry.isFavorite);\n    }\n\n    // Apply date range filter\n    if (options.dateRange) {\n      const startDate = new Date(options.dateRange.startDate);\n      const endDate = new Date(options.dateRange.endDate);\n      filtered = filtered.filter(entry => {\n        const entryDate = new Date(entry.timestamp);\n        return entryDate >= startDate && entryDate <= endDate;\n      });\n    }\n\n    // Apply search term filter\n    if (options.searchTerm) {\n      const searchTerm = options.searchTerm.toLowerCase();\n      filtered = filtered.filter(entry => \n        entry.tags?.some(tag => tag.toLowerCase().includes(searchTerm)) ||\n        entry.notes?.toLowerCase().includes(searchTerm)\n      );\n    }\n\n    // Apply sorting\n    const sortBy = options.sortBy || 'timestamp';\n    const sortDirection = options.sortDirection || 'desc';\n    \n    filtered.sort((a, b) => {\n      let aValue: Date | number, bValue: Date | number;\n      \n      switch (sortBy) {\n        case 'timestamp':\n          aValue = new Date(a.timestamp);\n          bValue = new Date(b.timestamp);\n          break;\n        case 'processingTime':\n          aValue = a.processingTime || 0;\n          bValue = b.processingTime || 0;\n          break;\n        case 'isFavorite':\n          aValue = a.isFavorite ? 1 : 0;\n          bValue = b.isFavorite ? 1 : 0;\n          break;\n        default:\n          aValue = a.timestamp;\n          bValue = b.timestamp;\n      }\n      \n      if (sortDirection === 'asc') {\n        return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n      } else {\n        return aValue > bValue ? -1 : aValue < bValue ? 1 : 0;\n      }\n    });\n\n    return filtered;\n  }\n\n  /**\n   * Add a new history entry\n   */\n  async addEntry(options: CreateTryonHistoryEntryOptions): Promise<TryonHistoryEntry> {\n    const entry: TryonHistoryEntry = {\n      id: generateHistoryId(),\n      timestamp: new Date().toISOString(),\n      generatedImage: options.generatedImage,\n      modelImage: options.modelImage,\n      apparelImages: options.apparelImages,\n      processingTime: options.processingTime,\n      metadata: options.metadata,\n      tags: options.tags || [],\n      isFavorite: options.isFavorite || false,\n      notes: options.notes || ''\n    };\n\n    // Compress entry if enabled\n    const compressedEntry = await compressHistoryEntry(entry, this.config);\n\n    // Check entry size\n    const entrySize = calculateEntrySize(compressedEntry);\n    if (entrySize > this.config.maxEntrySizeKB) {\n      throw new Error(\n        `History entry too large: ${entrySize.toFixed(2)}KB exceeds limit of ${this.config.maxEntrySizeKB}KB`\n      );\n    }\n\n    // Get current entries and add the new one\n    let entries = this.getStoredEntries();\n    entries.push(compressedEntry);\n\n    // Perform cleanup if needed\n    entries = this.performCleanupIfNeeded(entries);\n\n    // Save updated entries\n    this.saveEntries(entries);\n\n    return compressedEntry;\n  }\n\n  /**\n   * Get history entries with filtering and pagination\n   */\n  async getEntries(options: TryonHistoryQueryOptions = {}): Promise<TryonHistoryCollection> {\n    const allEntries = this.getStoredEntries();\n    const filteredEntries = this.filterAndSortEntries(allEntries, options);\n\n    // Apply pagination\n    const page = options.page || 0;\n    const pageSize = options.pageSize || 20;\n    const startIndex = page * pageSize;\n    const endIndex = startIndex + pageSize;\n    const paginatedEntries = filteredEntries.slice(startIndex, endIndex);\n\n    return {\n      entries: paginatedEntries,\n      totalCount: filteredEntries.length,\n      currentPage: page,\n      pageSize,\n      hasMore: endIndex < filteredEntries.length,\n      lastUpdated: new Date().toISOString()\n    };\n  }\n\n  /**\n   * Get a specific history entry by ID\n   */\n  async getEntry(id: string): Promise<TryonHistoryEntry | null> {\n    const entries = this.getStoredEntries();\n    return entries.find(entry => entry.id === id) || null;\n  }\n\n  /**\n   * Update an existing history entry\n   */\n  async updateEntry(id: string, updates: Partial<TryonHistoryEntry>): Promise<TryonHistoryEntry> {\n    const entries = this.getStoredEntries();\n    const entryIndex = entries.findIndex(entry => entry.id === id);\n    \n    if (entryIndex === -1) {\n      throw new Error(`History entry with ID ${id} not found`);\n    }\n\n    // Apply updates\n    const updatedEntry = { \n      ...entries[entryIndex], \n      ...updates,\n      // Preserve ID and timestamp, update only if explicitly provided\n      id: entries[entryIndex].id,\n      timestamp: updates.timestamp || entries[entryIndex].timestamp\n    };\n\n    entries[entryIndex] = updatedEntry;\n    this.saveEntries(entries);\n\n    return updatedEntry;\n  }\n\n  /**\n   * Delete a history entry\n   */\n  async deleteEntry(id: string): Promise<boolean> {\n    const entries = this.getStoredEntries();\n    const filteredEntries = entries.filter(entry => entry.id !== id);\n    \n    if (filteredEntries.length === entries.length) {\n      return false; // Entry not found\n    }\n\n    this.saveEntries(filteredEntries);\n    return true;\n  }\n\n  /**\n   * Clear all history entries\n   */\n  async clearAll(): Promise<boolean> {\n    try {\n      localStorage.setItem(STORAGE_KEYS.ENTRIES, JSON.stringify([]));\n      return true;\n    } catch (error) {\n      console.error('Failed to clear history:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get storage statistics\n   */\n  async getStorageStats(): Promise<{\n    totalEntries: number;\n    totalSizeKB: number;\n    oldestEntry?: string;\n    newestEntry?: string;\n  }> {\n    const entries = this.getStoredEntries();\n    \n    let totalSizeKB = 0;\n    entries.forEach(entry => {\n      totalSizeKB += calculateEntrySize(entry);\n    });\n\n    const timestamps = entries.map(entry => entry.timestamp).sort();\n    \n    return {\n      totalEntries: entries.length,\n      totalSizeKB,\n      oldestEntry: timestamps[0],\n      newestEntry: timestamps[timestamps.length - 1]\n    };\n  }\n\n  /**\n   * Export history data\n   */\n  async exportHistory(): Promise<TryonHistoryEntry[]> {\n    return this.getStoredEntries();\n  }\n\n  /**\n   * Import history data\n   */\n  async importHistory(entries: TryonHistoryEntry[]): Promise<number> {\n    try {\n      // Validate entries\n      const validEntries = entries.filter(entry => \n        entry.id && entry.generatedImage && entry.modelImage && entry.apparelImages\n      );\n\n      // Get existing entries and merge with imports\n      const existingEntries = this.getStoredEntries();\n      const existingIds = new Set(existingEntries.map(entry => entry.id));\n      \n      // Only import entries that don't already exist\n      const newEntries = validEntries.filter(entry => !existingIds.has(entry.id));\n      \n      if (newEntries.length === 0) {\n        return 0;\n      }\n\n      // Merge and save\n      const mergedEntries = [...existingEntries, ...newEntries];\n      const cleanedEntries = this.performCleanupIfNeeded(mergedEntries);\n      \n      this.saveEntries(cleanedEntries);\n      return newEntries.length;\n    } catch (error) {\n      console.error('Failed to import history:', error);\n      throw new Error('History import failed');\n    }\n  }\n\n  /**\n   * Update service configuration\n   */\n  updateConfig(newConfig: Partial<TryonHistoryStorageConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n    \n    try {\n      localStorage.setItem(STORAGE_KEYS.CONFIG, JSON.stringify(this.config));\n    } catch (error) {\n      console.error('Failed to save config:', error);\n    }\n  }\n\n  /**\n   * Get current configuration\n   */\n  getConfig(): TryonHistoryStorageConfig {\n    return { ...this.config };\n  }\n}\n\n/**\n * Default history service instance\n */\nexport const defaultHistoryService = new LocalStorageTryonHistoryService();"],
      names: ["LocalStorageTryonHistoryService", "defaultHistoryService", "DEFAULT_CONFIG", "storageType", "maxEntries", "maxEntrySizeKB", "compressImages", "compressionQuality", "autoCleanup", "encryptionKey", "STORAGE_KEYS", "ENTRIES", "CONFIG", "METADATA", "generateHistoryId", "Date", "now", "Math", "random", "toString", "substr", "calculateEntrySize", "entry", "json", "JSON", "stringify", "Blob", "size", "compressHistoryEntry", "config", "maxSizeKB", "apparelImages", "length", "quality", "compressedGenerated", "compressBase64", "generatedImage", "compressedModel", "modelImage", "compressedApparel", "Promise", "all", "map", "img", "metadata", "imageProcessingResults", "finalImageSizes", "modelImageSize", "getBase64Size", "apparelImageSizes", "error", "CompressionFailedError", "console", "warn", "constructor", "initializeStorage", "window", "localStorage", "Error", "getItem", "setItem", "version", "createdAt", "toISOString", "lastUpdated", "getStoredEntries", "entriesJson", "parse", "saveEntries", "entries", "performCleanupIfNeeded", "sorted", "sort", "a", "b", "timestamp", "getTime", "slice", "filterAndSortEntries", "options", "filtered", "favoritesOnly", "filter", "isFavorite", "dateRange", "startDate", "endDate", "entryDate", "searchTerm", "toLowerCase", "tags", "some", "tag", "includes", "notes", "sortBy", "sortDirection", "aValue", "bValue", "processingTime", "addEntry", "id", "compressedEntry", "entrySize", "toFixed", "push", "getEntries", "allEntries", "filteredEntries", "page", "pageSize", "startIndex", "endIndex", "paginatedEntries", "totalCount", "currentPage", "hasMore", "getEntry", "find", "updateEntry", "updates", "entryIndex", "findIndex", "updatedEntry", "deleteEntry", "clearAll", "getStorageStats", "totalSizeKB", "forEach", "timestamps", "totalEntries", "oldestEntry", "newestEntry", "exportHistory", "importHistory", "validEntries", "existingEntries", "existingIds", "Set", "newEntries", "has", "mergedEntries", "cleanedEntries", "updateConfig", "newConfig", "getConfig"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "720962dd696c5c3d6815694427ec0b4d6b4d1ad9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kfju6r5a3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kfju6r5a3();
cov_1kfju6r5a3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1kfju6r5a3().f[0]++;
  cov_1kfju6r5a3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1kfju6r5a3().s[3]++;
_export(exports, {
  LocalStorageTryonHistoryService: function () {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[1]++;
    cov_1kfju6r5a3().s[4]++;
    return LocalStorageTryonHistoryService;
  },
  defaultHistoryService: function () {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[2]++;
    cov_1kfju6r5a3().s[5]++;
    return defaultHistoryService;
  }
});
const _imageProcessing =
/* istanbul ignore next */
(cov_1kfju6r5a3().s[6]++, require("../utils/imageProcessing"));
/**
 * Default configuration for history storage
 */
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_1kfju6r5a3().s[7]++, {
  storageType: 'localStorage',
  maxEntries: 50,
  maxEntrySizeKB: 2048,
  compressImages: true,
  compressionQuality: 0.8,
  autoCleanup: true,
  encryptionKey: ''
});
/**
 * Storage keys for localStorage
 */
const STORAGE_KEYS =
/* istanbul ignore next */
(cov_1kfju6r5a3().s[8]++, {
  ENTRIES: 'susfit_tryon_history_entries',
  CONFIG: 'susfit_tryon_history_config',
  METADATA: 'susfit_tryon_history_metadata'
});
/**
 * Generate a unique ID for history entries
 */
function generateHistoryId() {
  /* istanbul ignore next */
  cov_1kfju6r5a3().f[3]++;
  cov_1kfju6r5a3().s[9]++;
  return `tryon_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
}
/**
 * Calculate the size of a history entry in KB
 */
function calculateEntrySize(entry) {
  /* istanbul ignore next */
  cov_1kfju6r5a3().f[4]++;
  const json =
  /* istanbul ignore next */
  (cov_1kfju6r5a3().s[10]++, JSON.stringify(entry));
  /* istanbul ignore next */
  cov_1kfju6r5a3().s[11]++;
  return new Blob([json]).size / 1024;
}
/**
 * Compress images in a history entry
 */
async function compressHistoryEntry(entry, config) {
  /* istanbul ignore next */
  cov_1kfju6r5a3().f[5]++;
  cov_1kfju6r5a3().s[12]++;
  if (!config.compressImages) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().b[0][0]++;
    cov_1kfju6r5a3().s[13]++;
    return entry;
  } else
  /* istanbul ignore next */
  {
    cov_1kfju6r5a3().b[0][1]++;
  }
  cov_1kfju6r5a3().s[14]++;
  try {
    const maxSizeKB =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[15]++, config.maxEntrySizeKB / (2 + entry.apparelImages.length));
    const quality =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[16]++, config.compressionQuality);
    // Compress generated image
    const compressedGenerated =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[17]++, await (0, _imageProcessing.compressBase64)(entry.generatedImage, maxSizeKB, quality));
    // Compress model image
    const compressedModel =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[18]++, await (0, _imageProcessing.compressBase64)(entry.modelImage, maxSizeKB, quality));
    // Compress apparel images
    const compressedApparel =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[19]++, await Promise.all(entry.apparelImages.map(img => {
      /* istanbul ignore next */
      cov_1kfju6r5a3().f[6]++;
      cov_1kfju6r5a3().s[20]++;
      return (0, _imageProcessing.compressBase64)(img, maxSizeKB, quality);
    })));
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[21]++;
    return {
      ...entry,
      generatedImage: compressedGenerated,
      modelImage: compressedModel,
      apparelImages: compressedApparel,
      metadata: {
        ...entry.metadata,
        imageProcessingResults: {
          ...entry.metadata?.imageProcessingResults,
          finalImageSizes: {
            modelImageSize: (0, _imageProcessing.getBase64Size)(compressedModel),
            apparelImageSizes: compressedApparel.map(img => {
              /* istanbul ignore next */
              cov_1kfju6r5a3().f[7]++;
              cov_1kfju6r5a3().s[22]++;
              return (0, _imageProcessing.getBase64Size)(img);
            })
          }
        }
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[23]++;
    if (error instanceof _imageProcessing.CompressionFailedError) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().b[1][0]++;
      cov_1kfju6r5a3().s[24]++;
      console.warn('Failed to compress history entry images, using original', error);
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[25]++;
      return entry;
    } else
    /* istanbul ignore next */
    {
      cov_1kfju6r5a3().b[1][1]++;
    }
    cov_1kfju6r5a3().s[26]++;
    throw error;
  }
}
class LocalStorageTryonHistoryService {
  constructor(config =
  /* istanbul ignore next */
  (cov_1kfju6r5a3().b[2][0]++, {})) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[8]++;
    cov_1kfju6r5a3().s[27]++;
    this.config = {
      ...DEFAULT_CONFIG,
      ...config
    };
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[28]++;
    this.initializeStorage();
  }
  /**
  * Initialize localStorage storage
  */
  initializeStorage() {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[9]++;
    cov_1kfju6r5a3().s[29]++;
    try {
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[30]++;
      // Check if localStorage is available
      if (
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[4][0]++, typeof window === 'undefined') ||
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[4][1]++, !window.localStorage)) {
        /* istanbul ignore next */
        cov_1kfju6r5a3().b[3][0]++;
        cov_1kfju6r5a3().s[31]++;
        throw new Error('localStorage is not available');
      } else
      /* istanbul ignore next */
      {
        cov_1kfju6r5a3().b[3][1]++;
      }
      // Initialize config if not exists
      cov_1kfju6r5a3().s[32]++;
      if (!localStorage.getItem(STORAGE_KEYS.CONFIG)) {
        /* istanbul ignore next */
        cov_1kfju6r5a3().b[5][0]++;
        cov_1kfju6r5a3().s[33]++;
        localStorage.setItem(STORAGE_KEYS.CONFIG, JSON.stringify(this.config));
      } else
      /* istanbul ignore next */
      {
        cov_1kfju6r5a3().b[5][1]++;
      }
      // Initialize entries array if not exists
      cov_1kfju6r5a3().s[34]++;
      if (!localStorage.getItem(STORAGE_KEYS.ENTRIES)) {
        /* istanbul ignore next */
        cov_1kfju6r5a3().b[6][0]++;
        cov_1kfju6r5a3().s[35]++;
        localStorage.setItem(STORAGE_KEYS.ENTRIES, JSON.stringify([]));
      } else
      /* istanbul ignore next */
      {
        cov_1kfju6r5a3().b[6][1]++;
      }
      // Initialize metadata if not exists
      cov_1kfju6r5a3().s[36]++;
      if (!localStorage.getItem(STORAGE_KEYS.METADATA)) {
        /* istanbul ignore next */
        cov_1kfju6r5a3().b[7][0]++;
        const metadata =
        /* istanbul ignore next */
        (cov_1kfju6r5a3().s[37]++, {
          version: '1.0.0',
          createdAt: new Date().toISOString(),
          lastUpdated: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_1kfju6r5a3().s[38]++;
        localStorage.setItem(STORAGE_KEYS.METADATA, JSON.stringify(metadata));
      } else
      /* istanbul ignore next */
      {
        cov_1kfju6r5a3().b[7][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[39]++;
      console.error('Failed to initialize history storage:', error);
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[40]++;
      throw new Error('History storage initialization failed');
    }
  }
  /**
  * Get all stored entries from localStorage
  */
  getStoredEntries() {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[10]++;
    cov_1kfju6r5a3().s[41]++;
    try {
      const entriesJson =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[42]++, localStorage.getItem(STORAGE_KEYS.ENTRIES));
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[43]++;
      return entriesJson ?
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[8][0]++, JSON.parse(entriesJson)) :
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[8][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[44]++;
      console.error('Failed to parse stored entries:', error);
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[45]++;
      return [];
    }
  }
  /**
  * Save entries to localStorage
  */
  saveEntries(entries) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[11]++;
    cov_1kfju6r5a3().s[46]++;
    try {
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[47]++;
      localStorage.setItem(STORAGE_KEYS.ENTRIES, JSON.stringify(entries));
      // Update metadata
      const metadata =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[48]++, JSON.parse(
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[9][0]++, localStorage.getItem(STORAGE_KEYS.METADATA)) ||
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[9][1]++, '{}')));
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[49]++;
      metadata.lastUpdated = new Date().toISOString();
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[50]++;
      localStorage.setItem(STORAGE_KEYS.METADATA, JSON.stringify(metadata));
    } catch (error) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[51]++;
      console.error('Failed to save entries to localStorage:', error);
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[52]++;
      throw new Error('Failed to save history entries');
    }
  }
  /**
  * Perform cleanup if needed
  */
  performCleanupIfNeeded(entries) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[12]++;
    cov_1kfju6r5a3().s[53]++;
    if (
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[11][0]++, !this.config.autoCleanup) ||
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[11][1]++, entries.length <= this.config.maxEntries)) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().b[10][0]++;
      cov_1kfju6r5a3().s[54]++;
      return entries;
    } else
    /* istanbul ignore next */
    {
      cov_1kfju6r5a3().b[10][1]++;
    }
    // Sort by timestamp and keep only the most recent entries
    const sorted =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[55]++, [...entries].sort((a, b) => {
      /* istanbul ignore next */
      cov_1kfju6r5a3().f[13]++;
      cov_1kfju6r5a3().s[56]++;
      return new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime();
    }));
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[57]++;
    return sorted.slice(0, this.config.maxEntries);
  }
  /**
  * Filter and sort entries based on query options
  */
  filterAndSortEntries(entries, options =
  /* istanbul ignore next */
  (cov_1kfju6r5a3().b[12][0]++, {})) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[14]++;
    let filtered =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[58]++, [...entries]);
    // Apply favorites filter
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[59]++;
    if (options.favoritesOnly) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().b[13][0]++;
      cov_1kfju6r5a3().s[60]++;
      filtered = filtered.filter(entry => {
        /* istanbul ignore next */
        cov_1kfju6r5a3().f[15]++;
        cov_1kfju6r5a3().s[61]++;
        return entry.isFavorite;
      });
    } else
    /* istanbul ignore next */
    {
      cov_1kfju6r5a3().b[13][1]++;
    }
    // Apply date range filter
    cov_1kfju6r5a3().s[62]++;
    if (options.dateRange) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().b[14][0]++;
      const startDate =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[63]++, new Date(options.dateRange.startDate));
      const endDate =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[64]++, new Date(options.dateRange.endDate));
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[65]++;
      filtered = filtered.filter(entry => {
        /* istanbul ignore next */
        cov_1kfju6r5a3().f[16]++;
        const entryDate =
        /* istanbul ignore next */
        (cov_1kfju6r5a3().s[66]++, new Date(entry.timestamp));
        /* istanbul ignore next */
        cov_1kfju6r5a3().s[67]++;
        return /* istanbul ignore next */(cov_1kfju6r5a3().b[15][0]++, entryDate >= startDate) &&
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[15][1]++, entryDate <= endDate);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1kfju6r5a3().b[14][1]++;
    }
    // Apply search term filter
    cov_1kfju6r5a3().s[68]++;
    if (options.searchTerm) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().b[16][0]++;
      const searchTerm =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[69]++, options.searchTerm.toLowerCase());
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[70]++;
      filtered = filtered.filter(entry => {
        /* istanbul ignore next */
        cov_1kfju6r5a3().f[17]++;
        cov_1kfju6r5a3().s[71]++;
        return /* istanbul ignore next */(cov_1kfju6r5a3().b[17][0]++, entry.tags?.some(tag => {
          /* istanbul ignore next */
          cov_1kfju6r5a3().f[18]++;
          cov_1kfju6r5a3().s[72]++;
          return tag.toLowerCase().includes(searchTerm);
        })) ||
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[17][1]++, entry.notes?.toLowerCase().includes(searchTerm));
      });
    } else
    /* istanbul ignore next */
    {
      cov_1kfju6r5a3().b[16][1]++;
    }
    // Apply sorting
    const sortBy =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[73]++,
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[18][0]++, options.sortBy) ||
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[18][1]++, 'timestamp'));
    const sortDirection =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[74]++,
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[19][0]++, options.sortDirection) ||
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[19][1]++, 'desc'));
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[75]++;
    filtered.sort((a, b) => {
      /* istanbul ignore next */
      cov_1kfju6r5a3().f[19]++;
      let aValue, bValue;
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[76]++;
      switch (sortBy) {
        case 'timestamp':
          /* istanbul ignore next */
          cov_1kfju6r5a3().b[20][0]++;
          cov_1kfju6r5a3().s[77]++;
          aValue = new Date(a.timestamp);
          /* istanbul ignore next */
          cov_1kfju6r5a3().s[78]++;
          bValue = new Date(b.timestamp);
          /* istanbul ignore next */
          cov_1kfju6r5a3().s[79]++;
          break;
        case 'processingTime':
          /* istanbul ignore next */
          cov_1kfju6r5a3().b[20][1]++;
          cov_1kfju6r5a3().s[80]++;
          aValue =
          /* istanbul ignore next */
          (cov_1kfju6r5a3().b[21][0]++, a.processingTime) ||
          /* istanbul ignore next */
          (cov_1kfju6r5a3().b[21][1]++, 0);
          /* istanbul ignore next */
          cov_1kfju6r5a3().s[81]++;
          bValue =
          /* istanbul ignore next */
          (cov_1kfju6r5a3().b[22][0]++, b.processingTime) ||
          /* istanbul ignore next */
          (cov_1kfju6r5a3().b[22][1]++, 0);
          /* istanbul ignore next */
          cov_1kfju6r5a3().s[82]++;
          break;
        case 'isFavorite':
          /* istanbul ignore next */
          cov_1kfju6r5a3().b[20][2]++;
          cov_1kfju6r5a3().s[83]++;
          aValue = a.isFavorite ?
          /* istanbul ignore next */
          (cov_1kfju6r5a3().b[23][0]++, 1) :
          /* istanbul ignore next */
          (cov_1kfju6r5a3().b[23][1]++, 0);
          /* istanbul ignore next */
          cov_1kfju6r5a3().s[84]++;
          bValue = b.isFavorite ?
          /* istanbul ignore next */
          (cov_1kfju6r5a3().b[24][0]++, 1) :
          /* istanbul ignore next */
          (cov_1kfju6r5a3().b[24][1]++, 0);
          /* istanbul ignore next */
          cov_1kfju6r5a3().s[85]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1kfju6r5a3().b[20][3]++;
          cov_1kfju6r5a3().s[86]++;
          aValue = a.timestamp;
          /* istanbul ignore next */
          cov_1kfju6r5a3().s[87]++;
          bValue = b.timestamp;
      }
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[88]++;
      if (sortDirection === 'asc') {
        /* istanbul ignore next */
        cov_1kfju6r5a3().b[25][0]++;
        cov_1kfju6r5a3().s[89]++;
        return aValue < bValue ?
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[26][0]++, -1) :
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[26][1]++, aValue > bValue ?
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[27][0]++, 1) :
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[27][1]++, 0));
      } else {
        /* istanbul ignore next */
        cov_1kfju6r5a3().b[25][1]++;
        cov_1kfju6r5a3().s[90]++;
        return aValue > bValue ?
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[28][0]++, -1) :
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[28][1]++, aValue < bValue ?
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[29][0]++, 1) :
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[29][1]++, 0));
      }
    });
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[91]++;
    return filtered;
  }
  /**
  * Add a new history entry
  */
  async addEntry(options) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[20]++;
    const entry =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[92]++, {
      id: generateHistoryId(),
      timestamp: new Date().toISOString(),
      generatedImage: options.generatedImage,
      modelImage: options.modelImage,
      apparelImages: options.apparelImages,
      processingTime: options.processingTime,
      metadata: options.metadata,
      tags:
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[30][0]++, options.tags) ||
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[30][1]++, []),
      isFavorite:
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[31][0]++, options.isFavorite) ||
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[31][1]++, false),
      notes:
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[32][0]++, options.notes) ||
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[32][1]++, '')
    });
    // Compress entry if enabled
    const compressedEntry =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[93]++, await compressHistoryEntry(entry, this.config));
    // Check entry size
    const entrySize =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[94]++, calculateEntrySize(compressedEntry));
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[95]++;
    if (entrySize > this.config.maxEntrySizeKB) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().b[33][0]++;
      cov_1kfju6r5a3().s[96]++;
      throw new Error(`History entry too large: ${entrySize.toFixed(2)}KB exceeds limit of ${this.config.maxEntrySizeKB}KB`);
    } else
    /* istanbul ignore next */
    {
      cov_1kfju6r5a3().b[33][1]++;
    }
    // Get current entries and add the new one
    let entries =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[97]++, this.getStoredEntries());
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[98]++;
    entries.push(compressedEntry);
    // Perform cleanup if needed
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[99]++;
    entries = this.performCleanupIfNeeded(entries);
    // Save updated entries
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[100]++;
    this.saveEntries(entries);
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[101]++;
    return compressedEntry;
  }
  /**
  * Get history entries with filtering and pagination
  */
  async getEntries(options =
  /* istanbul ignore next */
  (cov_1kfju6r5a3().b[34][0]++, {})) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[21]++;
    const allEntries =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[102]++, this.getStoredEntries());
    const filteredEntries =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[103]++, this.filterAndSortEntries(allEntries, options));
    // Apply pagination
    const page =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[104]++,
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[35][0]++, options.page) ||
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[35][1]++, 0));
    const pageSize =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[105]++,
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[36][0]++, options.pageSize) ||
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[36][1]++, 20));
    const startIndex =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[106]++, page * pageSize);
    const endIndex =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[107]++, startIndex + pageSize);
    const paginatedEntries =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[108]++, filteredEntries.slice(startIndex, endIndex));
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[109]++;
    return {
      entries: paginatedEntries,
      totalCount: filteredEntries.length,
      currentPage: page,
      pageSize,
      hasMore: endIndex < filteredEntries.length,
      lastUpdated: new Date().toISOString()
    };
  }
  /**
  * Get a specific history entry by ID
  */
  async getEntry(id) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[22]++;
    const entries =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[110]++, this.getStoredEntries());
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[111]++;
    return /* istanbul ignore next */(cov_1kfju6r5a3().b[37][0]++, entries.find(entry => {
      /* istanbul ignore next */
      cov_1kfju6r5a3().f[23]++;
      cov_1kfju6r5a3().s[112]++;
      return entry.id === id;
    })) ||
    /* istanbul ignore next */
    (cov_1kfju6r5a3().b[37][1]++, null);
  }
  /**
  * Update an existing history entry
  */
  async updateEntry(id, updates) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[24]++;
    const entries =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[113]++, this.getStoredEntries());
    const entryIndex =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[114]++, entries.findIndex(entry => {
      /* istanbul ignore next */
      cov_1kfju6r5a3().f[25]++;
      cov_1kfju6r5a3().s[115]++;
      return entry.id === id;
    }));
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[116]++;
    if (entryIndex === -1) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().b[38][0]++;
      cov_1kfju6r5a3().s[117]++;
      throw new Error(`History entry with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_1kfju6r5a3().b[38][1]++;
    }
    // Apply updates
    const updatedEntry =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[118]++, {
      ...entries[entryIndex],
      ...updates,
      // Preserve ID and timestamp, update only if explicitly provided
      id: entries[entryIndex].id,
      timestamp:
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[39][0]++, updates.timestamp) ||
      /* istanbul ignore next */
      (cov_1kfju6r5a3().b[39][1]++, entries[entryIndex].timestamp)
    });
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[119]++;
    entries[entryIndex] = updatedEntry;
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[120]++;
    this.saveEntries(entries);
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[121]++;
    return updatedEntry;
  }
  /**
  * Delete a history entry
  */
  async deleteEntry(id) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[26]++;
    const entries =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[122]++, this.getStoredEntries());
    const filteredEntries =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[123]++, entries.filter(entry => {
      /* istanbul ignore next */
      cov_1kfju6r5a3().f[27]++;
      cov_1kfju6r5a3().s[124]++;
      return entry.id !== id;
    }));
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[125]++;
    if (filteredEntries.length === entries.length) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().b[40][0]++;
      cov_1kfju6r5a3().s[126]++;
      return false; // Entry not found
    } else
    /* istanbul ignore next */
    {
      cov_1kfju6r5a3().b[40][1]++;
    }
    cov_1kfju6r5a3().s[127]++;
    this.saveEntries(filteredEntries);
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[128]++;
    return true;
  }
  /**
  * Clear all history entries
  */
  async clearAll() {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[28]++;
    cov_1kfju6r5a3().s[129]++;
    try {
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[130]++;
      localStorage.setItem(STORAGE_KEYS.ENTRIES, JSON.stringify([]));
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[131]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[132]++;
      console.error('Failed to clear history:', error);
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[133]++;
      return false;
    }
  }
  /**
  * Get storage statistics
  */
  async getStorageStats() {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[29]++;
    const entries =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[134]++, this.getStoredEntries());
    let totalSizeKB =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[135]++, 0);
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[136]++;
    entries.forEach(entry => {
      /* istanbul ignore next */
      cov_1kfju6r5a3().f[30]++;
      cov_1kfju6r5a3().s[137]++;
      totalSizeKB += calculateEntrySize(entry);
    });
    const timestamps =
    /* istanbul ignore next */
    (cov_1kfju6r5a3().s[138]++, entries.map(entry => {
      /* istanbul ignore next */
      cov_1kfju6r5a3().f[31]++;
      cov_1kfju6r5a3().s[139]++;
      return entry.timestamp;
    }).sort());
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[140]++;
    return {
      totalEntries: entries.length,
      totalSizeKB,
      oldestEntry: timestamps[0],
      newestEntry: timestamps[timestamps.length - 1]
    };
  }
  /**
  * Export history data
  */
  async exportHistory() {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[32]++;
    cov_1kfju6r5a3().s[141]++;
    return this.getStoredEntries();
  }
  /**
  * Import history data
  */
  async importHistory(entries) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[33]++;
    cov_1kfju6r5a3().s[142]++;
    try {
      // Validate entries
      const validEntries =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[143]++, entries.filter(entry => {
        /* istanbul ignore next */
        cov_1kfju6r5a3().f[34]++;
        cov_1kfju6r5a3().s[144]++;
        return /* istanbul ignore next */(cov_1kfju6r5a3().b[41][0]++, entry.id) &&
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[41][1]++, entry.generatedImage) &&
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[41][2]++, entry.modelImage) &&
        /* istanbul ignore next */
        (cov_1kfju6r5a3().b[41][3]++, entry.apparelImages);
      }));
      // Get existing entries and merge with imports
      const existingEntries =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[145]++, this.getStoredEntries());
      const existingIds =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[146]++, new Set(existingEntries.map(entry => {
        /* istanbul ignore next */
        cov_1kfju6r5a3().f[35]++;
        cov_1kfju6r5a3().s[147]++;
        return entry.id;
      })));
      // Only import entries that don't already exist
      const newEntries =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[148]++, validEntries.filter(entry => {
        /* istanbul ignore next */
        cov_1kfju6r5a3().f[36]++;
        cov_1kfju6r5a3().s[149]++;
        return !existingIds.has(entry.id);
      }));
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[150]++;
      if (newEntries.length === 0) {
        /* istanbul ignore next */
        cov_1kfju6r5a3().b[42][0]++;
        cov_1kfju6r5a3().s[151]++;
        return 0;
      } else
      /* istanbul ignore next */
      {
        cov_1kfju6r5a3().b[42][1]++;
      }
      // Merge and save
      const mergedEntries =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[152]++, [...existingEntries, ...newEntries]);
      const cleanedEntries =
      /* istanbul ignore next */
      (cov_1kfju6r5a3().s[153]++, this.performCleanupIfNeeded(mergedEntries));
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[154]++;
      this.saveEntries(cleanedEntries);
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[155]++;
      return newEntries.length;
    } catch (error) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[156]++;
      console.error('Failed to import history:', error);
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[157]++;
      throw new Error('History import failed');
    }
  }
  /**
  * Update service configuration
  */
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[37]++;
    cov_1kfju6r5a3().s[158]++;
    this.config = {
      ...this.config,
      ...newConfig
    };
    /* istanbul ignore next */
    cov_1kfju6r5a3().s[159]++;
    try {
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[160]++;
      localStorage.setItem(STORAGE_KEYS.CONFIG, JSON.stringify(this.config));
    } catch (error) {
      /* istanbul ignore next */
      cov_1kfju6r5a3().s[161]++;
      console.error('Failed to save config:', error);
    }
  }
  /**
  * Get current configuration
  */
  getConfig() {
    /* istanbul ignore next */
    cov_1kfju6r5a3().f[38]++;
    cov_1kfju6r5a3().s[162]++;
    return {
      ...this.config
    };
  }
}
const defaultHistoryService =
/* istanbul ignore next */
(cov_1kfju6r5a3().s[163]++, new LocalStorageTryonHistoryService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,