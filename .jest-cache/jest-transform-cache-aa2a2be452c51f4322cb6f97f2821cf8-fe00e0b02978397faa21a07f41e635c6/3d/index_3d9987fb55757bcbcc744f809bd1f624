035633d017ca13dd760e40fc98b829ea
// Business Layer Types
// Re-export all type definitions for business logic
// API and external service types
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    DEFAULT_IMAGE_PROCESSING_FLAGS: function() {
        return _featureFlagtypes.DEFAULT_IMAGE_PROCESSING_FLAGS;
    },
    DEFAULT_TRYON_FLAGS: function() {
        return _featureFlagtypes.DEFAULT_TRYON_FLAGS;
    },
    DEFAULT_UI_FLAGS: function() {
        return _featureFlagtypes.DEFAULT_UI_FLAGS;
    },
    createApiError: function() {
        return _errortypes.createApiError;
    },
    createBusinessLayerError: function() {
        return _errortypes.createBusinessLayerError;
    },
    createNetworkError: function() {
        return _errortypes.createNetworkError;
    },
    createTimeoutError: function() {
        return _errortypes.createTimeoutError;
    },
    createValidationError: function() {
        return _errortypes.createValidationError;
    },
    isBooleanFlag: function() {
        return _featureFlagtypes.isBooleanFlag;
    },
    isFeatureFlag: function() {
        return _featureFlagtypes.isFeatureFlag;
    },
    isNumberFlag: function() {
        return _featureFlagtypes.isNumberFlag;
    },
    isStringFlag: function() {
        return _featureFlagtypes.isStringFlag;
    }
});
const _errortypes = require("./error.types");
const _featureFlagtypes = require("./featureFlag.types");

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsc3RyZWV0ZXIvV2Vic3Rvcm1Qcm9qZWN0cy92aWJlLWNvZGluZy90aG9zZS1wZW9wbGUvVGhlLVN1cy1GaXQtZ3Avc3JjL2J1c2luZXNzLWxheWVyL3R5cGVzL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEJ1c2luZXNzIExheWVyIFR5cGVzXG4vLyBSZS1leHBvcnQgYWxsIHR5cGUgZGVmaW5pdGlvbnMgZm9yIGJ1c2luZXNzIGxvZ2ljXG5cbi8vIEFQSSBhbmQgZXh0ZXJuYWwgc2VydmljZSB0eXBlc1xuZXhwb3J0IHR5cGUge1xuICBUcnlvblJlcXVlc3QsXG4gIFRyeW9uUmVzcG9uc2UsXG4gIEFwaVJlc3BvbnNlLFxuICBBcGlFcnJvclJlc3BvbnNlLFxuICBBcGlTdWNjZXNzUmVzcG9uc2UsXG4gIEltYWdlUHJvY2Vzc2luZ09wdGlvbnMsXG4gIFByb2Nlc3NlZEltYWdlXG59IGZyb20gJy4vYXBpLnR5cGVzJztcblxuLy8gUmVhY3QgUXVlcnkgY29uZmlndXJhdGlvbiB0eXBlc1xuZXhwb3J0IHR5cGUge1xuICBRdWVyeUNvbmZpZyxcbiAgTXV0YXRpb25Db25maWcsXG4gIEJ1c2luZXNzUXVlcnlDbGllbnRDb25maWcsXG4gIFF1ZXJ5Q2xpZW50LFxuICBRdWVyeUtleSxcbiAgVXNlUXVlcnlPcHRpb25zLFxuICBVc2VNdXRhdGlvbk9wdGlvbnMsXG4gIFF1ZXJ5RnVuY3Rpb24sXG4gIE11dGF0aW9uRnVuY3Rpb25cbn0gZnJvbSAnLi9xdWVyeS50eXBlcyc7XG5cbi8vIE11dGF0aW9uIGRhdGEgYW5kIHZhcmlhYmxlIHR5cGVzXG5leHBvcnQgdHlwZSB7XG4gIFRyeW9uTXV0YXRpb25EYXRhLFxuICBJbWFnZVVwbG9hZFZhcmlhYmxlcyxcbiAgSW1hZ2VVcGxvYWREYXRhLFxuICBNdXRhdGlvblN0YXRlLFxuICBCdXNpbmVzc011dGF0aW9uT3B0aW9ucyxcbiAgLy8gU2hvcnRlciBhbGlhc2VzXG4gIFRyeW9uVmFyaWFibGVzLFxuICBUcnlvbkRhdGEsXG4gIFVwbG9hZFZhcmlhYmxlcyxcbiAgVXBsb2FkRGF0YVxufSBmcm9tICcuL211dGF0aW9uLnR5cGVzJztcblxuLy8gRXJyb3IgaGFuZGxpbmcgdHlwZXNcbmV4cG9ydCB0eXBlIHtcbiAgQnVzaW5lc3NMYXllckVycm9yLFxuICBBcGlFcnJvcixcbiAgVmFsaWRhdGlvbkVycm9yLFxuICBOZXR3b3JrRXJyb3IsXG4gIFRpbWVvdXRFcnJvclxufSBmcm9tICcuL2Vycm9yLnR5cGVzJztcblxuLy8gRXJyb3IgZmFjdG9yeSBmdW5jdGlvbnNcbmV4cG9ydCB7XG4gIGNyZWF0ZUJ1c2luZXNzTGF5ZXJFcnJvcixcbiAgY3JlYXRlQXBpRXJyb3IsXG4gIGNyZWF0ZVZhbGlkYXRpb25FcnJvcixcbiAgY3JlYXRlTmV0d29ya0Vycm9yLFxuICBjcmVhdGVUaW1lb3V0RXJyb3Jcbn0gZnJvbSAnLi9lcnJvci50eXBlcyc7XG5cbi8vIEZlYXR1cmUgZmxhZyB0eXBlc1xuZXhwb3J0IHR5cGUge1xuICBGZWF0dXJlRmxhZyxcbiAgRmVhdHVyZUZsYWdDb25maWcsXG4gIEZlYXR1cmVGbGFnVmFsdWUsXG4gIEZlYXR1cmVGbGFnQ2F0ZWdvcnksXG4gIEVudmlyb25tZW50LFxuICBUcnlvbkZlYXR1cmVGbGFncyxcbiAgSW1hZ2VQcm9jZXNzaW5nRmVhdHVyZUZsYWdzLFxuICBVSUZlYXR1cmVGbGFncyxcbiAgUGVyZm9ybWFuY2VGZWF0dXJlRmxhZ3MsXG4gIEV4cGVyaW1lbnRGZWF0dXJlRmxhZ3MsXG4gIERlYnVnZ2luZ0ZlYXR1cmVGbGFncyxcbiAgQWxsRmVhdHVyZUZsYWdzLFxuICBGZWF0dXJlRmxhZ0NvbGxlY3Rpb24sXG4gIEZlYXR1cmVGbGFnUHJvdmlkZXJDb25maWcsXG4gIEZlYXR1cmVGbGFnQ29udGV4dFZhbHVlLFxuICBVc2VGZWF0dXJlRmxhZ1JldHVybixcbiAgRmVhdHVyZUZsYWdWYWxpZGF0aW9uLFxuICBWYWxpZGF0ZWRGZWF0dXJlRmxhZyxcbiAgRXh0cmFjdEZsYWdWYWx1ZVxufSBmcm9tICcuL2ZlYXR1cmVGbGFnLnR5cGVzJztcblxuLy8gRmVhdHVyZSBmbGFnIGNvbnN0YW50cyBhbmQgdXRpbGl0aWVzXG5leHBvcnQge1xuICBERUZBVUxUX1RSWU9OX0ZMQUdTLFxuICBERUZBVUxUX0lNQUdFX1BST0NFU1NJTkdfRkxBR1MsXG4gIERFRkFVTFRfVUlfRkxBR1MsXG4gIGlzRmVhdHVyZUZsYWcsXG4gIGlzQm9vbGVhbkZsYWcsXG4gIGlzU3RyaW5nRmxhZyxcbiAgaXNOdW1iZXJGbGFnXG59IGZyb20gJy4vZmVhdHVyZUZsYWcudHlwZXMnO1xuXG4vLyBUcnktb24gc3BlY2lmaWMgdHlwZXNcbmV4cG9ydCB0eXBlIHtcbiAgVHJ5b25NdXRhdGlvblZhcmlhYmxlcyxcbiAgVHJ5b25NdXRhdGlvblZhcmlhYmxlc1dpdGhGaWxlcyxcbiAgVHJ5b25NdXRhdGlvbk9wdGlvbnMsXG4gIFRyeW9uTXV0YXRpb25SZXNwb25zZSxcbiAgVHJ5b25SZXNwb25zZU1ldGFkYXRhLFxuICBUcnlvbk11dGF0aW9uRXJyb3IsXG4gIFRyeW9uTXV0YXRpb25Db250ZXh0LFxuICBVc2VUcnlvbk11dGF0aW9uUmV0dXJuLFxuICBVc2VUcnlvbk11dGF0aW9uQ29uZmlnXG59IGZyb20gJy4vdHJ5b24udHlwZXMnO1xuXG4vLyBIaXN0b3J5IG1hbmFnZW1lbnQgdHlwZXNcbmV4cG9ydCB0eXBlIHtcbiAgVHJ5b25IaXN0b3J5RW50cnksXG4gIFRyeW9uSGlzdG9yeU1ldGFkYXRhLFxuICBUcnlvbkhpc3RvcnlDb2xsZWN0aW9uLFxuICBUcnlvbkhpc3RvcnlRdWVyeU9wdGlvbnMsXG4gIENyZWF0ZVRyeW9uSGlzdG9yeUVudHJ5T3B0aW9ucyxcbiAgVHJ5b25IaXN0b3J5U3RvcmFnZUNvbmZpZyxcbiAgVHJ5b25IaXN0b3J5U2VydmljZSxcbiAgVXNlVHJ5b25IaXN0b3J5UmV0dXJuLFxuICBUcnlvbkhpc3RvcnlDb250ZXh0VmFsdWVcbn0gZnJvbSAnLi9oaXN0b3J5LnR5cGVzJzsiXSwibmFtZXMiOlsiREVGQVVMVF9JTUFHRV9QUk9DRVNTSU5HX0ZMQUdTIiwiREVGQVVMVF9UUllPTl9GTEFHUyIsIkRFRkFVTFRfVUlfRkxBR1MiLCJjcmVhdGVBcGlFcnJvciIsImNyZWF0ZUJ1c2luZXNzTGF5ZXJFcnJvciIsImNyZWF0ZU5ldHdvcmtFcnJvciIsImNyZWF0ZVRpbWVvdXRFcnJvciIsImNyZWF0ZVZhbGlkYXRpb25FcnJvciIsImlzQm9vbGVhbkZsYWciLCJpc0ZlYXR1cmVGbGFnIiwiaXNOdW1iZXJGbGFnIiwiaXNTdHJpbmdGbGFnIl0sIm1hcHBpbmdzIjoiQUFBQSx1QkFBdUI7QUFDdkIsb0RBQW9EO0FBRXBELGlDQUFpQzs7Ozs7Ozs7Ozs7O0lBa0YvQkEsOEJBQThCO2VBQTlCQSxnREFBOEI7O0lBRDlCQyxtQkFBbUI7ZUFBbkJBLHFDQUFtQjs7SUFFbkJDLGdCQUFnQjtlQUFoQkEsa0NBQWdCOztJQWpDaEJDLGNBQWM7ZUFBZEEsMEJBQWM7O0lBRGRDLHdCQUF3QjtlQUF4QkEsb0NBQXdCOztJQUd4QkMsa0JBQWtCO2VBQWxCQSw4QkFBa0I7O0lBQ2xCQyxrQkFBa0I7ZUFBbEJBLDhCQUFrQjs7SUFGbEJDLHFCQUFxQjtlQUFyQkEsaUNBQXFCOztJQWtDckJDLGFBQWE7ZUFBYkEsK0JBQWE7O0lBRGJDLGFBQWE7ZUFBYkEsK0JBQWE7O0lBR2JDLFlBQVk7ZUFBWkEsOEJBQVk7O0lBRFpDLFlBQVk7ZUFBWkEsOEJBQVk7Ozs0QkFoQ1A7a0NBa0NBIn0=