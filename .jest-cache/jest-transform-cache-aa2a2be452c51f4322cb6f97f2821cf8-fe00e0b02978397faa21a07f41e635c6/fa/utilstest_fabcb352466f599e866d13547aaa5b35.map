{"version":3,"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/__tests__/test/utils.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen } from '@/test/utils'\n\n// Test component\nconst TestComponent = ({ children }: { children: React.ReactNode }) => (\n  <div data-testid=\"test-component\">{children}</div>\n)\n\ndescribe('test/utils', () => {\n  it('custom render function works correctly', () => {\n    render(<TestComponent>Test content</TestComponent>)\n    \n    expect(screen.getByTestId('test-component')).toBeInTheDocument()\n    expect(screen.getByText('Test content')).toBeInTheDocument()\n  })\n\n  it('screen is properly exported', () => {\n    render(<TestComponent>Screen test</TestComponent>)\n    \n    expect(screen.getByText('Screen test')).toBeInTheDocument()\n  })\n\n  it('render accepts options parameter', () => {\n    const { container } = render(\n      <TestComponent>Options test</TestComponent>\n    )\n    \n    expect(container).toBeInTheDocument()\n    expect(screen.getByText('Options test')).toBeInTheDocument()\n  })\n\n  it('works with complex components', () => {\n    const ComplexComponent = () => (\n      <div>\n        <h1>Title</h1>\n        <p>Description</p>\n        <button>Click me</button>\n      </div>\n    )\n    \n    render(<ComplexComponent />)\n    \n    expect(screen.getByRole('heading')).toHaveTextContent('Title')\n    expect(screen.getByText('Description')).toBeInTheDocument()\n    expect(screen.getByRole('button')).toHaveTextContent('Click me')\n  })\n\n  it('maintains React Testing Library functionality', () => {\n    render(<TestComponent>RTL test</TestComponent>)\n    \n    // Test that all RTL queries work\n    expect(screen.getByTestId('test-component')).toBeInTheDocument()\n    expect(screen.getByText('RTL test')).toBeInTheDocument()\n    expect(screen.queryByText('Non-existent')).not.toBeInTheDocument()\n  })\n}) "],"names":["TestComponent","children","div","data-testid","describe","it","render","expect","screen","getByTestId","toBeInTheDocument","getByText","container","ComplexComponent","h1","p","button","getByRole","toHaveTextContent","queryByText","not"],"mappings":";;;;;8DAAkB;uBACa;;;;;;AAE/B,iBAAiB;AACjB,MAAMA,gBAAgB,CAAC,EAAEC,QAAQ,EAAiC,iBAChE,qBAACC;QAAIC,eAAY;kBAAkBF;;AAGrCG,SAAS,cAAc;IACrBC,GAAG,0CAA0C;QAC3CC,IAAAA,aAAM,gBAAC,qBAACN;sBAAc;;QAEtBO,OAAOC,aAAM,CAACC,WAAW,CAAC,mBAAmBC,iBAAiB;QAC9DH,OAAOC,aAAM,CAACG,SAAS,CAAC,iBAAiBD,iBAAiB;IAC5D;IAEAL,GAAG,+BAA+B;QAChCC,IAAAA,aAAM,gBAAC,qBAACN;sBAAc;;QAEtBO,OAAOC,aAAM,CAACG,SAAS,CAAC,gBAAgBD,iBAAiB;IAC3D;IAEAL,GAAG,oCAAoC;QACrC,MAAM,EAAEO,SAAS,EAAE,GAAGN,IAAAA,aAAM,gBAC1B,qBAACN;sBAAc;;QAGjBO,OAAOK,WAAWF,iBAAiB;QACnCH,OAAOC,aAAM,CAACG,SAAS,CAAC,iBAAiBD,iBAAiB;IAC5D;IAEAL,GAAG,iCAAiC;QAClC,MAAMQ,mBAAmB,kBACvB,sBAACX;;kCACC,qBAACY;kCAAG;;kCACJ,qBAACC;kCAAE;;kCACH,qBAACC;kCAAO;;;;QAIZV,IAAAA,aAAM,gBAAC,qBAACO;QAERN,OAAOC,aAAM,CAACS,SAAS,CAAC,YAAYC,iBAAiB,CAAC;QACtDX,OAAOC,aAAM,CAACG,SAAS,CAAC,gBAAgBD,iBAAiB;QACzDH,OAAOC,aAAM,CAACS,SAAS,CAAC,WAAWC,iBAAiB,CAAC;IACvD;IAEAb,GAAG,iDAAiD;QAClDC,IAAAA,aAAM,gBAAC,qBAACN;sBAAc;;QAEtB,iCAAiC;QACjCO,OAAOC,aAAM,CAACC,WAAW,CAAC,mBAAmBC,iBAAiB;QAC9DH,OAAOC,aAAM,CAACG,SAAS,CAAC,aAAaD,iBAAiB;QACtDH,OAAOC,aAAM,CAACW,WAAW,CAAC,iBAAiBC,GAAG,CAACV,iBAAiB;IAClE;AACF"}