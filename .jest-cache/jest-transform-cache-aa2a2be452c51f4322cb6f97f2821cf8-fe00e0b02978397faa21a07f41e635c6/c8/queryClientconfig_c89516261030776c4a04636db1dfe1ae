70558470a27559b2ad0c67554bf29529
"use strict";

/* istanbul ignore next */
function cov_2jrazq6h34() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/config/queryClient.config.ts";
  var hash = "6061254aef230b8b748000f2685555698ca7ba4b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/config/queryClient.config.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 27
        }
      },
      "10": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 52
        }
      },
      "11": {
        start: {
          line: 32,
          column: 19
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "12": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "13": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 58,
          column: 1
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "15": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "16": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 70
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "18": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 70
        }
      },
      "19": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "20": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "21": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 57,
          column: 6
        }
      },
      "22": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 94,
          column: 2
        }
      },
      "23": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 71,
          column: 17
        }
      },
      "24": {
        start: {
          line: 67,
          column: 35
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "25": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 70,
          column: 21
        }
      },
      "26": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 37
        }
      },
      "27": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 76
        }
      },
      "28": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 87,
          column: 17
        }
      },
      "29": {
        start: {
          line: 83,
          column: 35
        },
        end: {
          line: 83,
          column: 47
        }
      },
      "30": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 86,
          column: 21
        }
      },
      "31": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 85,
          column: 37
        }
      },
      "32": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 79
        }
      },
      "33": {
        start: {
          line: 95,
          column: 41
        },
        end: {
          line: 102,
          column: 6
        }
      },
      "34": {
        start: {
          line: 95,
          column: 60
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "35": {
        start: {
          line: 103,
          column: 29
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "36": {
        start: {
          line: 103,
          column: 48
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "37": {
        start: {
          line: 112,
          column: 29
        },
        end: {
          line: 117,
          column: 6
        }
      },
      "38": {
        start: {
          line: 112,
          column: 41
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "39": {
        start: {
          line: 118,
          column: 26
        },
        end: {
          line: 124,
          column: 1
        }
      },
      "40": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "41": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 122,
          column: 11
        }
      },
      "42": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 127,
          column: 1
        }
      },
      "43": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 12,
            column: 22
          }
        },
        loc: {
          start: {
            line: 12,
            column: 32
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 15,
            column: 27
          }
        },
        loc: {
          start: {
            line: 15,
            column: 37
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 38
          },
          end: {
            line: 18,
            column: 39
          }
        },
        loc: {
          start: {
            line: 18,
            column: 49
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 27
          }
        },
        loc: {
          start: {
            line: 21,
            column: 37
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 24
          }
        },
        loc: {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 27,
            column: 18
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 36,
            column: 25
          },
          end: {
            line: 36,
            column: 26
          }
        },
        loc: {
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 36
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 64,
            column: 19
          },
          end: {
            line: 64,
            column: 20
          }
        },
        loc: {
          start: {
            line: 64,
            column: 42
          },
          end: {
            line: 73,
            column: 13
          }
        },
        line: 64
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 80,
            column: 20
          }
        },
        loc: {
          start: {
            line: 80,
            column: 42
          },
          end: {
            line: 89,
            column: 13
          }
        },
        line: 80
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 42
          }
        },
        loc: {
          start: {
            line: 95,
            column: 60
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 103,
            column: 30
          }
        },
        loc: {
          start: {
            line: 103,
            column: 48
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 103
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 112,
            column: 29
          },
          end: {
            line: 112,
            column: 30
          }
        },
        loc: {
          start: {
            line: 112,
            column: 41
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 112
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 118,
            column: 26
          },
          end: {
            line: 118,
            column: 27
          }
        },
        loc: {
          start: {
            line: 118,
            column: 39
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 118
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 119,
            column: 22
          },
          end: {
            line: 119,
            column: 23
          }
        },
        loc: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 119
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 125,
            column: 24
          },
          end: {
            line: 125,
            column: 25
          }
        },
        loc: {
          start: {
            line: 125,
            column: 28
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 125
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 27
          }
        }, {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 39,
            column: 61
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 45
          }
        }, {
          start: {
            line: 43,
            column: 49
          },
          end: {
            line: 43,
            column: 82
          }
        }],
        line: 43
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 27
          }
        }, {
          start: {
            line: 47,
            column: 31
          },
          end: {
            line: 47,
            column: 51
          }
        }],
        line: 47
      },
      "7": {
        loc: {
          start: {
            line: 54,
            column: 17
          },
          end: {
            line: 54,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 42
          },
          end: {
            line: 54,
            column: 55
          }
        }, {
          start: {
            line: 54,
            column: 58
          },
          end: {
            line: 54,
            column: 85
          }
        }],
        line: 54
      },
      "8": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 71,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "9": {
        loc: {
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 66,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 66,
            column: 25
          }
        }, {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 66,
            column: 54
          }
        }, {
          start: {
            line: 66,
            column: 58
          },
          end: {
            line: 66,
            column: 75
          }
        }],
        line: 66
      },
      "10": {
        loc: {
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 70,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "11": {
        loc: {
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 68,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 68,
            column: 37
          }
        }, {
          start: {
            line: 68,
            column: 41
          },
          end: {
            line: 68,
            column: 53
          }
        }],
        line: 68
      },
      "12": {
        loc: {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 87,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 87,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "13": {
        loc: {
          start: {
            line: 82,
            column: 20
          },
          end: {
            line: 82,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 20
          },
          end: {
            line: 82,
            column: 25
          }
        }, {
          start: {
            line: 82,
            column: 29
          },
          end: {
            line: 82,
            column: 54
          }
        }, {
          start: {
            line: 82,
            column: 58
          },
          end: {
            line: 82,
            column: 75
          }
        }],
        line: 82
      },
      "14": {
        loc: {
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 86,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 86,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "15": {
        loc: {
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 84,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 84,
            column: 37
          }
        }, {
          start: {
            line: 84,
            column: 41
          },
          end: {
            line: 84,
            column: 53
          }
        }],
        line: 84
      },
      "16": {
        loc: {
          start: {
            line: 95,
            column: 42
          },
          end: {
            line: 95,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 95,
            column: 52
          },
          end: {
            line: 95,
            column: 56
          }
        }],
        line: 95
      },
      "17": {
        loc: {
          start: {
            line: 103,
            column: 30
          },
          end: {
            line: 103,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 103,
            column: 40
          },
          end: {
            line: 103,
            column: 44
          }
        }],
        line: 103
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/config/queryClient.config.ts"],
      sourcesContent: ["import { QueryClient } from '@tanstack/react-query';\nimport { QUERY_DEFAULTS, MUTATION_DEFAULTS } from './constants';\nimport { createNetworkError, createTimeoutError, type BusinessLayerError } from '../types/error.types';\n\n// Error handler for React Query (utility function for future use)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst handleQueryError = (error: unknown): BusinessLayerError => {\n  if (error instanceof Error) {\n    // Check for network errors\n    if ('code' in error && error.code === 'NETWORK_ERROR') {\n      return createNetworkError(error.message);\n    }\n    \n    // Check for timeout errors\n    if (error.message.includes('timeout') || error.message.includes('TIMEOUT')) {\n      return createTimeoutError(error.message);\n    }\n    \n    // Return as-is if already a BusinessLayerError\n    if ('code' in error && 'timestamp' in error) {\n      return error as BusinessLayerError;\n    }\n  }\n  \n  // Default error handling\n  return {\n    name: 'BusinessLayerError',\n    message: error instanceof Error ? error.message : 'An unknown error occurred',\n    code: 'UNKNOWN_ERROR',\n    timestamp: new Date().toISOString(),\n  };\n};\n\n// Query client configuration\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: QUERY_DEFAULTS.STALE_TIME,\n      gcTime: QUERY_DEFAULTS.CACHE_TIME, // React Query v5 uses gcTime instead of cacheTime\n      retry: (failureCount, error) => {\n        // Don't retry on 4xx errors (client errors)\n        if (error && typeof error === 'object' && 'status' in error) {\n          const status = error.status as number;\n          if (status >= 400 && status < 500) {\n            return false;\n          }\n        }\n        \n        return failureCount < QUERY_DEFAULTS.RETRY_COUNT;\n      },\n      retryDelay: QUERY_DEFAULTS.RETRY_DELAY,\n      networkMode: 'online',\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: true,\n    },\n    mutations: {\n      retry: (failureCount, error) => {\n        // Don't retry mutations on 4xx errors\n        if (error && typeof error === 'object' && 'status' in error) {\n          const status = error.status as number;\n          if (status >= 400 && status < 500) {\n            return false;\n          }\n        }\n        \n        return failureCount < MUTATION_DEFAULTS.RETRY_COUNT;\n      },\n      retryDelay: MUTATION_DEFAULTS.RETRY_DELAY,\n      networkMode: 'online',\n    },\n  },\n});\n\n// Specialized query configurations for different use cases\nexport const createImageProcessingQueryConfig = (enabled = true) => ({\n  staleTime: QUERY_DEFAULTS.STALE_TIME,\n  gcTime: QUERY_DEFAULTS.CACHE_TIME,\n  retry: 1, // Less aggressive retry for image processing\n  enabled,\n  refetchOnMount: false,\n  refetchOnWindowFocus: false,\n});\n\nexport const createApiQueryConfig = (enabled = true) => ({\n  staleTime: QUERY_DEFAULTS.STALE_TIME,\n  gcTime: QUERY_DEFAULTS.CACHE_TIME,\n  retry: QUERY_DEFAULTS.RETRY_COUNT,\n  retryDelay: QUERY_DEFAULTS.RETRY_DELAY,\n  enabled,\n  refetchOnMount: true,\n  refetchOnWindowFocus: false,\n});\n\nexport const createMutationConfig = <TData, TVariables>(options?: {\n  onSuccess?: (data: TData, variables: TVariables) => void;\n  onError?: (error: BusinessLayerError, variables: TVariables) => void;\n}) => ({\n  retry: MUTATION_DEFAULTS.RETRY_COUNT,\n  retryDelay: MUTATION_DEFAULTS.RETRY_DELAY,\n  networkMode: 'online' as const,\n  ...options,\n});\n\n// Utility function to invalidate related queries\nexport const invalidateQueries = (queryKeys: string[][]) => {\n  queryKeys.forEach(queryKey => {\n    queryClient.invalidateQueries({ queryKey });\n  });\n};\n\n// Utility function to clear cache\nexport const clearQueryCache = () => {\n  queryClient.clear();\n};"],
      names: ["clearQueryCache", "createApiQueryConfig", "createImageProcessingQueryConfig", "createMutationConfig", "invalidateQueries", "queryClient", "handleQueryError", "error", "Error", "code", "createNetworkError", "message", "includes", "createTimeoutError", "name", "timestamp", "Date", "toISOString", "QueryClient", "defaultOptions", "queries", "staleTime", "QUERY_DEFAULTS", "STALE_TIME", "gcTime", "CACHE_TIME", "retry", "failureCount", "status", "RETRY_COUNT", "retryDelay", "RETRY_DELAY", "networkMode", "refetchOnWindowFocus", "refetchOnReconnect", "mutations", "MUTATION_DEFAULTS", "enabled", "refetchOnMount", "options", "queryKeys", "forEach", "queryKey", "clear"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6061254aef230b8b748000f2685555698ca7ba4b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2jrazq6h34 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jrazq6h34();
cov_2jrazq6h34().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2jrazq6h34().f[0]++;
  cov_2jrazq6h34().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2jrazq6h34().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2jrazq6h34().s[3]++;
_export(exports, {
  clearQueryCache: function () {
    /* istanbul ignore next */
    cov_2jrazq6h34().f[1]++;
    cov_2jrazq6h34().s[4]++;
    return clearQueryCache;
  },
  createApiQueryConfig: function () {
    /* istanbul ignore next */
    cov_2jrazq6h34().f[2]++;
    cov_2jrazq6h34().s[5]++;
    return createApiQueryConfig;
  },
  createImageProcessingQueryConfig: function () {
    /* istanbul ignore next */
    cov_2jrazq6h34().f[3]++;
    cov_2jrazq6h34().s[6]++;
    return createImageProcessingQueryConfig;
  },
  createMutationConfig: function () {
    /* istanbul ignore next */
    cov_2jrazq6h34().f[4]++;
    cov_2jrazq6h34().s[7]++;
    return createMutationConfig;
  },
  invalidateQueries: function () {
    /* istanbul ignore next */
    cov_2jrazq6h34().f[5]++;
    cov_2jrazq6h34().s[8]++;
    return invalidateQueries;
  },
  queryClient: function () {
    /* istanbul ignore next */
    cov_2jrazq6h34().f[6]++;
    cov_2jrazq6h34().s[9]++;
    return queryClient;
  }
});
const _reactquery =
/* istanbul ignore next */
(cov_2jrazq6h34().s[10]++, require("@tanstack/react-query"));
const _constants =
/* istanbul ignore next */
(cov_2jrazq6h34().s[11]++, require("./constants"));
const _errortypes =
/* istanbul ignore next */
(cov_2jrazq6h34().s[12]++, require("../types/error.types"));
// Error handler for React Query (utility function for future use)
// eslint-disable-next-line @typescript-eslint/no-unused-vars
/* istanbul ignore next */
cov_2jrazq6h34().s[13]++;
const handleQueryError = error => {
  /* istanbul ignore next */
  cov_2jrazq6h34().f[7]++;
  cov_2jrazq6h34().s[14]++;
  if (error instanceof Error) {
    /* istanbul ignore next */
    cov_2jrazq6h34().b[0][0]++;
    cov_2jrazq6h34().s[15]++;
    // Check for network errors
    if (
    /* istanbul ignore next */
    (cov_2jrazq6h34().b[2][0]++, 'code' in error) &&
    /* istanbul ignore next */
    (cov_2jrazq6h34().b[2][1]++, error.code === 'NETWORK_ERROR')) {
      /* istanbul ignore next */
      cov_2jrazq6h34().b[1][0]++;
      cov_2jrazq6h34().s[16]++;
      return (0, _errortypes.createNetworkError)(error.message);
    } else
    /* istanbul ignore next */
    {
      cov_2jrazq6h34().b[1][1]++;
    }
    // Check for timeout errors
    cov_2jrazq6h34().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_2jrazq6h34().b[4][0]++, error.message.includes('timeout')) ||
    /* istanbul ignore next */
    (cov_2jrazq6h34().b[4][1]++, error.message.includes('TIMEOUT'))) {
      /* istanbul ignore next */
      cov_2jrazq6h34().b[3][0]++;
      cov_2jrazq6h34().s[18]++;
      return (0, _errortypes.createTimeoutError)(error.message);
    } else
    /* istanbul ignore next */
    {
      cov_2jrazq6h34().b[3][1]++;
    }
    // Return as-is if already a BusinessLayerError
    cov_2jrazq6h34().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_2jrazq6h34().b[6][0]++, 'code' in error) &&
    /* istanbul ignore next */
    (cov_2jrazq6h34().b[6][1]++, 'timestamp' in error)) {
      /* istanbul ignore next */
      cov_2jrazq6h34().b[5][0]++;
      cov_2jrazq6h34().s[20]++;
      return error;
    } else
    /* istanbul ignore next */
    {
      cov_2jrazq6h34().b[5][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2jrazq6h34().b[0][1]++;
  }
  // Default error handling
  cov_2jrazq6h34().s[21]++;
  return {
    name: 'BusinessLayerError',
    message: error instanceof Error ?
    /* istanbul ignore next */
    (cov_2jrazq6h34().b[7][0]++, error.message) :
    /* istanbul ignore next */
    (cov_2jrazq6h34().b[7][1]++, 'An unknown error occurred'),
    code: 'UNKNOWN_ERROR',
    timestamp: new Date().toISOString()
  };
};
const queryClient =
/* istanbul ignore next */
(cov_2jrazq6h34().s[22]++, new _reactquery.QueryClient({
  defaultOptions: {
    queries: {
      staleTime: _constants.QUERY_DEFAULTS.STALE_TIME,
      gcTime: _constants.QUERY_DEFAULTS.CACHE_TIME,
      retry: (failureCount, error) => {
        /* istanbul ignore next */
        cov_2jrazq6h34().f[8]++;
        cov_2jrazq6h34().s[23]++;
        // Don't retry on 4xx errors (client errors)
        if (
        /* istanbul ignore next */
        (cov_2jrazq6h34().b[9][0]++, error) &&
        /* istanbul ignore next */
        (cov_2jrazq6h34().b[9][1]++, typeof error === 'object') &&
        /* istanbul ignore next */
        (cov_2jrazq6h34().b[9][2]++, 'status' in error)) {
          /* istanbul ignore next */
          cov_2jrazq6h34().b[8][0]++;
          const status =
          /* istanbul ignore next */
          (cov_2jrazq6h34().s[24]++, error.status);
          /* istanbul ignore next */
          cov_2jrazq6h34().s[25]++;
          if (
          /* istanbul ignore next */
          (cov_2jrazq6h34().b[11][0]++, status >= 400) &&
          /* istanbul ignore next */
          (cov_2jrazq6h34().b[11][1]++, status < 500)) {
            /* istanbul ignore next */
            cov_2jrazq6h34().b[10][0]++;
            cov_2jrazq6h34().s[26]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_2jrazq6h34().b[10][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2jrazq6h34().b[8][1]++;
        }
        cov_2jrazq6h34().s[27]++;
        return failureCount < _constants.QUERY_DEFAULTS.RETRY_COUNT;
      },
      retryDelay: _constants.QUERY_DEFAULTS.RETRY_DELAY,
      networkMode: 'online',
      refetchOnWindowFocus: false,
      refetchOnReconnect: true
    },
    mutations: {
      retry: (failureCount, error) => {
        /* istanbul ignore next */
        cov_2jrazq6h34().f[9]++;
        cov_2jrazq6h34().s[28]++;
        // Don't retry mutations on 4xx errors
        if (
        /* istanbul ignore next */
        (cov_2jrazq6h34().b[13][0]++, error) &&
        /* istanbul ignore next */
        (cov_2jrazq6h34().b[13][1]++, typeof error === 'object') &&
        /* istanbul ignore next */
        (cov_2jrazq6h34().b[13][2]++, 'status' in error)) {
          /* istanbul ignore next */
          cov_2jrazq6h34().b[12][0]++;
          const status =
          /* istanbul ignore next */
          (cov_2jrazq6h34().s[29]++, error.status);
          /* istanbul ignore next */
          cov_2jrazq6h34().s[30]++;
          if (
          /* istanbul ignore next */
          (cov_2jrazq6h34().b[15][0]++, status >= 400) &&
          /* istanbul ignore next */
          (cov_2jrazq6h34().b[15][1]++, status < 500)) {
            /* istanbul ignore next */
            cov_2jrazq6h34().b[14][0]++;
            cov_2jrazq6h34().s[31]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_2jrazq6h34().b[14][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2jrazq6h34().b[12][1]++;
        }
        cov_2jrazq6h34().s[32]++;
        return failureCount < _constants.MUTATION_DEFAULTS.RETRY_COUNT;
      },
      retryDelay: _constants.MUTATION_DEFAULTS.RETRY_DELAY,
      networkMode: 'online'
    }
  }
}));
/* istanbul ignore next */
cov_2jrazq6h34().s[33]++;
const createImageProcessingQueryConfig = (enabled =
/* istanbul ignore next */
(cov_2jrazq6h34().b[16][0]++, true)) => {
  /* istanbul ignore next */
  cov_2jrazq6h34().f[10]++;
  cov_2jrazq6h34().s[34]++;
  return {
    staleTime: _constants.QUERY_DEFAULTS.STALE_TIME,
    gcTime: _constants.QUERY_DEFAULTS.CACHE_TIME,
    retry: 1,
    enabled,
    refetchOnMount: false,
    refetchOnWindowFocus: false
  };
};
/* istanbul ignore next */
cov_2jrazq6h34().s[35]++;
const createApiQueryConfig = (enabled =
/* istanbul ignore next */
(cov_2jrazq6h34().b[17][0]++, true)) => {
  /* istanbul ignore next */
  cov_2jrazq6h34().f[11]++;
  cov_2jrazq6h34().s[36]++;
  return {
    staleTime: _constants.QUERY_DEFAULTS.STALE_TIME,
    gcTime: _constants.QUERY_DEFAULTS.CACHE_TIME,
    retry: _constants.QUERY_DEFAULTS.RETRY_COUNT,
    retryDelay: _constants.QUERY_DEFAULTS.RETRY_DELAY,
    enabled,
    refetchOnMount: true,
    refetchOnWindowFocus: false
  };
};
/* istanbul ignore next */
cov_2jrazq6h34().s[37]++;
const createMutationConfig = options => {
  /* istanbul ignore next */
  cov_2jrazq6h34().f[12]++;
  cov_2jrazq6h34().s[38]++;
  return {
    retry: _constants.MUTATION_DEFAULTS.RETRY_COUNT,
    retryDelay: _constants.MUTATION_DEFAULTS.RETRY_DELAY,
    networkMode: 'online',
    ...options
  };
};
/* istanbul ignore next */
cov_2jrazq6h34().s[39]++;
const invalidateQueries = queryKeys => {
  /* istanbul ignore next */
  cov_2jrazq6h34().f[13]++;
  cov_2jrazq6h34().s[40]++;
  queryKeys.forEach(queryKey => {
    /* istanbul ignore next */
    cov_2jrazq6h34().f[14]++;
    cov_2jrazq6h34().s[41]++;
    queryClient.invalidateQueries({
      queryKey
    });
  });
};
/* istanbul ignore next */
cov_2jrazq6h34().s[42]++;
const clearQueryCache = () => {
  /* istanbul ignore next */
  cov_2jrazq6h34().f[15]++;
  cov_2jrazq6h34().s[43]++;
  queryClient.clear();
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,