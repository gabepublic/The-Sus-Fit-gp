38369a0fb9a24e43bcf7915190187551
/**
 * OpenAI Environment Configuration Helper
 * 
 * Centralized retrieval and validation of OpenAI secrets for all server code.
 * This helper provides fail-fast validation to ensure required environment
 * variables are present before the application starts.
 */"use strict";

/* istanbul ignore next */
function cov_1ts3oea7bw() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/lib/getEnv.ts";
  var hash = "65acc5443e473612fe4df35f252e8bba59cd50d0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/lib/getEnv.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "1": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "2": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 15,
          column: 7
        }
      },
      "3": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 22
        }
      },
      "5": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "6": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "7": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 42
        }
      },
      "8": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "10": {
        start: {
          line: 30,
          column: 18
        },
        end: {
          line: 30,
          column: 42
        }
      },
      "11": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 38
        }
      },
      "12": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 35,
          column: 6
        }
      },
      "13": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "14": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 42
        }
      },
      "15": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 25
        }
      },
      "17": {
        start: {
          line: 42,
          column: 18
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "18": {
        start: {
          line: 43,
          column: 25
        },
        end: {
          line: 43,
          column: 38
        }
      },
      "19": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 47,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 16
          }
        },
        loc: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 13
          }
        },
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 20
          },
          end: {
            line: 21,
            column: 21
          }
        },
        loc: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 16
          }
        },
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 37,
            column: 24
          }
        },
        loc: {
          start: {
            line: 37,
            column: 27
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 37
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 12
          }
        }, {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 33
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 46
          },
          end: {
            line: 34,
            column: 51
          }
        }, {
          start: {
            line: 34,
            column: 54
          },
          end: {
            line: 34,
            column: 66
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 43
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 12
          }
        }, {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 39,
            column: 33
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 46
          },
          end: {
            line: 46,
            column: 51
          }
        }, {
          start: {
            line: 46,
            column: 54
          },
          end: {
            line: 46,
            column: 66
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 43
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/lib/getEnv.ts"],
      sourcesContent: ["/**\n * OpenAI Environment Configuration Helper\n * \n * Centralized retrieval and validation of OpenAI secrets for all server code.\n * This helper provides fail-fast validation to ensure required environment\n * variables are present before the application starts.\n */\n\nexport interface OpenAIEnv {\n  key: string;\n  model: string;\n}\n\n/**\n * Retrieves and validates OpenAI environment variables\n * @returns OpenAIEnv object with validated API key and model\n * @throws Error if OPENAI_API_KEY is not found\n */\nexport const getEnv = (): OpenAIEnv => {\n  const key = process.env.OPENAI_API_KEY;\n  \n  if (!key || key.trim() === '') {\n    throw new Error('OPENAI_API_KEY not found');\n  }\n  \n  const model = process.env.OPENAI_MODEL;\n  const defaultModel = 'gpt-image-1';\n  \n  return {\n    key,\n    model: model && model.trim() !== '' ? model : defaultModel,\n  };\n};\n\n/**\n * Alternative function that returns undefined instead of throwing\n * Useful for optional OpenAI features\n */\nexport const getEnvOptional = (): OpenAIEnv | undefined => {\n  const key = process.env.OPENAI_API_KEY;\n  \n  if (!key || key.trim() === '') {\n    return undefined;\n  }\n  \n  const model = process.env.OPENAI_MODEL;\n  const defaultModel = 'gpt-image-1';\n  \n  return {\n    key,\n    model: model && model.trim() !== '' ? model : defaultModel,\n  };\n}; "],
      names: ["getEnv", "getEnvOptional", "key", "process", "env", "OPENAI_API_KEY", "trim", "Error", "model", "OPENAI_MODEL", "defaultModel", "undefined"],
      mappings: "AAAA;;;;;;CAMC;;;;;;;;;;;IAYYA,MAAM;eAANA;;IAoBAC,cAAc;eAAdA;;;AApBN,MAAMD,SAAS;IACpB,MAAME,MAAMC,QAAQC,GAAG,CAACC,cAAc;IAEtC,IAAI,CAACH,OAAOA,IAAII,IAAI,OAAO,IAAI;QAC7B,MAAM,IAAIC,MAAM;IAClB;IAEA,MAAMC,QAAQL,QAAQC,GAAG,CAACK,YAAY;IACtC,MAAMC,eAAe;IAErB,OAAO;QACLR;QACAM,OAAOA,SAASA,MAAMF,IAAI,OAAO,KAAKE,QAAQE;IAChD;AACF;AAMO,MAAMT,iBAAiB;IAC5B,MAAMC,MAAMC,QAAQC,GAAG,CAACC,cAAc;IAEtC,IAAI,CAACH,OAAOA,IAAII,IAAI,OAAO,IAAI;QAC7B,OAAOK;IACT;IAEA,MAAMH,QAAQL,QAAQC,GAAG,CAACK,YAAY;IACtC,MAAMC,eAAe;IAErB,OAAO;QACLR;QACAM,OAAOA,SAASA,MAAMF,IAAI,OAAO,KAAKE,QAAQE;IAChD;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "65acc5443e473612fe4df35f252e8bba59cd50d0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ts3oea7bw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ts3oea7bw();
cov_1ts3oea7bw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1ts3oea7bw().f[0]++;
  cov_1ts3oea7bw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1ts3oea7bw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1ts3oea7bw().s[3]++;
_export(exports, {
  getEnv: function () {
    /* istanbul ignore next */
    cov_1ts3oea7bw().f[1]++;
    cov_1ts3oea7bw().s[4]++;
    return getEnv;
  },
  getEnvOptional: function () {
    /* istanbul ignore next */
    cov_1ts3oea7bw().f[2]++;
    cov_1ts3oea7bw().s[5]++;
    return getEnvOptional;
  }
});
/* istanbul ignore next */
cov_1ts3oea7bw().s[6]++;
const getEnv = () => {
  /* istanbul ignore next */
  cov_1ts3oea7bw().f[3]++;
  const key =
  /* istanbul ignore next */
  (cov_1ts3oea7bw().s[7]++, process.env.OPENAI_API_KEY);
  /* istanbul ignore next */
  cov_1ts3oea7bw().s[8]++;
  if (
  /* istanbul ignore next */
  (cov_1ts3oea7bw().b[1][0]++, !key) ||
  /* istanbul ignore next */
  (cov_1ts3oea7bw().b[1][1]++, key.trim() === '')) {
    /* istanbul ignore next */
    cov_1ts3oea7bw().b[0][0]++;
    cov_1ts3oea7bw().s[9]++;
    throw new Error('OPENAI_API_KEY not found');
  } else
  /* istanbul ignore next */
  {
    cov_1ts3oea7bw().b[0][1]++;
  }
  const model =
  /* istanbul ignore next */
  (cov_1ts3oea7bw().s[10]++, process.env.OPENAI_MODEL);
  const defaultModel =
  /* istanbul ignore next */
  (cov_1ts3oea7bw().s[11]++, 'gpt-image-1');
  /* istanbul ignore next */
  cov_1ts3oea7bw().s[12]++;
  return {
    key,
    model:
    /* istanbul ignore next */
    (cov_1ts3oea7bw().b[3][0]++, model) &&
    /* istanbul ignore next */
    (cov_1ts3oea7bw().b[3][1]++, model.trim() !== '') ?
    /* istanbul ignore next */
    (cov_1ts3oea7bw().b[2][0]++, model) :
    /* istanbul ignore next */
    (cov_1ts3oea7bw().b[2][1]++, defaultModel)
  };
};
/* istanbul ignore next */
cov_1ts3oea7bw().s[13]++;
const getEnvOptional = () => {
  /* istanbul ignore next */
  cov_1ts3oea7bw().f[4]++;
  const key =
  /* istanbul ignore next */
  (cov_1ts3oea7bw().s[14]++, process.env.OPENAI_API_KEY);
  /* istanbul ignore next */
  cov_1ts3oea7bw().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_1ts3oea7bw().b[5][0]++, !key) ||
  /* istanbul ignore next */
  (cov_1ts3oea7bw().b[5][1]++, key.trim() === '')) {
    /* istanbul ignore next */
    cov_1ts3oea7bw().b[4][0]++;
    cov_1ts3oea7bw().s[16]++;
    return undefined;
  } else
  /* istanbul ignore next */
  {
    cov_1ts3oea7bw().b[4][1]++;
  }
  const model =
  /* istanbul ignore next */
  (cov_1ts3oea7bw().s[17]++, process.env.OPENAI_MODEL);
  const defaultModel =
  /* istanbul ignore next */
  (cov_1ts3oea7bw().s[18]++, 'gpt-image-1');
  /* istanbul ignore next */
  cov_1ts3oea7bw().s[19]++;
  return {
    key,
    model:
    /* istanbul ignore next */
    (cov_1ts3oea7bw().b[7][0]++, model) &&
    /* istanbul ignore next */
    (cov_1ts3oea7bw().b[7][1]++, model.trim() !== '') ?
    /* istanbul ignore next */
    (cov_1ts3oea7bw().b[6][0]++, model) :
    /* istanbul ignore next */
    (cov_1ts3oea7bw().b[6][1]++, defaultModel)
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,