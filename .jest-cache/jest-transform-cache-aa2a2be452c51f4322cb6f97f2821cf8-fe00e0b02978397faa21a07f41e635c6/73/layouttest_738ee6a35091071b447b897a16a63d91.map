{"version":3,"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/__tests__/app/layout.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render } from '@testing-library/react'\nimport RootLayout from '@/app/layout'\n\n// Mock next/font/google\njest.mock('next/font/google', () => ({\n  Montserrat_Alternates: () => ({\n    variable: '--font-Montserrat-Alternates-sans',\n    style: { fontFamily: 'Montserrat Alternates' }\n  }),\n  Nabla: () => ({\n    variable: '--font-Nabla-sans',\n    style: { fontFamily: 'Nabla' }\n  }),\n  Fascinate: () => ({\n    variable: '--font-Fascinate-sans',\n    style: { fontFamily: 'Fascinate' }\n  })\n}))\n\n// Mock next/head for metadata testing\njest.mock('next/head', () => {\n  return function Head({ children }: { children: React.ReactNode }) {\n    return <>{children}</>\n  }\n})\n\ndescribe('RootLayout', () => {\n  it('renders without crashing', () => {\n    const { container } = render(\n      <RootLayout>\n        <div>Test content</div>\n      </RootLayout>\n    )\n    \n    expect(container).toBeInTheDocument()\n  })\n\n  it('renders children correctly', () => {\n    const { getByText } = render(\n      <RootLayout>\n        <div>Test child content</div>\n      </RootLayout>\n    )\n    \n    expect(getByText('Test child content')).toBeInTheDocument()\n  })\n\n  it('exports correct metadata', () => {\n    // Import the metadata directly to test it\n    const { metadata } = require('@/app/layout')\n    \n    expect(metadata).toEqual({\n      title: \"The Sus Fit\",\n      description: \"we be doin' the most - a Those People production\"\n    })\n  })\n\n  it('has correct component structure', () => {\n    const { container } = render(\n      <RootLayout>\n        <div>Test content</div>\n      </RootLayout>\n    )\n    \n    // Test that the component renders without throwing\n    expect(container).toBeInTheDocument()\n    \n    // Test that children are present\n    expect(container.textContent).toContain('Test content')\n  })\n}) "],"names":["jest","mock","Montserrat_Alternates","variable","style","fontFamily","Nabla","Fascinate","Head","children","describe","it","container","render","RootLayout","div","expect","toBeInTheDocument","getByText","metadata","require","toEqual","title","description","textContent","toContain"],"mappings":";AAIA,wBAAwB;AACxBA,KAAKC,IAAI,CAAC,oBAAoB,IAAO,CAAA;QACnCC,uBAAuB,IAAO,CAAA;gBAC5BC,UAAU;gBACVC,OAAO;oBAAEC,YAAY;gBAAwB;YAC/C,CAAA;QACAC,OAAO,IAAO,CAAA;gBACZH,UAAU;gBACVC,OAAO;oBAAEC,YAAY;gBAAQ;YAC/B,CAAA;QACAE,WAAW,IAAO,CAAA;gBAChBJ,UAAU;gBACVC,OAAO;oBAAEC,YAAY;gBAAY;YACnC,CAAA;IACF,CAAA;AAEA,sCAAsC;AACtCL,KAAKC,IAAI,CAAC,aAAa;IACrB,OAAO,SAASO,KAAK,EAAEC,QAAQ,EAAiC;QAC9D,qBAAO;sBAAGA;;IACZ;AACF;;;;;8DAzBkB;wBACK;+DACA;;;;;;AAyBvBC,SAAS,cAAc;IACrBC,GAAG,4BAA4B;QAC7B,MAAM,EAAEC,SAAS,EAAE,GAAGC,IAAAA,cAAM,gBAC1B,qBAACC,eAAU;sBACT,cAAA,qBAACC;0BAAI;;;QAITC,OAAOJ,WAAWK,iBAAiB;IACrC;IAEAN,GAAG,8BAA8B;QAC/B,MAAM,EAAEO,SAAS,EAAE,GAAGL,IAAAA,cAAM,gBAC1B,qBAACC,eAAU;sBACT,cAAA,qBAACC;0BAAI;;;QAITC,OAAOE,UAAU,uBAAuBD,iBAAiB;IAC3D;IAEAN,GAAG,4BAA4B;QAC7B,0CAA0C;QAC1C,MAAM,EAAEQ,QAAQ,EAAE,GAAGC,QAAQ;QAE7BJ,OAAOG,UAAUE,OAAO,CAAC;YACvBC,OAAO;YACPC,aAAa;QACf;IACF;IAEAZ,GAAG,mCAAmC;QACpC,MAAM,EAAEC,SAAS,EAAE,GAAGC,IAAAA,cAAM,gBAC1B,qBAACC,eAAU;sBACT,cAAA,qBAACC;0BAAI;;;QAIT,mDAAmD;QACnDC,OAAOJ,WAAWK,iBAAiB;QAEnC,iCAAiC;QACjCD,OAAOJ,UAAUY,WAAW,EAAEC,SAAS,CAAC;IAC1C;AACF"}