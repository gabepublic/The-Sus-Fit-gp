35f869377a6b84e1546f343f39d2e7ec
"use strict";
// Mock the dependencies
jest.mock('@/lib/openaiClient', ()=>({
        generateTryOn: jest.fn()
    }));
jest.mock('@/lib/tryOnSchema', ()=>({
        tryOnSchema: {
            type: 'object'
        },
        TryOnRequest: {
            type: 'object'
        },
        TryOnResponse: {
            type: 'object'
        }
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _index = /*#__PURE__*/ _interop_require_wildcard(require("../../src/lib/index"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
describe('lib/index exports', ()=>{
    it('exports generateTryOn function', ()=>{
        expect(typeof _index.generateTryOn).toBe('function');
    });
    it('exports all expected functions and types', ()=>{
        expect(_index).toHaveProperty('generateTryOn');
        expect(_index).toHaveProperty('tryOnSchema');
        expect(_index).toHaveProperty('TryOnRequest');
        expect(_index).toHaveProperty('TryOnResponse');
    });
    it('generateTryOn is callable', ()=>{
        expect(typeof _index.generateTryOn).toBe('function');
    });
    it('exports are not undefined', ()=>{
        expect(_index.generateTryOn).toBeDefined();
        expect(_index.tryOnSchema).toBeDefined();
        expect(_index.TryOnRequest).toBeDefined();
        expect(_index.TryOnResponse).toBeDefined();
    });
    it('maintains function signature', ()=>{
        // Test that the function can be called (even if mocked)
        expect(()=>{
            (0, _index.generateTryOn)({});
        }).not.toThrow();
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsc3RyZWV0ZXIvV2Vic3Rvcm1Qcm9qZWN0cy92aWJlLWNvZGluZy90aG9zZS1wZW9wbGUvVGhlLVN1cy1GaXQtZ3AvX190ZXN0c19fL2xpYi9pbmRleC50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdlbmVyYXRlVHJ5T24gfSBmcm9tICdAL2xpYi9pbmRleCdcbmltcG9ydCAqIGFzIGxpYkV4cG9ydHMgZnJvbSAnQC9saWIvaW5kZXgnXG5cbi8vIE1vY2sgdGhlIGRlcGVuZGVuY2llc1xuamVzdC5tb2NrKCdAL2xpYi9vcGVuYWlDbGllbnQnLCAoKSA9PiAoe1xuICBnZW5lcmF0ZVRyeU9uOiBqZXN0LmZuKClcbn0pKVxuXG5qZXN0Lm1vY2soJ0AvbGliL3RyeU9uU2NoZW1hJywgKCkgPT4gKHtcbiAgdHJ5T25TY2hlbWE6IHsgdHlwZTogJ29iamVjdCcgfSxcbiAgVHJ5T25SZXF1ZXN0OiB7IHR5cGU6ICdvYmplY3QnIH0sXG4gIFRyeU9uUmVzcG9uc2U6IHsgdHlwZTogJ29iamVjdCcgfVxufSkpXG5cbmRlc2NyaWJlKCdsaWIvaW5kZXggZXhwb3J0cycsICgpID0+IHtcbiAgaXQoJ2V4cG9ydHMgZ2VuZXJhdGVUcnlPbiBmdW5jdGlvbicsICgpID0+IHtcbiAgICBleHBlY3QodHlwZW9mIGdlbmVyYXRlVHJ5T24pLnRvQmUoJ2Z1bmN0aW9uJylcbiAgfSlcblxuICBpdCgnZXhwb3J0cyBhbGwgZXhwZWN0ZWQgZnVuY3Rpb25zIGFuZCB0eXBlcycsICgpID0+IHtcbiAgICBleHBlY3QobGliRXhwb3J0cykudG9IYXZlUHJvcGVydHkoJ2dlbmVyYXRlVHJ5T24nKVxuICAgIGV4cGVjdChsaWJFeHBvcnRzKS50b0hhdmVQcm9wZXJ0eSgndHJ5T25TY2hlbWEnKVxuICAgIGV4cGVjdChsaWJFeHBvcnRzKS50b0hhdmVQcm9wZXJ0eSgnVHJ5T25SZXF1ZXN0JylcbiAgICBleHBlY3QobGliRXhwb3J0cykudG9IYXZlUHJvcGVydHkoJ1RyeU9uUmVzcG9uc2UnKVxuICB9KVxuXG4gIGl0KCdnZW5lcmF0ZVRyeU9uIGlzIGNhbGxhYmxlJywgKCkgPT4ge1xuICAgIGV4cGVjdCh0eXBlb2YgbGliRXhwb3J0cy5nZW5lcmF0ZVRyeU9uKS50b0JlKCdmdW5jdGlvbicpXG4gIH0pXG5cbiAgaXQoJ2V4cG9ydHMgYXJlIG5vdCB1bmRlZmluZWQnLCAoKSA9PiB7XG4gICAgZXhwZWN0KGxpYkV4cG9ydHMuZ2VuZXJhdGVUcnlPbikudG9CZURlZmluZWQoKVxuICAgIGV4cGVjdChsaWJFeHBvcnRzLnRyeU9uU2NoZW1hKS50b0JlRGVmaW5lZCgpXG4gICAgZXhwZWN0KGxpYkV4cG9ydHMuVHJ5T25SZXF1ZXN0KS50b0JlRGVmaW5lZCgpXG4gICAgZXhwZWN0KGxpYkV4cG9ydHMuVHJ5T25SZXNwb25zZSkudG9CZURlZmluZWQoKVxuICB9KVxuXG4gIGl0KCdtYWludGFpbnMgZnVuY3Rpb24gc2lnbmF0dXJlJywgKCkgPT4ge1xuICAgIC8vIFRlc3QgdGhhdCB0aGUgZnVuY3Rpb24gY2FuIGJlIGNhbGxlZCAoZXZlbiBpZiBtb2NrZWQpXG4gICAgZXhwZWN0KCgpID0+IHtcbiAgICAgIGdlbmVyYXRlVHJ5T24oe30gYXMgYW55KVxuICAgIH0pLm5vdC50b1Rocm93KClcbiAgfSlcbn0pICJdLCJuYW1lcyI6WyJqZXN0IiwibW9jayIsImdlbmVyYXRlVHJ5T24iLCJmbiIsInRyeU9uU2NoZW1hIiwidHlwZSIsIlRyeU9uUmVxdWVzdCIsIlRyeU9uUmVzcG9uc2UiLCJkZXNjcmliZSIsIml0IiwiZXhwZWN0IiwidG9CZSIsImxpYkV4cG9ydHMiLCJ0b0hhdmVQcm9wZXJ0eSIsInRvQmVEZWZpbmVkIiwibm90IiwidG9UaHJvdyJdLCJtYXBwaW5ncyI6IjtBQUdBLHdCQUF3QjtBQUN4QkEsS0FBS0MsSUFBSSxDQUFDLHNCQUFzQixJQUFPLENBQUE7UUFDckNDLGVBQWVGLEtBQUtHLEVBQUU7SUFDeEIsQ0FBQTtBQUVBSCxLQUFLQyxJQUFJLENBQUMscUJBQXFCLElBQU8sQ0FBQTtRQUNwQ0csYUFBYTtZQUFFQyxNQUFNO1FBQVM7UUFDOUJDLGNBQWM7WUFBRUQsTUFBTTtRQUFTO1FBQy9CRSxlQUFlO1lBQUVGLE1BQU07UUFBUztJQUNsQyxDQUFBOzs7OytEQVo4Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBYzlCRyxTQUFTLHFCQUFxQjtJQUM1QkMsR0FBRyxrQ0FBa0M7UUFDbkNDLE9BQU8sT0FBT1Isb0JBQWEsRUFBRVMsSUFBSSxDQUFDO0lBQ3BDO0lBRUFGLEdBQUcsNENBQTRDO1FBQzdDQyxPQUFPRSxRQUFZQyxjQUFjLENBQUM7UUFDbENILE9BQU9FLFFBQVlDLGNBQWMsQ0FBQztRQUNsQ0gsT0FBT0UsUUFBWUMsY0FBYyxDQUFDO1FBQ2xDSCxPQUFPRSxRQUFZQyxjQUFjLENBQUM7SUFDcEM7SUFFQUosR0FBRyw2QkFBNkI7UUFDOUJDLE9BQU8sT0FBT0UsT0FBV1YsYUFBYSxFQUFFUyxJQUFJLENBQUM7SUFDL0M7SUFFQUYsR0FBRyw2QkFBNkI7UUFDOUJDLE9BQU9FLE9BQVdWLGFBQWEsRUFBRVksV0FBVztRQUM1Q0osT0FBT0UsT0FBV1IsV0FBVyxFQUFFVSxXQUFXO1FBQzFDSixPQUFPRSxPQUFXTixZQUFZLEVBQUVRLFdBQVc7UUFDM0NKLE9BQU9FLE9BQVdMLGFBQWEsRUFBRU8sV0FBVztJQUM5QztJQUVBTCxHQUFHLGdDQUFnQztRQUNqQyx3REFBd0Q7UUFDeERDLE9BQU87WUFDTFIsSUFBQUEsb0JBQWEsRUFBQyxDQUFDO1FBQ2pCLEdBQUdhLEdBQUcsQ0FBQ0MsT0FBTztJQUNoQjtBQUNGIn0=