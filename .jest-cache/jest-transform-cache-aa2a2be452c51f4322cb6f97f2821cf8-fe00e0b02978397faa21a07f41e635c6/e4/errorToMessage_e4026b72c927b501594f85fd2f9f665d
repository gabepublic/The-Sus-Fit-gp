20b7011ff45de92e65c70bd5f7dd5c80
/**
 * Error to Message Mapping Utility
 * 
 * Translates HTTP status codes and error types to user-friendly messages
 * for display in toast notifications.
 */"use strict";

/* istanbul ignore next */
function cov_1yq9m9m4dk() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/lib/errorToMessage.ts";
  var hash = "f3f4b1e027c740017ea19002b7fd8a5943964919";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/lib/errorToMessage.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 15,
          column: 3
        }
      },
      "2": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "3": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "4": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 104
        }
      },
      "5": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "6": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "7": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "8": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 54
        }
      },
      "9": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 53
        }
      },
      "10": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 54
        }
      },
      "11": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 53
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 24
          }
        },
        loc: {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 81
          },
          end: {
            line: 18,
            column: 95
          }
        }, {
          start: {
            line: 18,
            column: 98
          },
          end: {
            line: 18,
            column: 104
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 52
          }
        }, {
          start: {
            line: 18,
            column: 56
          },
          end: {
            line: 18,
            column: 78
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 21,
            column: 46
          }
        }, {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 59
          }
        }, {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 25,
            column: 54
          }
        }, {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 27,
            column: 53
          }
        }, {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 29,
            column: 54
          }
        }, {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 31,
            column: 53
          }
        }],
        line: 19
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/lib/errorToMessage.ts"],
      sourcesContent: ["/**\n * Error to Message Mapping Utility\n * \n * Translates HTTP status codes and error types to user-friendly messages\n * for display in toast notifications.\n */\n\nexport const errorToMessage = (status?: number | string): string => {\n  // Convert string numbers to actual numbers for comparison\n  const numericStatus = typeof status === 'string' && !isNaN(Number(status)) \n    ? Number(status) \n    : status;\n\n  switch (numericStatus) {\n    case 400:\n      return 'Invalid images uploaded.';\n    case 429:\n      return 'OpenAI rate limit reached, try later.';\n    case 'TIMEOUT':\n      return 'Request timed out, please retry.';\n    case 500:\n      return 'Server error, please try again.';\n    case 503:\n      return 'Service temporarily unavailable.';\n    default:\n      return 'Unexpected error, please retry.';\n  }\n};\n"],
      names: ["errorToMessage", "status", "numericStatus", "isNaN", "Number"],
      mappings: "AAAA;;;;;CAKC;;;;+BAEYA;;;eAAAA;;;AAAN,MAAMA,iBAAiB,CAACC;IAC7B,0DAA0D;IAC1D,MAAMC,gBAAgB,OAAOD,WAAW,YAAY,CAACE,MAAMC,OAAOH,WAC9DG,OAAOH,UACPA;IAEJ,OAAQC;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f3f4b1e027c740017ea19002b7fd8a5943964919"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1yq9m9m4dk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1yq9m9m4dk();
cov_1yq9m9m4dk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1yq9m9m4dk().s[1]++;
Object.defineProperty(exports, "errorToMessage", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1yq9m9m4dk().f[0]++;
    cov_1yq9m9m4dk().s[2]++;
    return errorToMessage;
  }
});
/* istanbul ignore next */
cov_1yq9m9m4dk().s[3]++;
const errorToMessage = status => {
  /* istanbul ignore next */
  cov_1yq9m9m4dk().f[1]++;
  // Convert string numbers to actual numbers for comparison
  const numericStatus =
  /* istanbul ignore next */
  (cov_1yq9m9m4dk().s[4]++,
  /* istanbul ignore next */
  (cov_1yq9m9m4dk().b[1][0]++, typeof status === 'string') &&
  /* istanbul ignore next */
  (cov_1yq9m9m4dk().b[1][1]++, !isNaN(Number(status))) ?
  /* istanbul ignore next */
  (cov_1yq9m9m4dk().b[0][0]++, Number(status)) :
  /* istanbul ignore next */
  (cov_1yq9m9m4dk().b[0][1]++, status));
  /* istanbul ignore next */
  cov_1yq9m9m4dk().s[5]++;
  switch (numericStatus) {
    case 400:
      /* istanbul ignore next */
      cov_1yq9m9m4dk().b[2][0]++;
      cov_1yq9m9m4dk().s[6]++;
      return 'Invalid images uploaded.';
    case 429:
      /* istanbul ignore next */
      cov_1yq9m9m4dk().b[2][1]++;
      cov_1yq9m9m4dk().s[7]++;
      return 'OpenAI rate limit reached, try later.';
    case 'TIMEOUT':
      /* istanbul ignore next */
      cov_1yq9m9m4dk().b[2][2]++;
      cov_1yq9m9m4dk().s[8]++;
      return 'Request timed out, please retry.';
    case 500:
      /* istanbul ignore next */
      cov_1yq9m9m4dk().b[2][3]++;
      cov_1yq9m9m4dk().s[9]++;
      return 'Server error, please try again.';
    case 503:
      /* istanbul ignore next */
      cov_1yq9m9m4dk().b[2][4]++;
      cov_1yq9m9m4dk().s[10]++;
      return 'Service temporarily unavailable.';
    default:
      /* istanbul ignore next */
      cov_1yq9m9m4dk().b[2][5]++;
      cov_1yq9m9m4dk().s[11]++;
      return 'Unexpected error, please retry.';
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXlxOW05bTRkayIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwidmVyc2lvbiIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsIm5hbWVzIiwibWFwcGluZ3MiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiZXJyb3JUb01lc3NhZ2UiLCJzdGF0dXMiLCJudW1lcmljU3RhdHVzIiwiaXNOYU4iLCJOdW1iZXIiXSwic291cmNlcyI6WyIvVXNlcnMvd2lsbHN0cmVldGVyL1dlYnN0b3JtUHJvamVjdHMvdmliZS1jb2RpbmcvdGhvc2UtcGVvcGxlL1RoZS1TdXMtRml0LWdwL3NyYy9saWIvZXJyb3JUb01lc3NhZ2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFcnJvciB0byBNZXNzYWdlIE1hcHBpbmcgVXRpbGl0eVxuICogXG4gKiBUcmFuc2xhdGVzIEhUVFAgc3RhdHVzIGNvZGVzIGFuZCBlcnJvciB0eXBlcyB0byB1c2VyLWZyaWVuZGx5IG1lc3NhZ2VzXG4gKiBmb3IgZGlzcGxheSBpbiB0b2FzdCBub3RpZmljYXRpb25zLlxuICovXG5cbmV4cG9ydCBjb25zdCBlcnJvclRvTWVzc2FnZSA9IChzdGF0dXM/OiBudW1iZXIgfCBzdHJpbmcpOiBzdHJpbmcgPT4ge1xuICAvLyBDb252ZXJ0IHN0cmluZyBudW1iZXJzIHRvIGFjdHVhbCBudW1iZXJzIGZvciBjb21wYXJpc29uXG4gIGNvbnN0IG51bWVyaWNTdGF0dXMgPSB0eXBlb2Ygc3RhdHVzID09PSAnc3RyaW5nJyAmJiAhaXNOYU4oTnVtYmVyKHN0YXR1cykpIFxuICAgID8gTnVtYmVyKHN0YXR1cykgXG4gICAgOiBzdGF0dXM7XG5cbiAgc3dpdGNoIChudW1lcmljU3RhdHVzKSB7XG4gICAgY2FzZSA0MDA6XG4gICAgICByZXR1cm4gJ0ludmFsaWQgaW1hZ2VzIHVwbG9hZGVkLic7XG4gICAgY2FzZSA0Mjk6XG4gICAgICByZXR1cm4gJ09wZW5BSSByYXRlIGxpbWl0IHJlYWNoZWQsIHRyeSBsYXRlci4nO1xuICAgIGNhc2UgJ1RJTUVPVVQnOlxuICAgICAgcmV0dXJuICdSZXF1ZXN0IHRpbWVkIG91dCwgcGxlYXNlIHJldHJ5Lic7XG4gICAgY2FzZSA1MDA6XG4gICAgICByZXR1cm4gJ1NlcnZlciBlcnJvciwgcGxlYXNlIHRyeSBhZ2Fpbi4nO1xuICAgIGNhc2UgNTAzOlxuICAgICAgcmV0dXJuICdTZXJ2aWNlIHRlbXBvcmFyaWx5IHVuYXZhaWxhYmxlLic7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAnVW5leHBlY3RlZCBlcnJvciwgcGxlYXNlIHJldHJ5Lic7XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7OztHQUtDOztBQUFBO0FBQUEsU0FBQUEsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBVSxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsY0FBQTtNQUFBQyxPQUFBO01BQUFDLE9BQUE7TUFBQUMsY0FBQTtNQUFBQyxLQUFBO01BQUFDLFFBQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUExQixJQUFBO0VBQUE7RUFBQSxJQUFBMkIsUUFBQSxHQUFBMUIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUF3QixRQUFBLENBQUE1QixJQUFBLEtBQUE0QixRQUFBLENBQUE1QixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBMkIsUUFBQSxDQUFBNUIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBd0IsY0FBQSxHQUFBRCxRQUFBLENBQUE1QixJQUFBO0VBQUE7SUFFWTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBOEIsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQTlCLGNBQUE7QUFBQUEsY0FBQSxHQUFBbUIsQ0FBQTs7Ozs7OytCQUFBOzs7Ozs7V0FBQVksY0FBQTs7Ozs7QUFBTixNQUFNQSxjQUFBLEdBQWtCQyxNQUFBO0VBQUE7RUFBQWhDLGNBQUEsR0FBQW9CLENBQUE7RUFDN0I7RUFDQSxNQUFNYSxhQUFBO0VBQUE7RUFBQSxDQUFBakMsY0FBQSxHQUFBbUIsQ0FBQTtFQUFnQjtFQUFBLENBQUFuQixjQUFBLEdBQUFxQixDQUFBLGlCQUFPVyxNQUFBLEtBQVc7RUFBQTtFQUFBLENBQUFoQyxjQUFBLEdBQUFxQixDQUFBLFVBQVksQ0FBQ2EsS0FBQSxDQUFNQyxNQUFBLENBQU9ILE1BQUE7RUFBQTtFQUFBLENBQUFoQyxjQUFBLEdBQUFxQixDQUFBLFVBQzlEYyxNQUFBLENBQU9ILE1BQUE7RUFBQTtFQUFBLENBQUFoQyxjQUFBLEdBQUFxQixDQUFBLFVBQ1BXLE1BQUE7RUFBQTtFQUFBaEMsY0FBQSxHQUFBbUIsQ0FBQTtFQUVKLFFBQVFjLGFBQUE7SUFDTixLQUFLO01BQUE7TUFBQWpDLGNBQUEsR0FBQXFCLENBQUE7TUFBQXJCLGNBQUEsR0FBQW1CLENBQUE7TUFDSCxPQUFPO0lBQ1QsS0FBSztNQUFBO01BQUFuQixjQUFBLEdBQUFxQixDQUFBO01BQUFyQixjQUFBLEdBQUFtQixDQUFBO01BQ0gsT0FBTztJQUNULEtBQUs7TUFBQTtNQUFBbkIsY0FBQSxHQUFBcUIsQ0FBQTtNQUFBckIsY0FBQSxHQUFBbUIsQ0FBQTtNQUNILE9BQU87SUFDVCxLQUFLO01BQUE7TUFBQW5CLGNBQUEsR0FBQXFCLENBQUE7TUFBQXJCLGNBQUEsR0FBQW1CLENBQUE7TUFDSCxPQUFPO0lBQ1QsS0FBSztNQUFBO01BQUFuQixjQUFBLEdBQUFxQixDQUFBO01BQUFyQixjQUFBLEdBQUFtQixDQUFBO01BQ0gsT0FBTztJQUNUO01BQUE7TUFBQW5CLGNBQUEsR0FBQXFCLENBQUE7TUFBQXJCLGNBQUEsR0FBQW1CLENBQUE7TUFDRSxPQUFPO0VBQ1g7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==