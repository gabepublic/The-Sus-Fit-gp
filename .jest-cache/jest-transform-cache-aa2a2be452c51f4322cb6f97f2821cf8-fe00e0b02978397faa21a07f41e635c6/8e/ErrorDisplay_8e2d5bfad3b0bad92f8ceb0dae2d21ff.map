{"version":3,"names":["ErrorModal","cov_1snge0kahi","f","s","ErrorToast","TryonErrorDisplay","useErrorDisplay","error","onRetry","onRecoveryAction","showTechnicalDetails","b","className","size","title","message","actions","canRetry","_errorHandling","formatErrorForDisplay","handleActionClick","action","type","window","open","alert","waitTime","setTimeout","console","log","sizeClasses","sm","md","lg","sizeClass","_jsxruntime","jsx","jsxs","viewBox","fill","fillRule","d","clipRule","Error","code","stack","length","map","index","onClick","description","some","a","isVisible","onDismiss","autoHideDuration","position","_react","default","useEffect","timer","clearTimeout","positionClasses","top","bottom","isOpen","onClose","stroke","strokeLinecap","strokeLinejoin","strokeWidth","setError","useState","showToast","setShowToast","showModal","setShowModal","displayError","mode","clearError","dismissToast","closeModal"],"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/components/ErrorDisplay.tsx"],"sourcesContent":["// Error Display Components\n// React components for displaying try-on errors with recovery actions\n\nimport React from 'react';\nimport {\n  formatErrorForDisplay,\n  type ErrorRecoveryAction\n} from '../utils/errorHandling';\n\n/**\n * Props for the TryonErrorDisplay component\n */\nexport interface TryonErrorDisplayProps {\n  /** Error to display */\n  error: unknown;\n  /** Called when user clicks retry */\n  onRetry?: () => void;\n  /** Called when user performs a recovery action */\n  onRecoveryAction?: (action: ErrorRecoveryAction) => void;\n  /** Whether to show technical details */\n  showTechnicalDetails?: boolean;\n  /** Custom className for styling */\n  className?: string;\n  /** Size variant */\n  size?: 'sm' | 'md' | 'lg';\n}\n\n/**\n * Comprehensive error display component for try-on errors\n */\nexport function TryonErrorDisplay({\n  error,\n  onRetry,\n  onRecoveryAction,\n  showTechnicalDetails = false,\n  className = '',\n  size = 'md'\n}: TryonErrorDisplayProps): React.JSX.Element {\n  const { title, message, actions, canRetry } = formatErrorForDisplay(error);\n\n  const handleActionClick = (action: ErrorRecoveryAction) => {\n    if (onRecoveryAction) {\n      onRecoveryAction(action);\n    } else {\n      // Default action handlers\n      switch (action.type) {\n        case 'retry':\n          onRetry?.();\n          break;\n        case 'check_connection':\n          window.open('https://support.google.com/chrome/answer/95669', '_blank');\n          break;\n        case 'reduce_image_size':\n          // Could trigger a modal with image compression tips\n          alert('Try reducing your image size to under 5MB or use a different image format.');\n          break;\n        case 'try_different_image':\n          alert('Please select a different image and try again.');\n          break;\n        case 'contact_support':\n          // Could open support modal or redirect to support page\n          alert('Please contact support if this issue persists.');\n          break;\n        case 'wait_and_retry':\n          if (action.waitTime) {\n            setTimeout(() => onRetry?.(), action.waitTime * 1000);\n            alert(`Will retry automatically in ${action.waitTime} seconds.`);\n          }\n          break;\n        default:\n          console.log(`Action not implemented: ${action.type}`);\n      }\n    }\n  };\n\n  const sizeClasses = {\n    sm: 'text-sm p-3',\n    md: 'text-base p-4',\n    lg: 'text-lg p-6'\n  };\n\n  const sizeClass = sizeClasses[size];\n\n  return (\n    <div className={`bg-red-50 border border-red-200 rounded-lg ${sizeClass} ${className}`}>\n      {/* Error Icon */}\n      <div className=\"flex items-start\">\n        <div className=\"flex-shrink-0\">\n          <svg\n            className=\"h-5 w-5 text-red-400\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </div>\n        \n        <div className=\"ml-3 flex-1\">\n          {/* Error Title */}\n          <h3 className=\"text-red-800 font-medium\">\n            {title}\n          </h3>\n          \n          {/* Error Message */}\n          <p className=\"mt-1 text-red-700\">\n            {message}\n          </p>\n          \n          {/* Technical Details (if enabled) */}\n          {showTechnicalDetails && error instanceof Error && (\n            <details className=\"mt-2\">\n              <summary className=\"text-red-600 text-sm cursor-pointer hover:text-red-800\">\n                Technical Details\n              </summary>\n              <div className=\"mt-1 text-xs text-red-600 bg-red-100 p-2 rounded font-mono\">\n                <div><strong>Error:</strong> {error.message}</div>\n                {(error as Error & { code?: string }).code && (\n                  <div><strong>Code:</strong> {(error as Error & { code?: string }).code}</div>\n                )}\n                {error.stack && (\n                  <div className=\"mt-1\">\n                    <strong>Stack:</strong>\n                    <pre className=\"whitespace-pre-wrap text-xs\">{error.stack}</pre>\n                  </div>\n                )}\n              </div>\n            </details>\n          )}\n          \n          {/* Recovery Actions */}\n          {actions.length > 0 && (\n            <div className=\"mt-3\">\n              <div className=\"flex flex-wrap gap-2\">\n                {actions.map((action, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handleActionClick(action)}\n                    className=\"inline-flex items-center px-3 py-1.5 border border-red-300 text-xs font-medium rounded text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                  >\n                    {action.description}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {/* Default Retry Button */}\n          {canRetry && !actions.some(a => a.type === 'retry') && onRetry && (\n            <div className=\"mt-3\">\n              <button\n                onClick={onRetry}\n                className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n              >\n                Try Again\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Props for the ErrorToast component\n */\nexport interface ErrorToastProps {\n  /** Error to display */\n  error: unknown;\n  /** Whether the toast is visible */\n  isVisible: boolean;\n  /** Called when toast should be dismissed */\n  onDismiss: () => void;\n  /** Auto-dismiss timeout in milliseconds */\n  autoHideDuration?: number;\n  /** Position of the toast */\n  position?: 'top' | 'bottom';\n}\n\n/**\n * Toast notification for errors\n */\nexport function ErrorToast({\n  error,\n  isVisible,\n  onDismiss,\n  autoHideDuration = 5000,\n  position = 'top'\n}: ErrorToastProps): React.JSX.Element | null {\n  const { title, message } = formatErrorForDisplay(error);\n\n  React.useEffect(() => {\n    if (isVisible && autoHideDuration > 0) {\n      const timer = setTimeout(onDismiss, autoHideDuration);\n      return () => clearTimeout(timer);\n    }\n  }, [isVisible, autoHideDuration, onDismiss]);\n\n  if (!isVisible) {\n    return null;\n  }\n\n  const positionClasses = {\n    top: 'top-4',\n    bottom: 'bottom-4'\n  };\n\n  return (\n    <div className={`fixed ${positionClasses[position]} right-4 z-50 max-w-sm w-full`}>\n      <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 shadow-lg\">\n        <div className=\"flex items-start\">\n          <div className=\"flex-shrink-0\">\n            <svg\n              className=\"h-5 w-5 text-red-400\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </div>\n          <div className=\"ml-3 flex-1\">\n            <p className=\"text-sm font-medium text-red-800\">\n              {title}\n            </p>\n            <p className=\"mt-1 text-sm text-red-700\">\n              {message}\n            </p>\n          </div>\n          <div className=\"ml-4 flex-shrink-0\">\n            <button\n              onClick={onDismiss}\n              className=\"inline-flex text-red-400 hover:text-red-600 focus:outline-none focus:text-red-600\"\n            >\n              <span className=\"sr-only\">Close</span>\n              <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Props for the ErrorModal component\n */\nexport interface ErrorModalProps {\n  /** Error to display */\n  error: unknown;\n  /** Whether the modal is open */\n  isOpen: boolean;\n  /** Called when modal should be closed */\n  onClose: () => void;\n  /** Called when user clicks retry */\n  onRetry?: () => void;\n  /** Called when user performs a recovery action */\n  onRecoveryAction?: (action: ErrorRecoveryAction) => void;\n  /** Whether to show technical details */\n  showTechnicalDetails?: boolean;\n}\n\n/**\n * Modal dialog for displaying detailed error information\n */\nexport function ErrorModal({\n  error,\n  isOpen,\n  onClose,\n  onRetry,\n  onRecoveryAction,\n  showTechnicalDetails = false\n}: ErrorModalProps): React.JSX.Element | null {\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        {/* Background overlay */}\n        <div \n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          onClick={onClose}\n        />\n        \n        {/* Modal content */}\n        <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\n          <div className=\"sm:flex sm:items-start\">\n            <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n              <svg\n                className=\"h-6 w-6 text-red-600\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n                />\n              </svg>\n            </div>\n            <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left flex-1\">\n              <TryonErrorDisplay\n                error={error}\n                onRetry={onRetry}\n                onRecoveryAction={onRecoveryAction}\n                showTechnicalDetails={showTechnicalDetails}\n                size=\"sm\"\n                className=\"border-0 bg-transparent p-0\"\n              />\n            </div>\n          </div>\n          \n          <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:ml-3 sm:w-auto sm:text-sm\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Hook for managing error display state\n */\nexport function useErrorDisplay() {\n  const [error, setError] = React.useState<unknown>(null);\n  const [showToast, setShowToast] = React.useState(false);\n  const [showModal, setShowModal] = React.useState(false);\n\n  const displayError = (error: unknown, mode: 'toast' | 'modal' = 'toast') => {\n    setError(error);\n    if (mode === 'toast') {\n      setShowToast(true);\n    } else {\n      setShowModal(true);\n    }\n  };\n\n  const clearError = () => {\n    setError(null);\n    setShowToast(false);\n    setShowModal(false);\n  };\n\n  const dismissToast = () => {\n    setShowToast(false);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  return {\n    error,\n    showToast,\n    showModal,\n    displayError,\n    clearError,\n    dismissToast,\n    closeModal\n  };\n}"],"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","ignoreList":[]}