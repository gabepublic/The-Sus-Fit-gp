{"version":3,"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/providers/FeatureFlagContext.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport type { \n  FeatureFlagContextValue\n} from '../types/featureFlag.types';\n\n// Create the Feature Flag Context\nexport const FeatureFlagContext = React.createContext<FeatureFlagContextValue | null>(null);\n\n// Context display name for debugging\nFeatureFlagContext.displayName = 'FeatureFlagContext';\n\n// Hook to use the feature flag context\nexport const useFeatureFlagContext = (): FeatureFlagContextValue => {\n  const context = React.useContext(FeatureFlagContext);\n  \n  if (!context) {\n    throw new Error(\n      'useFeatureFlagContext must be used within a FeatureFlagProvider. ' +\n      'Make sure to wrap your component tree with <FeatureFlagProvider>.'\n    );\n  }\n  \n  return context;\n};\n\n// Utility hook to check if context is available (for optional usage)\nexport const useFeatureFlagContextOptional = (): FeatureFlagContextValue | null => {\n  return React.useContext(FeatureFlagContext);\n};"],"names":["FeatureFlagContext","useFeatureFlagContext","useFeatureFlagContextOptional","React","createContext","displayName","context","useContext","Error"],"mappings":"AAAA;;;;;;;;;;;;IAQaA,kBAAkB;eAAlBA;;IAMAC,qBAAqB;eAArBA;;IAcAC,6BAA6B;eAA7BA;;;8DA1BK;;;;;;AAMX,MAAMF,mCAAqBG,cAAK,CAACC,aAAa,CAAiC;AAEtF,qCAAqC;AACrCJ,mBAAmBK,WAAW,GAAG;AAG1B,MAAMJ,wBAAwB;IACnC,MAAMK,UAAUH,cAAK,CAACI,UAAU,CAACP;IAEjC,IAAI,CAACM,SAAS;QACZ,MAAM,IAAIE,MACR,sEACA;IAEJ;IAEA,OAAOF;AACT;AAGO,MAAMJ,gCAAgC;IAC3C,OAAOC,cAAK,CAACI,UAAU,CAACP;AAC1B"}