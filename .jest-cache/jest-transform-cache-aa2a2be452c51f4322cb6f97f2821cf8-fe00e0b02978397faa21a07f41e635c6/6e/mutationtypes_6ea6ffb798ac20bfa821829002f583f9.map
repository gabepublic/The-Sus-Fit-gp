{"version":3,"names":[],"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/types/mutation.types.ts"],"sourcesContent":["// Business Layer Mutation Types\n// Types for React Query mutations and state management\n\nimport type { \n  TryonRequest, \n  TryonResponse, \n  ImageProcessingOptions, \n  ProcessedImage \n} from './api.types';\nimport type { BusinessLayerError } from './error.types';\n\n// Try-on mutation types\nexport interface TryonMutationVariables extends TryonRequest {\n  options?: {\n    retryOnFailure?: boolean;\n    timeout?: number;\n    processingOptions?: ImageProcessingOptions;\n  };\n}\n\nexport interface TryonMutationData extends TryonResponse {\n  metadata?: {\n    startTime: string;\n    endTime: string;\n    processingDuration: number;\n    retryCount: number;\n  };\n}\n\n// Image upload mutation types\nexport interface ImageUploadVariables {\n  file: File;\n  options?: {\n    maxSize?: number; // bytes\n    allowedTypes?: string[];\n    resize?: {\n      width: number;\n      height: number;\n      maintainAspectRatio?: boolean;\n    };\n    quality?: number; // 0-100\n  };\n}\n\nexport interface ImageUploadData {\n  imageData: string; // base64 encoded\n  metadata: {\n    originalName: string;\n    size: number;\n    type: string;\n    width: number;\n    height: number;\n    uploadedAt: string;\n  };\n  processed?: ProcessedImage;\n}\n\n// Generic mutation state types\nexport interface MutationState<TData = unknown, TError = BusinessLayerError> {\n  isLoading: boolean;\n  isError: boolean;\n  isSuccess: boolean;\n  error: TError | null;\n  data: TData | undefined;\n}\n\n// Mutation options type for configuration\nexport interface BusinessMutationOptions<TData, TVariables, TError = BusinessLayerError> {\n  onSuccess?: (data: TData, variables: TVariables) => void | Promise<void>;\n  onError?: (error: TError, variables: TVariables) => void | Promise<void>;\n  onSettled?: (data: TData | undefined, error: TError | null, variables: TVariables) => void | Promise<void>;\n  onMutate?: (variables: TVariables) => Promise<unknown> | unknown;\n  retry?: number | boolean | ((failureCount: number, error: TError) => boolean);\n  retryDelay?: number | ((retryAttempt: number, error: TError) => number);\n}\n\n// Export commonly used mutation variable and data types\nexport type { \n  TryonMutationVariables as TryonVariables,\n  TryonMutationData as TryonData,\n  ImageUploadVariables as UploadVariables,\n  ImageUploadData as UploadData\n};"],"mappings":"AAAA;AACA","ignoreList":[]}