320a5cb1b2cb18550fb6a5f1b200a2f5
'use client';
"use strict";

/* istanbul ignore next */
function cov_1hd3wgvl7g() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/providers/CanvasProvider.tsx";
  var hash = "2b1dbc8d41c370de5e386cadb5c00969f07cc3ba";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/providers/CanvasProvider.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "8": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 48
        }
      },
      "9": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 27,
          column: 72
        }
      },
      "10": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "11": {
        start: {
          line: 29,
          column: 39
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "12": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 41
        }
      },
      "13": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 20
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "16": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 19
        }
      },
      "18": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "20": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 53
        }
      },
      "21": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "22": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 30
        }
      },
      "23": {
        start: {
          line: 49,
          column: 17
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "24": {
        start: {
          line: 52,
          column: 32
        },
        end: {
          line: 52,
          column: 88
        }
      },
      "25": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "26": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "27": {
        start: {
          line: 55,
          column: 23
        },
        end: {
          line: 55,
          column: 95
        }
      },
      "28": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "29": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 57
        }
      },
      "30": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 39
        }
      },
      "31": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 25
        }
      },
      "32": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "33": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 31
        }
      },
      "34": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 18
        }
      },
      "35": {
        start: {
          line: 69,
          column: 36
        },
        end: {
          line: 69,
          column: 67
        }
      },
      "36": {
        start: {
          line: 71,
          column: 26
        },
        end: {
          line: 71,
          column: 55
        }
      },
      "37": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 72,
          column: 77
        }
      },
      "38": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 81,
          column: 10
        }
      },
      "39": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "40": {
        start: {
          line: 76,
          column: 31
        },
        end: {
          line: 76,
          column: 63
        }
      },
      "41": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 76
        }
      },
      "42": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 25
        }
      },
      "43": {
        start: {
          line: 83,
          column: 18
        },
        end: {
          line: 165,
          column: 5
        }
      },
      "44": {
        start: {
          line: 85,
          column: 27
        },
        end: {
          line: 85,
          column: 59
        }
      },
      "45": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 46
        }
      },
      "46": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 48
        }
      },
      "47": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 52
        }
      },
      "48": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 54
        }
      },
      "49": {
        start: {
          line: 93,
          column: 24
        },
        end: {
          line: 93,
          column: 47
        }
      },
      "50": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "51": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 62
        }
      },
      "52": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 26
        }
      },
      "53": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 47
        }
      },
      "54": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "55": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 72
        }
      },
      "56": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 23
        }
      },
      "57": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "58": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 110,
          column: 39
        }
      },
      "59": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 46
        }
      },
      "60": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 121,
          column: 18
        }
      },
      "61": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 120,
          column: 21
        }
      },
      "62": {
        start: {
          line: 114,
          column: 36
        },
        end: {
          line: 114,
          column: 62
        }
      },
      "63": {
        start: {
          line: 115,
          column: 24
        },
        end: {
          line: 115,
          column: 73
        }
      },
      "64": {
        start: {
          line: 116,
          column: 24
        },
        end: {
          line: 116,
          column: 116
        }
      },
      "65": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 117,
          column: 34
        }
      },
      "66": {
        start: {
          line: 119,
          column: 24
        },
        end: {
          line: 119,
          column: 86
        }
      },
      "67": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 124,
          column: 18
        }
      },
      "68": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 62
        }
      },
      "69": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 35
        }
      },
      "70": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 53
        }
      },
      "71": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 134,
          column: 50
        }
      },
      "72": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 61
        }
      },
      "73": {
        start: {
          line: 139,
          column: 30
        },
        end: {
          line: 139,
          column: 48
        }
      },
      "74": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 49
        }
      },
      "75": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 51
        }
      },
      "76": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 55
        }
      },
      "77": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 57
        }
      },
      "78": {
        start: {
          line: 146,
          column: 24
        },
        end: {
          line: 146,
          column: 50
        }
      },
      "79": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "80": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 62
        }
      },
      "81": {
        start: {
          line: 151,
          column: 24
        },
        end: {
          line: 151,
          column: 35
        }
      },
      "82": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 154,
          column: 14
        }
      },
      "83": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 62
        }
      },
      "84": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 32
        }
      },
      "85": {
        start: {
          line: 160,
          column: 26
        },
        end: {
          line: 160,
          column: 123
        }
      },
      "86": {
        start: {
          line: 161,
          column: 29
        },
        end: {
          line: 161,
          column: 54
        }
      },
      "87": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 51
        }
      },
      "88": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 25
        }
      },
      "89": {
        start: {
          line: 167,
          column: 17
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "90": {
        start: {
          line: 169,
          column: 29
        },
        end: {
          line: 169,
          column: 100
        }
      },
      "91": {
        start: {
          line: 171,
          column: 29
        },
        end: {
          line: 171,
          column: 64
        }
      },
      "92": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 183,
          column: 13
        }
      },
      "93": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 180,
          column: 17
        }
      },
      "94": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 175,
          column: 71
        }
      },
      "95": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 179,
          column: 22
        }
      },
      "96": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 38
        }
      },
      "97": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 32
        }
      },
      "98": {
        start: {
          line: 185,
          column: 27
        },
        end: {
          line: 185,
          column: 60
        }
      },
      "99": {
        start: {
          line: 186,
          column: 28
        },
        end: {
          line: 186,
          column: 54
        }
      },
      "100": {
        start: {
          line: 187,
          column: 34
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "101": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "102": {
        start: {
          line: 201,
          column: 36
        },
        end: {
          line: 201,
          column: 164
        }
      },
      "103": {
        start: {
          line: 201,
          column: 101
        },
        end: {
          line: 201,
          column: 114
        }
      },
      "104": {
        start: {
          line: 201,
          column: 129
        },
        end: {
          line: 201,
          column: 160
        }
      },
      "105": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 204,
          column: 17
        }
      },
      "106": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 65
        }
      },
      "107": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 63
        }
      },
      "108": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 33
        }
      },
      "109": {
        start: {
          line: 213,
          column: 27
        },
        end: {
          line: 213,
          column: 56
        }
      },
      "110": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 218,
          column: 13
        }
      },
      "111": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 37
        }
      },
      "112": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 217,
          column: 49
        }
      },
      "113": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 42
        }
      },
      "114": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 57
        }
      },
      "115": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 93
        }
      },
      "116": {
        start: {
          line: 227,
          column: 79
        },
        end: {
          line: 227,
          column: 91
        }
      },
      "117": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 235,
          column: 11
        }
      },
      "118": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 234,
          column: 10
        }
      },
      "119": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 29
        }
      },
      "120": {
        start: {
          line: 236,
          column: 25
        },
        end: {
          line: 241,
          column: 5
        }
      },
      "121": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 245,
          column: 7
        }
      },
      "122": {
        start: {
          line: 248,
          column: 20
        },
        end: {
          line: 248,
          column: 57
        }
      },
      "123": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "124": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 74
        }
      },
      "125": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 252,
          column: 19
        }
      },
      "126": {
        start: {
          line: 255,
          column: 21
        },
        end: {
          line: 255,
          column: 32
        }
      },
      "127": {
        start: {
          line: 256,
          column: 22
        },
        end: {
          line: 256,
          column: 46
        }
      },
      "128": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 271,
          column: 7
        }
      },
      "129": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 62
        }
      },
      "130": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 265,
          column: 10
        }
      },
      "131": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "132": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 57
        }
      },
      "133": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "134": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 50
        }
      },
      "135": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 275,
          column: 29
        }
      },
      "136": {
        start: {
          line: 278,
          column: 22
        },
        end: {
          line: 278,
          column: 33
        }
      },
      "137": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 279,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 16
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 20
          },
          end: {
            line: 19,
            column: 21
          }
        },
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 23
          }
        },
        loc: {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 32,
            column: 40
          }
        },
        loc: {
          start: {
            line: 32,
            column: 61
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 36,
            column: 34
          }
        },
        loc: {
          start: {
            line: 36,
            column: 53
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 36
      },
      "8": {
        name: "CanvasProvider",
        decl: {
          start: {
            line: 70,
            column: 9
          },
          end: {
            line: 70,
            column: 23
          }
        },
        loc: {
          start: {
            line: 70,
            column: 78
          },
          end: {
            line: 246,
            column: 1
          }
        },
        line: 70
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 74,
            column: 48
          },
          end: {
            line: 74,
            column: 49
          }
        },
        loc: {
          start: {
            line: 74,
            column: 52
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 74
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 84,
            column: 46
          },
          end: {
            line: 84,
            column: 47
          }
        },
        loc: {
          start: {
            line: 84,
            column: 63
          },
          end: {
            line: 98,
            column: 9
          }
        },
        line: 84
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 101,
            column: 46
          },
          end: {
            line: 101,
            column: 47
          }
        },
        loc: {
          start: {
            line: 101,
            column: 56
          },
          end: {
            line: 107,
            column: 9
          }
        },
        line: 101
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 108,
            column: 51
          },
          end: {
            line: 108,
            column: 52
          }
        },
        loc: {
          start: {
            line: 108,
            column: 71
          },
          end: {
            line: 127,
            column: 9
          }
        },
        line: 108
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 109,
            column: 31
          },
          end: {
            line: 109,
            column: 32
          }
        },
        loc: {
          start: {
            line: 109,
            column: 50
          },
          end: {
            line: 126,
            column: 13
          }
        },
        line: 109
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 112,
            column: 29
          },
          end: {
            line: 112,
            column: 30
          }
        },
        loc: {
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 121,
            column: 17
          }
        },
        line: 112
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 122,
            column: 31
          }
        },
        loc: {
          start: {
            line: 122,
            column: 34
          },
          end: {
            line: 124,
            column: 17
          }
        },
        line: 122
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 130,
            column: 49
          },
          end: {
            line: 130,
            column: 50
          }
        },
        loc: {
          start: {
            line: 130,
            column: 96
          },
          end: {
            line: 132,
            column: 9
          }
        },
        line: 130
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 133,
            column: 45
          },
          end: {
            line: 133,
            column: 46
          }
        },
        loc: {
          start: {
            line: 133,
            column: 55
          },
          end: {
            line: 136,
            column: 9
          }
        },
        line: 133
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 137,
            column: 46
          },
          end: {
            line: 137,
            column: 47
          }
        },
        loc: {
          start: {
            line: 137,
            column: 77
          },
          end: {
            line: 156,
            column: 9
          }
        },
        line: 137
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 152,
            column: 25
          },
          end: {
            line: 152,
            column: 26
          }
        },
        loc: {
          start: {
            line: 152,
            column: 29
          },
          end: {
            line: 154,
            column: 13
          }
        },
        line: 152
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 159,
            column: 45
          },
          end: {
            line: 159,
            column: 46
          }
        },
        loc: {
          start: {
            line: 159,
            column: 61
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 159
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 168,
            column: 43
          },
          end: {
            line: 168,
            column: 44
          }
        },
        loc: {
          start: {
            line: 168,
            column: 64
          },
          end: {
            line: 208,
            column: 9
          }
        },
        line: 168
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 201,
            column: 87
          },
          end: {
            line: 201,
            column: 88
          }
        },
        loc: {
          start: {
            line: 201,
            column: 101
          },
          end: {
            line: 201,
            column: 114
          }
        },
        line: 201
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 201,
            column: 121
          },
          end: {
            line: 201,
            column: 122
          }
        },
        loc: {
          start: {
            line: 201,
            column: 129
          },
          end: {
            line: 201,
            column: 160
          }
        },
        line: 201
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 212,
            column: 47
          },
          end: {
            line: 212,
            column: 48
          }
        },
        loc: {
          start: {
            line: 212,
            column: 53
          },
          end: {
            line: 219,
            column: 9
          }
        },
        line: 212
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 220,
            column: 43
          },
          end: {
            line: 220,
            column: 44
          }
        },
        loc: {
          start: {
            line: 220,
            column: 47
          },
          end: {
            line: 222,
            column: 9
          }
        },
        line: 220
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 223,
            column: 47
          },
          end: {
            line: 223,
            column: 48
          }
        },
        loc: {
          start: {
            line: 223,
            column: 53
          },
          end: {
            line: 225,
            column: 9
          }
        },
        line: 223
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 226,
            column: 51
          },
          end: {
            line: 226,
            column: 52
          }
        },
        loc: {
          start: {
            line: 226,
            column: 55
          },
          end: {
            line: 228,
            column: 9
          }
        },
        line: 226
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 227,
            column: 69
          },
          end: {
            line: 227,
            column: 70
          }
        },
        loc: {
          start: {
            line: 227,
            column: 79
          },
          end: {
            line: 227,
            column: 91
          }
        },
        line: 227
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 231,
            column: 26
          },
          end: {
            line: 231,
            column: 27
          }
        },
        loc: {
          start: {
            line: 231,
            column: 30
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 231
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 232,
            column: 15
          },
          end: {
            line: 232,
            column: 16
          }
        },
        loc: {
          start: {
            line: 232,
            column: 19
          },
          end: {
            line: 234,
            column: 9
          }
        },
        line: 232
      },
      "31": {
        name: "useCanvas",
        decl: {
          start: {
            line: 247,
            column: 9
          },
          end: {
            line: 247,
            column: 18
          }
        },
        loc: {
          start: {
            line: 247,
            column: 21
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 247
      },
      "32": {
        name: "useManagedCanvas",
        decl: {
          start: {
            line: 254,
            column: 9
          },
          end: {
            line: 254,
            column: 25
          }
        },
        loc: {
          start: {
            line: 254,
            column: 45
          },
          end: {
            line: 276,
            column: 1
          }
        },
        line: 254
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 257,
            column: 26
          },
          end: {
            line: 257,
            column: 27
          }
        },
        loc: {
          start: {
            line: 257,
            column: 30
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 257
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 261,
            column: 15
          },
          end: {
            line: 261,
            column: 16
          }
        },
        loc: {
          start: {
            line: 261,
            column: 19
          },
          end: {
            line: 265,
            column: 9
          }
        },
        line: 261
      },
      "35": {
        name: "useCanvasUtils",
        decl: {
          start: {
            line: 277,
            column: 9
          },
          end: {
            line: 277,
            column: 23
          }
        },
        loc: {
          start: {
            line: 277,
            column: 26
          },
          end: {
            line: 280,
            column: 1
          }
        },
        line: 277
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 33,
            column: 45
          }
        }, {
          start: {
            line: 33,
            column: 48
          },
          end: {
            line: 33,
            column: 65
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 27
          }
        }, {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 45
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 20
          }
        }, {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 47
          }
        }, {
          start: {
            line: 40,
            column: 51
          },
          end: {
            line: 40,
            column: 76
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 17
          },
          end: {
            line: 46,
            column: 31
          }
        }],
        line: 46
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 52,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 52,
            column: 53
          }
        }, {
          start: {
            line: 52,
            column: 57
          },
          end: {
            line: 52,
            column: 88
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 29
          }
        }, {
          start: {
            line: 54,
            column: 33
          },
          end: {
            line: 54,
            column: 79
          }
        }],
        line: 54
      },
      "11": {
        loc: {
          start: {
            line: 55,
            column: 23
          },
          end: {
            line: 55,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 47
          },
          end: {
            line: 55,
            column: 88
          }
        }, {
          start: {
            line: 55,
            column: 91
          },
          end: {
            line: 55,
            column: 95
          }
        }],
        line: 55
      },
      "12": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: 58,
            column: 19
          },
          end: {
            line: 60,
            column: 13
          }
        }],
        line: 56
      },
      "13": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 20
          }
        }, {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 33
          }
        }, {
          start: {
            line: 56,
            column: 37
          },
          end: {
            line: 56,
            column: 45
          }
        }],
        line: 56
      },
      "14": {
        loc: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 36
          },
          end: {
            line: 70,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 50
          },
          end: {
            line: 70,
            column: 52
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 70,
            column: 54
          },
          end: {
            line: 70,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 70
          },
          end: {
            line: 70,
            column: 74
          }
        }],
        line: 70
      },
      "17": {
        loc: {
          start: {
            line: 72,
            column: 29
          },
          end: {
            line: 72,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 45
          },
          end: {
            line: 72,
            column: 73
          }
        }, {
          start: {
            line: 72,
            column: 76
          },
          end: {
            line: 72,
            column: 77
          }
        }],
        line: 72
      },
      "18": {
        loc: {
          start: {
            line: 72,
            column: 45
          },
          end: {
            line: 72,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 45
          },
          end: {
            line: 72,
            column: 68
          }
        }, {
          start: {
            line: 72,
            column: 72
          },
          end: {
            line: 72,
            column: 73
          }
        }],
        line: 72
      },
      "19": {
        loc: {
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 77,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 77,
            column: 43
          }
        }, {
          start: {
            line: 77,
            column: 47
          },
          end: {
            line: 77,
            column: 74
          }
        }],
        line: 77
      },
      "20": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "21": {
        loc: {
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 94,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 94,
            column: 19
          }
        }, {
          start: {
            line: 94,
            column: 23
          },
          end: {
            line: 94,
            column: 45
          }
        }],
        line: 94
      },
      "22": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "23": {
        loc: {
          start: {
            line: 130,
            column: 58
          },
          end: {
            line: 130,
            column: 78
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 130,
            column: 67
          },
          end: {
            line: 130,
            column: 78
          }
        }],
        line: 130
      },
      "24": {
        loc: {
          start: {
            line: 130,
            column: 80
          },
          end: {
            line: 130,
            column: 93
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 130,
            column: 90
          },
          end: {
            line: 130,
            column: 93
          }
        }],
        line: 130
      },
      "25": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "26": {
        loc: {
          start: {
            line: 169,
            column: 29
          },
          end: {
            line: 169,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 29
          },
          end: {
            line: 169,
            column: 31
          }
        }, {
          start: {
            line: 169,
            column: 35
          },
          end: {
            line: 169,
            column: 100
          }
        }],
        line: 169
      },
      "27": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 183,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "28": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 172,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 172,
            column: 24
          }
        }, {
          start: {
            line: 172,
            column: 28
          },
          end: {
            line: 172,
            column: 43
          }
        }],
        line: 172
      },
      "29": {
        loc: {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "30": {
        loc: {
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 55
          }
        }, {
          start: {
            line: 174,
            column: 59
          },
          end: {
            line: 174,
            column: 96
          }
        }],
        line: 174
      },
      "31": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "32": {
        loc: {
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 204,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 204,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "33": {
        loc: {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 218,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 218,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "34": {
        loc: {
          start: {
            line: 224,
            column: 19
          },
          end: {
            line: 224,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 19
          },
          end: {
            line: 224,
            column: 48
          }
        }, {
          start: {
            line: 224,
            column: 52
          },
          end: {
            line: 224,
            column: 56
          }
        }],
        line: 224
      },
      "35": {
        loc: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "36": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "37": {
        loc: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/providers/CanvasProvider.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { createContext, useContext, useRef, useCallback, useEffect } from 'react';\n\n/**\n * Canvas instance with metadata\n */\nexport interface ManagedCanvas {\n  /** Canvas element */\n  canvas: HTMLCanvasElement;\n  /** 2D rendering context */\n  context: CanvasRenderingContext2D;\n  /** Unique identifier for this canvas */\n  id: string;\n  /** Canvas dimensions */\n  dimensions: { width: number; height: number };\n  /** Device pixel ratio for high-DPI displays */\n  pixelRatio: number;\n  /** Whether the canvas is currently in use */\n  inUse: boolean;\n  /** Creation timestamp */\n  createdAt: number;\n}\n\n/**\n * Canvas pool for efficient canvas management\n */\nexport interface CanvasPool {\n  /** Get or create a canvas with specified dimensions */\n  getCanvas: (width: number, height: number, id?: string) => ManagedCanvas;\n  /** Return a canvas to the pool */\n  releaseCanvas: (id: string) => void;\n  /** Clear all canvases from the pool */\n  clearPool: () => void;\n  /** Get canvas by ID */\n  getCanvasById: (id: string) => ManagedCanvas | null;\n  /** Get all active canvases */\n  getActiveCanvases: () => ManagedCanvas[];\n}\n\n/**\n * Canvas utilities for common operations\n */\nexport interface CanvasUtils {\n  /** Create canvas with proper device pixel ratio setup */\n  createCanvas: (width: number, height: number) => HTMLCanvasElement;\n  /** Get 2D context with error handling */\n  getContext2D: (canvas: HTMLCanvasElement) => CanvasRenderingContext2D;\n  /** Load image onto canvas */\n  loadImageToCanvas: (canvas: HTMLCanvasElement, imageUrl: string) => Promise<void>;\n  /** Convert canvas to data URL with options */\n  canvasToDataURL: (canvas: HTMLCanvasElement, format?: string, quality?: number) => string;\n  /** Clear canvas */\n  clearCanvas: (canvas: HTMLCanvasElement) => void;\n  /** Resize canvas maintaining content */\n  resizeCanvas: (canvas: HTMLCanvasElement, newWidth: number, newHeight: number) => void;\n  /** Clone canvas content to new canvas */\n  cloneCanvas: (sourceCanvas: HTMLCanvasElement) => HTMLCanvasElement;\n}\n\n/**\n * Canvas context interface\n */\nexport interface CanvasContextValue {\n  /** Canvas pool for efficient management */\n  pool: CanvasPool;\n  /** Canvas utilities */\n  utils: CanvasUtils;\n  /** Current device pixel ratio */\n  devicePixelRatio: number;\n  /** Whether canvas is supported */\n  isSupported: boolean;\n}\n\nconst CanvasContext = createContext<CanvasContextValue | null>(null);\n\n/**\n * Canvas provider component props\n */\nexport interface CanvasProviderProps {\n  children: React.ReactNode;\n  /** Maximum number of canvases to keep in pool */\n  maxPoolSize?: number;\n  /** Whether to enable high-DPI support */\n  enableHighDPI?: boolean;\n}\n\n/**\n * Canvas provider component that manages canvas instances and utilities\n */\nexport function CanvasProvider({ \n  children, \n  maxPoolSize = 10,\n  enableHighDPI = true \n}: CanvasProviderProps): JSX.Element {\n  const canvasPoolRef = useRef<Map<string, ManagedCanvas>>(new Map());\n  const devicePixelRatio = enableHighDPI ? window.devicePixelRatio || 1 : 1;\n\n  // Check canvas support\n  const isSupported = useCallback(() => {\n    try {\n      const testCanvas = document.createElement('canvas');\n      return !!(testCanvas.getContext && testCanvas.getContext('2d'));\n    } catch {\n      return false;\n    }\n  }, []);\n\n  // Canvas utilities implementation\n  const utils: CanvasUtils = {\n    createCanvas: useCallback((width: number, height: number) => {\n      const canvas = document.createElement('canvas');\n      \n      // Set display size\n      canvas.style.width = `${width}px`;\n      canvas.style.height = `${height}px`;\n      \n      // Set actual size for high-DPI\n      canvas.width = width * devicePixelRatio;\n      canvas.height = height * devicePixelRatio;\n      \n      // Scale context for high-DPI\n      const ctx = canvas.getContext('2d');\n      if (ctx && devicePixelRatio !== 1) {\n        ctx.scale(devicePixelRatio, devicePixelRatio);\n      }\n      \n      return canvas;\n    }, [devicePixelRatio]),\n\n    getContext2D: useCallback((canvas: HTMLCanvasElement) => {\n      const ctx = canvas.getContext('2d');\n      if (!ctx) {\n        throw new Error('Could not get 2D context from canvas');\n      }\n      return ctx;\n    }, []),\n\n    loadImageToCanvas: useCallback((canvas: HTMLCanvasElement, imageUrl: string) => {\n      return new Promise<void>((resolve, reject) => {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        \n        img.onload = () => {\n          try {\n            const ctx = utils.getContext2D(canvas);\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.drawImage(img, 0, 0, canvas.width / devicePixelRatio, canvas.height / devicePixelRatio);\n            resolve();\n          } catch (error) {\n            reject(new Error(`Failed to draw image to canvas: ${error}`));\n          }\n        };\n        \n        img.onerror = () => {\n          reject(new Error('Failed to load image'));\n        };\n        \n        img.src = imageUrl;\n      });\n    }, [devicePixelRatio]),\n\n    canvasToDataURL: useCallback((canvas: HTMLCanvasElement, format = 'image/png', quality = 0.9) => {\n      return canvas.toDataURL(format, quality);\n    }, []),\n\n    clearCanvas: useCallback((canvas: HTMLCanvasElement) => {\n      const ctx = utils.getContext2D(canvas);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    }, []),\n\n    resizeCanvas: useCallback((canvas: HTMLCanvasElement, newWidth: number, newHeight: number) => {\n      // Save current content\n      const imageData = canvas.toDataURL();\n      \n      // Resize canvas\n      canvas.style.width = `${newWidth}px`;\n      canvas.style.height = `${newHeight}px`;\n      canvas.width = newWidth * devicePixelRatio;\n      canvas.height = newHeight * devicePixelRatio;\n      \n      // Scale context for high-DPI\n      const ctx = utils.getContext2D(canvas);\n      if (devicePixelRatio !== 1) {\n        ctx.scale(devicePixelRatio, devicePixelRatio);\n      }\n      \n      // Restore content\n      const img = new Image();\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0, newWidth, newHeight);\n      };\n      img.src = imageData;\n    }, [devicePixelRatio]),\n\n    cloneCanvas: useCallback((sourceCanvas: HTMLCanvasElement) => {\n      const clone = utils.createCanvas(\n        sourceCanvas.width / devicePixelRatio,\n        sourceCanvas.height / devicePixelRatio\n      );\n      const cloneCtx = utils.getContext2D(clone);\n      cloneCtx.drawImage(sourceCanvas, 0, 0);\n      return clone;\n    }, [])\n  };\n\n  // Canvas pool implementation\n  const pool: CanvasPool = {\n    getCanvas: useCallback((width: number, height: number, id?: string) => {\n      const canvasId = id || `canvas_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      \n      // Check if canvas with this ID already exists\n      const existing = canvasPoolRef.current.get(canvasId);\n      if (existing && !existing.inUse) {\n        // Resize existing canvas if dimensions don't match\n        if (existing.dimensions.width !== width || existing.dimensions.height !== height) {\n          utils.resizeCanvas(existing.canvas, width, height);\n          existing.dimensions = { width, height };\n        }\n        existing.inUse = true;\n        return existing;\n      }\n\n      // Create new canvas\n      const canvas = utils.createCanvas(width, height);\n      const context = utils.getContext2D(canvas);\n      \n      const managedCanvas: ManagedCanvas = {\n        canvas,\n        context,\n        id: canvasId,\n        dimensions: { width, height },\n        pixelRatio: devicePixelRatio,\n        inUse: true,\n        createdAt: Date.now()\n      };\n\n      // Add to pool, removing oldest if at capacity\n      if (canvasPoolRef.current.size >= maxPoolSize) {\n        const oldestEntry = Array.from(canvasPoolRef.current.entries())\n          .filter(([, canvas]) => !canvas.inUse)\n          .sort((a, b) => a[1].createdAt - b[1].createdAt)[0];\n        \n        if (oldestEntry) {\n          canvasPoolRef.current.delete(oldestEntry[0]);\n        }\n      }\n\n      canvasPoolRef.current.set(canvasId, managedCanvas);\n      return managedCanvas;\n    }, [maxPoolSize, devicePixelRatio]),\n\n    releaseCanvas: useCallback((id: string) => {\n      const canvas = canvasPoolRef.current.get(id);\n      if (canvas) {\n        canvas.inUse = false;\n        // Clear the canvas for reuse\n        utils.clearCanvas(canvas.canvas);\n      }\n    }, []),\n\n    clearPool: useCallback(() => {\n      canvasPoolRef.current.clear();\n    }, []),\n\n    getCanvasById: useCallback((id: string) => {\n      return canvasPoolRef.current.get(id) || null;\n    }, []),\n\n    getActiveCanvases: useCallback(() => {\n      return Array.from(canvasPoolRef.current.values()).filter(canvas => canvas.inUse);\n    }, [])\n  };\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      pool.clearPool();\n    };\n  }, []);\n\n  const contextValue: CanvasContextValue = {\n    pool,\n    utils,\n    devicePixelRatio,\n    isSupported: isSupported()\n  };\n\n  return (\n    <CanvasContext.Provider value={contextValue}>\n      {children}\n    </CanvasContext.Provider>\n  );\n}\n\n/**\n * Hook to access canvas context\n */\nexport function useCanvas(): CanvasContextValue {\n  const context = useContext(CanvasContext);\n  if (!context) {\n    throw new Error('useCanvas must be used within a CanvasProvider');\n  }\n  return context;\n}\n\n/**\n * Hook to get a managed canvas instance\n */\nexport function useManagedCanvas(\n  width: number,\n  height: number,\n  id?: string\n): ManagedCanvas {\n  const { pool } = useCanvas();\n  \n  const canvasRef = useRef<ManagedCanvas | null>(null);\n  \n  useEffect(() => {\n    // Get canvas on mount\n    canvasRef.current = pool.getCanvas(width, height, id);\n    \n    // Release canvas on unmount\n    return () => {\n      if (canvasRef.current) {\n        pool.releaseCanvas(canvasRef.current.id);\n      }\n    };\n  }, [width, height, id, pool]);\n  \n  if (!canvasRef.current) {\n    throw new Error('Canvas not initialized');\n  }\n  \n  return canvasRef.current;\n}\n\n/**\n * Hook for canvas utilities\n */\nexport function useCanvasUtils(): CanvasUtils {\n  const { utils } = useCanvas();\n  return utils;\n}"],
      names: ["CanvasProvider", "useCanvas", "useCanvasUtils", "useManagedCanvas", "CanvasContext", "createContext", "children", "maxPoolSize", "enableHighDPI", "canvasPoolRef", "useRef", "Map", "devicePixelRatio", "window", "isSupported", "useCallback", "testCanvas", "document", "createElement", "getContext", "utils", "createCanvas", "width", "height", "canvas", "style", "ctx", "scale", "getContext2D", "Error", "loadImageToCanvas", "imageUrl", "Promise", "resolve", "reject", "img", "Image", "crossOrigin", "onload", "clearRect", "drawImage", "error", "onerror", "src", "canvasToDataURL", "format", "quality", "toDataURL", "clearCanvas", "resizeCanvas", "newWidth", "newHeight", "imageData", "cloneCanvas", "sourceCanvas", "clone", "cloneCtx", "pool", "getCanvas", "id", "canvasId", "Date", "now", "Math", "random", "toString", "substr", "existing", "current", "get", "inUse", "dimensions", "context", "managedCanvas", "pixelRatio", "createdAt", "size", "oldestEntry", "Array", "from", "entries", "filter", "sort", "a", "b", "delete", "set", "releaseCanvas", "clearPool", "clear", "getCanvasById", "getActiveCanvases", "values", "useEffect", "contextValue", "Provider", "value", "useContext", "canvasRef"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2b1dbc8d41c370de5e386cadb5c00969f07cc3ba"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hd3wgvl7g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hd3wgvl7g();
cov_1hd3wgvl7g().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1hd3wgvl7g().f[0]++;
  cov_1hd3wgvl7g().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1hd3wgvl7g().s[3]++;
_export(exports, {
  CanvasProvider: function () {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().f[1]++;
    cov_1hd3wgvl7g().s[4]++;
    return CanvasProvider;
  },
  useCanvas: function () {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().f[2]++;
    cov_1hd3wgvl7g().s[5]++;
    return useCanvas;
  },
  useCanvasUtils: function () {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().f[3]++;
    cov_1hd3wgvl7g().s[6]++;
    return useCanvasUtils;
  },
  useManagedCanvas: function () {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().f[4]++;
    cov_1hd3wgvl7g().s[7]++;
    return useManagedCanvas;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1hd3wgvl7g().s[8]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1hd3wgvl7g().s[9]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1hd3wgvl7g().f[5]++;
  cov_1hd3wgvl7g().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().b[0][0]++;
    cov_1hd3wgvl7g().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1hd3wgvl7g().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().f[6]++;
    cov_1hd3wgvl7g().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1hd3wgvl7g().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1hd3wgvl7g().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1hd3wgvl7g().f[7]++;
  cov_1hd3wgvl7g().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().b[2][0]++;
    cov_1hd3wgvl7g().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1hd3wgvl7g().b[2][1]++;
  }
  cov_1hd3wgvl7g().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().b[4][0]++;
    cov_1hd3wgvl7g().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1hd3wgvl7g().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().b[6][0]++;
    cov_1hd3wgvl7g().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1hd3wgvl7g().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[24]++,
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_1hd3wgvl7g().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1hd3wgvl7g().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().b[12][0]++;
        cov_1hd3wgvl7g().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().b[12][1]++;
        cov_1hd3wgvl7g().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1hd3wgvl7g().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().b[14][0]++;
    cov_1hd3wgvl7g().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1hd3wgvl7g().b[14][1]++;
  }
  cov_1hd3wgvl7g().s[34]++;
  return newObj;
}
const CanvasContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_1hd3wgvl7g().s[35]++, (0, _react.createContext)(null));
function CanvasProvider({
  children,
  maxPoolSize =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[15][0]++, 10),
  enableHighDPI =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[16][0]++, true)
}) {
  /* istanbul ignore next */
  cov_1hd3wgvl7g().f[8]++;
  const canvasPoolRef =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[36]++, (0, _react.useRef)(new Map()));
  const devicePixelRatio =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[37]++, enableHighDPI ?
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[17][0]++,
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[18][0]++, window.devicePixelRatio) ||
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[18][1]++, 1)) :
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().b[17][1]++, 1));
  // Check canvas support
  const isSupported =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[38]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().f[9]++;
    cov_1hd3wgvl7g().s[39]++;
    try {
      const testCanvas =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[40]++, document.createElement('canvas'));
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[41]++;
      return !!(
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[19][0]++, testCanvas.getContext) &&
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[19][1]++, testCanvas.getContext('2d')));
    } catch {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[42]++;
      return false;
    }
  }, []));
  // Canvas utilities implementation
  const utils =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[43]++, {
    createCanvas: (0, _react.useCallback)((width, height) => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[10]++;
      const canvas =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[44]++, document.createElement('canvas'));
      // Set display size
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[45]++;
      canvas.style.width = `${width}px`;
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[46]++;
      canvas.style.height = `${height}px`;
      // Set actual size for high-DPI
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[47]++;
      canvas.width = width * devicePixelRatio;
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[48]++;
      canvas.height = height * devicePixelRatio;
      // Scale context for high-DPI
      const ctx =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[49]++, canvas.getContext('2d'));
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[50]++;
      if (
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[21][0]++, ctx) &&
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[21][1]++, devicePixelRatio !== 1)) {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().b[20][0]++;
        cov_1hd3wgvl7g().s[51]++;
        ctx.scale(devicePixelRatio, devicePixelRatio);
      } else
      /* istanbul ignore next */
      {
        cov_1hd3wgvl7g().b[20][1]++;
      }
      cov_1hd3wgvl7g().s[52]++;
      return canvas;
    }, [devicePixelRatio]),
    getContext2D: (0, _react.useCallback)(canvas => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[11]++;
      const ctx =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[53]++, canvas.getContext('2d'));
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[54]++;
      if (!ctx) {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().b[22][0]++;
        cov_1hd3wgvl7g().s[55]++;
        throw new Error('Could not get 2D context from canvas');
      } else
      /* istanbul ignore next */
      {
        cov_1hd3wgvl7g().b[22][1]++;
      }
      cov_1hd3wgvl7g().s[56]++;
      return ctx;
    }, []),
    loadImageToCanvas: (0, _react.useCallback)((canvas, imageUrl) => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[12]++;
      cov_1hd3wgvl7g().s[57]++;
      return new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().f[13]++;
        const img =
        /* istanbul ignore next */
        (cov_1hd3wgvl7g().s[58]++, new Image());
        /* istanbul ignore next */
        cov_1hd3wgvl7g().s[59]++;
        img.crossOrigin = 'anonymous';
        /* istanbul ignore next */
        cov_1hd3wgvl7g().s[60]++;
        img.onload = () => {
          /* istanbul ignore next */
          cov_1hd3wgvl7g().f[14]++;
          cov_1hd3wgvl7g().s[61]++;
          try {
            const ctx =
            /* istanbul ignore next */
            (cov_1hd3wgvl7g().s[62]++, utils.getContext2D(canvas));
            /* istanbul ignore next */
            cov_1hd3wgvl7g().s[63]++;
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            /* istanbul ignore next */
            cov_1hd3wgvl7g().s[64]++;
            ctx.drawImage(img, 0, 0, canvas.width / devicePixelRatio, canvas.height / devicePixelRatio);
            /* istanbul ignore next */
            cov_1hd3wgvl7g().s[65]++;
            resolve();
          } catch (error) {
            /* istanbul ignore next */
            cov_1hd3wgvl7g().s[66]++;
            reject(new Error(`Failed to draw image to canvas: ${error}`));
          }
        };
        /* istanbul ignore next */
        cov_1hd3wgvl7g().s[67]++;
        img.onerror = () => {
          /* istanbul ignore next */
          cov_1hd3wgvl7g().f[15]++;
          cov_1hd3wgvl7g().s[68]++;
          reject(new Error('Failed to load image'));
        };
        /* istanbul ignore next */
        cov_1hd3wgvl7g().s[69]++;
        img.src = imageUrl;
      });
    }, [devicePixelRatio]),
    canvasToDataURL: (0, _react.useCallback)((canvas, format =
    /* istanbul ignore next */
    (cov_1hd3wgvl7g().b[23][0]++, 'image/png'), quality =
    /* istanbul ignore next */
    (cov_1hd3wgvl7g().b[24][0]++, 0.9)) => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[16]++;
      cov_1hd3wgvl7g().s[70]++;
      return canvas.toDataURL(format, quality);
    }, []),
    clearCanvas: (0, _react.useCallback)(canvas => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[17]++;
      const ctx =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[71]++, utils.getContext2D(canvas));
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[72]++;
      ctx.clearRect(0, 0, canvas.width, canvas.height);
    }, []),
    resizeCanvas: (0, _react.useCallback)((canvas, newWidth, newHeight) => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[18]++;
      // Save current content
      const imageData =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[73]++, canvas.toDataURL());
      // Resize canvas
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[74]++;
      canvas.style.width = `${newWidth}px`;
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[75]++;
      canvas.style.height = `${newHeight}px`;
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[76]++;
      canvas.width = newWidth * devicePixelRatio;
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[77]++;
      canvas.height = newHeight * devicePixelRatio;
      // Scale context for high-DPI
      const ctx =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[78]++, utils.getContext2D(canvas));
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[79]++;
      if (devicePixelRatio !== 1) {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().b[25][0]++;
        cov_1hd3wgvl7g().s[80]++;
        ctx.scale(devicePixelRatio, devicePixelRatio);
      } else
      /* istanbul ignore next */
      {
        cov_1hd3wgvl7g().b[25][1]++;
      }
      // Restore content
      const img =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[81]++, new Image());
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[82]++;
      img.onload = () => {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().f[19]++;
        cov_1hd3wgvl7g().s[83]++;
        ctx.drawImage(img, 0, 0, newWidth, newHeight);
      };
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[84]++;
      img.src = imageData;
    }, [devicePixelRatio]),
    cloneCanvas: (0, _react.useCallback)(sourceCanvas => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[20]++;
      const clone =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[85]++, utils.createCanvas(sourceCanvas.width / devicePixelRatio, sourceCanvas.height / devicePixelRatio));
      const cloneCtx =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[86]++, utils.getContext2D(clone));
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[87]++;
      cloneCtx.drawImage(sourceCanvas, 0, 0);
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[88]++;
      return clone;
    }, [])
  });
  // Canvas pool implementation
  const pool =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[89]++, {
    getCanvas: (0, _react.useCallback)((width, height, id) => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[21]++;
      const canvasId =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[90]++,
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[26][0]++, id) ||
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[26][1]++, `canvas_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`));
      // Check if canvas with this ID already exists
      const existing =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[91]++, canvasPoolRef.current.get(canvasId));
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[92]++;
      if (
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[28][0]++, existing) &&
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[28][1]++, !existing.inUse)) {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().b[27][0]++;
        cov_1hd3wgvl7g().s[93]++;
        // Resize existing canvas if dimensions don't match
        if (
        /* istanbul ignore next */
        (cov_1hd3wgvl7g().b[30][0]++, existing.dimensions.width !== width) ||
        /* istanbul ignore next */
        (cov_1hd3wgvl7g().b[30][1]++, existing.dimensions.height !== height)) {
          /* istanbul ignore next */
          cov_1hd3wgvl7g().b[29][0]++;
          cov_1hd3wgvl7g().s[94]++;
          utils.resizeCanvas(existing.canvas, width, height);
          /* istanbul ignore next */
          cov_1hd3wgvl7g().s[95]++;
          existing.dimensions = {
            width,
            height
          };
        } else
        /* istanbul ignore next */
        {
          cov_1hd3wgvl7g().b[29][1]++;
        }
        cov_1hd3wgvl7g().s[96]++;
        existing.inUse = true;
        /* istanbul ignore next */
        cov_1hd3wgvl7g().s[97]++;
        return existing;
      } else
      /* istanbul ignore next */
      {
        cov_1hd3wgvl7g().b[27][1]++;
      }
      // Create new canvas
      const canvas =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[98]++, utils.createCanvas(width, height));
      const context =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[99]++, utils.getContext2D(canvas));
      const managedCanvas =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[100]++, {
        canvas,
        context,
        id: canvasId,
        dimensions: {
          width,
          height
        },
        pixelRatio: devicePixelRatio,
        inUse: true,
        createdAt: Date.now()
      });
      // Add to pool, removing oldest if at capacity
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[101]++;
      if (canvasPoolRef.current.size >= maxPoolSize) {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().b[31][0]++;
        const oldestEntry =
        /* istanbul ignore next */
        (cov_1hd3wgvl7g().s[102]++, Array.from(canvasPoolRef.current.entries()).filter(([, canvas]) => {
          /* istanbul ignore next */
          cov_1hd3wgvl7g().f[22]++;
          cov_1hd3wgvl7g().s[103]++;
          return !canvas.inUse;
        }).sort((a, b) => {
          /* istanbul ignore next */
          cov_1hd3wgvl7g().f[23]++;
          cov_1hd3wgvl7g().s[104]++;
          return a[1].createdAt - b[1].createdAt;
        })[0]);
        /* istanbul ignore next */
        cov_1hd3wgvl7g().s[105]++;
        if (oldestEntry) {
          /* istanbul ignore next */
          cov_1hd3wgvl7g().b[32][0]++;
          cov_1hd3wgvl7g().s[106]++;
          canvasPoolRef.current.delete(oldestEntry[0]);
        } else
        /* istanbul ignore next */
        {
          cov_1hd3wgvl7g().b[32][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1hd3wgvl7g().b[31][1]++;
      }
      cov_1hd3wgvl7g().s[107]++;
      canvasPoolRef.current.set(canvasId, managedCanvas);
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[108]++;
      return managedCanvas;
    }, [maxPoolSize, devicePixelRatio]),
    releaseCanvas: (0, _react.useCallback)(id => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[24]++;
      const canvas =
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().s[109]++, canvasPoolRef.current.get(id));
      /* istanbul ignore next */
      cov_1hd3wgvl7g().s[110]++;
      if (canvas) {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().b[33][0]++;
        cov_1hd3wgvl7g().s[111]++;
        canvas.inUse = false;
        // Clear the canvas for reuse
        /* istanbul ignore next */
        cov_1hd3wgvl7g().s[112]++;
        utils.clearCanvas(canvas.canvas);
      } else
      /* istanbul ignore next */
      {
        cov_1hd3wgvl7g().b[33][1]++;
      }
    }, []),
    clearPool: (0, _react.useCallback)(() => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[25]++;
      cov_1hd3wgvl7g().s[113]++;
      canvasPoolRef.current.clear();
    }, []),
    getCanvasById: (0, _react.useCallback)(id => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[26]++;
      cov_1hd3wgvl7g().s[114]++;
      return /* istanbul ignore next */(cov_1hd3wgvl7g().b[34][0]++, canvasPoolRef.current.get(id)) ||
      /* istanbul ignore next */
      (cov_1hd3wgvl7g().b[34][1]++, null);
    }, []),
    getActiveCanvases: (0, _react.useCallback)(() => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[27]++;
      cov_1hd3wgvl7g().s[115]++;
      return Array.from(canvasPoolRef.current.values()).filter(canvas => {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().f[28]++;
        cov_1hd3wgvl7g().s[116]++;
        return canvas.inUse;
      });
    }, [])
  });
  // Cleanup on unmount
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[117]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().f[29]++;
    cov_1hd3wgvl7g().s[118]++;
    return () => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[30]++;
      cov_1hd3wgvl7g().s[119]++;
      pool.clearPool();
    };
  }, []);
  const contextValue =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[120]++, {
    pool,
    utils,
    devicePixelRatio,
    isSupported: isSupported()
  });
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[121]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(CanvasContext.Provider, {
    value: contextValue,
    children: children
  });
}
function useCanvas() {
  /* istanbul ignore next */
  cov_1hd3wgvl7g().f[31]++;
  const context =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[122]++, (0, _react.useContext)(CanvasContext));
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[123]++;
  if (!context) {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().b[35][0]++;
    cov_1hd3wgvl7g().s[124]++;
    throw new Error('useCanvas must be used within a CanvasProvider');
  } else
  /* istanbul ignore next */
  {
    cov_1hd3wgvl7g().b[35][1]++;
  }
  cov_1hd3wgvl7g().s[125]++;
  return context;
}
function useManagedCanvas(width, height, id) {
  /* istanbul ignore next */
  cov_1hd3wgvl7g().f[32]++;
  const {
    pool
  } =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[126]++, useCanvas());
  const canvasRef =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[127]++, (0, _react.useRef)(null));
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[128]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().f[33]++;
    cov_1hd3wgvl7g().s[129]++;
    // Get canvas on mount
    canvasRef.current = pool.getCanvas(width, height, id);
    // Release canvas on unmount
    /* istanbul ignore next */
    cov_1hd3wgvl7g().s[130]++;
    return () => {
      /* istanbul ignore next */
      cov_1hd3wgvl7g().f[34]++;
      cov_1hd3wgvl7g().s[131]++;
      if (canvasRef.current) {
        /* istanbul ignore next */
        cov_1hd3wgvl7g().b[36][0]++;
        cov_1hd3wgvl7g().s[132]++;
        pool.releaseCanvas(canvasRef.current.id);
      } else
      /* istanbul ignore next */
      {
        cov_1hd3wgvl7g().b[36][1]++;
      }
    };
  }, [width, height, id, pool]);
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[133]++;
  if (!canvasRef.current) {
    /* istanbul ignore next */
    cov_1hd3wgvl7g().b[37][0]++;
    cov_1hd3wgvl7g().s[134]++;
    throw new Error('Canvas not initialized');
  } else
  /* istanbul ignore next */
  {
    cov_1hd3wgvl7g().b[37][1]++;
  }
  cov_1hd3wgvl7g().s[135]++;
  return canvasRef.current;
}
function useCanvasUtils() {
  /* istanbul ignore next */
  cov_1hd3wgvl7g().f[35]++;
  const {
    utils
  } =
  /* istanbul ignore next */
  (cov_1hd3wgvl7g().s[136]++, useCanvas());
  /* istanbul ignore next */
  cov_1hd3wgvl7g().s[137]++;
  return utils;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,