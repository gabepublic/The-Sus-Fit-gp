f7d795aa9648ba293519ec0840b65d54
'use client';
"use strict";

/* istanbul ignore next */
function cov_nt0vdori3() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useCanvasOperations.ts";
  var hash = "248aa738b68413560ab99366e8a53799a6323ca2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useCanvasOperations.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 43
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 34
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 36
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "10": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 31
        }
      },
      "11": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 62
        }
      },
      "12": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 34,
          column: 52
        }
      },
      "13": {
        start: {
          line: 36,
          column: 19
        },
        end: {
          line: 36,
          column: 81
        }
      },
      "14": {
        start: {
          line: 37,
          column: 26
        },
        end: {
          line: 37,
          column: 55
        }
      },
      "15": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "16": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 89
        }
      },
      "17": {
        start: {
          line: 41,
          column: 22
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "18": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 49
        }
      },
      "19": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "20": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 50
        }
      },
      "21": {
        start: {
          line: 47,
          column: 18
        },
        end: {
          line: 51,
          column: 6
        }
      },
      "22": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 82
        }
      },
      "23": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 58,
          column: 6
        }
      },
      "24": {
        start: {
          line: 61,
          column: 38
        },
        end: {
          line: 61,
          column: 65
        }
      },
      "25": {
        start: {
          line: 62,
          column: 30
        },
        end: {
          line: 62,
          column: 59
        }
      },
      "26": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "27": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 83
        }
      },
      "28": {
        start: {
          line: 66,
          column: 27
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "29": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "30": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 27
        }
      },
      "31": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "32": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 50
        }
      },
      "33": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 28
        }
      },
      "34": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "35": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "36": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 27
        }
      },
      "37": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 32
        }
      },
      "38": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 86,
          column: 7
        }
      },
      "39": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "40": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 28
        }
      },
      "41": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 92,
          column: 6
        }
      },
      "42": {
        start: {
          line: 95,
          column: 34
        },
        end: {
          line: 95,
          column: 58
        }
      },
      "43": {
        start: {
          line: 96,
          column: 44
        },
        end: {
          line: 96,
          column: 68
        }
      },
      "44": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 97,
          column: 102
        }
      },
      "45": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 36
        }
      },
      "46": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 99,
          column: 53
        }
      },
      "47": {
        start: {
          line: 100,
          column: 22
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "48": {
        start: {
          line: 101,
          column: 22
        },
        end: {
          line: 101,
          column: 55
        }
      },
      "49": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 111,
          column: 11
        }
      },
      "50": {
        start: {
          line: 103,
          column: 31
        },
        end: {
          line: 103,
          column: 62
        }
      },
      "51": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 35
        }
      },
      "52": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "53": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 35
        }
      },
      "54": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 34
        }
      },
      "55": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 30
        }
      },
      "56": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "57": {
        start: {
          line: 113,
          column: 29
        },
        end: {
          line: 113,
          column: 37
        }
      },
      "58": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 78
        }
      },
      "59": {
        start: {
          line: 120,
          column: 17
        },
        end: {
          line: 132,
          column: 6
        }
      },
      "60": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 29
        }
      },
      "61": {
        start: {
          line: 121,
          column: 22
        },
        end: {
          line: 121,
          column: 29
        }
      },
      "62": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 122,
          column: 41
        }
      },
      "63": {
        start: {
          line: 123,
          column: 22
        },
        end: {
          line: 123,
          column: 39
        }
      },
      "64": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "65": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 54
        }
      },
      "66": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 38
        }
      },
      "67": {
        start: {
          line: 133,
          column: 17
        },
        end: {
          line: 145,
          column: 6
        }
      },
      "68": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 29
        }
      },
      "69": {
        start: {
          line: 134,
          column: 22
        },
        end: {
          line: 134,
          column: 29
        }
      },
      "70": {
        start: {
          line: 135,
          column: 25
        },
        end: {
          line: 135,
          column: 41
        }
      },
      "71": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 136,
          column: 39
        }
      },
      "72": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "73": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 54
        }
      },
      "74": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 38
        }
      },
      "75": {
        start: {
          line: 146,
          column: 18
        },
        end: {
          line: 149,
          column: 10
        }
      },
      "76": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 23
        }
      },
      "77": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 28
        }
      },
      "78": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "79": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "80": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 24
        }
      },
      "81": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 164,
          column: 6
        }
      },
      "82": {
        start: {
          line: 167,
          column: 29
        },
        end: {
          line: 169,
          column: 10
        }
      },
      "83": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 85
        }
      },
      "84": {
        start: {
          line: 170,
          column: 21
        },
        end: {
          line: 172,
          column: 10
        }
      },
      "85": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 72
        }
      },
      "86": {
        start: {
          line: 173,
          column: 21
        },
        end: {
          line: 175,
          column: 10
        }
      },
      "87": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 73
        }
      },
      "88": {
        start: {
          line: 176,
          column: 29
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "89": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 83
        }
      },
      "90": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 184,
          column: 6
        }
      },
      "91": {
        start: {
          line: 187,
          column: 38
        },
        end: {
          line: 187,
          column: 65
        }
      },
      "92": {
        start: {
          line: 188,
          column: 30
        },
        end: {
          line: 188,
          column: 56
        }
      },
      "93": {
        start: {
          line: 189,
          column: 22
        },
        end: {
          line: 189,
          column: 54
        }
      },
      "94": {
        start: {
          line: 190,
          column: 26
        },
        end: {
          line: 190,
          column: 102
        }
      },
      "95": {
        start: {
          line: 191,
          column: 22
        },
        end: {
          line: 210,
          column: 10
        }
      },
      "96": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 27
        }
      },
      "97": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 23
        }
      },
      "98": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "99": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 195,
          column: 35
        }
      },
      "100": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 42
        }
      },
      "101": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 201,
          column: 15
        }
      },
      "102": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 43
        }
      },
      "103": {
        start: {
          line: 198,
          column: 33
        },
        end: {
          line: 198,
          column: 42
        }
      },
      "104": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 76
        }
      },
      "105": {
        start: {
          line: 199,
          column: 34
        },
        end: {
          line: 199,
          column: 75
        }
      },
      "106": {
        start: {
          line: 200,
          column: 16
        },
        end: {
          line: 200,
          column: 30
        }
      },
      "107": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 32
        }
      },
      "108": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 23
        }
      },
      "109": {
        start: {
          line: 205,
          column: 33
        },
        end: {
          line: 205,
          column: 99
        }
      },
      "110": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 35
        }
      },
      "111": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 32
        }
      },
      "112": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 42
        }
      },
      "113": {
        start: {
          line: 211,
          column: 22
        },
        end: {
          line: 213,
          column: 10
        }
      },
      "114": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 101
        }
      },
      "115": {
        start: {
          line: 214,
          column: 29
        },
        end: {
          line: 220,
          column: 6
        }
      },
      "116": {
        start: {
          line: 215,
          column: 22
        },
        end: {
          line: 215,
          column: 42
        }
      },
      "117": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 66
        }
      },
      "118": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 227,
          column: 6
        }
      },
      "119": {
        start: {
          line: 230,
          column: 40
        },
        end: {
          line: 230,
          column: 79
        }
      },
      "120": {
        start: {
          line: 231,
          column: 22
        },
        end: {
          line: 231,
          column: 54
        }
      },
      "121": {
        start: {
          line: 232,
          column: 19
        },
        end: {
          line: 253,
          column: 6
        }
      },
      "122": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "123": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 67
        }
      },
      "124": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 43
        }
      },
      "125": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 45
        }
      },
      "126": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 56
        }
      },
      "127": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 58
        }
      },
      "128": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 244,
          column: 10
        }
      },
      "129": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      },
      "130": {
        start: {
          line: 254,
          column: 23
        },
        end: {
          line: 268,
          column: 6
        }
      },
      "131": {
        start: {
          line: 255,
          column: 31
        },
        end: {
          line: 261,
          column: 10
        }
      },
      "132": {
        start: {
          line: 256,
          column: 26
        },
        end: {
          line: 256,
          column: 36
        }
      },
      "133": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 260,
          column: 13
        }
      },
      "134": {
        start: {
          line: 258,
          column: 42
        },
        end: {
          line: 258,
          column: 59
        }
      },
      "135": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 259,
          column: 38
        }
      },
      "136": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 42
        }
      },
      "137": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 265,
          column: 10
        }
      },
      "138": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 40
        }
      },
      "139": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 273,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 33
          },
          end: {
            line: 13,
            column: 34
          }
        },
        loc: {
          start: {
            line: 13,
            column: 44
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 16,
            column: 25
          }
        },
        loc: {
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 23
          }
        },
        loc: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 27
          }
        },
        loc: {
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 27
          }
        },
        loc: {
          start: {
            line: 25,
            column: 37
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 21
          },
          end: {
            line: 28,
            column: 22
          }
        },
        loc: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "useAdvancedCanvasOperations",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 36
          }
        },
        loc: {
          start: {
            line: 35,
            column: 62
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 35
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 41,
            column: 46
          },
          end: {
            line: 41,
            column: 47
          }
        },
        loc: {
          start: {
            line: 41,
            column: 50
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 44,
            column: 49
          },
          end: {
            line: 44,
            column: 50
          }
        },
        loc: {
          start: {
            line: 44,
            column: 58
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 47,
            column: 42
          },
          end: {
            line: 47,
            column: 43
          }
        },
        loc: {
          start: {
            line: 47,
            column: 46
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 47
      },
      "11": {
        name: "useCanvasAnimation",
        decl: {
          start: {
            line: 60,
            column: 9
          },
          end: {
            line: 60,
            column: 27
          }
        },
        loc: {
          start: {
            line: 60,
            column: 30
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 60
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 66,
            column: 51
          },
          end: {
            line: 66,
            column: 52
          }
        },
        loc: {
          start: {
            line: 66,
            column: 63
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 66
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 70,
            column: 50
          },
          end: {
            line: 70,
            column: 51
          }
        },
        loc: {
          start: {
            line: 70,
            column: 54
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 70
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 74,
            column: 52
          },
          end: {
            line: 74,
            column: 53
          }
        },
        loc: {
          start: {
            line: 74,
            column: 104
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 74
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 75,
            column: 103
          },
          end: {
            line: 75,
            column: 104
          }
        },
        loc: {
          start: {
            line: 75,
            column: 107
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 75
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 80,
            column: 27
          }
        },
        loc: {
          start: {
            line: 80,
            column: 30
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 80
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 16
          }
        },
        loc: {
          start: {
            line: 81,
            column: 19
          },
          end: {
            line: 83,
            column: 9
          }
        },
        line: 81
      },
      "18": {
        name: "useCanvasHistory",
        decl: {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 94,
            column: 25
          }
        },
        loc: {
          start: {
            line: 94,
            column: 55
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 94
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 100,
            column: 46
          },
          end: {
            line: 100,
            column: 47
          }
        },
        loc: {
          start: {
            line: 100,
            column: 50
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 100
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 102,
            column: 19
          },
          end: {
            line: 102,
            column: 20
          }
        },
        loc: {
          start: {
            line: 102,
            column: 27
          },
          end: {
            line: 111,
            column: 9
          }
        },
        line: 102
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 112,
            column: 25
          }
        },
        loc: {
          start: {
            line: 112,
            column: 32
          },
          end: {
            line: 115,
            column: 9
          }
        },
        line: 112
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 120,
            column: 41
          },
          end: {
            line: 120,
            column: 42
          }
        },
        loc: {
          start: {
            line: 120,
            column: 45
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 120
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 133,
            column: 41
          },
          end: {
            line: 133,
            column: 42
          }
        },
        loc: {
          start: {
            line: 133,
            column: 45
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 133
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 146,
            column: 42
          },
          end: {
            line: 146,
            column: 43
          }
        },
        loc: {
          start: {
            line: 146,
            column: 46
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 146
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 151,
            column: 26
          },
          end: {
            line: 151,
            column: 27
          }
        },
        loc: {
          start: {
            line: 151,
            column: 30
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 151
      },
      "26": {
        name: "useCanvasPerformance",
        decl: {
          start: {
            line: 166,
            column: 9
          },
          end: {
            line: 166,
            column: 29
          }
        },
        loc: {
          start: {
            line: 166,
            column: 32
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 166
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 167,
            column: 53
          },
          end: {
            line: 167,
            column: 54
          }
        },
        loc: {
          start: {
            line: 167,
            column: 72
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 167
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 170,
            column: 45
          },
          end: {
            line: 170,
            column: 46
          }
        },
        loc: {
          start: {
            line: 170,
            column: 59
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 170
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 173,
            column: 45
          },
          end: {
            line: 173,
            column: 46
          }
        },
        loc: {
          start: {
            line: 173,
            column: 60
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 173
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 176,
            column: 53
          },
          end: {
            line: 176,
            column: 54
          }
        },
        loc: {
          start: {
            line: 176,
            column: 70
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 176
      },
      "31": {
        name: "useCanvasImageLoader",
        decl: {
          start: {
            line: 186,
            column: 9
          },
          end: {
            line: 186,
            column: 29
          }
        },
        loc: {
          start: {
            line: 186,
            column: 38
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 186
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 191,
            column: 46
          },
          end: {
            line: 191,
            column: 47
          }
        },
        loc: {
          start: {
            line: 191,
            column: 59
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 191
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 197,
            column: 30
          },
          end: {
            line: 197,
            column: 31
          }
        },
        loc: {
          start: {
            line: 197,
            column: 49
          },
          end: {
            line: 201,
            column: 13
          }
        },
        line: 197
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 198,
            column: 29
          },
          end: {
            line: 198,
            column: 30
          }
        },
        loc: {
          start: {
            line: 198,
            column: 33
          },
          end: {
            line: 198,
            column: 42
          }
        },
        line: 198
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 199,
            column: 30
          },
          end: {
            line: 199,
            column: 31
          }
        },
        loc: {
          start: {
            line: 199,
            column: 34
          },
          end: {
            line: 199,
            column: 75
          }
        },
        line: 199
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 211,
            column: 46
          },
          end: {
            line: 211,
            column: 47
          }
        },
        loc: {
          start: {
            line: 211,
            column: 140
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 211
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 214,
            column: 53
          },
          end: {
            line: 214,
            column: 54
          }
        },
        loc: {
          start: {
            line: 214,
            column: 151
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 214
      },
      "38": {
        name: "useCanvasResize",
        decl: {
          start: {
            line: 229,
            column: 9
          },
          end: {
            line: 229,
            column: 24
          }
        },
        loc: {
          start: {
            line: 229,
            column: 57
          },
          end: {
            line: 274,
            column: 1
          }
        },
        line: 229
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 232,
            column: 43
          },
          end: {
            line: 232,
            column: 44
          }
        },
        loc: {
          start: {
            line: 232,
            column: 66
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 232
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 254,
            column: 47
          },
          end: {
            line: 254,
            column: 48
          }
        },
        loc: {
          start: {
            line: 254,
            column: 60
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 254
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 255,
            column: 50
          },
          end: {
            line: 255,
            column: 51
          }
        },
        loc: {
          start: {
            line: 255,
            column: 61
          },
          end: {
            line: 261,
            column: 9
          }
        },
        line: 255
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 263,
            column: 15
          },
          end: {
            line: 263,
            column: 16
          }
        },
        loc: {
          start: {
            line: 263,
            column: 19
          },
          end: {
            line: 265,
            column: 9
          }
        },
        line: 263
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "2": {
        loc: {
          start: {
            line: 94,
            column: 34
          },
          end: {
            line: 94,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 94,
            column: 51
          },
          end: {
            line: 94,
            column: 53
          }
        }],
        line: 94
      },
      "3": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "4": {
        loc: {
          start: {
            line: 114,
            column: 19
          },
          end: {
            line: 114,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 48
          },
          end: {
            line: 114,
            column: 66
          }
        }, {
          start: {
            line: 114,
            column: 69
          },
          end: {
            line: 114,
            column: 77
          }
        }],
        line: 114
      },
      "5": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "6": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "7": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 134,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 134,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "8": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "9": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "10": {
        loc: {
          start: {
            line: 205,
            column: 33
          },
          end: {
            line: 205,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 56
          },
          end: {
            line: 205,
            column: 67
          }
        }, {
          start: {
            line: 205,
            column: 70
          },
          end: {
            line: 205,
            column: 99
          }
        }],
        line: 205
      },
      "11": {
        loc: {
          start: {
            line: 211,
            column: 54
          },
          end: {
            line: 211,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 211,
            column: 58
          },
          end: {
            line: 211,
            column: 59
          }
        }],
        line: 211
      },
      "12": {
        loc: {
          start: {
            line: 211,
            column: 61
          },
          end: {
            line: 211,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 211,
            column: 65
          },
          end: {
            line: 211,
            column: 66
          }
        }],
        line: 211
      },
      "13": {
        loc: {
          start: {
            line: 211,
            column: 83
          },
          end: {
            line: 211,
            column: 124
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 211,
            column: 95
          },
          end: {
            line: 211,
            column: 124
          }
        }],
        line: 211
      },
      "14": {
        loc: {
          start: {
            line: 211,
            column: 126
          },
          end: {
            line: 211,
            column: 137
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 211,
            column: 136
          },
          end: {
            line: 211,
            column: 137
          }
        }],
        line: 211
      },
      "15": {
        loc: {
          start: {
            line: 214,
            column: 65
          },
          end: {
            line: 214,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 214,
            column: 69
          },
          end: {
            line: 214,
            column: 70
          }
        }],
        line: 214
      },
      "16": {
        loc: {
          start: {
            line: 214,
            column: 72
          },
          end: {
            line: 214,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 214,
            column: 76
          },
          end: {
            line: 214,
            column: 77
          }
        }],
        line: 214
      },
      "17": {
        loc: {
          start: {
            line: 214,
            column: 94
          },
          end: {
            line: 214,
            column: 135
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 214,
            column: 106
          },
          end: {
            line: 214,
            column: 135
          }
        }],
        line: 214
      },
      "18": {
        loc: {
          start: {
            line: 214,
            column: 137
          },
          end: {
            line: 214,
            column: 148
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 214,
            column: 147
          },
          end: {
            line: 214,
            column: 148
          }
        }],
        line: 214
      },
      "19": {
        loc: {
          start: {
            line: 229,
            column: 33
          },
          end: {
            line: 229,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 229,
            column: 51
          },
          end: {
            line: 229,
            column: 55
          }
        }],
        line: 229
      },
      "20": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: 235,
            column: 15
          },
          end: {
            line: 240,
            column: 9
          }
        }],
        line: 233
      },
      "21": {
        loc: {
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 12
          },
          end: {
            line: 260,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useCanvasOperations.ts"],
      sourcesContent: ["'use client';\n\n// Canvas Operations Hooks\n// React hooks for common canvas operations and patterns\n\nimport { useCallback, useRef, useEffect, useState } from 'react';\nimport { \n  useCanvas, \n  useManagedCanvas, \n  type ManagedCanvas \n} from '../providers/CanvasProvider';\nimport { \n  AdvancedCanvasOperations,\n  CanvasAnimationUtils,\n  CanvasPerformanceUtils,\n  createAdvancedCanvasOperations,\n  createCanvasAnimationUtils,\n  BlendMode,\n  type CanvasState\n} from '../utils/canvasUtils';\n\n/**\n * Hook for advanced canvas operations\n */\nexport function useAdvancedCanvasOperations(\n  width: number,\n  height: number,\n  canvasId?: string\n): {\n  canvas: ManagedCanvas;\n  operations: AdvancedCanvasOperations;\n  saveState: () => CanvasState;\n  restoreState: (state: CanvasState) => void;\n  clear: () => void;\n} {\n  const canvas = useManagedCanvas(width, height, canvasId);\n  const operationsRef = useRef<AdvancedCanvasOperations | undefined>(undefined);\n  \n  if (!operationsRef.current) {\n    operationsRef.current = createAdvancedCanvasOperations(canvas);\n  }\n\n  const saveState = useCallback(() => {\n    return operationsRef.current!.saveState();\n  }, []);\n\n  const restoreState = useCallback((state: CanvasState) => {\n    operationsRef.current!.restoreState(state);\n  }, []);\n\n  const clear = useCallback(() => {\n    canvas.context.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);\n  }, [canvas]);\n\n  return {\n    canvas,\n    operations: operationsRef.current,\n    saveState,\n    restoreState,\n    clear\n  };\n}\n\n/**\n * Hook for canvas animation support\n */\nexport function useCanvasAnimation(): {\n  isRunning: boolean;\n  startAnimation: (callback: (timestamp: number) => void) => void;\n  stopAnimation: () => void;\n  animateProperty: (\n    from: number,\n    to: number,\n    duration: number,\n    easing: (t: number) => number,\n    onUpdate: (value: number) => void,\n    onComplete?: () => void\n  ) => (() => void);\n} {\n  const [isRunning, setIsRunning] = useState(false);\n  const animationUtilsRef = useRef<CanvasAnimationUtils | undefined>(undefined);\n\n  if (!animationUtilsRef.current) {\n    animationUtilsRef.current = createCanvasAnimationUtils();\n  }\n\n  const startAnimation = useCallback((callback: (timestamp: number) => void) => {\n    animationUtilsRef.current!.startAnimation(callback);\n    setIsRunning(true);\n  }, []);\n\n  const stopAnimation = useCallback(() => {\n    animationUtilsRef.current!.stopAnimation();\n    setIsRunning(false);\n  }, []);\n\n  const animateProperty = useCallback((\n    from: number,\n    to: number,\n    duration: number,\n    easing: (t: number) => number,\n    onUpdate: (value: number) => void,\n    onComplete?: () => void\n  ) => {\n    return CanvasAnimationUtils.animateProperty(\n      from, to, duration, easing, onUpdate, \n      () => {\n        onComplete?.();\n        setIsRunning(false);\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      stopAnimation();\n    };\n  }, [stopAnimation]);\n\n  return {\n    isRunning,\n    startAnimation,\n    stopAnimation,\n    animateProperty\n  };\n}\n\n/**\n * Hook for canvas state management with undo/redo functionality\n */\nexport function useCanvasHistory(\n  canvas: ManagedCanvas,\n  maxHistorySize: number = 20\n): {\n  canUndo: boolean;\n  canRedo: boolean;\n  saveState: () => void;\n  undo: () => void;\n  redo: () => void;\n  clear: () => void;\n  historySize: number;\n} {\n  const [history, setHistory] = useState<CanvasState[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const operationsRef = useRef<AdvancedCanvasOperations>(\n    createAdvancedCanvasOperations(canvas)\n  );\n\n  const canUndo = currentIndex > 0;\n  const canRedo = currentIndex < history.length - 1;\n\n  const saveState = useCallback(() => {\n    const state = operationsRef.current.saveState();\n    \n    setHistory(prev => {\n      const newHistory = prev.slice(0, currentIndex + 1);\n      newHistory.push(state);\n      \n      // Limit history size\n      if (newHistory.length > maxHistorySize) {\n        newHistory.shift();\n        return newHistory;\n      }\n      \n      return newHistory;\n    });\n    \n    setCurrentIndex(prev => {\n      const newIndex = prev + 1;\n      return newIndex >= maxHistorySize ? maxHistorySize - 1 : newIndex;\n    });\n  }, [currentIndex, maxHistorySize]);\n\n  const undo = useCallback(() => {\n    if (!canUndo) return;\n    \n    const newIndex = currentIndex - 1;\n    const state = history[newIndex];\n    \n    if (state) {\n      operationsRef.current.restoreState(state);\n      setCurrentIndex(newIndex);\n    }\n  }, [canUndo, currentIndex, history]);\n\n  const redo = useCallback(() => {\n    if (!canRedo) return;\n    \n    const newIndex = currentIndex + 1;\n    const state = history[newIndex];\n    \n    if (state) {\n      operationsRef.current.restoreState(state);\n      setCurrentIndex(newIndex);\n    }\n  }, [canRedo, currentIndex, history]);\n\n  const clear = useCallback(() => {\n    setHistory([]);\n    setCurrentIndex(-1);\n  }, []);\n\n  // Save initial state\n  useEffect(() => {\n    if (history.length === 0) {\n      saveState();\n    }\n  }, []);\n\n  return {\n    canUndo,\n    canRedo,\n    saveState,\n    undo,\n    redo,\n    clear,\n    historySize: history.length\n  };\n}\n\n/**\n * Hook for performance monitoring of canvas operations\n */\nexport function useCanvasPerformance(): {\n  measureOperation: <T>(operation: () => T, name?: string) => T;\n  debounce: <T extends (...args: any[]) => any>(func: T, wait: number) => (...args: Parameters<T>) => void;\n  throttle: <T extends (...args: any[]) => any>(func: T, limit: number) => (...args: Parameters<T>) => void;\n  isCanvasSizeSafe: (width: number, height: number) => boolean;\n} {\n  const measureOperation = useCallback(<T>(operation: () => T, name?: string) => {\n    return CanvasPerformanceUtils.measureOperation(operation, name);\n  }, []);\n\n  const debounce = useCallback(<T extends (...args: any[]) => any>(func: T, wait: number) => {\n    return CanvasPerformanceUtils.debounce(func, wait);\n  }, []);\n\n  const throttle = useCallback(<T extends (...args: any[]) => any>(func: T, limit: number) => {\n    return CanvasPerformanceUtils.throttle(func, limit);\n  }, []);\n\n  const isCanvasSizeSafe = useCallback((width: number, height: number) => {\n    return CanvasPerformanceUtils.isCanvasSizeSafe(width, height);\n  }, []);\n\n  return {\n    measureOperation,\n    debounce,\n    throttle,\n    isCanvasSizeSafe\n  };\n}\n\n/**\n * Hook for image loading and drawing on canvas\n */\nexport function useCanvasImageLoader(\n  canvas: ManagedCanvas\n): {\n  loadImage: (url: string) => Promise<HTMLImageElement>;\n  drawImage: (\n    image: HTMLImageElement,\n    x?: number,\n    y?: number,\n    width?: number,\n    height?: number,\n    blendMode?: BlendMode,\n    opacity?: number\n  ) => void;\n  loadAndDrawImage: (\n    url: string,\n    x?: number,\n    y?: number,\n    width?: number,\n    height?: number,\n    blendMode?: BlendMode,\n    opacity?: number\n  ) => Promise<void>;\n  isLoading: boolean;\n  error: string | null;\n} {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { utils } = useCanvas();\n  const operationsRef = useRef<AdvancedCanvasOperations>(\n    createAdvancedCanvasOperations(canvas)\n  );\n\n  const loadImage = useCallback(async (url: string): Promise<HTMLImageElement> => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      \n      await new Promise<void>((resolve, reject) => {\n        img.onload = () => resolve();\n        img.onerror = () => reject(new Error('Failed to load image'));\n        img.src = url;\n      });\n\n      setIsLoading(false);\n      return img;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error loading image';\n      setError(errorMessage);\n      setIsLoading(false);\n      throw new Error(errorMessage);\n    }\n  }, []);\n\n  const drawImage = useCallback((\n    image: HTMLImageElement,\n    x: number = 0,\n    y: number = 0,\n    width?: number,\n    height?: number,\n    blendMode: BlendMode = BlendMode.Normal,\n    opacity: number = 1\n  ) => {\n    operationsRef.current.drawImageWithBlendMode(\n      image, x, y, width, height, blendMode, opacity\n    );\n  }, []);\n\n  const loadAndDrawImage = useCallback(async (\n    url: string,\n    x: number = 0,\n    y: number = 0,\n    width?: number,\n    height?: number,\n    blendMode: BlendMode = BlendMode.Normal,\n    opacity: number = 1\n  ) => {\n    const image = await loadImage(url);\n    drawImage(image, x, y, width, height, blendMode, opacity);\n  }, [loadImage, drawImage]);\n\n  return {\n    loadImage,\n    drawImage,\n    loadAndDrawImage,\n    isLoading,\n    error\n  };\n}\n\n/**\n * Hook for canvas resize handling\n */\nexport function useCanvasResize(\n  canvas: ManagedCanvas,\n  maintainContent: boolean = true\n): {\n  resize: (newWidth: number, newHeight: number) => void;\n  autoResize: (container: HTMLElement) => void;\n  dimensions: { width: number; height: number };\n} {\n  const [dimensions, setDimensions] = useState(canvas.dimensions);\n  const { utils } = useCanvas();\n\n  const resize = useCallback((newWidth: number, newHeight: number) => {\n    if (maintainContent) {\n      utils.resizeCanvas(canvas.canvas, newWidth, newHeight);\n    } else {\n      canvas.canvas.width = newWidth;\n      canvas.canvas.height = newHeight;\n      canvas.canvas.style.width = `${newWidth}px`;\n      canvas.canvas.style.height = `${newHeight}px`;\n    }\n    \n    canvas.dimensions = { width: newWidth, height: newHeight };\n    setDimensions({ width: newWidth, height: newHeight });\n  }, [canvas, maintainContent, utils]);\n\n  const autoResize = useCallback((container: HTMLElement) => {\n    const resizeObserver = new ResizeObserver(entries => {\n      const entry = entries[0];\n      if (entry) {\n        const { width, height } = entry.contentRect;\n        resize(width, height);\n      }\n    });\n\n    resizeObserver.observe(container);\n    \n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [resize]);\n\n  return {\n    resize,\n    autoResize,\n    dimensions\n  };\n}"],
      names: ["useAdvancedCanvasOperations", "useCanvasAnimation", "useCanvasHistory", "useCanvasImageLoader", "useCanvasPerformance", "useCanvasResize", "width", "height", "canvasId", "canvas", "useManagedCanvas", "operationsRef", "useRef", "undefined", "current", "createAdvancedCanvasOperations", "saveState", "useCallback", "restoreState", "state", "clear", "context", "clearRect", "operations", "isRunning", "setIsRunning", "useState", "animationUtilsRef", "createCanvasAnimationUtils", "startAnimation", "callback", "stopAnimation", "animateProperty", "from", "to", "duration", "easing", "onUpdate", "onComplete", "CanvasAnimationUtils", "useEffect", "maxHistorySize", "history", "setHistory", "currentIndex", "setCurrentIndex", "canUndo", "canRedo", "length", "prev", "newHistory", "slice", "push", "shift", "newIndex", "undo", "redo", "historySize", "measureOperation", "operation", "name", "CanvasPerformanceUtils", "debounce", "func", "wait", "throttle", "limit", "isCanvasSizeSafe", "isLoading", "setIsLoading", "error", "setError", "utils", "useCanvas", "loadImage", "url", "img", "Image", "crossOrigin", "Promise", "resolve", "reject", "onload", "onerror", "Error", "src", "err", "errorMessage", "message", "drawImage", "image", "x", "y", "blendMode", "BlendMode", "Normal", "opacity", "drawImageWithBlendMode", "loadAndDrawImage", "maintainContent", "dimensions", "setDimensions", "resize", "newWidth", "newHeight", "resizeCanvas", "style", "autoResize", "container", "resizeObserver", "ResizeObserver", "entries", "entry", "contentRect", "observe", "disconnect"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "248aa738b68413560ab99366e8a53799a6323ca2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nt0vdori3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nt0vdori3();
cov_nt0vdori3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_nt0vdori3().f[0]++;
  cov_nt0vdori3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_nt0vdori3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_nt0vdori3().s[3]++;
_export(exports, {
  useAdvancedCanvasOperations: function () {
    /* istanbul ignore next */
    cov_nt0vdori3().f[1]++;
    cov_nt0vdori3().s[4]++;
    return useAdvancedCanvasOperations;
  },
  useCanvasAnimation: function () {
    /* istanbul ignore next */
    cov_nt0vdori3().f[2]++;
    cov_nt0vdori3().s[5]++;
    return useCanvasAnimation;
  },
  useCanvasHistory: function () {
    /* istanbul ignore next */
    cov_nt0vdori3().f[3]++;
    cov_nt0vdori3().s[6]++;
    return useCanvasHistory;
  },
  useCanvasImageLoader: function () {
    /* istanbul ignore next */
    cov_nt0vdori3().f[4]++;
    cov_nt0vdori3().s[7]++;
    return useCanvasImageLoader;
  },
  useCanvasPerformance: function () {
    /* istanbul ignore next */
    cov_nt0vdori3().f[5]++;
    cov_nt0vdori3().s[8]++;
    return useCanvasPerformance;
  },
  useCanvasResize: function () {
    /* istanbul ignore next */
    cov_nt0vdori3().f[6]++;
    cov_nt0vdori3().s[9]++;
    return useCanvasResize;
  }
});
const _react =
/* istanbul ignore next */
(cov_nt0vdori3().s[10]++, require("react"));
const _CanvasProvider =
/* istanbul ignore next */
(cov_nt0vdori3().s[11]++, require("../providers/CanvasProvider"));
const _canvasUtils =
/* istanbul ignore next */
(cov_nt0vdori3().s[12]++, require("../utils/canvasUtils"));
function useAdvancedCanvasOperations(width, height, canvasId) {
  /* istanbul ignore next */
  cov_nt0vdori3().f[7]++;
  const canvas =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[13]++, (0, _CanvasProvider.useManagedCanvas)(width, height, canvasId));
  const operationsRef =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[14]++, (0, _react.useRef)(undefined));
  /* istanbul ignore next */
  cov_nt0vdori3().s[15]++;
  if (!operationsRef.current) {
    /* istanbul ignore next */
    cov_nt0vdori3().b[0][0]++;
    cov_nt0vdori3().s[16]++;
    operationsRef.current = (0, _canvasUtils.createAdvancedCanvasOperations)(canvas);
  } else
  /* istanbul ignore next */
  {
    cov_nt0vdori3().b[0][1]++;
  }
  const saveState =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[17]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[8]++;
    cov_nt0vdori3().s[18]++;
    return operationsRef.current.saveState();
  }, []));
  const restoreState =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[19]++, (0, _react.useCallback)(state => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[9]++;
    cov_nt0vdori3().s[20]++;
    operationsRef.current.restoreState(state);
  }, []));
  const clear =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[21]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[10]++;
    cov_nt0vdori3().s[22]++;
    canvas.context.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);
  }, [canvas]));
  /* istanbul ignore next */
  cov_nt0vdori3().s[23]++;
  return {
    canvas,
    operations: operationsRef.current,
    saveState,
    restoreState,
    clear
  };
}
function useCanvasAnimation() {
  /* istanbul ignore next */
  cov_nt0vdori3().f[11]++;
  const [isRunning, setIsRunning] =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[24]++, (0, _react.useState)(false));
  const animationUtilsRef =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[25]++, (0, _react.useRef)(undefined));
  /* istanbul ignore next */
  cov_nt0vdori3().s[26]++;
  if (!animationUtilsRef.current) {
    /* istanbul ignore next */
    cov_nt0vdori3().b[1][0]++;
    cov_nt0vdori3().s[27]++;
    animationUtilsRef.current = (0, _canvasUtils.createCanvasAnimationUtils)();
  } else
  /* istanbul ignore next */
  {
    cov_nt0vdori3().b[1][1]++;
  }
  const startAnimation =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[28]++, (0, _react.useCallback)(callback => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[12]++;
    cov_nt0vdori3().s[29]++;
    animationUtilsRef.current.startAnimation(callback);
    /* istanbul ignore next */
    cov_nt0vdori3().s[30]++;
    setIsRunning(true);
  }, []));
  const stopAnimation =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[31]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[13]++;
    cov_nt0vdori3().s[32]++;
    animationUtilsRef.current.stopAnimation();
    /* istanbul ignore next */
    cov_nt0vdori3().s[33]++;
    setIsRunning(false);
  }, []));
  const animateProperty =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[34]++, (0, _react.useCallback)((from, to, duration, easing, onUpdate, onComplete) => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[14]++;
    cov_nt0vdori3().s[35]++;
    return _canvasUtils.CanvasAnimationUtils.animateProperty(from, to, duration, easing, onUpdate, () => {
      /* istanbul ignore next */
      cov_nt0vdori3().f[15]++;
      cov_nt0vdori3().s[36]++;
      onComplete?.();
      /* istanbul ignore next */
      cov_nt0vdori3().s[37]++;
      setIsRunning(false);
    });
  }, []));
  /* istanbul ignore next */
  cov_nt0vdori3().s[38]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[16]++;
    cov_nt0vdori3().s[39]++;
    return () => {
      /* istanbul ignore next */
      cov_nt0vdori3().f[17]++;
      cov_nt0vdori3().s[40]++;
      stopAnimation();
    };
  }, [stopAnimation]);
  /* istanbul ignore next */
  cov_nt0vdori3().s[41]++;
  return {
    isRunning,
    startAnimation,
    stopAnimation,
    animateProperty
  };
}
function useCanvasHistory(canvas, maxHistorySize =
/* istanbul ignore next */
(cov_nt0vdori3().b[2][0]++, 20)) {
  /* istanbul ignore next */
  cov_nt0vdori3().f[18]++;
  const [history, setHistory] =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[42]++, (0, _react.useState)([]));
  const [currentIndex, setCurrentIndex] =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[43]++, (0, _react.useState)(-1));
  const operationsRef =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[44]++, (0, _react.useRef)((0, _canvasUtils.createAdvancedCanvasOperations)(canvas)));
  const canUndo =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[45]++, currentIndex > 0);
  const canRedo =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[46]++, currentIndex < history.length - 1);
  const saveState =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[47]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[19]++;
    const state =
    /* istanbul ignore next */
    (cov_nt0vdori3().s[48]++, operationsRef.current.saveState());
    /* istanbul ignore next */
    cov_nt0vdori3().s[49]++;
    setHistory(prev => {
      /* istanbul ignore next */
      cov_nt0vdori3().f[20]++;
      const newHistory =
      /* istanbul ignore next */
      (cov_nt0vdori3().s[50]++, prev.slice(0, currentIndex + 1));
      /* istanbul ignore next */
      cov_nt0vdori3().s[51]++;
      newHistory.push(state);
      // Limit history size
      /* istanbul ignore next */
      cov_nt0vdori3().s[52]++;
      if (newHistory.length > maxHistorySize) {
        /* istanbul ignore next */
        cov_nt0vdori3().b[3][0]++;
        cov_nt0vdori3().s[53]++;
        newHistory.shift();
        /* istanbul ignore next */
        cov_nt0vdori3().s[54]++;
        return newHistory;
      } else
      /* istanbul ignore next */
      {
        cov_nt0vdori3().b[3][1]++;
      }
      cov_nt0vdori3().s[55]++;
      return newHistory;
    });
    /* istanbul ignore next */
    cov_nt0vdori3().s[56]++;
    setCurrentIndex(prev => {
      /* istanbul ignore next */
      cov_nt0vdori3().f[21]++;
      const newIndex =
      /* istanbul ignore next */
      (cov_nt0vdori3().s[57]++, prev + 1);
      /* istanbul ignore next */
      cov_nt0vdori3().s[58]++;
      return newIndex >= maxHistorySize ?
      /* istanbul ignore next */
      (cov_nt0vdori3().b[4][0]++, maxHistorySize - 1) :
      /* istanbul ignore next */
      (cov_nt0vdori3().b[4][1]++, newIndex);
    });
  }, [currentIndex, maxHistorySize]));
  const undo =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[59]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[22]++;
    cov_nt0vdori3().s[60]++;
    if (!canUndo) {
      /* istanbul ignore next */
      cov_nt0vdori3().b[5][0]++;
      cov_nt0vdori3().s[61]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_nt0vdori3().b[5][1]++;
    }
    const newIndex =
    /* istanbul ignore next */
    (cov_nt0vdori3().s[62]++, currentIndex - 1);
    const state =
    /* istanbul ignore next */
    (cov_nt0vdori3().s[63]++, history[newIndex]);
    /* istanbul ignore next */
    cov_nt0vdori3().s[64]++;
    if (state) {
      /* istanbul ignore next */
      cov_nt0vdori3().b[6][0]++;
      cov_nt0vdori3().s[65]++;
      operationsRef.current.restoreState(state);
      /* istanbul ignore next */
      cov_nt0vdori3().s[66]++;
      setCurrentIndex(newIndex);
    } else
    /* istanbul ignore next */
    {
      cov_nt0vdori3().b[6][1]++;
    }
  }, [canUndo, currentIndex, history]));
  const redo =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[67]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[23]++;
    cov_nt0vdori3().s[68]++;
    if (!canRedo) {
      /* istanbul ignore next */
      cov_nt0vdori3().b[7][0]++;
      cov_nt0vdori3().s[69]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_nt0vdori3().b[7][1]++;
    }
    const newIndex =
    /* istanbul ignore next */
    (cov_nt0vdori3().s[70]++, currentIndex + 1);
    const state =
    /* istanbul ignore next */
    (cov_nt0vdori3().s[71]++, history[newIndex]);
    /* istanbul ignore next */
    cov_nt0vdori3().s[72]++;
    if (state) {
      /* istanbul ignore next */
      cov_nt0vdori3().b[8][0]++;
      cov_nt0vdori3().s[73]++;
      operationsRef.current.restoreState(state);
      /* istanbul ignore next */
      cov_nt0vdori3().s[74]++;
      setCurrentIndex(newIndex);
    } else
    /* istanbul ignore next */
    {
      cov_nt0vdori3().b[8][1]++;
    }
  }, [canRedo, currentIndex, history]));
  const clear =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[75]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[24]++;
    cov_nt0vdori3().s[76]++;
    setHistory([]);
    /* istanbul ignore next */
    cov_nt0vdori3().s[77]++;
    setCurrentIndex(-1);
  }, []));
  // Save initial state
  /* istanbul ignore next */
  cov_nt0vdori3().s[78]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[25]++;
    cov_nt0vdori3().s[79]++;
    if (history.length === 0) {
      /* istanbul ignore next */
      cov_nt0vdori3().b[9][0]++;
      cov_nt0vdori3().s[80]++;
      saveState();
    } else
    /* istanbul ignore next */
    {
      cov_nt0vdori3().b[9][1]++;
    }
  }, []);
  /* istanbul ignore next */
  cov_nt0vdori3().s[81]++;
  return {
    canUndo,
    canRedo,
    saveState,
    undo,
    redo,
    clear,
    historySize: history.length
  };
}
function useCanvasPerformance() {
  /* istanbul ignore next */
  cov_nt0vdori3().f[26]++;
  const measureOperation =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[82]++, (0, _react.useCallback)((operation, name) => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[27]++;
    cov_nt0vdori3().s[83]++;
    return _canvasUtils.CanvasPerformanceUtils.measureOperation(operation, name);
  }, []));
  const debounce =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[84]++, (0, _react.useCallback)((func, wait) => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[28]++;
    cov_nt0vdori3().s[85]++;
    return _canvasUtils.CanvasPerformanceUtils.debounce(func, wait);
  }, []));
  const throttle =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[86]++, (0, _react.useCallback)((func, limit) => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[29]++;
    cov_nt0vdori3().s[87]++;
    return _canvasUtils.CanvasPerformanceUtils.throttle(func, limit);
  }, []));
  const isCanvasSizeSafe =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[88]++, (0, _react.useCallback)((width, height) => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[30]++;
    cov_nt0vdori3().s[89]++;
    return _canvasUtils.CanvasPerformanceUtils.isCanvasSizeSafe(width, height);
  }, []));
  /* istanbul ignore next */
  cov_nt0vdori3().s[90]++;
  return {
    measureOperation,
    debounce,
    throttle,
    isCanvasSizeSafe
  };
}
function useCanvasImageLoader(canvas) {
  /* istanbul ignore next */
  cov_nt0vdori3().f[31]++;
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[91]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[92]++, (0, _react.useState)(null));
  const {
    utils
  } =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[93]++, (0, _CanvasProvider.useCanvas)());
  const operationsRef =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[94]++, (0, _react.useRef)((0, _canvasUtils.createAdvancedCanvasOperations)(canvas)));
  const loadImage =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[95]++, (0, _react.useCallback)(async url => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[32]++;
    cov_nt0vdori3().s[96]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_nt0vdori3().s[97]++;
    setError(null);
    /* istanbul ignore next */
    cov_nt0vdori3().s[98]++;
    try {
      const img =
      /* istanbul ignore next */
      (cov_nt0vdori3().s[99]++, new Image());
      /* istanbul ignore next */
      cov_nt0vdori3().s[100]++;
      img.crossOrigin = 'anonymous';
      /* istanbul ignore next */
      cov_nt0vdori3().s[101]++;
      await new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_nt0vdori3().f[33]++;
        cov_nt0vdori3().s[102]++;
        img.onload = () => {
          /* istanbul ignore next */
          cov_nt0vdori3().f[34]++;
          cov_nt0vdori3().s[103]++;
          return resolve();
        };
        /* istanbul ignore next */
        cov_nt0vdori3().s[104]++;
        img.onerror = () => {
          /* istanbul ignore next */
          cov_nt0vdori3().f[35]++;
          cov_nt0vdori3().s[105]++;
          return reject(new Error('Failed to load image'));
        };
        /* istanbul ignore next */
        cov_nt0vdori3().s[106]++;
        img.src = url;
      });
      /* istanbul ignore next */
      cov_nt0vdori3().s[107]++;
      setIsLoading(false);
      /* istanbul ignore next */
      cov_nt0vdori3().s[108]++;
      return img;
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_nt0vdori3().s[109]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_nt0vdori3().b[10][0]++, err.message) :
      /* istanbul ignore next */
      (cov_nt0vdori3().b[10][1]++, 'Unknown error loading image'));
      /* istanbul ignore next */
      cov_nt0vdori3().s[110]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_nt0vdori3().s[111]++;
      setIsLoading(false);
      /* istanbul ignore next */
      cov_nt0vdori3().s[112]++;
      throw new Error(errorMessage);
    }
  }, []));
  const drawImage =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[113]++, (0, _react.useCallback)((image, x =
  /* istanbul ignore next */
  (cov_nt0vdori3().b[11][0]++, 0), y =
  /* istanbul ignore next */
  (cov_nt0vdori3().b[12][0]++, 0), width, height, blendMode =
  /* istanbul ignore next */
  (cov_nt0vdori3().b[13][0]++, _canvasUtils.BlendMode.Normal), opacity =
  /* istanbul ignore next */
  (cov_nt0vdori3().b[14][0]++, 1)) => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[36]++;
    cov_nt0vdori3().s[114]++;
    operationsRef.current.drawImageWithBlendMode(image, x, y, width, height, blendMode, opacity);
  }, []));
  const loadAndDrawImage =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[115]++, (0, _react.useCallback)(async (url, x =
  /* istanbul ignore next */
  (cov_nt0vdori3().b[15][0]++, 0), y =
  /* istanbul ignore next */
  (cov_nt0vdori3().b[16][0]++, 0), width, height, blendMode =
  /* istanbul ignore next */
  (cov_nt0vdori3().b[17][0]++, _canvasUtils.BlendMode.Normal), opacity =
  /* istanbul ignore next */
  (cov_nt0vdori3().b[18][0]++, 1)) => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[37]++;
    const image =
    /* istanbul ignore next */
    (cov_nt0vdori3().s[116]++, await loadImage(url));
    /* istanbul ignore next */
    cov_nt0vdori3().s[117]++;
    drawImage(image, x, y, width, height, blendMode, opacity);
  }, [loadImage, drawImage]));
  /* istanbul ignore next */
  cov_nt0vdori3().s[118]++;
  return {
    loadImage,
    drawImage,
    loadAndDrawImage,
    isLoading,
    error
  };
}
function useCanvasResize(canvas, maintainContent =
/* istanbul ignore next */
(cov_nt0vdori3().b[19][0]++, true)) {
  /* istanbul ignore next */
  cov_nt0vdori3().f[38]++;
  const [dimensions, setDimensions] =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[119]++, (0, _react.useState)(canvas.dimensions));
  const {
    utils
  } =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[120]++, (0, _CanvasProvider.useCanvas)());
  const resize =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[121]++, (0, _react.useCallback)((newWidth, newHeight) => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[39]++;
    cov_nt0vdori3().s[122]++;
    if (maintainContent) {
      /* istanbul ignore next */
      cov_nt0vdori3().b[20][0]++;
      cov_nt0vdori3().s[123]++;
      utils.resizeCanvas(canvas.canvas, newWidth, newHeight);
    } else {
      /* istanbul ignore next */
      cov_nt0vdori3().b[20][1]++;
      cov_nt0vdori3().s[124]++;
      canvas.canvas.width = newWidth;
      /* istanbul ignore next */
      cov_nt0vdori3().s[125]++;
      canvas.canvas.height = newHeight;
      /* istanbul ignore next */
      cov_nt0vdori3().s[126]++;
      canvas.canvas.style.width = `${newWidth}px`;
      /* istanbul ignore next */
      cov_nt0vdori3().s[127]++;
      canvas.canvas.style.height = `${newHeight}px`;
    }
    /* istanbul ignore next */
    cov_nt0vdori3().s[128]++;
    canvas.dimensions = {
      width: newWidth,
      height: newHeight
    };
    /* istanbul ignore next */
    cov_nt0vdori3().s[129]++;
    setDimensions({
      width: newWidth,
      height: newHeight
    });
  }, [canvas, maintainContent, utils]));
  const autoResize =
  /* istanbul ignore next */
  (cov_nt0vdori3().s[130]++, (0, _react.useCallback)(container => {
    /* istanbul ignore next */
    cov_nt0vdori3().f[40]++;
    const resizeObserver =
    /* istanbul ignore next */
    (cov_nt0vdori3().s[131]++, new ResizeObserver(entries => {
      /* istanbul ignore next */
      cov_nt0vdori3().f[41]++;
      const entry =
      /* istanbul ignore next */
      (cov_nt0vdori3().s[132]++, entries[0]);
      /* istanbul ignore next */
      cov_nt0vdori3().s[133]++;
      if (entry) {
        /* istanbul ignore next */
        cov_nt0vdori3().b[21][0]++;
        const {
          width,
          height
        } =
        /* istanbul ignore next */
        (cov_nt0vdori3().s[134]++, entry.contentRect);
        /* istanbul ignore next */
        cov_nt0vdori3().s[135]++;
        resize(width, height);
      } else
      /* istanbul ignore next */
      {
        cov_nt0vdori3().b[21][1]++;
      }
    }));
    /* istanbul ignore next */
    cov_nt0vdori3().s[136]++;
    resizeObserver.observe(container);
    /* istanbul ignore next */
    cov_nt0vdori3().s[137]++;
    return () => {
      /* istanbul ignore next */
      cov_nt0vdori3().f[42]++;
      cov_nt0vdori3().s[138]++;
      resizeObserver.disconnect();
    };
  }, [resize]));
  /* istanbul ignore next */
  cov_nt0vdori3().s[139]++;
  return {
    resize,
    autoResize,
    dimensions
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,