{"version":3,"names":["cov_nt0vdori3","actualCoverage","s","useAdvancedCanvasOperations","f","useCanvasAnimation","useCanvasHistory","useCanvasImageLoader","useCanvasPerformance","useCanvasResize","width","height","canvasId","canvas","_CanvasProvider","useManagedCanvas","operationsRef","_react","useRef","undefined","current","b","_canvasUtils","createAdvancedCanvasOperations","saveState","useCallback","restoreState","state","clear","context","clearRect","operations","isRunning","setIsRunning","useState","animationUtilsRef","createCanvasAnimationUtils","startAnimation","callback","stopAnimation","animateProperty","from","to","duration","easing","onUpdate","onComplete","CanvasAnimationUtils","useEffect","maxHistorySize","history","setHistory","currentIndex","setCurrentIndex","canUndo","canRedo","length","prev","newHistory","slice","push","shift","newIndex","undo","redo","historySize","measureOperation","operation","name","CanvasPerformanceUtils","debounce","func","wait","throttle","limit","isCanvasSizeSafe","isLoading","setIsLoading","error","setError","utils","useCanvas","loadImage","url","img","Image","crossOrigin","Promise","resolve","reject","onload","onerror","Error","src","err","errorMessage","message","drawImage","image","x","y","blendMode","BlendMode","Normal","opacity","drawImageWithBlendMode","loadAndDrawImage","maintainContent","dimensions","setDimensions","resize","newWidth","newHeight","resizeCanvas","style","autoResize","container","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","disconnect"],"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useCanvasOperations.ts"],"sourcesContent":["'use client';\n\n// Canvas Operations Hooks\n// React hooks for common canvas operations and patterns\n\nimport { useCallback, useRef, useEffect, useState } from 'react';\nimport { \n  useCanvas, \n  useManagedCanvas, \n  type ManagedCanvas \n} from '../providers/CanvasProvider';\nimport { \n  AdvancedCanvasOperations,\n  CanvasAnimationUtils,\n  CanvasPerformanceUtils,\n  createAdvancedCanvasOperations,\n  createCanvasAnimationUtils,\n  BlendMode,\n  type CanvasState\n} from '../utils/canvasUtils';\n\n/**\n * Hook for advanced canvas operations\n */\nexport function useAdvancedCanvasOperations(\n  width: number,\n  height: number,\n  canvasId?: string\n): {\n  canvas: ManagedCanvas;\n  operations: AdvancedCanvasOperations;\n  saveState: () => CanvasState;\n  restoreState: (state: CanvasState) => void;\n  clear: () => void;\n} {\n  const canvas = useManagedCanvas(width, height, canvasId);\n  const operationsRef = useRef<AdvancedCanvasOperations | undefined>(undefined);\n  \n  if (!operationsRef.current) {\n    operationsRef.current = createAdvancedCanvasOperations(canvas);\n  }\n\n  const saveState = useCallback(() => {\n    return operationsRef.current!.saveState();\n  }, []);\n\n  const restoreState = useCallback((state: CanvasState) => {\n    operationsRef.current!.restoreState(state);\n  }, []);\n\n  const clear = useCallback(() => {\n    canvas.context.clearRect(0, 0, canvas.canvas.width, canvas.canvas.height);\n  }, [canvas]);\n\n  return {\n    canvas,\n    operations: operationsRef.current,\n    saveState,\n    restoreState,\n    clear\n  };\n}\n\n/**\n * Hook for canvas animation support\n */\nexport function useCanvasAnimation(): {\n  isRunning: boolean;\n  startAnimation: (callback: (timestamp: number) => void) => void;\n  stopAnimation: () => void;\n  animateProperty: (\n    from: number,\n    to: number,\n    duration: number,\n    easing: (t: number) => number,\n    onUpdate: (value: number) => void,\n    onComplete?: () => void\n  ) => (() => void);\n} {\n  const [isRunning, setIsRunning] = useState(false);\n  const animationUtilsRef = useRef<CanvasAnimationUtils | undefined>(undefined);\n\n  if (!animationUtilsRef.current) {\n    animationUtilsRef.current = createCanvasAnimationUtils();\n  }\n\n  const startAnimation = useCallback((callback: (timestamp: number) => void) => {\n    animationUtilsRef.current!.startAnimation(callback);\n    setIsRunning(true);\n  }, []);\n\n  const stopAnimation = useCallback(() => {\n    animationUtilsRef.current!.stopAnimation();\n    setIsRunning(false);\n  }, []);\n\n  const animateProperty = useCallback((\n    from: number,\n    to: number,\n    duration: number,\n    easing: (t: number) => number,\n    onUpdate: (value: number) => void,\n    onComplete?: () => void\n  ) => {\n    return CanvasAnimationUtils.animateProperty(\n      from, to, duration, easing, onUpdate, \n      () => {\n        onComplete?.();\n        setIsRunning(false);\n      }\n    );\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      stopAnimation();\n    };\n  }, [stopAnimation]);\n\n  return {\n    isRunning,\n    startAnimation,\n    stopAnimation,\n    animateProperty\n  };\n}\n\n/**\n * Hook for canvas state management with undo/redo functionality\n */\nexport function useCanvasHistory(\n  canvas: ManagedCanvas,\n  maxHistorySize: number = 20\n): {\n  canUndo: boolean;\n  canRedo: boolean;\n  saveState: () => void;\n  undo: () => void;\n  redo: () => void;\n  clear: () => void;\n  historySize: number;\n} {\n  const [history, setHistory] = useState<CanvasState[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const operationsRef = useRef<AdvancedCanvasOperations>(\n    createAdvancedCanvasOperations(canvas)\n  );\n\n  const canUndo = currentIndex > 0;\n  const canRedo = currentIndex < history.length - 1;\n\n  const saveState = useCallback(() => {\n    const state = operationsRef.current.saveState();\n    \n    setHistory(prev => {\n      const newHistory = prev.slice(0, currentIndex + 1);\n      newHistory.push(state);\n      \n      // Limit history size\n      if (newHistory.length > maxHistorySize) {\n        newHistory.shift();\n        return newHistory;\n      }\n      \n      return newHistory;\n    });\n    \n    setCurrentIndex(prev => {\n      const newIndex = prev + 1;\n      return newIndex >= maxHistorySize ? maxHistorySize - 1 : newIndex;\n    });\n  }, [currentIndex, maxHistorySize]);\n\n  const undo = useCallback(() => {\n    if (!canUndo) return;\n    \n    const newIndex = currentIndex - 1;\n    const state = history[newIndex];\n    \n    if (state) {\n      operationsRef.current.restoreState(state);\n      setCurrentIndex(newIndex);\n    }\n  }, [canUndo, currentIndex, history]);\n\n  const redo = useCallback(() => {\n    if (!canRedo) return;\n    \n    const newIndex = currentIndex + 1;\n    const state = history[newIndex];\n    \n    if (state) {\n      operationsRef.current.restoreState(state);\n      setCurrentIndex(newIndex);\n    }\n  }, [canRedo, currentIndex, history]);\n\n  const clear = useCallback(() => {\n    setHistory([]);\n    setCurrentIndex(-1);\n  }, []);\n\n  // Save initial state\n  useEffect(() => {\n    if (history.length === 0) {\n      saveState();\n    }\n  }, []);\n\n  return {\n    canUndo,\n    canRedo,\n    saveState,\n    undo,\n    redo,\n    clear,\n    historySize: history.length\n  };\n}\n\n/**\n * Hook for performance monitoring of canvas operations\n */\nexport function useCanvasPerformance(): {\n  measureOperation: <T>(operation: () => T, name?: string) => T;\n  debounce: <T extends (...args: any[]) => any>(func: T, wait: number) => (...args: Parameters<T>) => void;\n  throttle: <T extends (...args: any[]) => any>(func: T, limit: number) => (...args: Parameters<T>) => void;\n  isCanvasSizeSafe: (width: number, height: number) => boolean;\n} {\n  const measureOperation = useCallback(<T>(operation: () => T, name?: string) => {\n    return CanvasPerformanceUtils.measureOperation(operation, name);\n  }, []);\n\n  const debounce = useCallback(<T extends (...args: any[]) => any>(func: T, wait: number) => {\n    return CanvasPerformanceUtils.debounce(func, wait);\n  }, []);\n\n  const throttle = useCallback(<T extends (...args: any[]) => any>(func: T, limit: number) => {\n    return CanvasPerformanceUtils.throttle(func, limit);\n  }, []);\n\n  const isCanvasSizeSafe = useCallback((width: number, height: number) => {\n    return CanvasPerformanceUtils.isCanvasSizeSafe(width, height);\n  }, []);\n\n  return {\n    measureOperation,\n    debounce,\n    throttle,\n    isCanvasSizeSafe\n  };\n}\n\n/**\n * Hook for image loading and drawing on canvas\n */\nexport function useCanvasImageLoader(\n  canvas: ManagedCanvas\n): {\n  loadImage: (url: string) => Promise<HTMLImageElement>;\n  drawImage: (\n    image: HTMLImageElement,\n    x?: number,\n    y?: number,\n    width?: number,\n    height?: number,\n    blendMode?: BlendMode,\n    opacity?: number\n  ) => void;\n  loadAndDrawImage: (\n    url: string,\n    x?: number,\n    y?: number,\n    width?: number,\n    height?: number,\n    blendMode?: BlendMode,\n    opacity?: number\n  ) => Promise<void>;\n  isLoading: boolean;\n  error: string | null;\n} {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const { utils } = useCanvas();\n  const operationsRef = useRef<AdvancedCanvasOperations>(\n    createAdvancedCanvasOperations(canvas)\n  );\n\n  const loadImage = useCallback(async (url: string): Promise<HTMLImageElement> => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      \n      await new Promise<void>((resolve, reject) => {\n        img.onload = () => resolve();\n        img.onerror = () => reject(new Error('Failed to load image'));\n        img.src = url;\n      });\n\n      setIsLoading(false);\n      return img;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Unknown error loading image';\n      setError(errorMessage);\n      setIsLoading(false);\n      throw new Error(errorMessage);\n    }\n  }, []);\n\n  const drawImage = useCallback((\n    image: HTMLImageElement,\n    x: number = 0,\n    y: number = 0,\n    width?: number,\n    height?: number,\n    blendMode: BlendMode = BlendMode.Normal,\n    opacity: number = 1\n  ) => {\n    operationsRef.current.drawImageWithBlendMode(\n      image, x, y, width, height, blendMode, opacity\n    );\n  }, []);\n\n  const loadAndDrawImage = useCallback(async (\n    url: string,\n    x: number = 0,\n    y: number = 0,\n    width?: number,\n    height?: number,\n    blendMode: BlendMode = BlendMode.Normal,\n    opacity: number = 1\n  ) => {\n    const image = await loadImage(url);\n    drawImage(image, x, y, width, height, blendMode, opacity);\n  }, [loadImage, drawImage]);\n\n  return {\n    loadImage,\n    drawImage,\n    loadAndDrawImage,\n    isLoading,\n    error\n  };\n}\n\n/**\n * Hook for canvas resize handling\n */\nexport function useCanvasResize(\n  canvas: ManagedCanvas,\n  maintainContent: boolean = true\n): {\n  resize: (newWidth: number, newHeight: number) => void;\n  autoResize: (container: HTMLElement) => void;\n  dimensions: { width: number; height: number };\n} {\n  const [dimensions, setDimensions] = useState(canvas.dimensions);\n  const { utils } = useCanvas();\n\n  const resize = useCallback((newWidth: number, newHeight: number) => {\n    if (maintainContent) {\n      utils.resizeCanvas(canvas.canvas, newWidth, newHeight);\n    } else {\n      canvas.canvas.width = newWidth;\n      canvas.canvas.height = newHeight;\n      canvas.canvas.style.width = `${newWidth}px`;\n      canvas.canvas.style.height = `${newHeight}px`;\n    }\n    \n    canvas.dimensions = { width: newWidth, height: newHeight };\n    setDimensions({ width: newWidth, height: newHeight });\n  }, [canvas, maintainContent, utils]);\n\n  const autoResize = useCallback((container: HTMLElement) => {\n    const resizeObserver = new ResizeObserver(entries => {\n      const entry = entries[0];\n      if (entry) {\n        const { width, height } = entry.contentRect;\n        resize(width, height);\n      }\n    });\n\n    resizeObserver.observe(container);\n    \n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [resize]);\n\n  return {\n    resize,\n    autoResize,\n    dimensions\n  };\n}"],"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","ignoreList":[]}