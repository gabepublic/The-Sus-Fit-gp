e703796af81dea809eb0777fe5eb01c7
'use client';
"use strict";

/* istanbul ignore next */
function cov_2mhscs3zvt() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useStickerManagement.ts";
  var hash = "f649f7be032d0502a28c4eaebe5f64fe35ab28e3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useStickerManagement.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "7": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "9": {
        start: {
          line: 25,
          column: 26
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "10": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 27,
          column: 93
        }
      },
      "11": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 94
        }
      },
      "12": {
        start: {
          line: 29,
          column: 36
        },
        end: {
          line: 29,
          column: 60
        }
      },
      "13": {
        start: {
          line: 30,
          column: 54
        },
        end: {
          line: 30,
          column: 80
        }
      },
      "14": {
        start: {
          line: 31,
          column: 52
        },
        end: {
          line: 39,
          column: 6
        }
      },
      "15": {
        start: {
          line: 40,
          column: 28
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 57
        }
      },
      "17": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 51,
          column: 6
        }
      },
      "18": {
        start: {
          line: 44,
          column: 19
        },
        end: {
          line: 44,
          column: 62
        }
      },
      "19": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 26
        }
      },
      "20": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 18
        }
      },
      "22": {
        start: {
          line: 52,
          column: 26
        },
        end: {
          line: 66,
          column: 6
        }
      },
      "23": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 60
        }
      },
      "24": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "25": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 30
        }
      },
      "26": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "27": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 43
        }
      },
      "28": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 50
        }
      },
      "29": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 23
        }
      },
      "30": {
        start: {
          line: 67,
          column: 26
        },
        end: {
          line: 75,
          column: 6
        }
      },
      "31": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 69
        }
      },
      "32": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "33": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 30
        }
      },
      "34": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 23
        }
      },
      "35": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 84,
          column: 6
        }
      },
      "36": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 45
        }
      },
      "37": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 33
        }
      },
      "38": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 26
        }
      },
      "39": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 40
        }
      },
      "40": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 100,
          column: 6
        }
      },
      "41": {
        start: {
          line: 86,
          column: 24
        },
        end: {
          line: 86,
          column: 66
        }
      },
      "42": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "43": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 30
        }
      },
      "44": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 48
        }
      },
      "45": {
        start: {
          line: 91,
          column: 31
        },
        end: {
          line: 91,
          column: 69
        }
      },
      "46": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "47": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 59
        }
      },
      "48": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 23
        }
      },
      "49": {
        start: {
          line: 101,
          column: 25
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "50": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 66
        }
      },
      "51": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "52": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 30
        }
      },
      "53": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 50
        }
      },
      "54": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 23
        }
      },
      "55": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 122,
          column: 6
        }
      },
      "56": {
        start: {
          line: 113,
          column: 24
        },
        end: {
          line: 113,
          column: 70
        }
      },
      "57": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "58": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 30
        }
      },
      "59": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 54
        }
      },
      "60": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 23
        }
      },
      "61": {
        start: {
          line: 123,
          column: 24
        },
        end: {
          line: 131,
          column: 6
        }
      },
      "62": {
        start: {
          line: 124,
          column: 24
        },
        end: {
          line: 124,
          column: 72
        }
      },
      "63": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "64": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 30
        }
      },
      "65": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 23
        }
      },
      "66": {
        start: {
          line: 132,
          column: 29
        },
        end: {
          line: 155,
          column: 6
        }
      },
      "67": {
        start: {
          line: 133,
          column: 24
        },
        end: {
          line: 133,
          column: 57
        }
      },
      "68": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 34
        }
      },
      "69": {
        start: {
          line: 134,
          column: 22
        },
        end: {
          line: 134,
          column: 34
        }
      },
      "70": {
        start: {
          line: 136,
          column: 32
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "71": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "72": {
        start: {
          line: 145,
          column: 26
        },
        end: {
          line: 145,
          column: 59
        }
      },
      "73": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 33
        }
      },
      "74": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 25
        }
      },
      "75": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 65
        }
      },
      "76": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 24
        }
      },
      "77": {
        start: {
          line: 156,
          column: 25
        },
        end: {
          line: 164,
          column: 6
        }
      },
      "78": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 157,
          column: 59
        }
      },
      "79": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "80": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 30
        }
      },
      "81": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 23
        }
      },
      "82": {
        start: {
          line: 165,
          column: 23
        },
        end: {
          line: 173,
          column: 6
        }
      },
      "83": {
        start: {
          line: 166,
          column: 24
        },
        end: {
          line: 166,
          column: 57
        }
      },
      "84": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "85": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 30
        }
      },
      "86": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 23
        }
      },
      "87": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "88": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 61
        }
      },
      "89": {
        start: {
          line: 177,
          column: 22
        },
        end: {
          line: 179,
          column: 10
        }
      },
      "90": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 47
        }
      },
      "91": {
        start: {
          line: 180,
          column: 21
        },
        end: {
          line: 187,
          column: 6
        }
      },
      "92": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 46
        }
      },
      "93": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 24
        }
      },
      "94": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 35
        }
      },
      "95": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 42
        }
      },
      "96": {
        start: {
          line: 188,
          column: 27
        },
        end: {
          line: 190,
          column: 10
        }
      },
      "97": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 51
        }
      },
      "98": {
        start: {
          line: 191,
          column: 27
        },
        end: {
          line: 197,
          column: 6
        }
      },
      "99": {
        start: {
          line: 192,
          column: 28
        },
        end: {
          line: 192,
          column: 83
        }
      },
      "100": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 26
        }
      },
      "101": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 27
        }
      },
      "102": {
        start: {
          line: 198,
          column: 26
        },
        end: {
          line: 200,
          column: 10
        }
      },
      "103": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 49
        }
      },
      "104": {
        start: {
          line: 201,
          column: 26
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "105": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 50
        }
      },
      "106": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "107": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 20
        }
      },
      "108": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 235,
          column: 6
        }
      },
      "109": {
        start: {
          line: 238,
          column: 46
        },
        end: {
          line: 238,
          column: 73
        }
      },
      "110": {
        start: {
          line: 239,
          column: 27
        },
        end: {
          line: 247,
          column: 6
        }
      },
      "111": {
        start: {
          line: 248,
          column: 33
        },
        end: {
          line: 256,
          column: 6
        }
      },
      "112": {
        start: {
          line: 249,
          column: 21
        },
        end: {
          line: 249,
          column: 51
        }
      },
      "113": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 253,
          column: 10
        }
      },
      "114": {
        start: {
          line: 257,
          column: 29
        },
        end: {
          line: 289,
          column: 6
        }
      },
      "115": {
        start: {
          line: 258,
          column: 25
        },
        end: {
          line: 258,
          column: 63
        }
      },
      "116": {
        start: {
          line: 259,
          column: 26
        },
        end: {
          line: 259,
          column: 60
        }
      },
      "117": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "118": {
        start: {
          line: 261,
          column: 28
        },
        end: {
          line: 261,
          column: 57
        }
      },
      "119": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 278,
          column: 13
        }
      },
      "120": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 49
        }
      },
      "121": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 45
        }
      },
      "122": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 276,
          column: 18
        }
      },
      "123": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 39
        }
      },
      "124": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 40
        }
      },
      "125": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 36
        }
      },
      "126": {
        start: {
          line: 290,
          column: 30
        },
        end: {
          line: 331,
          column: 6
        }
      },
      "127": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 101
        }
      },
      "128": {
        start: {
          line: 291,
          column: 94
        },
        end: {
          line: 291,
          column: 101
        }
      },
      "129": {
        start: {
          line: 292,
          column: 25
        },
        end: {
          line: 292,
          column: 63
        }
      },
      "130": {
        start: {
          line: 293,
          column: 22
        },
        end: {
          line: 293,
          column: 44
        }
      },
      "131": {
        start: {
          line: 294,
          column: 24
        },
        end: {
          line: 294,
          column: 65
        }
      },
      "132": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 56
        }
      },
      "133": {
        start: {
          line: 295,
          column: 49
        },
        end: {
          line: 295,
          column: 56
        }
      },
      "134": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 27
        }
      },
      "135": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 27
        }
      },
      "136": {
        start: {
          line: 298,
          column: 23
        },
        end: {
          line: 298,
          column: 39
        }
      },
      "137": {
        start: {
          line: 299,
          column: 23
        },
        end: {
          line: 299,
          column: 39
        }
      },
      "138": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 324,
          column: 9
        }
      },
      "139": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 302,
          column: 131
        }
      },
      "140": {
        start: {
          line: 303,
          column: 16
        },
        end: {
          line: 303,
          column: 22
        }
      },
      "141": {
        start: {
          line: 306,
          column: 32
        },
        end: {
          line: 306,
          column: 56
        }
      },
      "142": {
        start: {
          line: 307,
          column: 32
        },
        end: {
          line: 307,
          column: 56
        }
      },
      "143": {
        start: {
          line: 308,
          column: 40
        },
        end: {
          line: 308,
          column: 124
        }
      },
      "144": {
        start: {
          line: 309,
          column: 40
        },
        end: {
          line: 309,
          column: 102
        }
      },
      "145": {
        start: {
          line: 310,
          column: 36
        },
        end: {
          line: 310,
          column: 95
        }
      },
      "146": {
        start: {
          line: 311,
          column: 33
        },
        end: {
          line: 311,
          column: 75
        }
      },
      "147": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 98
        }
      },
      "148": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 22
        }
      },
      "149": {
        start: {
          line: 316,
          column: 35
        },
        end: {
          line: 316,
          column: 59
        }
      },
      "150": {
        start: {
          line: 317,
          column: 35
        },
        end: {
          line: 317,
          column: 59
        }
      },
      "151": {
        start: {
          line: 318,
          column: 37
        },
        end: {
          line: 318,
          column: 101
        }
      },
      "152": {
        start: {
          line: 319,
          column: 37
        },
        end: {
          line: 319,
          column: 79
        }
      },
      "153": {
        start: {
          line: 320,
          column: 38
        },
        end: {
          line: 320,
          column: 65
        }
      },
      "154": {
        start: {
          line: 321,
          column: 36
        },
        end: {
          line: 321,
          column: 83
        }
      },
      "155": {
        start: {
          line: 322,
          column: 16
        },
        end: {
          line: 322,
          column: 74
        }
      },
      "156": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 22
        }
      },
      "157": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 28
        }
      },
      "158": {
        start: {
          line: 332,
          column: 27
        },
        end: {
          line: 343,
          column: 10
        }
      },
      "159": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 341,
          column: 10
        }
      },
      "160": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 32
        }
      },
      "161": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 349,
          column: 6
        }
      },
      "162": {
        start: {
          line: 352,
          column: 34
        },
        end: {
          line: 352,
          column: 65
        }
      },
      "163": {
        start: {
          line: 353,
          column: 38
        },
        end: {
          line: 353,
          column: 69
        }
      },
      "164": {
        start: {
          line: 354,
          column: 23
        },
        end: {
          line: 354,
          column: 49
        }
      },
      "165": {
        start: {
          line: 355,
          column: 34
        },
        end: {
          line: 359,
          column: 6
        }
      },
      "166": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 43
        }
      },
      "167": {
        start: {
          line: 360,
          column: 32
        },
        end: {
          line: 370,
          column: 10
        }
      },
      "168": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 369,
          column: 11
        }
      },
      "169": {
        start: {
          line: 362,
          column: 31
        },
        end: {
          line: 362,
          column: 44
        }
      },
      "170": {
        start: {
          line: 363,
          column: 37
        },
        end: {
          line: 363,
          column: 67
        }
      },
      "171": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 367,
          column: 15
        }
      },
      "172": {
        start: {
          line: 368,
          column: 12
        },
        end: {
          line: 368,
          column: 30
        }
      },
      "173": {
        start: {
          line: 371,
          column: 37
        },
        end: {
          line: 379,
          column: 10
        }
      },
      "174": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 378,
          column: 11
        }
      },
      "175": {
        start: {
          line: 373,
          column: 31
        },
        end: {
          line: 373,
          column: 40
        }
      },
      "176": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 376,
          column: 15
        }
      },
      "177": {
        start: {
          line: 375,
          column: 16
        },
        end: {
          line: 375,
          column: 83
        }
      },
      "178": {
        start: {
          line: 375,
          column: 62
        },
        end: {
          line: 375,
          column: 80
        }
      },
      "179": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 30
        }
      },
      "180": {
        start: {
          line: 380,
          column: 27
        },
        end: {
          line: 393,
          column: 6
        }
      },
      "181": {
        start: {
          line: 381,
          column: 24
        },
        end: {
          line: 381,
          column: 26
        }
      },
      "182": {
        start: {
          line: 382,
          column: 27
        },
        end: {
          line: 382,
          column: 46
        }
      },
      "183": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 389,
          column: 11
        }
      },
      "184": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 388,
          column: 15
        }
      },
      "185": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 387,
          column: 17
        }
      },
      "186": {
        start: {
          line: 385,
          column: 118
        },
        end: {
          line: 385,
          column: 156
        }
      },
      "187": {
        start: {
          line: 386,
          column: 20
        },
        end: {
          line: 386,
          column: 42
        }
      },
      "188": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 23
        }
      },
      "189": {
        start: {
          line: 394,
          column: 32
        },
        end: {
          line: 407,
          column: 6
        }
      },
      "190": {
        start: {
          line: 395,
          column: 33
        },
        end: {
          line: 395,
          column: 35
        }
      },
      "191": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 402,
          column: 11
        }
      },
      "192": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 401,
          column: 15
        }
      },
      "193": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 400,
          column: 17
        }
      },
      "194": {
        start: {
          line: 399,
          column: 20
        },
        end: {
          line: 399,
          column: 51
        }
      },
      "195": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 32
        }
      },
      "196": {
        start: {
          line: 408,
          column: 27
        },
        end: {
          line: 410,
          column: 10
        }
      },
      "197": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 409,
          column: 59
        }
      },
      "198": {
        start: {
          line: 409,
          column: 29
        },
        end: {
          line: 409,
          column: 57
        }
      },
      "199": {
        start: {
          line: 411,
          column: 32
        },
        end: {
          line: 417,
          column: 10
        }
      },
      "200": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 416,
          column: 11
        }
      },
      "201": {
        start: {
          line: 413,
          column: 33
        },
        end: {
          line: 413,
          column: 46
        }
      },
      "202": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 43
        }
      },
      "203": {
        start: {
          line: 415,
          column: 12
        },
        end: {
          line: 415,
          column: 32
        }
      },
      "204": {
        start: {
          line: 418,
          column: 4
        },
        end: {
          line: 427,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 27
          },
          end: {
            line: 13,
            column: 28
          }
        },
        loc: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 24
          }
        },
        loc: {
          start: {
            line: 16,
            column: 34
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 27
          }
        },
        loc: {
          start: {
            line: 19,
            column: 37
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "useStickerManagement",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 29
          }
        },
        loc: {
          start: {
            line: 26,
            column: 77
          },
          end: {
            line: 236,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 52
          },
          end: {
            line: 40,
            column: 53
          }
        },
        loc: {
          start: {
            line: 40,
            column: 56
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 48
          }
        },
        loc: {
          start: {
            line: 43,
            column: 63
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 52,
            column: 50
          },
          end: {
            line: 52,
            column: 51
          }
        },
        loc: {
          start: {
            line: 52,
            column: 56
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 52
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 67,
            column: 50
          },
          end: {
            line: 67,
            column: 51
          }
        },
        loc: {
          start: {
            line: 67,
            column: 65
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 67
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 76,
            column: 50
          },
          end: {
            line: 76,
            column: 51
          }
        },
        loc: {
          start: {
            line: 76,
            column: 56
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 76
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 85,
            column: 48
          },
          end: {
            line: 85,
            column: 49
          }
        },
        loc: {
          start: {
            line: 85,
            column: 60
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 85
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 101,
            column: 49
          },
          end: {
            line: 101,
            column: 50
          }
        },
        loc: {
          start: {
            line: 101,
            column: 62
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 101
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 112,
            column: 50
          },
          end: {
            line: 112,
            column: 51
          }
        },
        loc: {
          start: {
            line: 112,
            column: 66
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 112
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 123,
            column: 48
          },
          end: {
            line: 123,
            column: 49
          }
        },
        loc: {
          start: {
            line: 123,
            column: 68
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 123
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 132,
            column: 53
          },
          end: {
            line: 132,
            column: 54
          }
        },
        loc: {
          start: {
            line: 132,
            column: 65
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 132
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 156,
            column: 49
          },
          end: {
            line: 156,
            column: 50
          }
        },
        loc: {
          start: {
            line: 156,
            column: 55
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 156
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 165,
            column: 47
          },
          end: {
            line: 165,
            column: 48
          }
        },
        loc: {
          start: {
            line: 165,
            column: 53
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 165
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 174,
            column: 52
          },
          end: {
            line: 174,
            column: 53
          }
        },
        loc: {
          start: {
            line: 174,
            column: 65
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 174
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 177,
            column: 46
          },
          end: {
            line: 177,
            column: 47
          }
        },
        loc: {
          start: {
            line: 177,
            column: 50
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 177
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 180,
            column: 45
          },
          end: {
            line: 180,
            column: 46
          }
        },
        loc: {
          start: {
            line: 180,
            column: 49
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 180
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 188,
            column: 51
          },
          end: {
            line: 188,
            column: 52
          }
        },
        loc: {
          start: {
            line: 188,
            column: 55
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 188
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 191,
            column: 51
          },
          end: {
            line: 191,
            column: 52
          }
        },
        loc: {
          start: {
            line: 191,
            column: 75
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 191
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 198,
            column: 50
          },
          end: {
            line: 198,
            column: 51
          }
        },
        loc: {
          start: {
            line: 198,
            column: 60
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 198
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 201,
            column: 50
          },
          end: {
            line: 201,
            column: 51
          }
        },
        loc: {
          start: {
            line: 201,
            column: 54
          },
          end: {
            line: 203,
            column: 5
          }
        },
        line: 201
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 205,
            column: 26
          },
          end: {
            line: 205,
            column: 27
          }
        },
        loc: {
          start: {
            line: 205,
            column: 30
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 205
      },
      "25": {
        name: "useStickerInteraction",
        decl: {
          start: {
            line: 237,
            column: 9
          },
          end: {
            line: 237,
            column: 30
          }
        },
        loc: {
          start: {
            line: 237,
            column: 82
          },
          end: {
            line: 350,
            column: 1
          }
        },
        line: 237
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 248,
            column: 57
          },
          end: {
            line: 248,
            column: 58
          }
        },
        loc: {
          start: {
            line: 248,
            column: 77
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 248
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 257,
            column: 53
          },
          end: {
            line: 257,
            column: 54
          }
        },
        loc: {
          start: {
            line: 257,
            column: 88
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 257
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 290,
            column: 54
          },
          end: {
            line: 290,
            column: 55
          }
        },
        loc: {
          start: {
            line: 290,
            column: 74
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 290
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 332,
            column: 51
          },
          end: {
            line: 332,
            column: 52
          }
        },
        loc: {
          start: {
            line: 332,
            column: 55
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 332
      },
      "30": {
        name: "useStickerLibrary",
        decl: {
          start: {
            line: 351,
            column: 9
          },
          end: {
            line: 351,
            column: 26
          }
        },
        loc: {
          start: {
            line: 351,
            column: 29
          },
          end: {
            line: 428,
            column: 1
          }
        },
        line: 351
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 355,
            column: 58
          },
          end: {
            line: 355,
            column: 59
          }
        },
        loc: {
          start: {
            line: 355,
            column: 70
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 355
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 360,
            column: 56
          },
          end: {
            line: 360,
            column: 57
          }
        },
        loc: {
          start: {
            line: 360,
            column: 77
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 360
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 361,
            column: 19
          },
          end: {
            line: 361,
            column: 20
          }
        },
        loc: {
          start: {
            line: 361,
            column: 27
          },
          end: {
            line: 369,
            column: 9
          }
        },
        line: 361
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 371,
            column: 61
          },
          end: {
            line: 371,
            column: 62
          }
        },
        loc: {
          start: {
            line: 371,
            column: 74
          },
          end: {
            line: 379,
            column: 5
          }
        },
        line: 371
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 372,
            column: 19
          },
          end: {
            line: 372,
            column: 20
          }
        },
        loc: {
          start: {
            line: 372,
            column: 27
          },
          end: {
            line: 378,
            column: 9
          }
        },
        line: 372
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 374,
            column: 25
          },
          end: {
            line: 374,
            column: 26
          }
        },
        loc: {
          start: {
            line: 374,
            column: 47
          },
          end: {
            line: 376,
            column: 13
          }
        },
        line: 374
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 375,
            column: 57
          },
          end: {
            line: 375,
            column: 58
          }
        },
        loc: {
          start: {
            line: 375,
            column: 62
          },
          end: {
            line: 375,
            column: 80
          }
        },
        line: 375
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 380,
            column: 51
          },
          end: {
            line: 380,
            column: 52
          }
        },
        loc: {
          start: {
            line: 380,
            column: 60
          },
          end: {
            line: 391,
            column: 5
          }
        },
        line: 380
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 383,
            column: 24
          },
          end: {
            line: 383,
            column: 25
          }
        },
        loc: {
          start: {
            line: 383,
            column: 36
          },
          end: {
            line: 389,
            column: 9
          }
        },
        line: 383
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 384,
            column: 29
          },
          end: {
            line: 384,
            column: 30
          }
        },
        loc: {
          start: {
            line: 384,
            column: 40
          },
          end: {
            line: 388,
            column: 13
          }
        },
        line: 384
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 385,
            column: 111
          },
          end: {
            line: 385,
            column: 112
          }
        },
        loc: {
          start: {
            line: 385,
            column: 118
          },
          end: {
            line: 385,
            column: 156
          }
        },
        line: 385
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 394,
            column: 56
          },
          end: {
            line: 394,
            column: 57
          }
        },
        loc: {
          start: {
            line: 394,
            column: 60
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 394
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 396,
            column: 24
          },
          end: {
            line: 396,
            column: 25
          }
        },
        loc: {
          start: {
            line: 396,
            column: 36
          },
          end: {
            line: 402,
            column: 9
          }
        },
        line: 396
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 397,
            column: 29
          },
          end: {
            line: 397,
            column: 30
          }
        },
        loc: {
          start: {
            line: 397,
            column: 40
          },
          end: {
            line: 401,
            column: 13
          }
        },
        line: 397
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 408,
            column: 51
          },
          end: {
            line: 408,
            column: 52
          }
        },
        loc: {
          start: {
            line: 408,
            column: 64
          },
          end: {
            line: 410,
            column: 5
          }
        },
        line: 408
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 409,
            column: 21
          },
          end: {
            line: 409,
            column: 22
          }
        },
        loc: {
          start: {
            line: 409,
            column: 29
          },
          end: {
            line: 409,
            column: 57
          }
        },
        line: 409
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 411,
            column: 56
          },
          end: {
            line: 411,
            column: 57
          }
        },
        loc: {
          start: {
            line: 411,
            column: 69
          },
          end: {
            line: 417,
            column: 5
          }
        },
        line: 411
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 412,
            column: 21
          },
          end: {
            line: 412,
            column: 22
          }
        },
        loc: {
          start: {
            line: 412,
            column: 29
          },
          end: {
            line: 416,
            column: 9
          }
        },
        line: 412
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "2": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "3": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "4": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "5": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "6": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "7": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "8": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 134,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 134,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "9": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "10": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "11": {
        loc: {
          start: {
            line: 257,
            column: 72
          },
          end: {
            line: 257,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 257,
            column: 79
          },
          end: {
            line: 257,
            column: 85
          }
        }],
        line: 257
      },
      "12": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: 279,
            column: 15
          },
          end: {
            line: 283,
            column: 9
          }
        }],
        line: 260
      },
      "13": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      },
      "14": {
        loc: {
          start: {
            line: 262,
            column: 16
          },
          end: {
            line: 262,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 16
          },
          end: {
            line: 262,
            column: 23
          }
        }, {
          start: {
            line: 262,
            column: 27
          },
          end: {
            line: 262,
            column: 42
          }
        }],
        line: 262
      },
      "15": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 101
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 101
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "16": {
        loc: {
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 291,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 12
          },
          end: {
            line: 291,
            column: 49
          }
        }, {
          start: {
            line: 291,
            column: 53
          },
          end: {
            line: 291,
            column: 92
          }
        }],
        line: 291
      },
      "17": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "18": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 20
          }
        }, {
          start: {
            line: 295,
            column: 24
          },
          end: {
            line: 295,
            column: 47
          }
        }],
        line: 295
      },
      "19": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 301,
            column: 12
          },
          end: {
            line: 303,
            column: 22
          }
        }, {
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 313,
            column: 22
          }
        }, {
          start: {
            line: 314,
            column: 12
          },
          end: {
            line: 323,
            column: 22
          }
        }],
        line: 300
      },
      "20": {
        loc: {
          start: {
            line: 310,
            column: 36
          },
          end: {
            line: 310,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 310,
            column: 58
          },
          end: {
            line: 310,
            column: 91
          }
        }, {
          start: {
            line: 310,
            column: 94
          },
          end: {
            line: 310,
            column: 95
          }
        }],
        line: 310
      },
      "21": {
        loc: {
          start: {
            line: 356,
            column: 15
          },
          end: {
            line: 356,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 15
          },
          end: {
            line: 356,
            column: 36
          }
        }, {
          start: {
            line: 356,
            column: 40
          },
          end: {
            line: 356,
            column: 42
          }
        }],
        line: 356
      },
      "22": {
        loc: {
          start: {
            line: 363,
            column: 37
          },
          end: {
            line: 363,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 37
          },
          end: {
            line: 363,
            column: 61
          }
        }, {
          start: {
            line: 363,
            column: 65
          },
          end: {
            line: 363,
            column: 67
          }
        }],
        line: 363
      },
      "23": {
        loc: {
          start: {
            line: 385,
            column: 16
          },
          end: {
            line: 387,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 385,
            column: 16
          },
          end: {
            line: 387,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 385
      },
      "24": {
        loc: {
          start: {
            line: 385,
            column: 20
          },
          end: {
            line: 385,
            column: 157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 385,
            column: 20
          },
          end: {
            line: 385,
            column: 78
          }
        }, {
          start: {
            line: 385,
            column: 82
          },
          end: {
            line: 385,
            column: 157
          }
        }],
        line: 385
      },
      "25": {
        loc: {
          start: {
            line: 398,
            column: 16
          },
          end: {
            line: 400,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 16
          },
          end: {
            line: 400,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/hooks/useStickerManagement.ts"],
      sourcesContent: ["'use client';\n\n// Sticker Management React Hooks\n// React hooks for managing stickers on canvas with interaction support\n\nimport { useCallback, useRef, useState, useEffect } from 'react';\nimport { useManagedCanvas, type ManagedCanvas } from '../providers/CanvasProvider';\nimport {\n  StickerManager,\n  createStickerManager,\n  type Sticker,\n  type StickerConfig,\n  type StickerTransform,\n  type GridSnapConfig,\n  type CollisionResult,\n  StickerAnchor,\n  DEFAULT_STICKER_CONFIG\n} from '../utils/stickerPlacement';\n\n/**\n * Sticker interaction event handlers\n */\nexport interface StickerInteractionHandlers {\n  onStickerSelect?: (stickerId: string | null) => void;\n  onStickerMove?: (stickerId: string, x: number, y: number) => void;\n  onStickerScale?: (stickerId: string, scale: number) => void;\n  onStickerRotate?: (stickerId: string, rotation: number) => void;\n  onStickerCollision?: (result: CollisionResult) => void;\n}\n\n/**\n * Mouse/touch interaction state\n */\ninterface InteractionState {\n  isInteracting: boolean;\n  mode: 'none' | 'drag' | 'scale' | 'rotate';\n  startX: number;\n  startY: number;\n  currentX: number;\n  currentY: number;\n  targetStickerId: string | null;\n  initialTransform?: StickerTransform;\n}\n\n/**\n * Hook for managing stickers on canvas\n */\nexport function useStickerManagement(\n  canvasWidth: number,\n  canvasHeight: number,\n  canvasId?: string,\n  handlers?: StickerInteractionHandlers\n): {\n  canvas: ManagedCanvas;\n  manager: StickerManager;\n  stickers: Sticker[];\n  selectedStickerId: string | null;\n  isInteracting: boolean;\n  addSticker: (config: Omit<StickerConfig, 'id'>) => Promise<string>;\n  removeSticker: (id: string) => boolean;\n  updateSticker: (id: string, updates: Partial<StickerConfig>) => boolean;\n  selectSticker: (id: string | null) => void;\n  moveSticker: (id: string, x: number, y: number) => boolean;\n  scaleSticker: (id: string, scale: number) => boolean;\n  rotateSticker: (id: string, rotation: number) => boolean;\n  flipSticker: (id: string, flipX?: boolean, flipY?: boolean) => boolean;\n  duplicateSticker: (id: string) => Promise<string | null>;\n  bringToFront: (id: string) => boolean;\n  sendToBack: (id: string) => boolean;\n  checkCollisions: (excludeId?: string) => CollisionResult;\n  renderAll: () => void;\n  clearAll: () => void;\n  exportStickers: () => StickerConfig[];\n  importStickers: (stickers: StickerConfig[]) => Promise<string[]>;\n  setGridConfig: (config: Partial<GridSnapConfig>) => void;\n  getGridConfig: () => GridSnapConfig;\n} {\n  const canvas = useManagedCanvas(canvasWidth, canvasHeight, canvasId);\n  const managerRef = useRef<StickerManager>(createStickerManager(canvas));\n  const [stickers, setStickers] = useState<Sticker[]>([]);\n  const [selectedStickerId, setSelectedStickerId] = useState<string | null>(null);\n  const [interactionState, setInteractionState] = useState<InteractionState>({\n    isInteracting: false,\n    mode: 'none',\n    startX: 0,\n    startY: 0,\n    currentX: 0,\n    currentY: 0,\n    targetStickerId: null\n  });\n\n  const refreshStickers = useCallback(() => {\n    setStickers(managerRef.current.getAllStickers());\n  }, []);\n\n  const addSticker = useCallback(async (config: Omit<StickerConfig, 'id'>): Promise<string> => {\n    const id = await managerRef.current.addSticker(config);\n    refreshStickers();\n    handlers?.onStickerSelect?.(id);\n    return id;\n  }, [refreshStickers, handlers]);\n\n  const removeSticker = useCallback((id: string): boolean => {\n    const success = managerRef.current.removeSticker(id);\n    if (success) {\n      refreshStickers();\n      if (selectedStickerId === id) {\n        setSelectedStickerId(null);\n        handlers?.onStickerSelect?.(null);\n      }\n    }\n    return success;\n  }, [refreshStickers, selectedStickerId, handlers]);\n\n  const updateSticker = useCallback((id: string, updates: Partial<StickerConfig>): boolean => {\n    const success = managerRef.current.updateSticker(id, updates);\n    if (success) {\n      refreshStickers();\n    }\n    return success;\n  }, [refreshStickers]);\n\n  const selectSticker = useCallback((id: string | null) => {\n    managerRef.current.selectSticker(id);\n    setSelectedStickerId(id);\n    refreshStickers();\n    handlers?.onStickerSelect?.(id);\n  }, [refreshStickers, handlers]);\n\n  const moveSticker = useCallback((id: string, x: number, y: number): boolean => {\n    const success = managerRef.current.moveStickerTo(id, x, y);\n    if (success) {\n      refreshStickers();\n      handlers?.onStickerMove?.(id, x, y);\n      \n      // Check for collisions\n      const collisions = managerRef.current.checkCollisions(id);\n      if (collisions.hasCollision) {\n        handlers?.onStickerCollision?.(collisions);\n      }\n    }\n    return success;\n  }, [refreshStickers, handlers]);\n\n  const scaleSticker = useCallback((id: string, scale: number): boolean => {\n    const success = managerRef.current.scaleSticker(id, scale);\n    if (success) {\n      refreshStickers();\n      handlers?.onStickerScale?.(id, scale);\n    }\n    return success;\n  }, [refreshStickers, handlers]);\n\n  const rotateSticker = useCallback((id: string, rotation: number): boolean => {\n    const success = managerRef.current.rotateSticker(id, rotation);\n    if (success) {\n      refreshStickers();\n      handlers?.onStickerRotate?.(id, rotation);\n    }\n    return success;\n  }, [refreshStickers, handlers]);\n\n  const flipSticker = useCallback((id: string, flipX?: boolean, flipY?: boolean): boolean => {\n    const success = managerRef.current.flipSticker(id, flipX, flipY);\n    if (success) {\n      refreshStickers();\n    }\n    return success;\n  }, [refreshStickers]);\n\n  const duplicateSticker = useCallback(async (id: string): Promise<string | null> => {\n    const sticker = managerRef.current.getSticker(id);\n    if (!sticker) return null;\n\n    // Create duplicate with offset position\n    const duplicateConfig = {\n      ...sticker,\n      transform: {\n        ...sticker.transform,\n        x: sticker.transform.x + 20,\n        y: sticker.transform.y + 20\n      }\n    };\n\n    try {\n      const newId = await addSticker(duplicateConfig);\n      selectSticker(newId);\n      return newId;\n    } catch (error) {\n      console.error('Failed to duplicate sticker:', error);\n      return null;\n    }\n  }, [addSticker, selectSticker]);\n\n  const bringToFront = useCallback((id: string): boolean => {\n    const success = managerRef.current.bringToFront(id);\n    if (success) {\n      refreshStickers();\n    }\n    return success;\n  }, [refreshStickers]);\n\n  const sendToBack = useCallback((id: string): boolean => {\n    const success = managerRef.current.sendToBack(id);\n    if (success) {\n      refreshStickers();\n    }\n    return success;\n  }, [refreshStickers]);\n\n  const checkCollisions = useCallback((excludeId?: string): CollisionResult => {\n    return managerRef.current.checkCollisions(excludeId);\n  }, []);\n\n  const renderAll = useCallback(() => {\n    managerRef.current.renderAllStickers();\n  }, []);\n\n  const clearAll = useCallback(() => {\n    managerRef.current.clearAllStickers();\n    setStickers([]);\n    setSelectedStickerId(null);\n    handlers?.onStickerSelect?.(null);\n  }, [handlers]);\n\n  const exportStickers = useCallback((): StickerConfig[] => {\n    return managerRef.current.exportStickers();\n  }, []);\n\n  const importStickers = useCallback(async (stickerConfigs: StickerConfig[]): Promise<string[]> => {\n    const importedIds = await managerRef.current.importStickers(stickerConfigs);\n    refreshStickers();\n    return importedIds;\n  }, [refreshStickers]);\n\n  const setGridConfig = useCallback((config: Partial<GridSnapConfig>) => {\n    managerRef.current.setGridConfig(config);\n  }, []);\n\n  const getGridConfig = useCallback((): GridSnapConfig => {\n    return managerRef.current.getGridConfig();\n  }, []);\n\n  // Auto-render when stickers change\n  useEffect(() => {\n    renderAll();\n  }, [stickers, renderAll]);\n\n  return {\n    canvas,\n    manager: managerRef.current,\n    stickers,\n    selectedStickerId,\n    isInteracting: interactionState.isInteracting,\n    addSticker,\n    removeSticker,\n    updateSticker,\n    selectSticker,\n    moveSticker,\n    scaleSticker,\n    rotateSticker,\n    flipSticker,\n    duplicateSticker,\n    bringToFront,\n    sendToBack,\n    checkCollisions,\n    renderAll,\n    clearAll,\n    exportStickers,\n    importStickers,\n    setGridConfig,\n    getGridConfig\n  };\n}\n\n/**\n * Hook for handling mouse/touch interactions with stickers\n */\nexport function useStickerInteraction(\n  canvas: HTMLCanvasElement,\n  manager: StickerManager,\n  onStickerSelect?: (id: string | null) => void,\n  onStickerUpdate?: () => void\n): {\n  isInteracting: boolean;\n  startInteraction: (x: number, y: number, mode?: 'drag' | 'scale' | 'rotate') => void;\n  updateInteraction: (x: number, y: number) => void;\n  endInteraction: () => void;\n} {\n  const [isInteracting, setIsInteracting] = useState(false);\n  const interactionRef = useRef<InteractionState>({\n    isInteracting: false,\n    mode: 'none',\n    startX: 0,\n    startY: 0,\n    currentX: 0,\n    currentY: 0,\n    targetStickerId: null\n  });\n\n  const getCanvasCoordinates = useCallback((clientX: number, clientY: number) => {\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    };\n  }, [canvas]);\n\n  const startInteraction = useCallback((clientX: number, clientY: number, mode: 'drag' | 'scale' | 'rotate' = 'drag') => {\n    const { x, y } = getCanvasCoordinates(clientX, clientY);\n    const stickerId = manager.getStickerAtPosition(x, y);\n    \n    if (stickerId) {\n      const sticker = manager.getSticker(stickerId);\n      if (sticker && !sticker.locked) {\n        manager.selectSticker(stickerId);\n        onStickerSelect?.(stickerId);\n        \n        interactionRef.current = {\n          isInteracting: true,\n          mode,\n          startX: x,\n          startY: y,\n          currentX: x,\n          currentY: y,\n          targetStickerId: stickerId,\n          initialTransform: { ...sticker.transform }\n        };\n        \n        setIsInteracting(true);\n      }\n    } else {\n      // Clicked on empty area, deselect\n      manager.selectSticker(null);\n      onStickerSelect?.(null);\n    }\n  }, [canvas, manager, onStickerSelect, getCanvasCoordinates]);\n\n  const updateInteraction = useCallback((clientX: number, clientY: number) => {\n    if (!interactionRef.current.isInteracting || !interactionRef.current.targetStickerId) return;\n    \n    const { x, y } = getCanvasCoordinates(clientX, clientY);\n    const state = interactionRef.current;\n    const sticker = manager.getSticker(state.targetStickerId);\n    \n    if (!sticker || !state.initialTransform) return;\n    \n    state.currentX = x;\n    state.currentY = y;\n    \n    const deltaX = x - state.startX;\n    const deltaY = y - state.startY;\n    \n    switch (state.mode) {\n      case 'drag':\n        manager.moveStickerTo(\n          state.targetStickerId,\n          state.initialTransform.x + deltaX,\n          state.initialTransform.y + deltaY\n        );\n        break;\n        \n      case 'scale':\n        // Calculate scale based on distance from center\n        const centerX = state.initialTransform.x;\n        const centerY = state.initialTransform.y;\n        const initialDistance = Math.sqrt(\n          Math.pow(state.startX - centerX, 2) + Math.pow(state.startY - centerY, 2)\n        );\n        const currentDistance = Math.sqrt(\n          Math.pow(x - centerX, 2) + Math.pow(y - centerY, 2)\n        );\n        const scaleFactor = initialDistance > 0 ? currentDistance / initialDistance : 1;\n        const newScale = state.initialTransform.scale * scaleFactor;\n        \n        manager.scaleSticker(state.targetStickerId, Math.max(0.1, Math.min(5, newScale)));\n        break;\n        \n      case 'rotate':\n        // Calculate rotation based on angle from center\n        const centerRotX = state.initialTransform.x;\n        const centerRotY = state.initialTransform.y;\n        const initialAngle = Math.atan2(state.startY - centerRotY, state.startX - centerRotX);\n        const currentAngle = Math.atan2(y - centerRotY, x - centerRotX);\n        const rotationDelta = currentAngle - initialAngle;\n        const newRotation = state.initialTransform.rotation + rotationDelta;\n        \n        manager.rotateSticker(state.targetStickerId, newRotation);\n        break;\n    }\n    \n    onStickerUpdate?.();\n  }, [canvas, manager, onStickerUpdate, getCanvasCoordinates]);\n\n  const endInteraction = useCallback(() => {\n    interactionRef.current = {\n      isInteracting: false,\n      mode: 'none',\n      startX: 0,\n      startY: 0,\n      currentX: 0,\n      currentY: 0,\n      targetStickerId: null\n    };\n    setIsInteracting(false);\n  }, []);\n\n  return {\n    isInteracting,\n    startInteraction,\n    updateInteraction,\n    endInteraction\n  };\n}\n\n/**\n * Hook for sticker library management\n */\nexport function useStickerLibrary(): {\n  categories: string[];\n  getStickersInCategory: (category: string) => StickerConfig[];\n  addStickerToLibrary: (sticker: StickerConfig, category: string) => void;\n  removeStickerFromLibrary: (stickerId: string) => void;\n  searchStickers: (query: string) => StickerConfig[];\n  getFavoriteStickers: () => StickerConfig[];\n  addToFavorites: (stickerId: string) => void;\n  removeFromFavorites: (stickerId: string) => void;\n} {\n  const [library, setLibrary] = useState<Map<string, StickerConfig[]>>(new Map());\n  const [favorites, setFavorites] = useState<Set<string>>(new Set());\n\n  const categories = Array.from(library.keys());\n\n  const getStickersInCategory = useCallback((category: string): StickerConfig[] => {\n    return library.get(category) || [];\n  }, [library]);\n\n  const addStickerToLibrary = useCallback((sticker: StickerConfig, category: string) => {\n    setLibrary(prev => {\n      const newLibrary = new Map(prev);\n      const categoryStickers = newLibrary.get(category) || [];\n      newLibrary.set(category, [...categoryStickers, sticker]);\n      return newLibrary;\n    });\n  }, []);\n\n  const removeStickerFromLibrary = useCallback((stickerId: string) => {\n    setLibrary(prev => {\n      const newLibrary = new Map();\n      prev.forEach((stickers, category) => {\n        newLibrary.set(category, stickers.filter(s => s.id !== stickerId));\n      });\n      return newLibrary;\n    });\n  }, []);\n\n  const searchStickers = useCallback((query: string): StickerConfig[] => {\n    const results: StickerConfig[] = [];\n    const lowerQuery = query.toLowerCase();\n    \n    library.forEach(stickers => {\n      stickers.forEach(sticker => {\n        if (sticker.metadata?.name?.toLowerCase().includes(lowerQuery) ||\n            sticker.metadata?.tags?.some(tag => tag.toLowerCase().includes(lowerQuery))) {\n          results.push(sticker);\n        }\n      });\n    });\n    \n    return results;\n  }, [library]);\n\n  const getFavoriteStickers = useCallback((): StickerConfig[] => {\n    const favoriteStickers: StickerConfig[] = [];\n    \n    library.forEach(stickers => {\n      stickers.forEach(sticker => {\n        if (favorites.has(sticker.id)) {\n          favoriteStickers.push(sticker);\n        }\n      });\n    });\n    \n    return favoriteStickers;\n  }, [library, favorites]);\n\n  const addToFavorites = useCallback((stickerId: string) => {\n    setFavorites(prev => new Set(prev).add(stickerId));\n  }, []);\n\n  const removeFromFavorites = useCallback((stickerId: string) => {\n    setFavorites(prev => {\n      const newFavorites = new Set(prev);\n      newFavorites.delete(stickerId);\n      return newFavorites;\n    });\n  }, []);\n\n  return {\n    categories,\n    getStickersInCategory,\n    addStickerToLibrary,\n    removeStickerFromLibrary,\n    searchStickers,\n    getFavoriteStickers,\n    addToFavorites,\n    removeFromFavorites\n  };\n}"],
      names: ["useStickerInteraction", "useStickerLibrary", "useStickerManagement", "canvasWidth", "canvasHeight", "canvasId", "handlers", "canvas", "useManagedCanvas", "managerRef", "useRef", "createStickerManager", "stickers", "setStickers", "useState", "selectedStickerId", "setSelectedStickerId", "interactionState", "setInteractionState", "isInteracting", "mode", "startX", "startY", "currentX", "currentY", "targetStickerId", "refreshStickers", "useCallback", "current", "getAllStickers", "addSticker", "config", "id", "onStickerSelect", "removeSticker", "success", "updateSticker", "updates", "selectSticker", "moveSticker", "x", "y", "moveStickerTo", "onStickerMove", "collisions", "checkCollisions", "hasCollision", "onStickerCollision", "scaleSticker", "scale", "onStickerScale", "rotateSticker", "rotation", "onStickerRotate", "flipSticker", "flipX", "flipY", "duplicateSticker", "sticker", "getSticker", "duplicateConfig", "transform", "newId", "error", "console", "bringToFront", "sendToBack", "excludeId", "renderAll", "renderAllStickers", "clearAll", "clearAllStickers", "exportStickers", "importStickers", "stickerConfigs", "importedIds", "setGridConfig", "getGridConfig", "useEffect", "manager", "onStickerUpdate", "setIsInteracting", "interactionRef", "getCanvasCoordinates", "clientX", "clientY", "rect", "getBoundingClientRect", "left", "top", "startInteraction", "stickerId", "getStickerAtPosition", "locked", "initialTransform", "updateInteraction", "state", "deltaX", "deltaY", "centerX", "centerY", "initialDistance", "Math", "sqrt", "pow", "currentDistance", "scaleFactor", "newScale", "max", "min", "centerRotX", "centerRotY", "initialAngle", "atan2", "currentAngle", "rotationDelta", "newRotation", "endInteraction", "library", "setLibrary", "Map", "favorites", "setFavorites", "Set", "categories", "Array", "from", "keys", "getStickersInCategory", "category", "get", "addStickerToLibrary", "prev", "newLibrary", "categoryStickers", "set", "removeStickerFromLibrary", "forEach", "filter", "s", "searchStickers", "query", "results", "lowerQuery", "toLowerCase", "metadata", "name", "includes", "tags", "some", "tag", "push", "getFavoriteStickers", "favoriteStickers", "has", "addToFavorites", "add", "removeFromFavorites", "newFavorites", "delete"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f649f7be032d0502a28c4eaebe5f64fe35ab28e3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2mhscs3zvt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mhscs3zvt();
cov_2mhscs3zvt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2mhscs3zvt().f[0]++;
  cov_2mhscs3zvt().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2mhscs3zvt().s[3]++;
_export(exports, {
  useStickerInteraction: function () {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[1]++;
    cov_2mhscs3zvt().s[4]++;
    return useStickerInteraction;
  },
  useStickerLibrary: function () {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[2]++;
    cov_2mhscs3zvt().s[5]++;
    return useStickerLibrary;
  },
  useStickerManagement: function () {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[3]++;
    cov_2mhscs3zvt().s[6]++;
    return useStickerManagement;
  }
});
const _react =
/* istanbul ignore next */
(cov_2mhscs3zvt().s[7]++, require("react"));
const _CanvasProvider =
/* istanbul ignore next */
(cov_2mhscs3zvt().s[8]++, require("../providers/CanvasProvider"));
const _stickerPlacement =
/* istanbul ignore next */
(cov_2mhscs3zvt().s[9]++, require("../utils/stickerPlacement"));
function useStickerManagement(canvasWidth, canvasHeight, canvasId, handlers) {
  /* istanbul ignore next */
  cov_2mhscs3zvt().f[4]++;
  const canvas =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[10]++, (0, _CanvasProvider.useManagedCanvas)(canvasWidth, canvasHeight, canvasId));
  const managerRef =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[11]++, (0, _react.useRef)((0, _stickerPlacement.createStickerManager)(canvas)));
  const [stickers, setStickers] =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[12]++, (0, _react.useState)([]));
  const [selectedStickerId, setSelectedStickerId] =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[13]++, (0, _react.useState)(null));
  const [interactionState, setInteractionState] =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[14]++, (0, _react.useState)({
    isInteracting: false,
    mode: 'none',
    startX: 0,
    startY: 0,
    currentX: 0,
    currentY: 0,
    targetStickerId: null
  }));
  const refreshStickers =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[15]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[5]++;
    cov_2mhscs3zvt().s[16]++;
    setStickers(managerRef.current.getAllStickers());
  }, []));
  const addSticker =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[17]++, (0, _react.useCallback)(async config => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[6]++;
    const id =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[18]++, await managerRef.current.addSticker(config));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[19]++;
    refreshStickers();
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[20]++;
    handlers?.onStickerSelect?.(id);
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[21]++;
    return id;
  }, [refreshStickers, handlers]));
  const removeSticker =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[22]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[7]++;
    const success =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[23]++, managerRef.current.removeSticker(id));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[24]++;
    if (success) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[0][0]++;
      cov_2mhscs3zvt().s[25]++;
      refreshStickers();
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[26]++;
      if (selectedStickerId === id) {
        /* istanbul ignore next */
        cov_2mhscs3zvt().b[1][0]++;
        cov_2mhscs3zvt().s[27]++;
        setSelectedStickerId(null);
        /* istanbul ignore next */
        cov_2mhscs3zvt().s[28]++;
        handlers?.onStickerSelect?.(null);
      } else
      /* istanbul ignore next */
      {
        cov_2mhscs3zvt().b[1][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[0][1]++;
    }
    cov_2mhscs3zvt().s[29]++;
    return success;
  }, [refreshStickers, selectedStickerId, handlers]));
  const updateSticker =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[30]++, (0, _react.useCallback)((id, updates) => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[8]++;
    const success =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[31]++, managerRef.current.updateSticker(id, updates));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[32]++;
    if (success) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[2][0]++;
      cov_2mhscs3zvt().s[33]++;
      refreshStickers();
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[2][1]++;
    }
    cov_2mhscs3zvt().s[34]++;
    return success;
  }, [refreshStickers]));
  const selectSticker =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[35]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[9]++;
    cov_2mhscs3zvt().s[36]++;
    managerRef.current.selectSticker(id);
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[37]++;
    setSelectedStickerId(id);
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[38]++;
    refreshStickers();
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[39]++;
    handlers?.onStickerSelect?.(id);
  }, [refreshStickers, handlers]));
  const moveSticker =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[40]++, (0, _react.useCallback)((id, x, y) => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[10]++;
    const success =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[41]++, managerRef.current.moveStickerTo(id, x, y));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[42]++;
    if (success) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[3][0]++;
      cov_2mhscs3zvt().s[43]++;
      refreshStickers();
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[44]++;
      handlers?.onStickerMove?.(id, x, y);
      // Check for collisions
      const collisions =
      /* istanbul ignore next */
      (cov_2mhscs3zvt().s[45]++, managerRef.current.checkCollisions(id));
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[46]++;
      if (collisions.hasCollision) {
        /* istanbul ignore next */
        cov_2mhscs3zvt().b[4][0]++;
        cov_2mhscs3zvt().s[47]++;
        handlers?.onStickerCollision?.(collisions);
      } else
      /* istanbul ignore next */
      {
        cov_2mhscs3zvt().b[4][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[3][1]++;
    }
    cov_2mhscs3zvt().s[48]++;
    return success;
  }, [refreshStickers, handlers]));
  const scaleSticker =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[49]++, (0, _react.useCallback)((id, scale) => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[11]++;
    const success =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[50]++, managerRef.current.scaleSticker(id, scale));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[51]++;
    if (success) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[5][0]++;
      cov_2mhscs3zvt().s[52]++;
      refreshStickers();
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[53]++;
      handlers?.onStickerScale?.(id, scale);
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[5][1]++;
    }
    cov_2mhscs3zvt().s[54]++;
    return success;
  }, [refreshStickers, handlers]));
  const rotateSticker =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[55]++, (0, _react.useCallback)((id, rotation) => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[12]++;
    const success =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[56]++, managerRef.current.rotateSticker(id, rotation));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[57]++;
    if (success) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[6][0]++;
      cov_2mhscs3zvt().s[58]++;
      refreshStickers();
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[59]++;
      handlers?.onStickerRotate?.(id, rotation);
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[6][1]++;
    }
    cov_2mhscs3zvt().s[60]++;
    return success;
  }, [refreshStickers, handlers]));
  const flipSticker =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[61]++, (0, _react.useCallback)((id, flipX, flipY) => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[13]++;
    const success =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[62]++, managerRef.current.flipSticker(id, flipX, flipY));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[63]++;
    if (success) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[7][0]++;
      cov_2mhscs3zvt().s[64]++;
      refreshStickers();
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[7][1]++;
    }
    cov_2mhscs3zvt().s[65]++;
    return success;
  }, [refreshStickers]));
  const duplicateSticker =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[66]++, (0, _react.useCallback)(async id => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[14]++;
    const sticker =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[67]++, managerRef.current.getSticker(id));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[68]++;
    if (!sticker) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[8][0]++;
      cov_2mhscs3zvt().s[69]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[8][1]++;
    }
    // Create duplicate with offset position
    const duplicateConfig =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[70]++, {
      ...sticker,
      transform: {
        ...sticker.transform,
        x: sticker.transform.x + 20,
        y: sticker.transform.y + 20
      }
    });
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[71]++;
    try {
      const newId =
      /* istanbul ignore next */
      (cov_2mhscs3zvt().s[72]++, await addSticker(duplicateConfig));
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[73]++;
      selectSticker(newId);
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[74]++;
      return newId;
    } catch (error) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[75]++;
      console.error('Failed to duplicate sticker:', error);
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[76]++;
      return null;
    }
  }, [addSticker, selectSticker]));
  const bringToFront =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[77]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[15]++;
    const success =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[78]++, managerRef.current.bringToFront(id));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[79]++;
    if (success) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[9][0]++;
      cov_2mhscs3zvt().s[80]++;
      refreshStickers();
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[9][1]++;
    }
    cov_2mhscs3zvt().s[81]++;
    return success;
  }, [refreshStickers]));
  const sendToBack =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[82]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[16]++;
    const success =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[83]++, managerRef.current.sendToBack(id));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[84]++;
    if (success) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[10][0]++;
      cov_2mhscs3zvt().s[85]++;
      refreshStickers();
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[10][1]++;
    }
    cov_2mhscs3zvt().s[86]++;
    return success;
  }, [refreshStickers]));
  const checkCollisions =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[87]++, (0, _react.useCallback)(excludeId => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[17]++;
    cov_2mhscs3zvt().s[88]++;
    return managerRef.current.checkCollisions(excludeId);
  }, []));
  const renderAll =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[89]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[18]++;
    cov_2mhscs3zvt().s[90]++;
    managerRef.current.renderAllStickers();
  }, []));
  const clearAll =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[91]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[19]++;
    cov_2mhscs3zvt().s[92]++;
    managerRef.current.clearAllStickers();
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[93]++;
    setStickers([]);
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[94]++;
    setSelectedStickerId(null);
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[95]++;
    handlers?.onStickerSelect?.(null);
  }, [handlers]));
  const exportStickers =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[96]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[20]++;
    cov_2mhscs3zvt().s[97]++;
    return managerRef.current.exportStickers();
  }, []));
  const importStickers =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[98]++, (0, _react.useCallback)(async stickerConfigs => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[21]++;
    const importedIds =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[99]++, await managerRef.current.importStickers(stickerConfigs));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[100]++;
    refreshStickers();
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[101]++;
    return importedIds;
  }, [refreshStickers]));
  const setGridConfig =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[102]++, (0, _react.useCallback)(config => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[22]++;
    cov_2mhscs3zvt().s[103]++;
    managerRef.current.setGridConfig(config);
  }, []));
  const getGridConfig =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[104]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[23]++;
    cov_2mhscs3zvt().s[105]++;
    return managerRef.current.getGridConfig();
  }, []));
  // Auto-render when stickers change
  /* istanbul ignore next */
  cov_2mhscs3zvt().s[106]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[24]++;
    cov_2mhscs3zvt().s[107]++;
    renderAll();
  }, [stickers, renderAll]);
  /* istanbul ignore next */
  cov_2mhscs3zvt().s[108]++;
  return {
    canvas,
    manager: managerRef.current,
    stickers,
    selectedStickerId,
    isInteracting: interactionState.isInteracting,
    addSticker,
    removeSticker,
    updateSticker,
    selectSticker,
    moveSticker,
    scaleSticker,
    rotateSticker,
    flipSticker,
    duplicateSticker,
    bringToFront,
    sendToBack,
    checkCollisions,
    renderAll,
    clearAll,
    exportStickers,
    importStickers,
    setGridConfig,
    getGridConfig
  };
}
function useStickerInteraction(canvas, manager, onStickerSelect, onStickerUpdate) {
  /* istanbul ignore next */
  cov_2mhscs3zvt().f[25]++;
  const [isInteracting, setIsInteracting] =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[109]++, (0, _react.useState)(false));
  const interactionRef =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[110]++, (0, _react.useRef)({
    isInteracting: false,
    mode: 'none',
    startX: 0,
    startY: 0,
    currentX: 0,
    currentY: 0,
    targetStickerId: null
  }));
  const getCanvasCoordinates =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[111]++, (0, _react.useCallback)((clientX, clientY) => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[26]++;
    const rect =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[112]++, canvas.getBoundingClientRect());
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[113]++;
    return {
      x: clientX - rect.left,
      y: clientY - rect.top
    };
  }, [canvas]));
  const startInteraction =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[114]++, (0, _react.useCallback)((clientX, clientY, mode =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().b[11][0]++, 'drag')) => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[27]++;
    const {
      x,
      y
    } =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[115]++, getCanvasCoordinates(clientX, clientY));
    const stickerId =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[116]++, manager.getStickerAtPosition(x, y));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[117]++;
    if (stickerId) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[12][0]++;
      const sticker =
      /* istanbul ignore next */
      (cov_2mhscs3zvt().s[118]++, manager.getSticker(stickerId));
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[119]++;
      if (
      /* istanbul ignore next */
      (cov_2mhscs3zvt().b[14][0]++, sticker) &&
      /* istanbul ignore next */
      (cov_2mhscs3zvt().b[14][1]++, !sticker.locked)) {
        /* istanbul ignore next */
        cov_2mhscs3zvt().b[13][0]++;
        cov_2mhscs3zvt().s[120]++;
        manager.selectSticker(stickerId);
        /* istanbul ignore next */
        cov_2mhscs3zvt().s[121]++;
        onStickerSelect?.(stickerId);
        /* istanbul ignore next */
        cov_2mhscs3zvt().s[122]++;
        interactionRef.current = {
          isInteracting: true,
          mode,
          startX: x,
          startY: y,
          currentX: x,
          currentY: y,
          targetStickerId: stickerId,
          initialTransform: {
            ...sticker.transform
          }
        };
        /* istanbul ignore next */
        cov_2mhscs3zvt().s[123]++;
        setIsInteracting(true);
      } else
      /* istanbul ignore next */
      {
        cov_2mhscs3zvt().b[13][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[12][1]++;
      cov_2mhscs3zvt().s[124]++;
      // Clicked on empty area, deselect
      manager.selectSticker(null);
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[125]++;
      onStickerSelect?.(null);
    }
  }, [canvas, manager, onStickerSelect, getCanvasCoordinates]));
  const updateInteraction =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[126]++, (0, _react.useCallback)((clientX, clientY) => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[28]++;
    cov_2mhscs3zvt().s[127]++;
    if (
    /* istanbul ignore next */
    (cov_2mhscs3zvt().b[16][0]++, !interactionRef.current.isInteracting) ||
    /* istanbul ignore next */
    (cov_2mhscs3zvt().b[16][1]++, !interactionRef.current.targetStickerId)) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[15][0]++;
      cov_2mhscs3zvt().s[128]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[15][1]++;
    }
    const {
      x,
      y
    } =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[129]++, getCanvasCoordinates(clientX, clientY));
    const state =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[130]++, interactionRef.current);
    const sticker =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[131]++, manager.getSticker(state.targetStickerId));
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[132]++;
    if (
    /* istanbul ignore next */
    (cov_2mhscs3zvt().b[18][0]++, !sticker) ||
    /* istanbul ignore next */
    (cov_2mhscs3zvt().b[18][1]++, !state.initialTransform)) {
      /* istanbul ignore next */
      cov_2mhscs3zvt().b[17][0]++;
      cov_2mhscs3zvt().s[133]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2mhscs3zvt().b[17][1]++;
    }
    cov_2mhscs3zvt().s[134]++;
    state.currentX = x;
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[135]++;
    state.currentY = y;
    const deltaX =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[136]++, x - state.startX);
    const deltaY =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[137]++, y - state.startY);
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[138]++;
    switch (state.mode) {
      case 'drag':
        /* istanbul ignore next */
        cov_2mhscs3zvt().b[19][0]++;
        cov_2mhscs3zvt().s[139]++;
        manager.moveStickerTo(state.targetStickerId, state.initialTransform.x + deltaX, state.initialTransform.y + deltaY);
        /* istanbul ignore next */
        cov_2mhscs3zvt().s[140]++;
        break;
      case 'scale':
        /* istanbul ignore next */
        cov_2mhscs3zvt().b[19][1]++;
        // Calculate scale based on distance from center
        const centerX =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[141]++, state.initialTransform.x);
        const centerY =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[142]++, state.initialTransform.y);
        const initialDistance =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[143]++, Math.sqrt(Math.pow(state.startX - centerX, 2) + Math.pow(state.startY - centerY, 2)));
        const currentDistance =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[144]++, Math.sqrt(Math.pow(x - centerX, 2) + Math.pow(y - centerY, 2)));
        const scaleFactor =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[145]++, initialDistance > 0 ?
        /* istanbul ignore next */
        (cov_2mhscs3zvt().b[20][0]++, currentDistance / initialDistance) :
        /* istanbul ignore next */
        (cov_2mhscs3zvt().b[20][1]++, 1));
        const newScale =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[146]++, state.initialTransform.scale * scaleFactor);
        /* istanbul ignore next */
        cov_2mhscs3zvt().s[147]++;
        manager.scaleSticker(state.targetStickerId, Math.max(0.1, Math.min(5, newScale)));
        /* istanbul ignore next */
        cov_2mhscs3zvt().s[148]++;
        break;
      case 'rotate':
        /* istanbul ignore next */
        cov_2mhscs3zvt().b[19][2]++;
        // Calculate rotation based on angle from center
        const centerRotX =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[149]++, state.initialTransform.x);
        const centerRotY =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[150]++, state.initialTransform.y);
        const initialAngle =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[151]++, Math.atan2(state.startY - centerRotY, state.startX - centerRotX));
        const currentAngle =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[152]++, Math.atan2(y - centerRotY, x - centerRotX));
        const rotationDelta =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[153]++, currentAngle - initialAngle);
        const newRotation =
        /* istanbul ignore next */
        (cov_2mhscs3zvt().s[154]++, state.initialTransform.rotation + rotationDelta);
        /* istanbul ignore next */
        cov_2mhscs3zvt().s[155]++;
        manager.rotateSticker(state.targetStickerId, newRotation);
        /* istanbul ignore next */
        cov_2mhscs3zvt().s[156]++;
        break;
    }
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[157]++;
    onStickerUpdate?.();
  }, [canvas, manager, onStickerUpdate, getCanvasCoordinates]));
  const endInteraction =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[158]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[29]++;
    cov_2mhscs3zvt().s[159]++;
    interactionRef.current = {
      isInteracting: false,
      mode: 'none',
      startX: 0,
      startY: 0,
      currentX: 0,
      currentY: 0,
      targetStickerId: null
    };
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[160]++;
    setIsInteracting(false);
  }, []));
  /* istanbul ignore next */
  cov_2mhscs3zvt().s[161]++;
  return {
    isInteracting,
    startInteraction,
    updateInteraction,
    endInteraction
  };
}
function useStickerLibrary() {
  /* istanbul ignore next */
  cov_2mhscs3zvt().f[30]++;
  const [library, setLibrary] =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[162]++, (0, _react.useState)(new Map()));
  const [favorites, setFavorites] =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[163]++, (0, _react.useState)(new Set()));
  const categories =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[164]++, Array.from(library.keys()));
  const getStickersInCategory =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[165]++, (0, _react.useCallback)(category => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[31]++;
    cov_2mhscs3zvt().s[166]++;
    return /* istanbul ignore next */(cov_2mhscs3zvt().b[21][0]++, library.get(category)) ||
    /* istanbul ignore next */
    (cov_2mhscs3zvt().b[21][1]++, []);
  }, [library]));
  const addStickerToLibrary =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[167]++, (0, _react.useCallback)((sticker, category) => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[32]++;
    cov_2mhscs3zvt().s[168]++;
    setLibrary(prev => {
      /* istanbul ignore next */
      cov_2mhscs3zvt().f[33]++;
      const newLibrary =
      /* istanbul ignore next */
      (cov_2mhscs3zvt().s[169]++, new Map(prev));
      const categoryStickers =
      /* istanbul ignore next */
      (cov_2mhscs3zvt().s[170]++,
      /* istanbul ignore next */
      (cov_2mhscs3zvt().b[22][0]++, newLibrary.get(category)) ||
      /* istanbul ignore next */
      (cov_2mhscs3zvt().b[22][1]++, []));
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[171]++;
      newLibrary.set(category, [...categoryStickers, sticker]);
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[172]++;
      return newLibrary;
    });
  }, []));
  const removeStickerFromLibrary =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[173]++, (0, _react.useCallback)(stickerId => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[34]++;
    cov_2mhscs3zvt().s[174]++;
    setLibrary(prev => {
      /* istanbul ignore next */
      cov_2mhscs3zvt().f[35]++;
      const newLibrary =
      /* istanbul ignore next */
      (cov_2mhscs3zvt().s[175]++, new Map());
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[176]++;
      prev.forEach((stickers, category) => {
        /* istanbul ignore next */
        cov_2mhscs3zvt().f[36]++;
        cov_2mhscs3zvt().s[177]++;
        newLibrary.set(category, stickers.filter(s => {
          /* istanbul ignore next */
          cov_2mhscs3zvt().f[37]++;
          cov_2mhscs3zvt().s[178]++;
          return s.id !== stickerId;
        }));
      });
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[179]++;
      return newLibrary;
    });
  }, []));
  const searchStickers =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[180]++, (0, _react.useCallback)(query => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[38]++;
    const results =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[181]++, []);
    const lowerQuery =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[182]++, query.toLowerCase());
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[183]++;
    library.forEach(stickers => {
      /* istanbul ignore next */
      cov_2mhscs3zvt().f[39]++;
      cov_2mhscs3zvt().s[184]++;
      stickers.forEach(sticker => {
        /* istanbul ignore next */
        cov_2mhscs3zvt().f[40]++;
        cov_2mhscs3zvt().s[185]++;
        if (
        /* istanbul ignore next */
        (cov_2mhscs3zvt().b[24][0]++, sticker.metadata?.name?.toLowerCase().includes(lowerQuery)) ||
        /* istanbul ignore next */
        (cov_2mhscs3zvt().b[24][1]++, sticker.metadata?.tags?.some(tag => {
          /* istanbul ignore next */
          cov_2mhscs3zvt().f[41]++;
          cov_2mhscs3zvt().s[186]++;
          return tag.toLowerCase().includes(lowerQuery);
        }))) {
          /* istanbul ignore next */
          cov_2mhscs3zvt().b[23][0]++;
          cov_2mhscs3zvt().s[187]++;
          results.push(sticker);
        } else
        /* istanbul ignore next */
        {
          cov_2mhscs3zvt().b[23][1]++;
        }
      });
    });
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[188]++;
    return results;
  }, [library]));
  const getFavoriteStickers =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[189]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[42]++;
    const favoriteStickers =
    /* istanbul ignore next */
    (cov_2mhscs3zvt().s[190]++, []);
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[191]++;
    library.forEach(stickers => {
      /* istanbul ignore next */
      cov_2mhscs3zvt().f[43]++;
      cov_2mhscs3zvt().s[192]++;
      stickers.forEach(sticker => {
        /* istanbul ignore next */
        cov_2mhscs3zvt().f[44]++;
        cov_2mhscs3zvt().s[193]++;
        if (favorites.has(sticker.id)) {
          /* istanbul ignore next */
          cov_2mhscs3zvt().b[25][0]++;
          cov_2mhscs3zvt().s[194]++;
          favoriteStickers.push(sticker);
        } else
        /* istanbul ignore next */
        {
          cov_2mhscs3zvt().b[25][1]++;
        }
      });
    });
    /* istanbul ignore next */
    cov_2mhscs3zvt().s[195]++;
    return favoriteStickers;
  }, [library, favorites]));
  const addToFavorites =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[196]++, (0, _react.useCallback)(stickerId => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[45]++;
    cov_2mhscs3zvt().s[197]++;
    setFavorites(prev => {
      /* istanbul ignore next */
      cov_2mhscs3zvt().f[46]++;
      cov_2mhscs3zvt().s[198]++;
      return new Set(prev).add(stickerId);
    });
  }, []));
  const removeFromFavorites =
  /* istanbul ignore next */
  (cov_2mhscs3zvt().s[199]++, (0, _react.useCallback)(stickerId => {
    /* istanbul ignore next */
    cov_2mhscs3zvt().f[47]++;
    cov_2mhscs3zvt().s[200]++;
    setFavorites(prev => {
      /* istanbul ignore next */
      cov_2mhscs3zvt().f[48]++;
      const newFavorites =
      /* istanbul ignore next */
      (cov_2mhscs3zvt().s[201]++, new Set(prev));
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[202]++;
      newFavorites.delete(stickerId);
      /* istanbul ignore next */
      cov_2mhscs3zvt().s[203]++;
      return newFavorites;
    });
  }, []));
  /* istanbul ignore next */
  cov_2mhscs3zvt().s[204]++;
  return {
    categories,
    getStickersInCategory,
    addStickerToLibrary,
    removeStickerFromLibrary,
    searchStickers,
    getFavoriteStickers,
    addToFavorites,
    removeFromFavorites
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,