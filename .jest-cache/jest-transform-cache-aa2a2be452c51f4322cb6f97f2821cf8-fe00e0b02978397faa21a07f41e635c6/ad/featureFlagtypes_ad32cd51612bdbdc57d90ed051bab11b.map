{"version":3,"names":["DEFAULT_IMAGE_PROCESSING_FLAGS","cov_24vrg8paky","f","s","DEFAULT_TRYON_FLAGS","DEFAULT_UI_FLAGS","isBooleanFlag","isFeatureFlag","isNumberFlag","isStringFlag","key","description","category","defaultValue","type","environment","obj","b","flag"],"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/types/featureFlag.types.ts"],"sourcesContent":["// Feature Flag Types\n// Comprehensive types for feature flag system with environment-based configurations\n\n// Base feature flag value types\nexport type FeatureFlagValue = boolean | string | number;\n\n// Feature flag categories for organization\nexport type FeatureFlagCategory = \n  | 'tryon'\n  | 'image-processing' \n  | 'ui'\n  | 'performance'\n  | 'experiment'\n  | 'debugging';\n\n// Environment types\nexport type Environment = 'development' | 'staging' | 'production' | 'test';\n\n// Base feature flag interface\nexport interface FeatureFlag<T extends FeatureFlagValue = FeatureFlagValue> {\n  key: string;\n  description: string;\n  category: FeatureFlagCategory;\n  defaultValue: T;\n  type: 'boolean' | 'string' | 'number';\n  environment?: Environment[];\n  enabled: boolean;\n  value: T;\n  lastUpdated?: string;\n  metadata?: Record<string, unknown>;\n}\n\n// Feature flag configuration for initialization\nexport interface FeatureFlagConfig<T extends FeatureFlagValue = FeatureFlagValue> {\n  key: string;\n  description: string;\n  category: FeatureFlagCategory;\n  defaultValue: T;\n  type: 'boolean' | 'string' | 'number';\n  environment?: Environment[];\n}\n\n// Specific feature flag interfaces\n\n// Try-on functionality flags\nexport interface TryonFeatureFlags {\n  enableTryon: FeatureFlag<boolean>;\n  maxConcurrentRequests: FeatureFlag<number>;\n  enableRetryLogic: FeatureFlag<boolean>;\n  enableOptimisticUpdates: FeatureFlag<boolean>;\n  tryonTimeout: FeatureFlag<number>;\n}\n\n// Image processing flags\nexport interface ImageProcessingFeatureFlags {\n  enableCompression: FeatureFlag<boolean>;\n  maxFileSize: FeatureFlag<number>;\n  supportedFormats: FeatureFlag<string>;\n  enableImageOptimization: FeatureFlag<boolean>;\n  compressionQuality: FeatureFlag<number>;\n}\n\n// UI variation flags\nexport interface UIFeatureFlags {\n  showPolaroid: FeatureFlag<boolean>;\n  enablePreview: FeatureFlag<boolean>;\n  enableDarkMode: FeatureFlag<boolean>;\n  showAdvancedControls: FeatureFlag<boolean>;\n  enableAnimations: FeatureFlag<boolean>;\n}\n\n// Performance flags\nexport interface PerformanceFeatureFlags {\n  enableQueryCache: FeatureFlag<boolean>;\n  cacheTimeoutMs: FeatureFlag<number>;\n  enablePrefetching: FeatureFlag<boolean>;\n  enableLazyLoading: FeatureFlag<boolean>;\n}\n\n// Experiment flags\nexport interface ExperimentFeatureFlags {\n  enableABTesting: FeatureFlag<boolean>;\n  experimentVariant: FeatureFlag<string>;\n  enableMetrics: FeatureFlag<boolean>;\n}\n\n// Debugging flags\nexport interface DebuggingFeatureFlags {\n  enableDevTools: FeatureFlag<boolean>;\n  enableVerboseLogging: FeatureFlag<boolean>;\n  enableErrorReporting: FeatureFlag<boolean>;\n  showDebugInfo: FeatureFlag<boolean>;\n}\n\n// Combined feature flags interface\nexport interface AllFeatureFlags extends \n  TryonFeatureFlags,\n  ImageProcessingFeatureFlags,\n  UIFeatureFlags,\n  PerformanceFeatureFlags,\n  ExperimentFeatureFlags,\n  DebuggingFeatureFlags {}\n\n// Feature flag collection type\nexport type FeatureFlagCollection = Record<string, FeatureFlag>;\n\n// Feature flag provider configuration\nexport interface FeatureFlagProviderConfig {\n  flags: FeatureFlagConfig[];\n  environment: Environment;\n  enableRemoteConfig?: boolean;\n  remoteConfigUrl?: string;\n  refreshInterval?: number;\n  fallbackToDefaults?: boolean;\n}\n\n// Feature flag context type\nexport interface FeatureFlagContextValue {\n  flags: FeatureFlagCollection;\n  getFlag: <T extends FeatureFlagValue>(key: string) => FeatureFlag<T> | undefined;\n  isEnabled: (key: string) => boolean;\n  getValue: <T extends FeatureFlagValue>(key: string, defaultValue?: T) => T;\n  updateFlag: (key: string, value: FeatureFlagValue) => void;\n  refreshFlags: () => Promise<void>;\n  isLoading: boolean;\n  error: Error | null;\n}\n\n// Feature flag hook return type\nexport interface UseFeatureFlagReturn<T extends FeatureFlagValue> {\n  flag: FeatureFlag<T> | undefined;\n  isEnabled: boolean;\n  value: T;\n  isLoading: boolean;\n  error: Error | null;\n}\n\n// Feature flag validation schema\nexport interface FeatureFlagValidation {\n  required?: boolean;\n  min?: number;\n  max?: number;\n  pattern?: RegExp;\n  allowedValues?: FeatureFlagValue[];\n  customValidator?: (value: FeatureFlagValue) => boolean | string;\n}\n\n// Feature flag with validation\nexport interface ValidatedFeatureFlag<T extends FeatureFlagValue = FeatureFlagValue> \n  extends FeatureFlag<T> {\n  validation?: FeatureFlagValidation;\n}\n\n// Default feature flag configurations\nexport const DEFAULT_TRYON_FLAGS: FeatureFlagConfig[] = [\n  {\n    key: 'enableTryon',\n    description: 'Enable try-on functionality',\n    category: 'tryon',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'maxConcurrentRequests',\n    description: 'Maximum concurrent try-on requests',\n    category: 'tryon',\n    defaultValue: 3,\n    type: 'number',\n  },\n  {\n    key: 'enableRetryLogic',\n    description: 'Enable retry logic for failed requests',\n    category: 'tryon',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'enableOptimisticUpdates',\n    description: 'Enable optimistic UI updates',\n    category: 'tryon',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'tryonTimeout',\n    description: 'Try-on request timeout in milliseconds',\n    category: 'tryon',\n    defaultValue: 30000,\n    type: 'number',\n  },\n];\n\nexport const DEFAULT_IMAGE_PROCESSING_FLAGS: FeatureFlagConfig[] = [\n  {\n    key: 'enableCompression',\n    description: 'Enable image compression',\n    category: 'image-processing',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'maxFileSize',\n    description: 'Maximum file size in bytes',\n    category: 'image-processing',\n    defaultValue: 10485760, // 10MB\n    type: 'number',\n  },\n  {\n    key: 'supportedFormats',\n    description: 'Supported image formats (comma-separated)',\n    category: 'image-processing',\n    defaultValue: 'jpeg,jpg,png,webp',\n    type: 'string',\n  },\n  {\n    key: 'enableImageOptimization',\n    description: 'Enable automatic image optimization',\n    category: 'image-processing',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'compressionQuality',\n    description: 'Image compression quality (0-100)',\n    category: 'image-processing',\n    defaultValue: 85,\n    type: 'number',\n  },\n];\n\nexport const DEFAULT_UI_FLAGS: FeatureFlagConfig[] = [\n  {\n    key: 'showPolaroid',\n    description: 'Show polaroid-style photo frames',\n    category: 'ui',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'enablePreview',\n    description: 'Enable image preview functionality',\n    category: 'ui',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'enableDarkMode',\n    description: 'Enable dark mode toggle',\n    category: 'ui',\n    defaultValue: false,\n    type: 'boolean',\n    environment: ['development'],\n  },\n  {\n    key: 'showAdvancedControls',\n    description: 'Show advanced control options',\n    category: 'ui',\n    defaultValue: false,\n    type: 'boolean',\n    environment: ['development', 'staging'],\n  },\n  {\n    key: 'enableAnimations',\n    description: 'Enable UI animations',\n    category: 'ui',\n    defaultValue: true,\n    type: 'boolean',\n  },\n];\n\n// Utility type for extracting flag value type\nexport type ExtractFlagValue<T> = T extends FeatureFlag<infer U> ? U : never;\n\n// Type guard functions\nexport const isFeatureFlag = (obj: unknown): obj is FeatureFlag => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    'key' in obj &&\n    'enabled' in obj &&\n    'value' in obj &&\n    'defaultValue' in obj\n  );\n};\n\nexport const isBooleanFlag = (flag: FeatureFlag): flag is FeatureFlag<boolean> => {\n  return flag.type === 'boolean';\n};\n\nexport const isStringFlag = (flag: FeatureFlag): flag is FeatureFlag<string> => {\n  return flag.type === 'string';\n};\n\nexport const isNumberFlag = (flag: FeatureFlag): flag is FeatureFlag<number> => {\n  return flag.type === 'number';\n};"],"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","ignoreList":[]}