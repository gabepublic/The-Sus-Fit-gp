cacde0776fa753783ada59488dedf239
// Feature Flag Types
// Comprehensive types for feature flag system with environment-based configurations
// Base feature flag value types
"use strict";

/* istanbul ignore next */
function cov_24vrg8paky() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/types/featureFlag.types.ts";
  var hash = "dbaae572bfc15d2952ee1283b01dbc507e133a1f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/types/featureFlag.types.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 32
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 28
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 28
        }
      },
      "11": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 73,
          column: 1
        }
      },
      "12": {
        start: {
          line: 74,
          column: 39
        },
        end: {
          line: 110,
          column: 1
        }
      },
      "13": {
        start: {
          line: 111,
          column: 25
        },
        end: {
          line: 154,
          column: 1
        }
      },
      "14": {
        start: {
          line: 155,
          column: 22
        },
        end: {
          line: 157,
          column: 1
        }
      },
      "15": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 130
        }
      },
      "16": {
        start: {
          line: 158,
          column: 22
        },
        end: {
          line: 160,
          column: 1
        }
      },
      "17": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 35
        }
      },
      "18": {
        start: {
          line: 161,
          column: 21
        },
        end: {
          line: 163,
          column: 1
        }
      },
      "19": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 34
        }
      },
      "20": {
        start: {
          line: 164,
          column: 21
        },
        end: {
          line: 166,
          column: 1
        }
      },
      "21": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 15,
            column: 37
          }
        },
        loc: {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 18,
            column: 26
          }
        },
        loc: {
          start: {
            line: 18,
            column: 36
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 21,
            column: 23
          }
        },
        loc: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 24,
            column: 20
          }
        },
        loc: {
          start: {
            line: 24,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 19
          },
          end: {
            line: 27,
            column: 20
          }
        },
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 19
          }
        },
        loc: {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 18
          },
          end: {
            line: 33,
            column: 19
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 155,
            column: 22
          },
          end: {
            line: 155,
            column: 23
          }
        },
        loc: {
          start: {
            line: 155,
            column: 29
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 155
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 158,
            column: 22
          },
          end: {
            line: 158,
            column: 23
          }
        },
        loc: {
          start: {
            line: 158,
            column: 30
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 158
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 161,
            column: 21
          },
          end: {
            line: 161,
            column: 22
          }
        },
        loc: {
          start: {
            line: 161,
            column: 29
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 161
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 164,
            column: 21
          },
          end: {
            line: 164,
            column: 22
          }
        },
        loc: {
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 164
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 156,
            column: 11
          },
          end: {
            line: 156,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 11
          },
          end: {
            line: 156,
            column: 34
          }
        }, {
          start: {
            line: 156,
            column: 38
          },
          end: {
            line: 156,
            column: 50
          }
        }, {
          start: {
            line: 156,
            column: 54
          },
          end: {
            line: 156,
            column: 66
          }
        }, {
          start: {
            line: 156,
            column: 70
          },
          end: {
            line: 156,
            column: 86
          }
        }, {
          start: {
            line: 156,
            column: 90
          },
          end: {
            line: 156,
            column: 104
          }
        }, {
          start: {
            line: 156,
            column: 108
          },
          end: {
            line: 156,
            column: 129
          }
        }],
        line: 156
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/types/featureFlag.types.ts"],
      sourcesContent: ["// Feature Flag Types\n// Comprehensive types for feature flag system with environment-based configurations\n\n// Base feature flag value types\nexport type FeatureFlagValue = boolean | string | number;\n\n// Feature flag categories for organization\nexport type FeatureFlagCategory = \n  | 'tryon'\n  | 'image-processing' \n  | 'ui'\n  | 'performance'\n  | 'experiment'\n  | 'debugging';\n\n// Environment types\nexport type Environment = 'development' | 'staging' | 'production' | 'test';\n\n// Base feature flag interface\nexport interface FeatureFlag<T extends FeatureFlagValue = FeatureFlagValue> {\n  key: string;\n  description: string;\n  category: FeatureFlagCategory;\n  defaultValue: T;\n  type: 'boolean' | 'string' | 'number';\n  environment?: Environment[];\n  enabled: boolean;\n  value: T;\n  lastUpdated?: string;\n  metadata?: Record<string, unknown>;\n}\n\n// Feature flag configuration for initialization\nexport interface FeatureFlagConfig<T extends FeatureFlagValue = FeatureFlagValue> {\n  key: string;\n  description: string;\n  category: FeatureFlagCategory;\n  defaultValue: T;\n  type: 'boolean' | 'string' | 'number';\n  environment?: Environment[];\n}\n\n// Specific feature flag interfaces\n\n// Try-on functionality flags\nexport interface TryonFeatureFlags {\n  enableTryon: FeatureFlag<boolean>;\n  maxConcurrentRequests: FeatureFlag<number>;\n  enableRetryLogic: FeatureFlag<boolean>;\n  enableOptimisticUpdates: FeatureFlag<boolean>;\n  tryonTimeout: FeatureFlag<number>;\n}\n\n// Image processing flags\nexport interface ImageProcessingFeatureFlags {\n  enableCompression: FeatureFlag<boolean>;\n  maxFileSize: FeatureFlag<number>;\n  supportedFormats: FeatureFlag<string>;\n  enableImageOptimization: FeatureFlag<boolean>;\n  compressionQuality: FeatureFlag<number>;\n}\n\n// UI variation flags\nexport interface UIFeatureFlags {\n  showPolaroid: FeatureFlag<boolean>;\n  enablePreview: FeatureFlag<boolean>;\n  enableDarkMode: FeatureFlag<boolean>;\n  showAdvancedControls: FeatureFlag<boolean>;\n  enableAnimations: FeatureFlag<boolean>;\n}\n\n// Performance flags\nexport interface PerformanceFeatureFlags {\n  enableQueryCache: FeatureFlag<boolean>;\n  cacheTimeoutMs: FeatureFlag<number>;\n  enablePrefetching: FeatureFlag<boolean>;\n  enableLazyLoading: FeatureFlag<boolean>;\n}\n\n// Experiment flags\nexport interface ExperimentFeatureFlags {\n  enableABTesting: FeatureFlag<boolean>;\n  experimentVariant: FeatureFlag<string>;\n  enableMetrics: FeatureFlag<boolean>;\n}\n\n// Debugging flags\nexport interface DebuggingFeatureFlags {\n  enableDevTools: FeatureFlag<boolean>;\n  enableVerboseLogging: FeatureFlag<boolean>;\n  enableErrorReporting: FeatureFlag<boolean>;\n  showDebugInfo: FeatureFlag<boolean>;\n}\n\n// Combined feature flags interface\nexport interface AllFeatureFlags extends \n  TryonFeatureFlags,\n  ImageProcessingFeatureFlags,\n  UIFeatureFlags,\n  PerformanceFeatureFlags,\n  ExperimentFeatureFlags,\n  DebuggingFeatureFlags {}\n\n// Feature flag collection type\nexport type FeatureFlagCollection = Record<string, FeatureFlag>;\n\n// Feature flag provider configuration\nexport interface FeatureFlagProviderConfig {\n  flags: FeatureFlagConfig[];\n  environment: Environment;\n  enableRemoteConfig?: boolean;\n  remoteConfigUrl?: string;\n  refreshInterval?: number;\n  fallbackToDefaults?: boolean;\n}\n\n// Feature flag context type\nexport interface FeatureFlagContextValue {\n  flags: FeatureFlagCollection;\n  getFlag: <T extends FeatureFlagValue>(key: string) => FeatureFlag<T> | undefined;\n  isEnabled: (key: string) => boolean;\n  getValue: <T extends FeatureFlagValue>(key: string, defaultValue?: T) => T;\n  updateFlag: (key: string, value: FeatureFlagValue) => void;\n  refreshFlags: () => Promise<void>;\n  isLoading: boolean;\n  error: Error | null;\n}\n\n// Feature flag hook return type\nexport interface UseFeatureFlagReturn<T extends FeatureFlagValue> {\n  flag: FeatureFlag<T> | undefined;\n  isEnabled: boolean;\n  value: T;\n  isLoading: boolean;\n  error: Error | null;\n}\n\n// Feature flag validation schema\nexport interface FeatureFlagValidation {\n  required?: boolean;\n  min?: number;\n  max?: number;\n  pattern?: RegExp;\n  allowedValues?: FeatureFlagValue[];\n  customValidator?: (value: FeatureFlagValue) => boolean | string;\n}\n\n// Feature flag with validation\nexport interface ValidatedFeatureFlag<T extends FeatureFlagValue = FeatureFlagValue> \n  extends FeatureFlag<T> {\n  validation?: FeatureFlagValidation;\n}\n\n// Default feature flag configurations\nexport const DEFAULT_TRYON_FLAGS: FeatureFlagConfig[] = [\n  {\n    key: 'enableTryon',\n    description: 'Enable try-on functionality',\n    category: 'tryon',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'maxConcurrentRequests',\n    description: 'Maximum concurrent try-on requests',\n    category: 'tryon',\n    defaultValue: 3,\n    type: 'number',\n  },\n  {\n    key: 'enableRetryLogic',\n    description: 'Enable retry logic for failed requests',\n    category: 'tryon',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'enableOptimisticUpdates',\n    description: 'Enable optimistic UI updates',\n    category: 'tryon',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'tryonTimeout',\n    description: 'Try-on request timeout in milliseconds',\n    category: 'tryon',\n    defaultValue: 30000,\n    type: 'number',\n  },\n];\n\nexport const DEFAULT_IMAGE_PROCESSING_FLAGS: FeatureFlagConfig[] = [\n  {\n    key: 'enableCompression',\n    description: 'Enable image compression',\n    category: 'image-processing',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'maxFileSize',\n    description: 'Maximum file size in bytes',\n    category: 'image-processing',\n    defaultValue: 10485760, // 10MB\n    type: 'number',\n  },\n  {\n    key: 'supportedFormats',\n    description: 'Supported image formats (comma-separated)',\n    category: 'image-processing',\n    defaultValue: 'jpeg,jpg,png,webp',\n    type: 'string',\n  },\n  {\n    key: 'enableImageOptimization',\n    description: 'Enable automatic image optimization',\n    category: 'image-processing',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'compressionQuality',\n    description: 'Image compression quality (0-100)',\n    category: 'image-processing',\n    defaultValue: 85,\n    type: 'number',\n  },\n];\n\nexport const DEFAULT_UI_FLAGS: FeatureFlagConfig[] = [\n  {\n    key: 'showPolaroid',\n    description: 'Show polaroid-style photo frames',\n    category: 'ui',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'enablePreview',\n    description: 'Enable image preview functionality',\n    category: 'ui',\n    defaultValue: true,\n    type: 'boolean',\n  },\n  {\n    key: 'enableDarkMode',\n    description: 'Enable dark mode toggle',\n    category: 'ui',\n    defaultValue: false,\n    type: 'boolean',\n    environment: ['development'],\n  },\n  {\n    key: 'showAdvancedControls',\n    description: 'Show advanced control options',\n    category: 'ui',\n    defaultValue: false,\n    type: 'boolean',\n    environment: ['development', 'staging'],\n  },\n  {\n    key: 'enableAnimations',\n    description: 'Enable UI animations',\n    category: 'ui',\n    defaultValue: true,\n    type: 'boolean',\n  },\n];\n\n// Utility type for extracting flag value type\nexport type ExtractFlagValue<T> = T extends FeatureFlag<infer U> ? U : never;\n\n// Type guard functions\nexport const isFeatureFlag = (obj: unknown): obj is FeatureFlag => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    'key' in obj &&\n    'enabled' in obj &&\n    'value' in obj &&\n    'defaultValue' in obj\n  );\n};\n\nexport const isBooleanFlag = (flag: FeatureFlag): flag is FeatureFlag<boolean> => {\n  return flag.type === 'boolean';\n};\n\nexport const isStringFlag = (flag: FeatureFlag): flag is FeatureFlag<string> => {\n  return flag.type === 'string';\n};\n\nexport const isNumberFlag = (flag: FeatureFlag): flag is FeatureFlag<number> => {\n  return flag.type === 'number';\n};"],
      names: ["DEFAULT_IMAGE_PROCESSING_FLAGS", "DEFAULT_TRYON_FLAGS", "DEFAULT_UI_FLAGS", "isBooleanFlag", "isFeatureFlag", "isNumberFlag", "isStringFlag", "key", "description", "category", "defaultValue", "type", "environment", "obj", "flag"],
      mappings: "AAAA,qBAAqB;AACrB,oFAAoF;AAEpF,gCAAgC;;;;;;;;;;;;IA6LnBA,8BAA8B;eAA9BA;;IAtCAC,mBAAmB;eAAnBA;;IA4EAC,gBAAgB;eAAhBA;;IAuDAC,aAAa;eAAbA;;IAXAC,aAAa;eAAbA;;IAmBAC,YAAY;eAAZA;;IAJAC,YAAY;eAAZA;;;AAvIN,MAAML,sBAA2C;IACtD;QACEM,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;IACA;QACEJ,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;IACA;QACEJ,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;IACA;QACEJ,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;IACA;QACEJ,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;CACD;AAEM,MAAMX,iCAAsD;IACjE;QACEO,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;IACA;QACEJ,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;IACA;QACEJ,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;IACA;QACEJ,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;IACA;QACEJ,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;CACD;AAEM,MAAMT,mBAAwC;IACnD;QACEK,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;IACA;QACEJ,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;IACA;QACEJ,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;QACNC,aAAa;YAAC;SAAc;IAC9B;IACA;QACEL,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;QACNC,aAAa;YAAC;YAAe;SAAU;IACzC;IACA;QACEL,KAAK;QACLC,aAAa;QACbC,UAAU;QACVC,cAAc;QACdC,MAAM;IACR;CACD;AAMM,MAAMP,gBAAgB,CAACS;IAC5B,OACE,OAAOA,QAAQ,YACfA,QAAQ,QACR,SAASA,OACT,aAAaA,OACb,WAAWA,OACX,kBAAkBA;AAEtB;AAEO,MAAMV,gBAAgB,CAACW;IAC5B,OAAOA,KAAKH,IAAI,KAAK;AACvB;AAEO,MAAML,eAAe,CAACQ;IAC3B,OAAOA,KAAKH,IAAI,KAAK;AACvB;AAEO,MAAMN,eAAe,CAACS;IAC3B,OAAOA,KAAKH,IAAI,KAAK;AACvB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dbaae572bfc15d2952ee1283b01dbc507e133a1f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24vrg8paky = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24vrg8paky();
cov_24vrg8paky().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_24vrg8paky().f[0]++;
  cov_24vrg8paky().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_24vrg8paky().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_24vrg8paky().s[3]++;
_export(exports, {
  DEFAULT_IMAGE_PROCESSING_FLAGS: function () {
    /* istanbul ignore next */
    cov_24vrg8paky().f[1]++;
    cov_24vrg8paky().s[4]++;
    return DEFAULT_IMAGE_PROCESSING_FLAGS;
  },
  DEFAULT_TRYON_FLAGS: function () {
    /* istanbul ignore next */
    cov_24vrg8paky().f[2]++;
    cov_24vrg8paky().s[5]++;
    return DEFAULT_TRYON_FLAGS;
  },
  DEFAULT_UI_FLAGS: function () {
    /* istanbul ignore next */
    cov_24vrg8paky().f[3]++;
    cov_24vrg8paky().s[6]++;
    return DEFAULT_UI_FLAGS;
  },
  isBooleanFlag: function () {
    /* istanbul ignore next */
    cov_24vrg8paky().f[4]++;
    cov_24vrg8paky().s[7]++;
    return isBooleanFlag;
  },
  isFeatureFlag: function () {
    /* istanbul ignore next */
    cov_24vrg8paky().f[5]++;
    cov_24vrg8paky().s[8]++;
    return isFeatureFlag;
  },
  isNumberFlag: function () {
    /* istanbul ignore next */
    cov_24vrg8paky().f[6]++;
    cov_24vrg8paky().s[9]++;
    return isNumberFlag;
  },
  isStringFlag: function () {
    /* istanbul ignore next */
    cov_24vrg8paky().f[7]++;
    cov_24vrg8paky().s[10]++;
    return isStringFlag;
  }
});
const DEFAULT_TRYON_FLAGS =
/* istanbul ignore next */
(cov_24vrg8paky().s[11]++, [{
  key: 'enableTryon',
  description: 'Enable try-on functionality',
  category: 'tryon',
  defaultValue: true,
  type: 'boolean'
}, {
  key: 'maxConcurrentRequests',
  description: 'Maximum concurrent try-on requests',
  category: 'tryon',
  defaultValue: 3,
  type: 'number'
}, {
  key: 'enableRetryLogic',
  description: 'Enable retry logic for failed requests',
  category: 'tryon',
  defaultValue: true,
  type: 'boolean'
}, {
  key: 'enableOptimisticUpdates',
  description: 'Enable optimistic UI updates',
  category: 'tryon',
  defaultValue: true,
  type: 'boolean'
}, {
  key: 'tryonTimeout',
  description: 'Try-on request timeout in milliseconds',
  category: 'tryon',
  defaultValue: 30000,
  type: 'number'
}]);
const DEFAULT_IMAGE_PROCESSING_FLAGS =
/* istanbul ignore next */
(cov_24vrg8paky().s[12]++, [{
  key: 'enableCompression',
  description: 'Enable image compression',
  category: 'image-processing',
  defaultValue: true,
  type: 'boolean'
}, {
  key: 'maxFileSize',
  description: 'Maximum file size in bytes',
  category: 'image-processing',
  defaultValue: 10485760,
  type: 'number'
}, {
  key: 'supportedFormats',
  description: 'Supported image formats (comma-separated)',
  category: 'image-processing',
  defaultValue: 'jpeg,jpg,png,webp',
  type: 'string'
}, {
  key: 'enableImageOptimization',
  description: 'Enable automatic image optimization',
  category: 'image-processing',
  defaultValue: true,
  type: 'boolean'
}, {
  key: 'compressionQuality',
  description: 'Image compression quality (0-100)',
  category: 'image-processing',
  defaultValue: 85,
  type: 'number'
}]);
const DEFAULT_UI_FLAGS =
/* istanbul ignore next */
(cov_24vrg8paky().s[13]++, [{
  key: 'showPolaroid',
  description: 'Show polaroid-style photo frames',
  category: 'ui',
  defaultValue: true,
  type: 'boolean'
}, {
  key: 'enablePreview',
  description: 'Enable image preview functionality',
  category: 'ui',
  defaultValue: true,
  type: 'boolean'
}, {
  key: 'enableDarkMode',
  description: 'Enable dark mode toggle',
  category: 'ui',
  defaultValue: false,
  type: 'boolean',
  environment: ['development']
}, {
  key: 'showAdvancedControls',
  description: 'Show advanced control options',
  category: 'ui',
  defaultValue: false,
  type: 'boolean',
  environment: ['development', 'staging']
}, {
  key: 'enableAnimations',
  description: 'Enable UI animations',
  category: 'ui',
  defaultValue: true,
  type: 'boolean'
}]);
/* istanbul ignore next */
cov_24vrg8paky().s[14]++;
const isFeatureFlag = obj => {
  /* istanbul ignore next */
  cov_24vrg8paky().f[8]++;
  cov_24vrg8paky().s[15]++;
  return /* istanbul ignore next */(cov_24vrg8paky().b[0][0]++, typeof obj === 'object') &&
  /* istanbul ignore next */
  (cov_24vrg8paky().b[0][1]++, obj !== null) &&
  /* istanbul ignore next */
  (cov_24vrg8paky().b[0][2]++, 'key' in obj) &&
  /* istanbul ignore next */
  (cov_24vrg8paky().b[0][3]++, 'enabled' in obj) &&
  /* istanbul ignore next */
  (cov_24vrg8paky().b[0][4]++, 'value' in obj) &&
  /* istanbul ignore next */
  (cov_24vrg8paky().b[0][5]++, 'defaultValue' in obj);
};
/* istanbul ignore next */
cov_24vrg8paky().s[16]++;
const isBooleanFlag = flag => {
  /* istanbul ignore next */
  cov_24vrg8paky().f[9]++;
  cov_24vrg8paky().s[17]++;
  return flag.type === 'boolean';
};
/* istanbul ignore next */
cov_24vrg8paky().s[18]++;
const isStringFlag = flag => {
  /* istanbul ignore next */
  cov_24vrg8paky().f[10]++;
  cov_24vrg8paky().s[19]++;
  return flag.type === 'string';
};
/* istanbul ignore next */
cov_24vrg8paky().s[20]++;
const isNumberFlag = flag => {
  /* istanbul ignore next */
  cov_24vrg8paky().f[11]++;
  cov_24vrg8paky().s[21]++;
  return flag.type === 'number';
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,