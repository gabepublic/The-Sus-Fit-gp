76dfe959329c1bb94642d93df75c3f67
// Image Filter System for Canvas
// Comprehensive image filtering with real-time preview and filter composition
"use strict";

/* istanbul ignore next */
function cov_1q1qip72zw() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/imageFilters.ts";
  var hash = "9c08b59628e1a863678ab32aa4ef50aaf6d251e0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/imageFilters.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 35
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 26
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "9": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 39
        }
      },
      "10": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 45
        }
      },
      "11": {
        start: {
          line: 34,
          column: 31
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "12": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 44
        }
      },
      "13": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "14": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 44
        }
      },
      "15": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "16": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 34
        }
      },
      "17": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 40
        }
      },
      "18": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "19": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 48
        }
      },
      "20": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 44
        }
      },
      "21": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 38
        }
      },
      "22": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 46
        }
      },
      "23": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 34
        }
      },
      "24": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 34
        }
      },
      "25": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 34
        }
      },
      "26": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 42
        }
      },
      "27": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 36
        }
      },
      "28": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 42
        }
      },
      "29": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 40
        }
      },
      "30": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 36
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 50
        }
      },
      "32": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 38
        }
      },
      "33": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 40
        }
      },
      "34": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 48
        }
      },
      "35": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 48
        }
      },
      "36": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 36
        }
      },
      "37": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 36
        }
      },
      "38": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 40
        }
      },
      "39": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 40
        }
      },
      "40": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 44
        }
      },
      "41": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 46
        }
      },
      "42": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 22
        }
      },
      "43": {
        start: {
          line: 74,
          column: 34
        },
        end: {
          line: 521,
          column: 1
        }
      },
      "44": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 524,
          column: 38
        }
      },
      "45": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 525,
          column: 37
        }
      },
      "46": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 526,
          column: 43
        }
      },
      "47": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 527,
          column: 41
        }
      },
      "48": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 532,
          column: 121
        }
      },
      "49": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 120
        }
      },
      "50": {
        start: {
          line: 538,
          column: 21
        },
        end: {
          line: 538,
          column: 35
        }
      },
      "51": {
        start: {
          line: 539,
          column: 33
        },
        end: {
          line: 539,
          column: 45
        }
      },
      "52": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 544,
          column: 9
        }
      },
      "53": {
        start: {
          line: 540,
          column: 20
        },
        end: {
          line: 540,
          column: 21
        }
      },
      "54": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 83
        }
      },
      "55": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 542,
          column: 91
        }
      },
      "56": {
        start: {
          line: 543,
          column: 12
        },
        end: {
          line: 543,
          column: 91
        }
      },
      "57": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 25
        }
      },
      "58": {
        start: {
          line: 550,
          column: 21
        },
        end: {
          line: 550,
          column: 35
        }
      },
      "59": {
        start: {
          line: 551,
          column: 31
        },
        end: {
          line: 551,
          column: 51
        }
      },
      "60": {
        start: {
          line: 552,
          column: 8
        },
        end: {
          line: 556,
          column: 9
        }
      },
      "61": {
        start: {
          line: 552,
          column: 20
        },
        end: {
          line: 552,
          column: 21
        }
      },
      "62": {
        start: {
          line: 553,
          column: 12
        },
        end: {
          line: 553,
          column: 89
        }
      },
      "63": {
        start: {
          line: 554,
          column: 12
        },
        end: {
          line: 554,
          column: 97
        }
      },
      "64": {
        start: {
          line: 555,
          column: 12
        },
        end: {
          line: 555,
          column: 97
        }
      },
      "65": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 557,
          column: 25
        }
      },
      "66": {
        start: {
          line: 562,
          column: 21
        },
        end: {
          line: 562,
          column: 35
        }
      },
      "67": {
        start: {
          line: 563,
          column: 33
        },
        end: {
          line: 563,
          column: 53
        }
      },
      "68": {
        start: {
          line: 564,
          column: 8
        },
        end: {
          line: 574,
          column: 9
        }
      },
      "69": {
        start: {
          line: 564,
          column: 20
        },
        end: {
          line: 564,
          column: 21
        }
      },
      "70": {
        start: {
          line: 565,
          column: 22
        },
        end: {
          line: 565,
          column: 29
        }
      },
      "71": {
        start: {
          line: 566,
          column: 22
        },
        end: {
          line: 566,
          column: 33
        }
      },
      "72": {
        start: {
          line: 567,
          column: 22
        },
        end: {
          line: 567,
          column: 33
        }
      },
      "73": {
        start: {
          line: 569,
          column: 25
        },
        end: {
          line: 569,
          column: 58
        }
      },
      "74": {
        start: {
          line: 571,
          column: 12
        },
        end: {
          line: 571,
          column: 87
        }
      },
      "75": {
        start: {
          line: 572,
          column: 12
        },
        end: {
          line: 572,
          column: 91
        }
      },
      "76": {
        start: {
          line: 573,
          column: 12
        },
        end: {
          line: 573,
          column: 91
        }
      },
      "77": {
        start: {
          line: 575,
          column: 8
        },
        end: {
          line: 575,
          column: 25
        }
      },
      "78": {
        start: {
          line: 580,
          column: 21
        },
        end: {
          line: 580,
          column: 35
        }
      },
      "79": {
        start: {
          line: 581,
          column: 25
        },
        end: {
          line: 581,
          column: 46
        }
      },
      "80": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 633,
          column: 9
        }
      },
      "81": {
        start: {
          line: 582,
          column: 20
        },
        end: {
          line: 582,
          column: 21
        }
      },
      "82": {
        start: {
          line: 583,
          column: 22
        },
        end: {
          line: 583,
          column: 35
        }
      },
      "83": {
        start: {
          line: 584,
          column: 22
        },
        end: {
          line: 584,
          column: 39
        }
      },
      "84": {
        start: {
          line: 585,
          column: 22
        },
        end: {
          line: 585,
          column: 39
        }
      },
      "85": {
        start: {
          line: 587,
          column: 24
        },
        end: {
          line: 587,
          column: 41
        }
      },
      "86": {
        start: {
          line: 588,
          column: 24
        },
        end: {
          line: 588,
          column: 41
        }
      },
      "87": {
        start: {
          line: 589,
          column: 26
        },
        end: {
          line: 589,
          column: 35
        }
      },
      "88": {
        start: {
          line: 590,
          column: 20
        },
        end: {
          line: 590,
          column: 21
        }
      },
      "89": {
        start: {
          line: 591,
          column: 12
        },
        end: {
          line: 595,
          column: 13
        }
      },
      "90": {
        start: {
          line: 592,
          column: 16
        },
        end: {
          line: 594,
          column: 45
        }
      },
      "91": {
        start: {
          line: 592,
          column: 31
        },
        end: {
          line: 592,
          column: 55
        }
      },
      "92": {
        start: {
          line: 593,
          column: 21
        },
        end: {
          line: 594,
          column: 45
        }
      },
      "93": {
        start: {
          line: 593,
          column: 36
        },
        end: {
          line: 593,
          column: 60
        }
      },
      "94": {
        start: {
          line: 594,
          column: 21
        },
        end: {
          line: 594,
          column: 45
        }
      },
      "95": {
        start: {
          line: 596,
          column: 12
        },
        end: {
          line: 596,
          column: 58
        }
      },
      "96": {
        start: {
          line: 597,
          column: 12
        },
        end: {
          line: 597,
          column: 32
        }
      },
      "97": {
        start: {
          line: 597,
          column: 23
        },
        end: {
          line: 597,
          column: 32
        }
      },
      "98": {
        start: {
          line: 598,
          column: 22
        },
        end: {
          line: 598,
          column: 49
        }
      },
      "99": {
        start: {
          line: 599,
          column: 22
        },
        end: {
          line: 599,
          column: 25
        }
      },
      "100": {
        start: {
          line: 601,
          column: 22
        },
        end: {
          line: 601,
          column: 27
        }
      },
      "101": {
        start: {
          line: 602,
          column: 22
        },
        end: {
          line: 602,
          column: 56
        }
      },
      "102": {
        start: {
          line: 603,
          column: 22
        },
        end: {
          line: 603,
          column: 27
        }
      },
      "103": {
        start: {
          line: 604,
          column: 23
        },
        end: {
          line: 604,
          column: 24
        }
      },
      "104": {
        start: {
          line: 604,
          column: 33
        },
        end: {
          line: 604,
          column: 34
        }
      },
      "105": {
        start: {
          line: 604,
          column: 43
        },
        end: {
          line: 604,
          column: 44
        }
      },
      "106": {
        start: {
          line: 605,
          column: 12
        },
        end: {
          line: 629,
          column: 13
        }
      },
      "107": {
        start: {
          line: 606,
          column: 16
        },
        end: {
          line: 606,
          column: 25
        }
      },
      "108": {
        start: {
          line: 607,
          column: 16
        },
        end: {
          line: 607,
          column: 25
        }
      },
      "109": {
        start: {
          line: 608,
          column: 16
        },
        end: {
          line: 608,
          column: 25
        }
      },
      "110": {
        start: {
          line: 609,
          column: 19
        },
        end: {
          line: 629,
          column: 13
        }
      },
      "111": {
        start: {
          line: 610,
          column: 16
        },
        end: {
          line: 610,
          column: 25
        }
      },
      "112": {
        start: {
          line: 611,
          column: 16
        },
        end: {
          line: 611,
          column: 25
        }
      },
      "113": {
        start: {
          line: 612,
          column: 16
        },
        end: {
          line: 612,
          column: 25
        }
      },
      "114": {
        start: {
          line: 613,
          column: 19
        },
        end: {
          line: 629,
          column: 13
        }
      },
      "115": {
        start: {
          line: 614,
          column: 16
        },
        end: {
          line: 614,
          column: 25
        }
      },
      "116": {
        start: {
          line: 615,
          column: 16
        },
        end: {
          line: 615,
          column: 25
        }
      },
      "117": {
        start: {
          line: 616,
          column: 16
        },
        end: {
          line: 616,
          column: 25
        }
      },
      "118": {
        start: {
          line: 617,
          column: 19
        },
        end: {
          line: 629,
          column: 13
        }
      },
      "119": {
        start: {
          line: 618,
          column: 16
        },
        end: {
          line: 618,
          column: 25
        }
      },
      "120": {
        start: {
          line: 619,
          column: 16
        },
        end: {
          line: 619,
          column: 25
        }
      },
      "121": {
        start: {
          line: 620,
          column: 16
        },
        end: {
          line: 620,
          column: 25
        }
      },
      "122": {
        start: {
          line: 621,
          column: 19
        },
        end: {
          line: 629,
          column: 13
        }
      },
      "123": {
        start: {
          line: 622,
          column: 16
        },
        end: {
          line: 622,
          column: 25
        }
      },
      "124": {
        start: {
          line: 623,
          column: 16
        },
        end: {
          line: 623,
          column: 25
        }
      },
      "125": {
        start: {
          line: 624,
          column: 16
        },
        end: {
          line: 624,
          column: 25
        }
      },
      "126": {
        start: {
          line: 625,
          column: 19
        },
        end: {
          line: 629,
          column: 13
        }
      },
      "127": {
        start: {
          line: 626,
          column: 16
        },
        end: {
          line: 626,
          column: 25
        }
      },
      "128": {
        start: {
          line: 627,
          column: 16
        },
        end: {
          line: 627,
          column: 25
        }
      },
      "129": {
        start: {
          line: 628,
          column: 16
        },
        end: {
          line: 628,
          column: 25
        }
      },
      "130": {
        start: {
          line: 630,
          column: 12
        },
        end: {
          line: 630,
          column: 51
        }
      },
      "131": {
        start: {
          line: 631,
          column: 12
        },
        end: {
          line: 631,
          column: 55
        }
      },
      "132": {
        start: {
          line: 632,
          column: 12
        },
        end: {
          line: 632,
          column: 55
        }
      },
      "133": {
        start: {
          line: 634,
          column: 8
        },
        end: {
          line: 634,
          column: 25
        }
      },
      "134": {
        start: {
          line: 639,
          column: 21
        },
        end: {
          line: 639,
          column: 35
        }
      },
      "135": {
        start: {
          line: 640,
          column: 22
        },
        end: {
          line: 640,
          column: 37
        }
      },
      "136": {
        start: {
          line: 641,
          column: 23
        },
        end: {
          line: 641,
          column: 39
        }
      },
      "137": {
        start: {
          line: 642,
          column: 24
        },
        end: {
          line: 642,
          column: 51
        }
      },
      "138": {
        start: {
          line: 643,
          column: 27
        },
        end: {
          line: 643,
          column: 53
        }
      },
      "139": {
        start: {
          line: 644,
          column: 21
        },
        end: {
          line: 644,
          column: 47
        }
      },
      "140": {
        start: {
          line: 645,
          column: 8
        },
        end: {
          line: 669,
          column: 9
        }
      },
      "141": {
        start: {
          line: 645,
          column: 20
        },
        end: {
          line: 645,
          column: 21
        }
      },
      "142": {
        start: {
          line: 646,
          column: 12
        },
        end: {
          line: 668,
          column: 13
        }
      },
      "143": {
        start: {
          line: 646,
          column: 24
        },
        end: {
          line: 646,
          column: 25
        }
      },
      "144": {
        start: {
          line: 647,
          column: 24
        },
        end: {
          line: 647,
          column: 25
        }
      },
      "145": {
        start: {
          line: 647,
          column: 31
        },
        end: {
          line: 647,
          column: 32
        }
      },
      "146": {
        start: {
          line: 647,
          column: 38
        },
        end: {
          line: 647,
          column: 39
        }
      },
      "147": {
        start: {
          line: 647,
          column: 45
        },
        end: {
          line: 647,
          column: 46
        }
      },
      "148": {
        start: {
          line: 648,
          column: 28
        },
        end: {
          line: 648,
          column: 29
        }
      },
      "149": {
        start: {
          line: 649,
          column: 16
        },
        end: {
          line: 662,
          column: 17
        }
      },
      "150": {
        start: {
          line: 649,
          column: 29
        },
        end: {
          line: 649,
          column: 34
        }
      },
      "151": {
        start: {
          line: 650,
          column: 20
        },
        end: {
          line: 661,
          column: 21
        }
      },
      "152": {
        start: {
          line: 650,
          column: 33
        },
        end: {
          line: 650,
          column: 38
        }
      },
      "153": {
        start: {
          line: 651,
          column: 35
        },
        end: {
          line: 651,
          column: 41
        }
      },
      "154": {
        start: {
          line: 652,
          column: 35
        },
        end: {
          line: 652,
          column: 41
        }
      },
      "155": {
        start: {
          line: 653,
          column: 24
        },
        end: {
          line: 660,
          column: 25
        }
      },
      "156": {
        start: {
          line: 654,
          column: 40
        },
        end: {
          line: 654,
          column: 61
        }
      },
      "157": {
        start: {
          line: 655,
          column: 28
        },
        end: {
          line: 655,
          column: 43
        }
      },
      "158": {
        start: {
          line: 656,
          column: 28
        },
        end: {
          line: 656,
          column: 47
        }
      },
      "159": {
        start: {
          line: 657,
          column: 28
        },
        end: {
          line: 657,
          column: 47
        }
      },
      "160": {
        start: {
          line: 658,
          column: 28
        },
        end: {
          line: 658,
          column: 47
        }
      },
      "161": {
        start: {
          line: 659,
          column: 28
        },
        end: {
          line: 659,
          column: 36
        }
      },
      "162": {
        start: {
          line: 663,
          column: 28
        },
        end: {
          line: 663,
          column: 47
        }
      },
      "163": {
        start: {
          line: 664,
          column: 16
        },
        end: {
          line: 664,
          column: 41
        }
      },
      "164": {
        start: {
          line: 665,
          column: 16
        },
        end: {
          line: 665,
          column: 45
        }
      },
      "165": {
        start: {
          line: 666,
          column: 16
        },
        end: {
          line: 666,
          column: 45
        }
      },
      "166": {
        start: {
          line: 667,
          column: 16
        },
        end: {
          line: 667,
          column: 45
        }
      },
      "167": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 670,
          column: 53
        }
      },
      "168": {
        start: {
          line: 675,
          column: 21
        },
        end: {
          line: 675,
          column: 35
        }
      },
      "169": {
        start: {
          line: 676,
          column: 22
        },
        end: {
          line: 676,
          column: 37
        }
      },
      "170": {
        start: {
          line: 677,
          column: 23
        },
        end: {
          line: 677,
          column: 39
        }
      },
      "171": {
        start: {
          line: 678,
          column: 24
        },
        end: {
          line: 678,
          column: 51
        }
      },
      "172": {
        start: {
          line: 679,
          column: 23
        },
        end: {
          line: 689,
          column: 9
        }
      },
      "173": {
        start: {
          line: 690,
          column: 8
        },
        end: {
          line: 704,
          column: 9
        }
      },
      "174": {
        start: {
          line: 690,
          column: 20
        },
        end: {
          line: 690,
          column: 21
        }
      },
      "175": {
        start: {
          line: 691,
          column: 12
        },
        end: {
          line: 703,
          column: 13
        }
      },
      "176": {
        start: {
          line: 691,
          column: 24
        },
        end: {
          line: 691,
          column: 25
        }
      },
      "177": {
        start: {
          line: 692,
          column: 16
        },
        end: {
          line: 702,
          column: 17
        }
      },
      "178": {
        start: {
          line: 692,
          column: 28
        },
        end: {
          line: 692,
          column: 29
        }
      },
      "179": {
        start: {
          line: 693,
          column: 30
        },
        end: {
          line: 693,
          column: 31
        }
      },
      "180": {
        start: {
          line: 694,
          column: 20
        },
        end: {
          line: 700,
          column: 21
        }
      },
      "181": {
        start: {
          line: 694,
          column: 33
        },
        end: {
          line: 694,
          column: 35
        }
      },
      "182": {
        start: {
          line: 695,
          column: 24
        },
        end: {
          line: 699,
          column: 25
        }
      },
      "183": {
        start: {
          line: 695,
          column: 37
        },
        end: {
          line: 695,
          column: 39
        }
      },
      "184": {
        start: {
          line: 696,
          column: 40
        },
        end: {
          line: 696,
          column: 77
        }
      },
      "185": {
        start: {
          line: 697,
          column: 46
        },
        end: {
          line: 697,
          column: 69
        }
      },
      "186": {
        start: {
          line: 698,
          column: 28
        },
        end: {
          line: 698,
          column: 65
        }
      },
      "187": {
        start: {
          line: 701,
          column: 20
        },
        end: {
          line: 701,
          column: 87
        }
      },
      "188": {
        start: {
          line: 705,
          column: 8
        },
        end: {
          line: 705,
          column: 53
        }
      },
      "189": {
        start: {
          line: 710,
          column: 21
        },
        end: {
          line: 710,
          column: 35
        }
      },
      "190": {
        start: {
          line: 711,
          column: 26
        },
        end: {
          line: 711,
          column: 38
        }
      },
      "191": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 722,
          column: 9
        }
      },
      "192": {
        start: {
          line: 712,
          column: 20
        },
        end: {
          line: 712,
          column: 21
        }
      },
      "193": {
        start: {
          line: 713,
          column: 22
        },
        end: {
          line: 713,
          column: 29
        }
      },
      "194": {
        start: {
          line: 714,
          column: 22
        },
        end: {
          line: 714,
          column: 33
        }
      },
      "195": {
        start: {
          line: 715,
          column: 22
        },
        end: {
          line: 715,
          column: 33
        }
      },
      "196": {
        start: {
          line: 716,
          column: 27
        },
        end: {
          line: 716,
          column: 60
        }
      },
      "197": {
        start: {
          line: 717,
          column: 27
        },
        end: {
          line: 717,
          column: 60
        }
      },
      "198": {
        start: {
          line: 718,
          column: 27
        },
        end: {
          line: 718,
          column: 60
        }
      },
      "199": {
        start: {
          line: 719,
          column: 12
        },
        end: {
          line: 719,
          column: 66
        }
      },
      "200": {
        start: {
          line: 720,
          column: 12
        },
        end: {
          line: 720,
          column: 70
        }
      },
      "201": {
        start: {
          line: 721,
          column: 12
        },
        end: {
          line: 721,
          column: 70
        }
      },
      "202": {
        start: {
          line: 723,
          column: 8
        },
        end: {
          line: 723,
          column: 25
        }
      },
      "203": {
        start: {
          line: 728,
          column: 21
        },
        end: {
          line: 728,
          column: 35
        }
      },
      "204": {
        start: {
          line: 729,
          column: 8
        },
        end: {
          line: 750,
          column: 9
        }
      },
      "205": {
        start: {
          line: 729,
          column: 20
        },
        end: {
          line: 729,
          column: 21
        }
      },
      "206": {
        start: {
          line: 730,
          column: 22
        },
        end: {
          line: 730,
          column: 29
        }
      },
      "207": {
        start: {
          line: 731,
          column: 22
        },
        end: {
          line: 731,
          column: 33
        }
      },
      "208": {
        start: {
          line: 732,
          column: 22
        },
        end: {
          line: 732,
          column: 33
        }
      },
      "209": {
        start: {
          line: 734,
          column: 12
        },
        end: {
          line: 746,
          column: 13
        }
      },
      "210": {
        start: {
          line: 736,
          column: 20
        },
        end: {
          line: 736,
          column: 43
        }
      },
      "211": {
        start: {
          line: 737,
          column: 20
        },
        end: {
          line: 737,
          column: 26
        }
      },
      "212": {
        start: {
          line: 739,
          column: 20
        },
        end: {
          line: 739,
          column: 61
        }
      },
      "213": {
        start: {
          line: 740,
          column: 20
        },
        end: {
          line: 740,
          column: 26
        }
      },
      "214": {
        start: {
          line: 742,
          column: 20
        },
        end: {
          line: 742,
          column: 71
        }
      },
      "215": {
        start: {
          line: 743,
          column: 20
        },
        end: {
          line: 743,
          column: 26
        }
      },
      "216": {
        start: {
          line: 745,
          column: 20
        },
        end: {
          line: 745,
          column: 61
        }
      },
      "217": {
        start: {
          line: 747,
          column: 12
        },
        end: {
          line: 747,
          column: 27
        }
      },
      "218": {
        start: {
          line: 748,
          column: 12
        },
        end: {
          line: 748,
          column: 31
        }
      },
      "219": {
        start: {
          line: 749,
          column: 12
        },
        end: {
          line: 749,
          column: 31
        }
      },
      "220": {
        start: {
          line: 751,
          column: 8
        },
        end: {
          line: 751,
          column: 25
        }
      },
      "221": {
        start: {
          line: 756,
          column: 21
        },
        end: {
          line: 756,
          column: 35
        }
      },
      "222": {
        start: {
          line: 757,
          column: 8
        },
        end: {
          line: 761,
          column: 9
        }
      },
      "223": {
        start: {
          line: 757,
          column: 20
        },
        end: {
          line: 757,
          column: 21
        }
      },
      "224": {
        start: {
          line: 758,
          column: 12
        },
        end: {
          line: 758,
          column: 36
        }
      },
      "225": {
        start: {
          line: 759,
          column: 12
        },
        end: {
          line: 759,
          column: 44
        }
      },
      "226": {
        start: {
          line: 760,
          column: 12
        },
        end: {
          line: 760,
          column: 44
        }
      },
      "227": {
        start: {
          line: 762,
          column: 8
        },
        end: {
          line: 762,
          column: 25
        }
      },
      "228": {
        start: {
          line: 767,
          column: 21
        },
        end: {
          line: 767,
          column: 35
        }
      },
      "229": {
        start: {
          line: 768,
          column: 22
        },
        end: {
          line: 768,
          column: 37
        }
      },
      "230": {
        start: {
          line: 769,
          column: 23
        },
        end: {
          line: 769,
          column: 39
        }
      },
      "231": {
        start: {
          line: 770,
          column: 24
        },
        end: {
          line: 770,
          column: 33
        }
      },
      "232": {
        start: {
          line: 771,
          column: 24
        },
        end: {
          line: 771,
          column: 34
        }
      },
      "233": {
        start: {
          line: 772,
          column: 26
        },
        end: {
          line: 772,
          column: 74
        }
      },
      "234": {
        start: {
          line: 773,
          column: 31
        },
        end: {
          line: 773,
          column: 55
        }
      },
      "235": {
        start: {
          line: 774,
          column: 33
        },
        end: {
          line: 774,
          column: 47
        }
      },
      "236": {
        start: {
          line: 775,
          column: 8
        },
        end: {
          line: 784,
          column: 9
        }
      },
      "237": {
        start: {
          line: 775,
          column: 20
        },
        end: {
          line: 775,
          column: 21
        }
      },
      "238": {
        start: {
          line: 776,
          column: 12
        },
        end: {
          line: 783,
          column: 13
        }
      },
      "239": {
        start: {
          line: 776,
          column: 24
        },
        end: {
          line: 776,
          column: 25
        }
      },
      "240": {
        start: {
          line: 777,
          column: 33
        },
        end: {
          line: 777,
          column: 83
        }
      },
      "241": {
        start: {
          line: 778,
          column: 39
        },
        end: {
          line: 778,
          column: 100
        }
      },
      "242": {
        start: {
          line: 779,
          column: 28
        },
        end: {
          line: 779,
          column: 47
        }
      },
      "243": {
        start: {
          line: 780,
          column: 16
        },
        end: {
          line: 780,
          column: 44
        }
      },
      "244": {
        start: {
          line: 781,
          column: 16
        },
        end: {
          line: 781,
          column: 48
        }
      },
      "245": {
        start: {
          line: 782,
          column: 16
        },
        end: {
          line: 782,
          column: 48
        }
      },
      "246": {
        start: {
          line: 785,
          column: 8
        },
        end: {
          line: 785,
          column: 25
        }
      },
      "247": {
        start: {
          line: 790,
          column: 26
        },
        end: {
          line: 790,
          column: 43
        }
      },
      "248": {
        start: {
          line: 791,
          column: 8
        },
        end: {
          line: 868,
          column: 9
        }
      },
      "249": {
        start: {
          line: 792,
          column: 30
        },
        end: {
          line: 792,
          column: 70
        }
      },
      "250": {
        start: {
          line: 793,
          column: 12
        },
        end: {
          line: 799,
          column: 13
        }
      },
      "251": {
        start: {
          line: 794,
          column: 16
        },
        end: {
          line: 798,
          column: 18
        }
      },
      "252": {
        start: {
          line: 801,
          column: 34
        },
        end: {
          line: 801,
          column: 121
        }
      },
      "253": {
        start: {
          line: 802,
          column: 12
        },
        end: {
          line: 808,
          column: 13
        }
      },
      "254": {
        start: {
          line: 803,
          column: 16
        },
        end: {
          line: 807,
          column: 18
        }
      },
      "255": {
        start: {
          line: 811,
          column: 27
        },
        end: {
          line: 811,
          column: 50
        }
      },
      "256": {
        start: {
          line: 812,
          column: 12
        },
        end: {
          line: 846,
          column: 13
        }
      },
      "257": {
        start: {
          line: 814,
          column: 20
        },
        end: {
          line: 814,
          column: 92
        }
      },
      "258": {
        start: {
          line: 815,
          column: 20
        },
        end: {
          line: 815,
          column: 26
        }
      },
      "259": {
        start: {
          line: 817,
          column: 20
        },
        end: {
          line: 817,
          column: 90
        }
      },
      "260": {
        start: {
          line: 818,
          column: 20
        },
        end: {
          line: 818,
          column: 26
        }
      },
      "261": {
        start: {
          line: 820,
          column: 20
        },
        end: {
          line: 820,
          column: 92
        }
      },
      "262": {
        start: {
          line: 821,
          column: 20
        },
        end: {
          line: 821,
          column: 26
        }
      },
      "263": {
        start: {
          line: 823,
          column: 20
        },
        end: {
          line: 823,
          column: 89
        }
      },
      "264": {
        start: {
          line: 824,
          column: 20
        },
        end: {
          line: 824,
          column: 26
        }
      },
      "265": {
        start: {
          line: 826,
          column: 20
        },
        end: {
          line: 826,
          column: 86
        }
      },
      "266": {
        start: {
          line: 827,
          column: 20
        },
        end: {
          line: 827,
          column: 26
        }
      },
      "267": {
        start: {
          line: 829,
          column: 20
        },
        end: {
          line: 829,
          column: 90
        }
      },
      "268": {
        start: {
          line: 830,
          column: 20
        },
        end: {
          line: 830,
          column: 26
        }
      },
      "269": {
        start: {
          line: 832,
          column: 20
        },
        end: {
          line: 832,
          column: 89
        }
      },
      "270": {
        start: {
          line: 833,
          column: 20
        },
        end: {
          line: 833,
          column: 26
        }
      },
      "271": {
        start: {
          line: 835,
          column: 20
        },
        end: {
          line: 835,
          column: 101
        }
      },
      "272": {
        start: {
          line: 836,
          column: 20
        },
        end: {
          line: 836,
          column: 26
        }
      },
      "273": {
        start: {
          line: 838,
          column: 20
        },
        end: {
          line: 838,
          column: 61
        }
      },
      "274": {
        start: {
          line: 839,
          column: 20
        },
        end: {
          line: 839,
          column: 26
        }
      },
      "275": {
        start: {
          line: 841,
          column: 20
        },
        end: {
          line: 841,
          column: 119
        }
      },
      "276": {
        start: {
          line: 842,
          column: 20
        },
        end: {
          line: 842,
          column: 26
        }
      },
      "277": {
        start: {
          line: 844,
          column: 20
        },
        end: {
          line: 844,
          column: 43
        }
      },
      "278": {
        start: {
          line: 845,
          column: 20
        },
        end: {
          line: 845,
          column: 85
        }
      },
      "279": {
        start: {
          line: 848,
          column: 12
        },
        end: {
          line: 856,
          column: 13
        }
      },
      "280": {
        start: {
          line: 849,
          column: 37
        },
        end: {
          line: 849,
          column: 57
        }
      },
      "281": {
        start: {
          line: 850,
          column: 37
        },
        end: {
          line: 850,
          column: 48
        }
      },
      "282": {
        start: {
          line: 851,
          column: 16
        },
        end: {
          line: 855,
          column: 17
        }
      },
      "283": {
        start: {
          line: 851,
          column: 28
        },
        end: {
          line: 851,
          column: 29
        }
      },
      "284": {
        start: {
          line: 852,
          column: 20
        },
        end: {
          line: 852,
          column: 115
        }
      },
      "285": {
        start: {
          line: 853,
          column: 20
        },
        end: {
          line: 853,
          column: 131
        }
      },
      "286": {
        start: {
          line: 854,
          column: 20
        },
        end: {
          line: 854,
          column: 131
        }
      },
      "287": {
        start: {
          line: 857,
          column: 12
        },
        end: {
          line: 861,
          column: 14
        }
      },
      "288": {
        start: {
          line: 863,
          column: 12
        },
        end: {
          line: 867,
          column: 14
        }
      },
      "289": {
        start: {
          line: 873,
          column: 26
        },
        end: {
          line: 873,
          column: 43
        }
      },
      "290": {
        start: {
          line: 874,
          column: 8
        },
        end: {
          line: 880,
          column: 9
        }
      },
      "291": {
        start: {
          line: 875,
          column: 12
        },
        end: {
          line: 879,
          column: 14
        }
      },
      "292": {
        start: {
          line: 881,
          column: 8
        },
        end: {
          line: 908,
          column: 9
        }
      },
      "293": {
        start: {
          line: 882,
          column: 30
        },
        end: {
          line: 882,
          column: 156
        }
      },
      "294": {
        start: {
          line: 884,
          column: 35
        },
        end: {
          line: 884,
          column: 65
        }
      },
      "295": {
        start: {
          line: 884,
          column: 55
        },
        end: {
          line: 884,
          column: 64
        }
      },
      "296": {
        start: {
          line: 885,
          column: 12
        },
        end: {
          line: 895,
          column: 13
        }
      },
      "297": {
        start: {
          line: 886,
          column: 31
        },
        end: {
          line: 886,
          column: 68
        }
      },
      "298": {
        start: {
          line: 887,
          column: 16
        },
        end: {
          line: 893,
          column: 17
        }
      },
      "299": {
        start: {
          line: 888,
          column: 20
        },
        end: {
          line: 892,
          column: 22
        }
      },
      "300": {
        start: {
          line: 894,
          column: 16
        },
        end: {
          line: 894,
          column: 56
        }
      },
      "301": {
        start: {
          line: 896,
          column: 12
        },
        end: {
          line: 896,
          column: 48
        }
      },
      "302": {
        start: {
          line: 897,
          column: 12
        },
        end: {
          line: 901,
          column: 14
        }
      },
      "303": {
        start: {
          line: 903,
          column: 12
        },
        end: {
          line: 907,
          column: 14
        }
      },
      "304": {
        start: {
          line: 913,
          column: 8
        },
        end: {
          line: 915,
          column: 9
        }
      },
      "305": {
        start: {
          line: 914,
          column: 12
        },
        end: {
          line: 914,
          column: 163
        }
      },
      "306": {
        start: {
          line: 920,
          column: 8
        },
        end: {
          line: 920,
          column: 37
        }
      },
      "307": {
        start: {
          line: 925,
          column: 8
        },
        end: {
          line: 927,
          column: 9
        }
      },
      "308": {
        start: {
          line: 926,
          column: 12
        },
        end: {
          line: 926,
          column: 63
        }
      },
      "309": {
        start: {
          line: 932,
          column: 8
        },
        end: {
          line: 932,
          column: 33
        }
      },
      "310": {
        start: {
          line: 933,
          column: 8
        },
        end: {
          line: 933,
          column: 40
        }
      },
      "311": {
        start: {
          line: 939,
          column: 8
        },
        end: {
          line: 979,
          column: 11
        }
      },
      "312": {
        start: {
          line: 981,
          column: 8
        },
        end: {
          line: 1005,
          column: 11
        }
      },
      "313": {
        start: {
          line: 1007,
          column: 8
        },
        end: {
          line: 1037,
          column: 11
        }
      },
      "314": {
        start: {
          line: 1042,
          column: 8
        },
        end: {
          line: 1054,
          column: 10
        }
      },
      "315": {
        start: {
          line: 1059,
          column: 8
        },
        end: {
          line: 1059,
          column: 44
        }
      },
      "316": {
        start: {
          line: 1064,
          column: 8
        },
        end: {
          line: 1064,
          column: 36
        }
      },
      "317": {
        start: {
          line: 1069,
          column: 8
        },
        end: {
          line: 1069,
          column: 49
        }
      },
      "318": {
        start: {
          line: 1074,
          column: 8
        },
        end: {
          line: 1074,
          column: 83
        }
      },
      "319": {
        start: {
          line: 1074,
          column: 53
        },
        end: {
          line: 1074,
          column: 81
        }
      },
      "320": {
        start: {
          line: 1079,
          column: 27
        },
        end: {
          line: 1079,
          column: 46
        }
      },
      "321": {
        start: {
          line: 1080,
          column: 8
        },
        end: {
          line: 1080,
          column: 225
        }
      },
      "322": {
        start: {
          line: 1080,
          column: 53
        },
        end: {
          line: 1080,
          column: 223
        }
      },
      "323": {
        start: {
          line: 1080,
          column: 184
        },
        end: {
          line: 1080,
          column: 222
        }
      },
      "324": {
        start: {
          line: 1085,
          column: 8
        },
        end: {
          line: 1085,
          column: 39
        }
      },
      "325": {
        start: {
          line: 1089,
          column: 4
        },
        end: {
          line: 1089,
          column: 48
        }
      },
      "326": {
        start: {
          line: 1092,
          column: 4
        },
        end: {
          line: 1092,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 16
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 31
          },
          end: {
            line: 14,
            column: 32
          }
        },
        loc: {
          start: {
            line: 14,
            column: 42
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 26
          }
        },
        loc: {
          start: {
            line: 17,
            column: 36
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 17
          }
        },
        loc: {
          start: {
            line: 20,
            column: 27
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 24
          }
        },
        loc: {
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 32
          }
        },
        loc: {
          start: {
            line: 26,
            column: 42
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 30
          }
        },
        loc: {
          start: {
            line: 29,
            column: 40
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 34,
            column: 32
          }
        },
        loc: {
          start: {
            line: 34,
            column: 52
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 34
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 523,
            column: 4
          },
          end: {
            line: 523,
            column: 5
          }
        },
        loc: {
          start: {
            line: 523,
            column: 30
          },
          end: {
            line: 528,
            column: 5
          }
        },
        line: 523
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 531,
            column: 6
          },
          end: {
            line: 531,
            column: 7
          }
        },
        loc: {
          start: {
            line: 531,
            column: 34
          },
          end: {
            line: 534,
            column: 5
          }
        },
        line: 531
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 537,
            column: 6
          },
          end: {
            line: 537,
            column: 7
          }
        },
        loc: {
          start: {
            line: 537,
            column: 41
          },
          end: {
            line: 546,
            column: 5
          }
        },
        line: 537
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 549,
            column: 6
          },
          end: {
            line: 549,
            column: 7
          }
        },
        loc: {
          start: {
            line: 549,
            column: 39
          },
          end: {
            line: 558,
            column: 5
          }
        },
        line: 549
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 561,
            column: 6
          },
          end: {
            line: 561,
            column: 7
          }
        },
        loc: {
          start: {
            line: 561,
            column: 41
          },
          end: {
            line: 576,
            column: 5
          }
        },
        line: 561
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 579,
            column: 6
          },
          end: {
            line: 579,
            column: 7
          }
        },
        loc: {
          start: {
            line: 579,
            column: 38
          },
          end: {
            line: 635,
            column: 5
          }
        },
        line: 579
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 638,
            column: 6
          },
          end: {
            line: 638,
            column: 7
          }
        },
        loc: {
          start: {
            line: 638,
            column: 35
          },
          end: {
            line: 671,
            column: 5
          }
        },
        line: 638
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 674,
            column: 6
          },
          end: {
            line: 674,
            column: 7
          }
        },
        loc: {
          start: {
            line: 674,
            column: 38
          },
          end: {
            line: 706,
            column: 5
          }
        },
        line: 674
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 709,
            column: 6
          },
          end: {
            line: 709,
            column: 7
          }
        },
        loc: {
          start: {
            line: 709,
            column: 36
          },
          end: {
            line: 724,
            column: 5
          }
        },
        line: 709
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 727,
            column: 6
          },
          end: {
            line: 727,
            column: 7
          }
        },
        loc: {
          start: {
            line: 727,
            column: 40
          },
          end: {
            line: 752,
            column: 5
          }
        },
        line: 727
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 755,
            column: 6
          },
          end: {
            line: 755,
            column: 7
          }
        },
        loc: {
          start: {
            line: 755,
            column: 29
          },
          end: {
            line: 763,
            column: 5
          }
        },
        line: 755
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 766,
            column: 6
          },
          end: {
            line: 766,
            column: 7
          }
        },
        loc: {
          start: {
            line: 766,
            column: 47
          },
          end: {
            line: 786,
            column: 5
          }
        },
        line: 766
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 789,
            column: 6
          },
          end: {
            line: 789,
            column: 7
          }
        },
        loc: {
          start: {
            line: 789,
            column: 49
          },
          end: {
            line: 869,
            column: 5
          }
        },
        line: 789
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 872,
            column: 6
          },
          end: {
            line: 872,
            column: 7
          }
        },
        loc: {
          start: {
            line: 872,
            column: 32
          },
          end: {
            line: 909,
            column: 5
          }
        },
        line: 872
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 884,
            column: 50
          },
          end: {
            line: 884,
            column: 51
          }
        },
        loc: {
          start: {
            line: 884,
            column: 55
          },
          end: {
            line: 884,
            column: 64
          }
        },
        line: 884
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 912,
            column: 6
          },
          end: {
            line: 912,
            column: 7
          }
        },
        loc: {
          start: {
            line: 912,
            column: 24
          },
          end: {
            line: 916,
            column: 5
          }
        },
        line: 912
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 919,
            column: 6
          },
          end: {
            line: 919,
            column: 7
          }
        },
        loc: {
          start: {
            line: 919,
            column: 28
          },
          end: {
            line: 921,
            column: 5
          }
        },
        line: 919
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 924,
            column: 6
          },
          end: {
            line: 924,
            column: 7
          }
        },
        loc: {
          start: {
            line: 924,
            column: 23
          },
          end: {
            line: 928,
            column: 5
          }
        },
        line: 924
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 931,
            column: 4
          },
          end: {
            line: 931,
            column: 5
          }
        },
        loc: {
          start: {
            line: 931,
            column: 17
          },
          end: {
            line: 934,
            column: 5
          }
        },
        line: 931
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 937,
            column: 6
          },
          end: {
            line: 937,
            column: 7
          }
        },
        loc: {
          start: {
            line: 937,
            column: 33
          },
          end: {
            line: 1038,
            column: 5
          }
        },
        line: 937
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 1041,
            column: 6
          },
          end: {
            line: 1041,
            column: 7
          }
        },
        loc: {
          start: {
            line: 1041,
            column: 39
          },
          end: {
            line: 1055,
            column: 5
          }
        },
        line: 1041
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 1058,
            column: 6
          },
          end: {
            line: 1058,
            column: 7
          }
        },
        loc: {
          start: {
            line: 1058,
            column: 24
          },
          end: {
            line: 1060,
            column: 5
          }
        },
        line: 1058
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 1063,
            column: 6
          },
          end: {
            line: 1063,
            column: 7
          }
        },
        loc: {
          start: {
            line: 1063,
            column: 20
          },
          end: {
            line: 1065,
            column: 5
          }
        },
        line: 1063
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 1068,
            column: 6
          },
          end: {
            line: 1068,
            column: 7
          }
        },
        loc: {
          start: {
            line: 1068,
            column: 22
          },
          end: {
            line: 1070,
            column: 5
          }
        },
        line: 1068
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 1073,
            column: 6
          },
          end: {
            line: 1073,
            column: 7
          }
        },
        loc: {
          start: {
            line: 1073,
            column: 37
          },
          end: {
            line: 1075,
            column: 5
          }
        },
        line: 1073
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 1074,
            column: 43
          },
          end: {
            line: 1074,
            column: 44
          }
        },
        loc: {
          start: {
            line: 1074,
            column: 53
          },
          end: {
            line: 1074,
            column: 81
          }
        },
        line: 1074
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 1078,
            column: 6
          },
          end: {
            line: 1078,
            column: 7
          }
        },
        loc: {
          start: {
            line: 1078,
            column: 27
          },
          end: {
            line: 1081,
            column: 5
          }
        },
        line: 1078
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 1080,
            column: 43
          },
          end: {
            line: 1080,
            column: 44
          }
        },
        loc: {
          start: {
            line: 1080,
            column: 53
          },
          end: {
            line: 1080,
            column: 223
          }
        },
        line: 1080
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 1080,
            column: 177
          },
          end: {
            line: 1080,
            column: 178
          }
        },
        loc: {
          start: {
            line: 1080,
            column: 184
          },
          end: {
            line: 1080,
            column: 222
          }
        },
        line: 1080
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 1084,
            column: 6
          },
          end: {
            line: 1084,
            column: 7
          }
        },
        loc: {
          start: {
            line: 1084,
            column: 23
          },
          end: {
            line: 1086,
            column: 5
          }
        },
        line: 1084
      },
      "38": {
        name: "createImageFilterEngine",
        decl: {
          start: {
            line: 1088,
            column: 9
          },
          end: {
            line: 1088,
            column: 32
          }
        },
        loc: {
          start: {
            line: 1088,
            column: 48
          },
          end: {
            line: 1090,
            column: 1
          }
        },
        line: 1088
      },
      "39": {
        name: "createFilterPresetLibrary",
        decl: {
          start: {
            line: 1091,
            column: 9
          },
          end: {
            line: 1091,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1091,
            column: 37
          },
          end: {
            line: 1093,
            column: 1
          }
        },
        line: 1091
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 595,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 595,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 591
      },
      "1": {
        loc: {
          start: {
            line: 592,
            column: 16
          },
          end: {
            line: 594,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 592,
            column: 16
          },
          end: {
            line: 594,
            column: 45
          }
        }, {
          start: {
            line: 593,
            column: 21
          },
          end: {
            line: 594,
            column: 45
          }
        }],
        line: 592
      },
      "2": {
        loc: {
          start: {
            line: 593,
            column: 21
          },
          end: {
            line: 594,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 593,
            column: 21
          },
          end: {
            line: 594,
            column: 45
          }
        }, {
          start: {
            line: 594,
            column: 21
          },
          end: {
            line: 594,
            column: 45
          }
        }],
        line: 593
      },
      "3": {
        loc: {
          start: {
            line: 597,
            column: 12
          },
          end: {
            line: 597,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 597,
            column: 12
          },
          end: {
            line: 597,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 597
      },
      "4": {
        loc: {
          start: {
            line: 598,
            column: 22
          },
          end: {
            line: 598,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 598,
            column: 34
          },
          end: {
            line: 598,
            column: 35
          }
        }, {
          start: {
            line: 598,
            column: 38
          },
          end: {
            line: 598,
            column: 49
          }
        }],
        line: 598
      },
      "5": {
        loc: {
          start: {
            line: 605,
            column: 12
          },
          end: {
            line: 629,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 605,
            column: 12
          },
          end: {
            line: 629,
            column: 13
          }
        }, {
          start: {
            line: 609,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        }],
        line: 605
      },
      "6": {
        loc: {
          start: {
            line: 605,
            column: 16
          },
          end: {
            line: 605,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 605,
            column: 16
          },
          end: {
            line: 605,
            column: 22
          }
        }, {
          start: {
            line: 605,
            column: 26
          },
          end: {
            line: 605,
            column: 32
          }
        }],
        line: 605
      },
      "7": {
        loc: {
          start: {
            line: 609,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 609,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        }, {
          start: {
            line: 613,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        }],
        line: 609
      },
      "8": {
        loc: {
          start: {
            line: 609,
            column: 23
          },
          end: {
            line: 609,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 609,
            column: 23
          },
          end: {
            line: 609,
            column: 30
          }
        }, {
          start: {
            line: 609,
            column: 34
          },
          end: {
            line: 609,
            column: 41
          }
        }],
        line: 609
      },
      "9": {
        loc: {
          start: {
            line: 613,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 613,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        }, {
          start: {
            line: 617,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        }],
        line: 613
      },
      "10": {
        loc: {
          start: {
            line: 613,
            column: 23
          },
          end: {
            line: 613,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 613,
            column: 23
          },
          end: {
            line: 613,
            column: 31
          }
        }, {
          start: {
            line: 613,
            column: 35
          },
          end: {
            line: 613,
            column: 42
          }
        }],
        line: 613
      },
      "11": {
        loc: {
          start: {
            line: 617,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 617,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        }, {
          start: {
            line: 621,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        }],
        line: 617
      },
      "12": {
        loc: {
          start: {
            line: 617,
            column: 23
          },
          end: {
            line: 617,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 617,
            column: 23
          },
          end: {
            line: 617,
            column: 31
          }
        }, {
          start: {
            line: 617,
            column: 35
          },
          end: {
            line: 617,
            column: 42
          }
        }],
        line: 617
      },
      "13": {
        loc: {
          start: {
            line: 621,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 621,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        }, {
          start: {
            line: 625,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        }],
        line: 621
      },
      "14": {
        loc: {
          start: {
            line: 621,
            column: 23
          },
          end: {
            line: 621,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 621,
            column: 23
          },
          end: {
            line: 621,
            column: 31
          }
        }, {
          start: {
            line: 621,
            column: 35
          },
          end: {
            line: 621,
            column: 42
          }
        }],
        line: 621
      },
      "15": {
        loc: {
          start: {
            line: 625,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 625,
            column: 19
          },
          end: {
            line: 629,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 625
      },
      "16": {
        loc: {
          start: {
            line: 625,
            column: 23
          },
          end: {
            line: 625,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 625,
            column: 23
          },
          end: {
            line: 625,
            column: 31
          }
        }, {
          start: {
            line: 625,
            column: 35
          },
          end: {
            line: 625,
            column: 42
          }
        }],
        line: 625
      },
      "17": {
        loc: {
          start: {
            line: 653,
            column: 24
          },
          end: {
            line: 660,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 653,
            column: 24
          },
          end: {
            line: 660,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 653
      },
      "18": {
        loc: {
          start: {
            line: 653,
            column: 28
          },
          end: {
            line: 653,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 653,
            column: 28
          },
          end: {
            line: 653,
            column: 35
          }
        }, {
          start: {
            line: 653,
            column: 39
          },
          end: {
            line: 653,
            column: 49
          }
        }, {
          start: {
            line: 653,
            column: 53
          },
          end: {
            line: 653,
            column: 60
          }
        }, {
          start: {
            line: 653,
            column: 64
          },
          end: {
            line: 653,
            column: 75
          }
        }],
        line: 653
      },
      "19": {
        loc: {
          start: {
            line: 734,
            column: 12
          },
          end: {
            line: 746,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 735,
            column: 16
          },
          end: {
            line: 737,
            column: 26
          }
        }, {
          start: {
            line: 738,
            column: 16
          },
          end: {
            line: 740,
            column: 26
          }
        }, {
          start: {
            line: 741,
            column: 16
          },
          end: {
            line: 743,
            column: 26
          }
        }, {
          start: {
            line: 744,
            column: 16
          },
          end: {
            line: 745,
            column: 61
          }
        }],
        line: 734
      },
      "20": {
        loc: {
          start: {
            line: 792,
            column: 30
          },
          end: {
            line: 792,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 792,
            column: 30
          },
          end: {
            line: 792,
            column: 45
          }
        }, {
          start: {
            line: 792,
            column: 49
          },
          end: {
            line: 792,
            column: 70
          }
        }],
        line: 792
      },
      "21": {
        loc: {
          start: {
            line: 793,
            column: 12
          },
          end: {
            line: 799,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 793,
            column: 12
          },
          end: {
            line: 799,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 793
      },
      "22": {
        loc: {
          start: {
            line: 802,
            column: 12
          },
          end: {
            line: 808,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 802,
            column: 12
          },
          end: {
            line: 808,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 802
      },
      "23": {
        loc: {
          start: {
            line: 812,
            column: 12
          },
          end: {
            line: 846,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 813,
            column: 16
          },
          end: {
            line: 815,
            column: 26
          }
        }, {
          start: {
            line: 816,
            column: 16
          },
          end: {
            line: 818,
            column: 26
          }
        }, {
          start: {
            line: 819,
            column: 16
          },
          end: {
            line: 821,
            column: 26
          }
        }, {
          start: {
            line: 822,
            column: 16
          },
          end: {
            line: 824,
            column: 26
          }
        }, {
          start: {
            line: 825,
            column: 16
          },
          end: {
            line: 827,
            column: 26
          }
        }, {
          start: {
            line: 828,
            column: 16
          },
          end: {
            line: 830,
            column: 26
          }
        }, {
          start: {
            line: 831,
            column: 16
          },
          end: {
            line: 833,
            column: 26
          }
        }, {
          start: {
            line: 834,
            column: 16
          },
          end: {
            line: 836,
            column: 26
          }
        }, {
          start: {
            line: 837,
            column: 16
          },
          end: {
            line: 839,
            column: 26
          }
        }, {
          start: {
            line: 840,
            column: 16
          },
          end: {
            line: 842,
            column: 26
          }
        }, {
          start: {
            line: 843,
            column: 16
          },
          end: {
            line: 845,
            column: 85
          }
        }],
        line: 812
      },
      "24": {
        loc: {
          start: {
            line: 814,
            column: 65
          },
          end: {
            line: 814,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 814,
            column: 65
          },
          end: {
            line: 814,
            column: 85
          }
        }, {
          start: {
            line: 814,
            column: 89
          },
          end: {
            line: 814,
            column: 90
          }
        }],
        line: 814
      },
      "25": {
        loc: {
          start: {
            line: 817,
            column: 63
          },
          end: {
            line: 817,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 817,
            column: 63
          },
          end: {
            line: 817,
            column: 83
          }
        }, {
          start: {
            line: 817,
            column: 87
          },
          end: {
            line: 817,
            column: 88
          }
        }],
        line: 817
      },
      "26": {
        loc: {
          start: {
            line: 820,
            column: 65
          },
          end: {
            line: 820,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 820,
            column: 65
          },
          end: {
            line: 820,
            column: 85
          }
        }, {
          start: {
            line: 820,
            column: 89
          },
          end: {
            line: 820,
            column: 90
          }
        }],
        line: 820
      },
      "27": {
        loc: {
          start: {
            line: 823,
            column: 63
          },
          end: {
            line: 823,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 823,
            column: 63
          },
          end: {
            line: 823,
            column: 82
          }
        }, {
          start: {
            line: 823,
            column: 86
          },
          end: {
            line: 823,
            column: 87
          }
        }],
        line: 823
      },
      "28": {
        loc: {
          start: {
            line: 826,
            column: 59
          },
          end: {
            line: 826,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 826,
            column: 59
          },
          end: {
            line: 826,
            column: 79
          }
        }, {
          start: {
            line: 826,
            column: 83
          },
          end: {
            line: 826,
            column: 84
          }
        }],
        line: 826
      },
      "29": {
        loc: {
          start: {
            line: 829,
            column: 62
          },
          end: {
            line: 829,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 829,
            column: 62
          },
          end: {
            line: 829,
            column: 82
          }
        }, {
          start: {
            line: 829,
            column: 86
          },
          end: {
            line: 829,
            column: 88
          }
        }],
        line: 829
      },
      "30": {
        loc: {
          start: {
            line: 832,
            column: 60
          },
          end: {
            line: 832,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 832,
            column: 60
          },
          end: {
            line: 832,
            column: 80
          }
        }, {
          start: {
            line: 832,
            column: 84
          },
          end: {
            line: 832,
            column: 87
          }
        }],
        line: 832
      },
      "31": {
        loc: {
          start: {
            line: 835,
            column: 64
          },
          end: {
            line: 835,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 835,
            column: 64
          },
          end: {
            line: 835,
            column: 84
          }
        }, {
          start: {
            line: 835,
            column: 88
          },
          end: {
            line: 835,
            column: 99
          }
        }],
        line: 835
      },
      "32": {
        loc: {
          start: {
            line: 841,
            column: 63
          },
          end: {
            line: 841,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 841,
            column: 63
          },
          end: {
            line: 841,
            column: 85
          }
        }, {
          start: {
            line: 841,
            column: 89
          },
          end: {
            line: 841,
            column: 91
          }
        }],
        line: 841
      },
      "33": {
        loc: {
          start: {
            line: 841,
            column: 93
          },
          end: {
            line: 841,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 841,
            column: 93
          },
          end: {
            line: 841,
            column: 111
          }
        }, {
          start: {
            line: 841,
            column: 115
          },
          end: {
            line: 841,
            column: 117
          }
        }],
        line: 841
      },
      "34": {
        loc: {
          start: {
            line: 848,
            column: 12
          },
          end: {
            line: 856,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 848,
            column: 12
          },
          end: {
            line: 856,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 848
      },
      "35": {
        loc: {
          start: {
            line: 848,
            column: 16
          },
          end: {
            line: 848,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 848,
            column: 16
          },
          end: {
            line: 848,
            column: 40
          }
        }, {
          start: {
            line: 848,
            column: 44
          },
          end: {
            line: 848,
            column: 59
          }
        }],
        line: 848
      },
      "36": {
        loc: {
          start: {
            line: 865,
            column: 23
          },
          end: {
            line: 865,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 865,
            column: 48
          },
          end: {
            line: 865,
            column: 61
          }
        }, {
          start: {
            line: 865,
            column: 64
          },
          end: {
            line: 865,
            column: 79
          }
        }],
        line: 865
      },
      "37": {
        loc: {
          start: {
            line: 874,
            column: 8
          },
          end: {
            line: 880,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 874,
            column: 8
          },
          end: {
            line: 880,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 874
      },
      "38": {
        loc: {
          start: {
            line: 887,
            column: 16
          },
          end: {
            line: 893,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 887,
            column: 16
          },
          end: {
            line: 893,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 887
      },
      "39": {
        loc: {
          start: {
            line: 887,
            column: 20
          },
          end: {
            line: 887,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 887,
            column: 20
          },
          end: {
            line: 887,
            column: 35
          }
        }, {
          start: {
            line: 887,
            column: 39
          },
          end: {
            line: 887,
            column: 65
          }
        }],
        line: 887
      },
      "40": {
        loc: {
          start: {
            line: 905,
            column: 23
          },
          end: {
            line: 905,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 905,
            column: 48
          },
          end: {
            line: 905,
            column: 61
          }
        }, {
          start: {
            line: 905,
            column: 64
          },
          end: {
            line: 905,
            column: 79
          }
        }],
        line: 905
      },
      "41": {
        loc: {
          start: {
            line: 913,
            column: 8
          },
          end: {
            line: 915,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 913,
            column: 8
          },
          end: {
            line: 915,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 913
      },
      "42": {
        loc: {
          start: {
            line: 925,
            column: 8
          },
          end: {
            line: 927,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 925,
            column: 8
          },
          end: {
            line: 927,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 925
      },
      "43": {
        loc: {
          start: {
            line: 1080,
            column: 53
          },
          end: {
            line: 1080,
            column: 223
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1080,
            column: 53
          },
          end: {
            line: 1080,
            column: 99
          }
        }, {
          start: {
            line: 1080,
            column: 103
          },
          end: {
            line: 1080,
            column: 156
          }
        }, {
          start: {
            line: 1080,
            column: 160
          },
          end: {
            line: 1080,
            column: 223
          }
        }],
        line: 1080
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0, 0],
      "19": [0, 0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/imageFilters.ts"],
      sourcesContent: ["// Image Filter System for Canvas\n// Comprehensive image filtering with real-time preview and filter composition\n\nimport type { ManagedCanvas } from '../providers/CanvasProvider';\nimport { BlendMode } from './canvasUtils';\n\n/**\n * Filter types available in the system\n */\nexport enum FilterType {\n  // Basic filters\n  Brightness = 'brightness',\n  Contrast = 'contrast',\n  Saturation = 'saturation',\n  Hue = 'hue',\n  Gamma = 'gamma',\n  Exposure = 'exposure',\n  \n  // Blur and sharpening\n  Blur = 'blur',\n  GaussianBlur = 'gaussianBlur',\n  MotionBlur = 'motionBlur',\n  Sharpen = 'sharpen',\n  UnsharpMask = 'unsharpMask',\n  \n  // Noise and texture\n  Noise = 'noise',\n  Grain = 'grain',\n  \n  // Color effects\n  Sepia = 'sepia',\n  Grayscale = 'grayscale',\n  Invert = 'invert',\n  Posterize = 'posterize',\n  Solarize = 'solarize',\n  \n  // Artistic filters\n  Emboss = 'emboss',\n  EdgeDetection = 'edgeDetection',\n  Vintage = 'vintage',\n  Vignette = 'vignette',\n  \n  // Color correction\n  WhiteBalance = 'whiteBalance',\n  ColorBalance = 'colorBalance',\n  Levels = 'levels',\n  Curves = 'curves',\n  \n  // Special effects\n  Pixelate = 'pixelate',\n  Halftone = 'halftone',\n  CrossHatch = 'crossHatch',\n  OilPainting = 'oilPainting'\n}\n\n/**\n * Filter parameter configuration\n */\nexport interface FilterParameter {\n  name: string;\n  type: 'number' | 'range' | 'boolean' | 'color' | 'select';\n  value: any;\n  min?: number;\n  max?: number;\n  step?: number;\n  options?: string[];\n  description?: string;\n}\n\n/**\n * Filter configuration\n */\nexport interface FilterConfig {\n  id: string;\n  type: FilterType;\n  name: string;\n  description: string;\n  parameters: Record<string, FilterParameter>;\n  enabled: boolean;\n  opacity: number;\n  blendMode: BlendMode;\n}\n\n/**\n * Filter preset configuration\n */\nexport interface FilterPreset {\n  id: string;\n  name: string;\n  description: string;\n  thumbnail?: string;\n  filters: FilterConfig[];\n  category: string;\n  tags: string[];\n}\n\n/**\n * Filter application result\n */\nexport interface FilterResult {\n  success: boolean;\n  processedImageData?: ImageData;\n  error?: string;\n  processingTime: number;\n}\n\n/**\n * Filter preview configuration\n */\nexport interface FilterPreviewConfig {\n  enabled: boolean;\n  updateInterval: number;\n  maxPreviewSize: { width: number; height: number };\n  quality: number;\n}\n\n/**\n * Default filter parameters for each filter type\n */\nexport const DEFAULT_FILTER_PARAMETERS: Record<FilterType, Record<string, FilterParameter>> = {\n  [FilterType.Brightness]: {\n    amount: { name: 'Brightness', type: 'range', value: 0, min: -100, max: 100, step: 1, description: 'Adjust image brightness' }\n  },\n  [FilterType.Contrast]: {\n    amount: { name: 'Contrast', type: 'range', value: 0, min: -100, max: 100, step: 1, description: 'Adjust image contrast' }\n  },\n  [FilterType.Saturation]: {\n    amount: { name: 'Saturation', type: 'range', value: 0, min: -100, max: 100, step: 1, description: 'Adjust color saturation' }\n  },\n  [FilterType.Hue]: {\n    angle: { name: 'Hue Shift', type: 'range', value: 0, min: -180, max: 180, step: 1, description: 'Shift hue in degrees' }\n  },\n  [FilterType.Gamma]: {\n    gamma: { name: 'Gamma', type: 'range', value: 1, min: 0.1, max: 3, step: 0.1, description: 'Gamma correction' }\n  },\n  [FilterType.Exposure]: {\n    stops: { name: 'Exposure', type: 'range', value: 0, min: -3, max: 3, step: 0.1, description: 'Exposure in stops' }\n  },\n  [FilterType.Blur]: {\n    radius: { name: 'Radius', type: 'range', value: 5, min: 0, max: 50, step: 1, description: 'Blur radius in pixels' }\n  },\n  [FilterType.GaussianBlur]: {\n    radius: { name: 'Radius', type: 'range', value: 5, min: 0, max: 50, step: 1, description: 'Gaussian blur radius' }\n  },\n  [FilterType.MotionBlur]: {\n    distance: { name: 'Distance', type: 'range', value: 10, min: 0, max: 100, step: 1, description: 'Motion blur distance' },\n    angle: { name: 'Angle', type: 'range', value: 0, min: 0, max: 360, step: 1, description: 'Motion blur angle' }\n  },\n  [FilterType.Sharpen]: {\n    amount: { name: 'Amount', type: 'range', value: 50, min: 0, max: 200, step: 1, description: 'Sharpening amount' }\n  },\n  [FilterType.UnsharpMask]: {\n    amount: { name: 'Amount', type: 'range', value: 100, min: 0, max: 500, step: 1, description: 'Unsharp mask amount' },\n    radius: { name: 'Radius', type: 'range', value: 1, min: 0.1, max: 10, step: 0.1, description: 'Unsharp mask radius' },\n    threshold: { name: 'Threshold', type: 'range', value: 3, min: 0, max: 255, step: 1, description: 'Unsharp mask threshold' }\n  },\n  [FilterType.Noise]: {\n    amount: { name: 'Amount', type: 'range', value: 25, min: 0, max: 100, step: 1, description: 'Noise amount' },\n    type: { name: 'Type', type: 'select', value: 'uniform', options: ['uniform', 'gaussian'], description: 'Noise type' }\n  },\n  [FilterType.Grain]: {\n    amount: { name: 'Amount', type: 'range', value: 25, min: 0, max: 100, step: 1, description: 'Grain amount' },\n    size: { name: 'Size', type: 'range', value: 1, min: 0.5, max: 5, step: 0.1, description: 'Grain size' }\n  },\n  [FilterType.Sepia]: {\n    amount: { name: 'Amount', type: 'range', value: 100, min: 0, max: 100, step: 1, description: 'Sepia effect amount' }\n  },\n  [FilterType.Grayscale]: {\n    method: { name: 'Method', type: 'select', value: 'luminance', options: ['average', 'luminance', 'desaturation'], description: 'Grayscale conversion method' }\n  },\n  [FilterType.Invert]: {},\n  [FilterType.Posterize]: {\n    levels: { name: 'Levels', type: 'range', value: 8, min: 2, max: 64, step: 1, description: 'Number of color levels' }\n  },\n  [FilterType.Solarize]: {\n    threshold: { name: 'Threshold', type: 'range', value: 128, min: 0, max: 255, step: 1, description: 'Solarization threshold' }\n  },\n  [FilterType.Emboss]: {\n    strength: { name: 'Strength', type: 'range', value: 1, min: 0.1, max: 5, step: 0.1, description: 'Emboss strength' }\n  },\n  [FilterType.EdgeDetection]: {\n    threshold: { name: 'Threshold', type: 'range', value: 50, min: 0, max: 255, step: 1, description: 'Edge detection threshold' }\n  },\n  [FilterType.Vintage]: {\n    warmth: { name: 'Warmth', type: 'range', value: 20, min: 0, max: 100, step: 1, description: 'Vintage warmth' },\n    vignette: { name: 'Vignette', type: 'range', value: 30, min: 0, max: 100, step: 1, description: 'Vignette strength' }\n  },\n  [FilterType.Vignette]: {\n    strength: { name: 'Strength', type: 'range', value: 50, min: 0, max: 100, step: 1, description: 'Vignette strength' },\n    size: { name: 'Size', type: 'range', value: 50, min: 10, max: 90, step: 1, description: 'Vignette size' }\n  },\n  [FilterType.WhiteBalance]: {\n    temperature: { name: 'Temperature', type: 'range', value: 0, min: -100, max: 100, step: 1, description: 'Color temperature' },\n    tint: { name: 'Tint', type: 'range', value: 0, min: -100, max: 100, step: 1, description: 'Green/Magenta tint' }\n  },\n  [FilterType.ColorBalance]: {\n    shadows: { name: 'Shadows', type: 'range', value: 0, min: -100, max: 100, step: 1, description: 'Shadow color balance' },\n    midtones: { name: 'Midtones', type: 'range', value: 0, min: -100, max: 100, step: 1, description: 'Midtone color balance' },\n    highlights: { name: 'Highlights', type: 'range', value: 0, min: -100, max: 100, step: 1, description: 'Highlight color balance' }\n  },\n  [FilterType.Levels]: {\n    inputBlack: { name: 'Input Black', type: 'range', value: 0, min: 0, max: 255, step: 1, description: 'Input black point' },\n    inputWhite: { name: 'Input White', type: 'range', value: 255, min: 0, max: 255, step: 1, description: 'Input white point' },\n    gamma: { name: 'Gamma', type: 'range', value: 1, min: 0.1, max: 3, step: 0.1, description: 'Gamma correction' }\n  },\n  [FilterType.Curves]: {\n    points: { name: 'Curve Points', type: 'number', value: '0,0;255,255', description: 'Curve control points' }\n  },\n  [FilterType.Pixelate]: {\n    size: { name: 'Pixel Size', type: 'range', value: 8, min: 2, max: 32, step: 1, description: 'Pixel block size' }\n  },\n  [FilterType.Halftone]: {\n    size: { name: 'Dot Size', type: 'range', value: 4, min: 1, max: 20, step: 1, description: 'Halftone dot size' },\n    angle: { name: 'Angle', type: 'range', value: 45, min: 0, max: 90, step: 1, description: 'Halftone angle' }\n  },\n  [FilterType.CrossHatch]: {\n    strength: { name: 'Strength', type: 'range', value: 50, min: 0, max: 100, step: 1, description: 'Cross-hatch strength' }\n  },\n  [FilterType.OilPainting]: {\n    radius: { name: 'Radius', type: 'range', value: 4, min: 1, max: 20, step: 1, description: 'Oil painting radius' },\n    intensity: { name: 'Intensity', type: 'range', value: 55, min: 1, max: 255, step: 1, description: 'Oil painting intensity' }\n  }\n};\n\n/**\n * Image filter engine class\n */\nexport class ImageFilterEngine {\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D;\n  private originalImageData: ImageData | null = null;\n  private currentImageData: ImageData | null = null;\n\n  constructor(managedCanvas: ManagedCanvas) {\n    this.canvas = managedCanvas.canvas;\n    this.ctx = managedCanvas.context;\n  }\n\n  /**\n   * Set original image data for filtering\n   */\n  setOriginalImage(imageData: ImageData): void {\n    this.originalImageData = new ImageData(\n      new Uint8ClampedArray(imageData.data),\n      imageData.width,\n      imageData.height\n    );\n    this.currentImageData = new ImageData(\n      new Uint8ClampedArray(imageData.data),\n      imageData.width,\n      imageData.height\n    );\n  }\n\n  /**\n   * Apply brightness filter\n   */\n  private applyBrightness(imageData: ImageData, amount: number): ImageData {\n    const data = imageData.data;\n    const brightnessFactor = amount / 100;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = Math.max(0, Math.min(255, data[i] + brightnessFactor * 255));     // R\n      data[i + 1] = Math.max(0, Math.min(255, data[i + 1] + brightnessFactor * 255)); // G\n      data[i + 2] = Math.max(0, Math.min(255, data[i + 2] + brightnessFactor * 255)); // B\n    }\n    \n    return imageData;\n  }\n\n  /**\n   * Apply contrast filter\n   */\n  private applyContrast(imageData: ImageData, amount: number): ImageData {\n    const data = imageData.data;\n    const contrastFactor = (amount + 100) / 100;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = Math.max(0, Math.min(255, ((data[i] - 128) * contrastFactor) + 128));     // R\n      data[i + 1] = Math.max(0, Math.min(255, ((data[i + 1] - 128) * contrastFactor) + 128)); // G\n      data[i + 2] = Math.max(0, Math.min(255, ((data[i + 2] - 128) * contrastFactor) + 128)); // B\n    }\n    \n    return imageData;\n  }\n\n  /**\n   * Apply saturation filter\n   */\n  private applySaturation(imageData: ImageData, amount: number): ImageData {\n    const data = imageData.data;\n    const saturationFactor = (amount + 100) / 100;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      \n      // Calculate grayscale value\n      const gray = 0.299 * r + 0.587 * g + 0.114 * b;\n      \n      // Apply saturation\n      data[i] = Math.max(0, Math.min(255, gray + saturationFactor * (r - gray)));\n      data[i + 1] = Math.max(0, Math.min(255, gray + saturationFactor * (g - gray)));\n      data[i + 2] = Math.max(0, Math.min(255, gray + saturationFactor * (b - gray)));\n    }\n    \n    return imageData;\n  }\n\n  /**\n   * Apply hue shift filter\n   */\n  private applyHueShift(imageData: ImageData, angle: number): ImageData {\n    const data = imageData.data;\n    const hueShift = (angle * Math.PI) / 180;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i] / 255;\n      const g = data[i + 1] / 255;\n      const b = data[i + 2] / 255;\n      \n      // Convert RGB to HSV\n      const max = Math.max(r, g, b);\n      const min = Math.min(r, g, b);\n      const delta = max - min;\n      \n      let h = 0;\n      if (delta !== 0) {\n        if (max === r) h = ((g - b) / delta) % 6;\n        else if (max === g) h = (b - r) / delta + 2;\n        else h = (r - g) / delta + 4;\n      }\n      h = (h * 60 + hueShift * 180 / Math.PI) % 360;\n      if (h < 0) h += 360;\n      \n      const s = max === 0 ? 0 : delta / max;\n      const v = max;\n      \n      // Convert HSV back to RGB\n      const c = v * s;\n      const x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n      const m = v - c;\n      \n      let rNew = 0, gNew = 0, bNew = 0;\n      if (h >= 0 && h < 60) { rNew = c; gNew = x; bNew = 0; }\n      else if (h >= 60 && h < 120) { rNew = x; gNew = c; bNew = 0; }\n      else if (h >= 120 && h < 180) { rNew = 0; gNew = c; bNew = x; }\n      else if (h >= 180 && h < 240) { rNew = 0; gNew = x; bNew = c; }\n      else if (h >= 240 && h < 300) { rNew = x; gNew = 0; bNew = c; }\n      else if (h >= 300 && h < 360) { rNew = c; gNew = 0; bNew = x; }\n      \n      data[i] = Math.round((rNew + m) * 255);\n      data[i + 1] = Math.round((gNew + m) * 255);\n      data[i + 2] = Math.round((bNew + m) * 255);\n    }\n    \n    return imageData;\n  }\n\n  /**\n   * Apply blur filter\n   */\n  private applyBlur(imageData: ImageData, radius: number): ImageData {\n    const data = imageData.data;\n    const width = imageData.width;\n    const height = imageData.height;\n    const newData = new Uint8ClampedArray(data);\n    \n    const kernelSize = Math.floor(radius) * 2 + 1;\n    const half = Math.floor(kernelSize / 2);\n    \n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        let r = 0, g = 0, b = 0, a = 0;\n        let count = 0;\n        \n        for (let ky = -half; ky <= half; ky++) {\n          for (let kx = -half; kx <= half; kx++) {\n            const nx = x + kx;\n            const ny = y + ky;\n            \n            if (nx >= 0 && nx < width && ny >= 0 && ny < height) {\n              const idx = (ny * width + nx) * 4;\n              r += data[idx];\n              g += data[idx + 1];\n              b += data[idx + 2];\n              a += data[idx + 3];\n              count++;\n            }\n          }\n        }\n        \n        const idx = (y * width + x) * 4;\n        newData[idx] = r / count;\n        newData[idx + 1] = g / count;\n        newData[idx + 2] = b / count;\n        newData[idx + 3] = a / count;\n      }\n    }\n    \n    return new ImageData(newData, width, height);\n  }\n\n  /**\n   * Apply sharpen filter\n   */\n  private applySharpen(imageData: ImageData, amount: number): ImageData {\n    const data = imageData.data;\n    const width = imageData.width;\n    const height = imageData.height;\n    const newData = new Uint8ClampedArray(data);\n    \n    const kernel = [\n      0, -amount / 100, 0,\n      -amount / 100, 1 + 4 * amount / 100, -amount / 100,\n      0, -amount / 100, 0\n    ];\n    \n    for (let y = 1; y < height - 1; y++) {\n      for (let x = 1; x < width - 1; x++) {\n        for (let c = 0; c < 3; c++) {\n          let sum = 0;\n          for (let ky = -1; ky <= 1; ky++) {\n            for (let kx = -1; kx <= 1; kx++) {\n              const idx = ((y + ky) * width + (x + kx)) * 4 + c;\n              const kernelIdx = (ky + 1) * 3 + (kx + 1);\n              sum += data[idx] * kernel[kernelIdx];\n            }\n          }\n          newData[(y * width + x) * 4 + c] = Math.max(0, Math.min(255, sum));\n        }\n      }\n    }\n    \n    return new ImageData(newData, width, height);\n  }\n\n  /**\n   * Apply sepia filter\n   */\n  private applySepia(imageData: ImageData, amount: number): ImageData {\n    const data = imageData.data;\n    const intensity = amount / 100;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      \n      const sepiaR = (r * 0.393 + g * 0.769 + b * 0.189);\n      const sepiaG = (r * 0.349 + g * 0.686 + b * 0.168);\n      const sepiaB = (r * 0.272 + g * 0.534 + b * 0.131);\n      \n      data[i] = Math.min(255, r + intensity * (sepiaR - r));\n      data[i + 1] = Math.min(255, g + intensity * (sepiaG - g));\n      data[i + 2] = Math.min(255, b + intensity * (sepiaB - b));\n    }\n    \n    return imageData;\n  }\n\n  /**\n   * Apply grayscale filter\n   */\n  private applyGrayscale(imageData: ImageData, method: string): ImageData {\n    const data = imageData.data;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      \n      let gray: number;\n      switch (method) {\n        case 'average':\n          gray = (r + g + b) / 3;\n          break;\n        case 'luminance':\n          gray = 0.299 * r + 0.587 * g + 0.114 * b;\n          break;\n        case 'desaturation':\n          gray = (Math.max(r, g, b) + Math.min(r, g, b)) / 2;\n          break;\n        default:\n          gray = 0.299 * r + 0.587 * g + 0.114 * b;\n      }\n      \n      data[i] = gray;\n      data[i + 1] = gray;\n      data[i + 2] = gray;\n    }\n    \n    return imageData;\n  }\n\n  /**\n   * Apply invert filter\n   */\n  private applyInvert(imageData: ImageData): ImageData {\n    const data = imageData.data;\n    \n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = 255 - data[i];         // R\n      data[i + 1] = 255 - data[i + 1]; // G\n      data[i + 2] = 255 - data[i + 2]; // B\n    }\n    \n    return imageData;\n  }\n\n  /**\n   * Apply vignette filter\n   */\n  private applyVignette(imageData: ImageData, strength: number, size: number): ImageData {\n    const data = imageData.data;\n    const width = imageData.width;\n    const height = imageData.height;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const maxRadius = Math.sqrt(centerX * centerX + centerY * centerY);\n    const vignetteRadius = maxRadius * (size / 100);\n    const vignetteStrength = strength / 100;\n    \n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const distance = Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2);\n        const vignetteFactor = Math.max(0, 1 - (distance / vignetteRadius) * vignetteStrength);\n        \n        const idx = (y * width + x) * 4;\n        data[idx] *= vignetteFactor;         // R\n        data[idx + 1] *= vignetteFactor;     // G\n        data[idx + 2] *= vignetteFactor;     // B\n      }\n    }\n    \n    return imageData;\n  }\n\n  /**\n   * Apply single filter to image data\n   */\n  applyFilter(filterConfig: FilterConfig, sourceImageData?: ImageData): FilterResult {\n    const startTime = performance.now();\n    \n    try {\n      const imageData = sourceImageData || this.currentImageData;\n      if (!imageData) {\n        return {\n          success: false,\n          error: 'No image data available',\n          processingTime: performance.now() - startTime\n        };\n      }\n\n      // Create a copy of the image data\n      const processedData = new ImageData(\n        new Uint8ClampedArray(imageData.data),\n        imageData.width,\n        imageData.height\n      );\n\n      if (!filterConfig.enabled) {\n        return {\n          success: true,\n          processedImageData: processedData,\n          processingTime: performance.now() - startTime\n        };\n      }\n\n      // Apply the specific filter based on type\n      let result: ImageData;\n      const params = filterConfig.parameters;\n\n      switch (filterConfig.type) {\n        case FilterType.Brightness:\n          result = this.applyBrightness(processedData, params.amount?.value || 0);\n          break;\n        case FilterType.Contrast:\n          result = this.applyContrast(processedData, params.amount?.value || 0);\n          break;\n        case FilterType.Saturation:\n          result = this.applySaturation(processedData, params.amount?.value || 0);\n          break;\n        case FilterType.Hue:\n          result = this.applyHueShift(processedData, params.angle?.value || 0);\n          break;\n        case FilterType.Blur:\n          result = this.applyBlur(processedData, params.radius?.value || 5);\n          break;\n        case FilterType.Sharpen:\n          result = this.applySharpen(processedData, params.amount?.value || 50);\n          break;\n        case FilterType.Sepia:\n          result = this.applySepia(processedData, params.amount?.value || 100);\n          break;\n        case FilterType.Grayscale:\n          result = this.applyGrayscale(processedData, params.method?.value || 'luminance');\n          break;\n        case FilterType.Invert:\n          result = this.applyInvert(processedData);\n          break;\n        case FilterType.Vignette:\n          result = this.applyVignette(processedData, params.strength?.value || 50, params.size?.value || 50);\n          break;\n        default:\n          result = processedData;\n          console.warn(`Filter type ${filterConfig.type} not implemented`);\n      }\n\n      // Apply opacity if less than 100%\n      if (filterConfig.opacity < 1 && sourceImageData) {\n        const originalData = sourceImageData.data;\n        const filteredData = result.data;\n        \n        for (let i = 0; i < originalData.length; i += 4) {\n          filteredData[i] = originalData[i] + filterConfig.opacity * (filteredData[i] - originalData[i]);\n          filteredData[i + 1] = originalData[i + 1] + filterConfig.opacity * (filteredData[i + 1] - originalData[i + 1]);\n          filteredData[i + 2] = originalData[i + 2] + filterConfig.opacity * (filteredData[i + 2] - originalData[i + 2]);\n        }\n      }\n\n      return {\n        success: true,\n        processedImageData: result,\n        processingTime: performance.now() - startTime\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        processingTime: performance.now() - startTime\n      };\n    }\n  }\n\n  /**\n   * Apply multiple filters in sequence\n   */\n  applyFilterChain(filters: FilterConfig[]): FilterResult {\n    const startTime = performance.now();\n    \n    if (!this.originalImageData) {\n      return {\n        success: false,\n        error: 'No original image data available',\n        processingTime: performance.now() - startTime\n      };\n    }\n\n    try {\n      let currentData = new ImageData(\n        new Uint8ClampedArray(this.originalImageData.data),\n        this.originalImageData.width,\n        this.originalImageData.height\n      );\n\n      // Sort filters by enabled status and apply only enabled filters\n      const enabledFilters = filters.filter(f => f.enabled);\n\n      for (const filter of enabledFilters) {\n        const result = this.applyFilter(filter, currentData);\n        if (!result.success || !result.processedImageData) {\n          return {\n            success: false,\n            error: `Failed to apply filter ${filter.name}: ${result.error}`,\n            processingTime: performance.now() - startTime\n          };\n        }\n        currentData = result.processedImageData;\n      }\n\n      this.currentImageData = currentData;\n\n      return {\n        success: true,\n        processedImageData: currentData,\n        processingTime: performance.now() - startTime\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n        processingTime: performance.now() - startTime\n      };\n    }\n  }\n\n  /**\n   * Reset to original image\n   */\n  resetToOriginal(): void {\n    if (this.originalImageData) {\n      this.currentImageData = new ImageData(\n        new Uint8ClampedArray(this.originalImageData.data),\n        this.originalImageData.width,\n        this.originalImageData.height\n      );\n    }\n  }\n\n  /**\n   * Get current processed image data\n   */\n  getCurrentImageData(): ImageData | null {\n    return this.currentImageData;\n  }\n\n  /**\n   * Render current image data to canvas\n   */\n  renderToCanvas(): void {\n    if (this.currentImageData) {\n      this.ctx.putImageData(this.currentImageData, 0, 0);\n    }\n  }\n}\n\n/**\n * Filter preset library\n */\nexport class FilterPresetLibrary {\n  private presets: Map<string, FilterPreset> = new Map();\n\n  constructor() {\n    this.initializeDefaultPresets();\n  }\n\n  /**\n   * Initialize default filter presets\n   */\n  private initializeDefaultPresets(): void {\n    // Vintage preset\n    this.addPreset({\n      id: 'vintage',\n      name: 'Vintage',\n      description: 'Classic vintage film look',\n      category: 'Retro',\n      tags: ['vintage', 'retro', 'film'],\n      filters: [\n        this.createFilterConfig(FilterType.Sepia, { amount: { ...DEFAULT_FILTER_PARAMETERS[FilterType.Sepia].amount, value: 30 } }),\n        this.createFilterConfig(FilterType.Contrast, { amount: { ...DEFAULT_FILTER_PARAMETERS[FilterType.Contrast].amount, value: -10 } }),\n        this.createFilterConfig(FilterType.Saturation, { amount: { ...DEFAULT_FILTER_PARAMETERS[FilterType.Saturation].amount, value: -20 } }),\n        this.createFilterConfig(FilterType.Vignette, { \n          strength: { ...DEFAULT_FILTER_PARAMETERS[FilterType.Vignette].strength, value: 40 },\n          size: { ...DEFAULT_FILTER_PARAMETERS[FilterType.Vignette].size, value: 60 }\n        })\n      ]\n    });\n\n    // Black and White preset\n    this.addPreset({\n      id: 'blackwhite',\n      name: 'Black & White',\n      description: 'Classic black and white with enhanced contrast',\n      category: 'Classic',\n      tags: ['bw', 'monochrome', 'classic'],\n      filters: [\n        this.createFilterConfig(FilterType.Grayscale, { method: { ...DEFAULT_FILTER_PARAMETERS[FilterType.Grayscale].method, value: 'luminance' } }),\n        this.createFilterConfig(FilterType.Contrast, { amount: { ...DEFAULT_FILTER_PARAMETERS[FilterType.Contrast].amount, value: 20 } })\n      ]\n    });\n\n    // Dramatic preset\n    this.addPreset({\n      id: 'dramatic',\n      name: 'Dramatic',\n      description: 'High contrast dramatic effect',\n      category: 'Artistic',\n      tags: ['dramatic', 'contrast', 'bold'],\n      filters: [\n        this.createFilterConfig(FilterType.Contrast, { amount: { ...DEFAULT_FILTER_PARAMETERS[FilterType.Contrast].amount, value: 40 } }),\n        this.createFilterConfig(FilterType.Saturation, { amount: { ...DEFAULT_FILTER_PARAMETERS[FilterType.Saturation].amount, value: 20 } }),\n        this.createFilterConfig(FilterType.Sharpen, { amount: { ...DEFAULT_FILTER_PARAMETERS[FilterType.Sharpen].amount, value: 30 } })\n      ]\n    });\n  }\n\n  /**\n   * Create filter configuration helper\n   */\n  private createFilterConfig(type: FilterType, params: Record<string, FilterParameter>): FilterConfig {\n    return {\n      id: `filter-${type}-${Date.now()}`,\n      type,\n      name: type.charAt(0).toUpperCase() + type.slice(1),\n      description: `${type} filter`,\n      parameters: { ...DEFAULT_FILTER_PARAMETERS[type], ...params },\n      enabled: true,\n      opacity: 1,\n      blendMode: BlendMode.Normal\n    };\n  }\n\n  /**\n   * Add preset to library\n   */\n  addPreset(preset: FilterPreset): void {\n    this.presets.set(preset.id, preset);\n  }\n\n  /**\n   * Get preset by ID\n   */\n  getPreset(id: string): FilterPreset | undefined {\n    return this.presets.get(id);\n  }\n\n  /**\n   * Get all presets\n   */\n  getAllPresets(): FilterPreset[] {\n    return Array.from(this.presets.values());\n  }\n\n  /**\n   * Get presets by category\n   */\n  getPresetsByCategory(category: string): FilterPreset[] {\n    return this.getAllPresets().filter(preset => preset.category === category);\n  }\n\n  /**\n   * Search presets by tags\n   */\n  searchPresets(query: string): FilterPreset[] {\n    const lowerQuery = query.toLowerCase();\n    return this.getAllPresets().filter(preset =>\n      preset.name.toLowerCase().includes(lowerQuery) ||\n      preset.description.toLowerCase().includes(lowerQuery) ||\n      preset.tags.some(tag => tag.toLowerCase().includes(lowerQuery))\n    );\n  }\n\n  /**\n   * Remove preset\n   */\n  removePreset(id: string): boolean {\n    return this.presets.delete(id);\n  }\n}\n\n/**\n * Factory function to create image filter engine\n */\nexport function createImageFilterEngine(managedCanvas: ManagedCanvas): ImageFilterEngine {\n  return new ImageFilterEngine(managedCanvas);\n}\n\n/**\n * Factory function to create filter preset library\n */\nexport function createFilterPresetLibrary(): FilterPresetLibrary {\n  return new FilterPresetLibrary();\n}"],
      names: ["DEFAULT_FILTER_PARAMETERS", "FilterPresetLibrary", "FilterType", "ImageFilterEngine", "createFilterPresetLibrary", "createImageFilterEngine", "amount", "name", "type", "value", "min", "max", "step", "description", "angle", "gamma", "stops", "radius", "distance", "threshold", "options", "size", "method", "levels", "strength", "warmth", "vignette", "temperature", "tint", "shadows", "midtones", "highlights", "inputBlack", "inputWhite", "points", "intensity", "constructor", "managedCanvas", "originalImageData", "currentImageData", "canvas", "ctx", "context", "setOriginalImage", "imageData", "ImageData", "Uint8ClampedArray", "data", "width", "height", "applyBrightness", "brightnessFactor", "i", "length", "Math", "applyContrast", "contrastFactor", "applySaturation", "saturationFactor", "r", "g", "b", "gray", "applyHueShift", "hueShift", "PI", "delta", "h", "s", "v", "c", "x", "abs", "m", "rNew", "gNew", "bNew", "round", "applyBlur", "newData", "kernelSize", "floor", "half", "y", "a", "count", "ky", "kx", "nx", "ny", "idx", "applySharpen", "kernel", "sum", "kernelIdx", "applySepia", "sepiaR", "sepiaG", "sepiaB", "applyGrayscale", "applyInvert", "applyVignette", "centerX", "centerY", "maxRadius", "sqrt", "vignetteRadius", "vignetteStrength", "vignetteFactor", "applyFilter", "filterConfig", "sourceImageData", "startTime", "performance", "now", "success", "error", "processingTime", "processedData", "enabled", "processedImageData", "result", "params", "parameters", "console", "warn", "opacity", "originalData", "filteredData", "Error", "message", "applyFilterChain", "filters", "currentData", "enabledFilters", "filter", "f", "resetToOriginal", "getCurrentImageData", "renderToCanvas", "putImageData", "presets", "Map", "initializeDefaultPresets", "addPreset", "id", "category", "tags", "createFilterConfig", "Date", "charAt", "toUpperCase", "slice", "blendMode", "BlendMode", "Normal", "preset", "set", "getPreset", "get", "getAllPresets", "Array", "from", "values", "getPresetsByCategory", "searchPresets", "query", "lowerQuery", "toLowerCase", "includes", "some", "tag", "removePreset", "delete"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9c08b59628e1a863678ab32aa4ef50aaf6d251e0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1q1qip72zw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1q1qip72zw();
cov_1q1qip72zw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1q1qip72zw().f[0]++;
  cov_1q1qip72zw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1q1qip72zw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1q1qip72zw().s[3]++;
_export(exports, {
  DEFAULT_FILTER_PARAMETERS: function () {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[1]++;
    cov_1q1qip72zw().s[4]++;
    return DEFAULT_FILTER_PARAMETERS;
  },
  FilterPresetLibrary: function () {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[2]++;
    cov_1q1qip72zw().s[5]++;
    return FilterPresetLibrary;
  },
  FilterType: function () {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[3]++;
    cov_1q1qip72zw().s[6]++;
    return FilterType;
  },
  ImageFilterEngine: function () {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[4]++;
    cov_1q1qip72zw().s[7]++;
    return ImageFilterEngine;
  },
  createFilterPresetLibrary: function () {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[5]++;
    cov_1q1qip72zw().s[8]++;
    return createFilterPresetLibrary;
  },
  createImageFilterEngine: function () {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[6]++;
    cov_1q1qip72zw().s[9]++;
    return createImageFilterEngine;
  }
});
const _canvasUtils =
/* istanbul ignore next */
(cov_1q1qip72zw().s[10]++, require("./canvasUtils"));
var FilterType =
/* istanbul ignore next */
(/*#__PURE__*/cov_1q1qip72zw().s[11]++, function (FilterType) {
  /* istanbul ignore next */
  cov_1q1qip72zw().f[7]++;
  cov_1q1qip72zw().s[12]++;
  // Basic filters
  FilterType["Brightness"] = "brightness";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[13]++;
  FilterType["Contrast"] = "contrast";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[14]++;
  FilterType["Saturation"] = "saturation";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[15]++;
  FilterType["Hue"] = "hue";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[16]++;
  FilterType["Gamma"] = "gamma";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[17]++;
  FilterType["Exposure"] = "exposure";
  // Blur and sharpening
  /* istanbul ignore next */
  cov_1q1qip72zw().s[18]++;
  FilterType["Blur"] = "blur";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[19]++;
  FilterType["GaussianBlur"] = "gaussianBlur";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[20]++;
  FilterType["MotionBlur"] = "motionBlur";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[21]++;
  FilterType["Sharpen"] = "sharpen";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[22]++;
  FilterType["UnsharpMask"] = "unsharpMask";
  // Noise and texture
  /* istanbul ignore next */
  cov_1q1qip72zw().s[23]++;
  FilterType["Noise"] = "noise";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[24]++;
  FilterType["Grain"] = "grain";
  // Color effects
  /* istanbul ignore next */
  cov_1q1qip72zw().s[25]++;
  FilterType["Sepia"] = "sepia";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[26]++;
  FilterType["Grayscale"] = "grayscale";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[27]++;
  FilterType["Invert"] = "invert";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[28]++;
  FilterType["Posterize"] = "posterize";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[29]++;
  FilterType["Solarize"] = "solarize";
  // Artistic filters
  /* istanbul ignore next */
  cov_1q1qip72zw().s[30]++;
  FilterType["Emboss"] = "emboss";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[31]++;
  FilterType["EdgeDetection"] = "edgeDetection";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[32]++;
  FilterType["Vintage"] = "vintage";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[33]++;
  FilterType["Vignette"] = "vignette";
  // Color correction
  /* istanbul ignore next */
  cov_1q1qip72zw().s[34]++;
  FilterType["WhiteBalance"] = "whiteBalance";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[35]++;
  FilterType["ColorBalance"] = "colorBalance";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[36]++;
  FilterType["Levels"] = "levels";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[37]++;
  FilterType["Curves"] = "curves";
  // Special effects
  /* istanbul ignore next */
  cov_1q1qip72zw().s[38]++;
  FilterType["Pixelate"] = "pixelate";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[39]++;
  FilterType["Halftone"] = "halftone";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[40]++;
  FilterType["CrossHatch"] = "crossHatch";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[41]++;
  FilterType["OilPainting"] = "oilPainting";
  /* istanbul ignore next */
  cov_1q1qip72zw().s[42]++;
  return FilterType;
}({}));
const DEFAULT_FILTER_PARAMETERS =
/* istanbul ignore next */
(cov_1q1qip72zw().s[43]++, {
  ["brightness"]: {
    amount: {
      name: 'Brightness',
      type: 'range',
      value: 0,
      min: -100,
      max: 100,
      step: 1,
      description: 'Adjust image brightness'
    }
  },
  ["contrast"]: {
    amount: {
      name: 'Contrast',
      type: 'range',
      value: 0,
      min: -100,
      max: 100,
      step: 1,
      description: 'Adjust image contrast'
    }
  },
  ["saturation"]: {
    amount: {
      name: 'Saturation',
      type: 'range',
      value: 0,
      min: -100,
      max: 100,
      step: 1,
      description: 'Adjust color saturation'
    }
  },
  ["hue"]: {
    angle: {
      name: 'Hue Shift',
      type: 'range',
      value: 0,
      min: -180,
      max: 180,
      step: 1,
      description: 'Shift hue in degrees'
    }
  },
  ["gamma"]: {
    gamma: {
      name: 'Gamma',
      type: 'range',
      value: 1,
      min: 0.1,
      max: 3,
      step: 0.1,
      description: 'Gamma correction'
    }
  },
  ["exposure"]: {
    stops: {
      name: 'Exposure',
      type: 'range',
      value: 0,
      min: -3,
      max: 3,
      step: 0.1,
      description: 'Exposure in stops'
    }
  },
  ["blur"]: {
    radius: {
      name: 'Radius',
      type: 'range',
      value: 5,
      min: 0,
      max: 50,
      step: 1,
      description: 'Blur radius in pixels'
    }
  },
  ["gaussianBlur"]: {
    radius: {
      name: 'Radius',
      type: 'range',
      value: 5,
      min: 0,
      max: 50,
      step: 1,
      description: 'Gaussian blur radius'
    }
  },
  ["motionBlur"]: {
    distance: {
      name: 'Distance',
      type: 'range',
      value: 10,
      min: 0,
      max: 100,
      step: 1,
      description: 'Motion blur distance'
    },
    angle: {
      name: 'Angle',
      type: 'range',
      value: 0,
      min: 0,
      max: 360,
      step: 1,
      description: 'Motion blur angle'
    }
  },
  ["sharpen"]: {
    amount: {
      name: 'Amount',
      type: 'range',
      value: 50,
      min: 0,
      max: 200,
      step: 1,
      description: 'Sharpening amount'
    }
  },
  ["unsharpMask"]: {
    amount: {
      name: 'Amount',
      type: 'range',
      value: 100,
      min: 0,
      max: 500,
      step: 1,
      description: 'Unsharp mask amount'
    },
    radius: {
      name: 'Radius',
      type: 'range',
      value: 1,
      min: 0.1,
      max: 10,
      step: 0.1,
      description: 'Unsharp mask radius'
    },
    threshold: {
      name: 'Threshold',
      type: 'range',
      value: 3,
      min: 0,
      max: 255,
      step: 1,
      description: 'Unsharp mask threshold'
    }
  },
  ["noise"]: {
    amount: {
      name: 'Amount',
      type: 'range',
      value: 25,
      min: 0,
      max: 100,
      step: 1,
      description: 'Noise amount'
    },
    type: {
      name: 'Type',
      type: 'select',
      value: 'uniform',
      options: ['uniform', 'gaussian'],
      description: 'Noise type'
    }
  },
  ["grain"]: {
    amount: {
      name: 'Amount',
      type: 'range',
      value: 25,
      min: 0,
      max: 100,
      step: 1,
      description: 'Grain amount'
    },
    size: {
      name: 'Size',
      type: 'range',
      value: 1,
      min: 0.5,
      max: 5,
      step: 0.1,
      description: 'Grain size'
    }
  },
  ["sepia"]: {
    amount: {
      name: 'Amount',
      type: 'range',
      value: 100,
      min: 0,
      max: 100,
      step: 1,
      description: 'Sepia effect amount'
    }
  },
  ["grayscale"]: {
    method: {
      name: 'Method',
      type: 'select',
      value: 'luminance',
      options: ['average', 'luminance', 'desaturation'],
      description: 'Grayscale conversion method'
    }
  },
  ["invert"]: {},
  ["posterize"]: {
    levels: {
      name: 'Levels',
      type: 'range',
      value: 8,
      min: 2,
      max: 64,
      step: 1,
      description: 'Number of color levels'
    }
  },
  ["solarize"]: {
    threshold: {
      name: 'Threshold',
      type: 'range',
      value: 128,
      min: 0,
      max: 255,
      step: 1,
      description: 'Solarization threshold'
    }
  },
  ["emboss"]: {
    strength: {
      name: 'Strength',
      type: 'range',
      value: 1,
      min: 0.1,
      max: 5,
      step: 0.1,
      description: 'Emboss strength'
    }
  },
  ["edgeDetection"]: {
    threshold: {
      name: 'Threshold',
      type: 'range',
      value: 50,
      min: 0,
      max: 255,
      step: 1,
      description: 'Edge detection threshold'
    }
  },
  ["vintage"]: {
    warmth: {
      name: 'Warmth',
      type: 'range',
      value: 20,
      min: 0,
      max: 100,
      step: 1,
      description: 'Vintage warmth'
    },
    vignette: {
      name: 'Vignette',
      type: 'range',
      value: 30,
      min: 0,
      max: 100,
      step: 1,
      description: 'Vignette strength'
    }
  },
  ["vignette"]: {
    strength: {
      name: 'Strength',
      type: 'range',
      value: 50,
      min: 0,
      max: 100,
      step: 1,
      description: 'Vignette strength'
    },
    size: {
      name: 'Size',
      type: 'range',
      value: 50,
      min: 10,
      max: 90,
      step: 1,
      description: 'Vignette size'
    }
  },
  ["whiteBalance"]: {
    temperature: {
      name: 'Temperature',
      type: 'range',
      value: 0,
      min: -100,
      max: 100,
      step: 1,
      description: 'Color temperature'
    },
    tint: {
      name: 'Tint',
      type: 'range',
      value: 0,
      min: -100,
      max: 100,
      step: 1,
      description: 'Green/Magenta tint'
    }
  },
  ["colorBalance"]: {
    shadows: {
      name: 'Shadows',
      type: 'range',
      value: 0,
      min: -100,
      max: 100,
      step: 1,
      description: 'Shadow color balance'
    },
    midtones: {
      name: 'Midtones',
      type: 'range',
      value: 0,
      min: -100,
      max: 100,
      step: 1,
      description: 'Midtone color balance'
    },
    highlights: {
      name: 'Highlights',
      type: 'range',
      value: 0,
      min: -100,
      max: 100,
      step: 1,
      description: 'Highlight color balance'
    }
  },
  ["levels"]: {
    inputBlack: {
      name: 'Input Black',
      type: 'range',
      value: 0,
      min: 0,
      max: 255,
      step: 1,
      description: 'Input black point'
    },
    inputWhite: {
      name: 'Input White',
      type: 'range',
      value: 255,
      min: 0,
      max: 255,
      step: 1,
      description: 'Input white point'
    },
    gamma: {
      name: 'Gamma',
      type: 'range',
      value: 1,
      min: 0.1,
      max: 3,
      step: 0.1,
      description: 'Gamma correction'
    }
  },
  ["curves"]: {
    points: {
      name: 'Curve Points',
      type: 'number',
      value: '0,0;255,255',
      description: 'Curve control points'
    }
  },
  ["pixelate"]: {
    size: {
      name: 'Pixel Size',
      type: 'range',
      value: 8,
      min: 2,
      max: 32,
      step: 1,
      description: 'Pixel block size'
    }
  },
  ["halftone"]: {
    size: {
      name: 'Dot Size',
      type: 'range',
      value: 4,
      min: 1,
      max: 20,
      step: 1,
      description: 'Halftone dot size'
    },
    angle: {
      name: 'Angle',
      type: 'range',
      value: 45,
      min: 0,
      max: 90,
      step: 1,
      description: 'Halftone angle'
    }
  },
  ["crossHatch"]: {
    strength: {
      name: 'Strength',
      type: 'range',
      value: 50,
      min: 0,
      max: 100,
      step: 1,
      description: 'Cross-hatch strength'
    }
  },
  ["oilPainting"]: {
    radius: {
      name: 'Radius',
      type: 'range',
      value: 4,
      min: 1,
      max: 20,
      step: 1,
      description: 'Oil painting radius'
    },
    intensity: {
      name: 'Intensity',
      type: 'range',
      value: 55,
      min: 1,
      max: 255,
      step: 1,
      description: 'Oil painting intensity'
    }
  }
});
class ImageFilterEngine {
  constructor(managedCanvas) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[8]++;
    cov_1q1qip72zw().s[44]++;
    this.originalImageData = null;
    /* istanbul ignore next */
    cov_1q1qip72zw().s[45]++;
    this.currentImageData = null;
    /* istanbul ignore next */
    cov_1q1qip72zw().s[46]++;
    this.canvas = managedCanvas.canvas;
    /* istanbul ignore next */
    cov_1q1qip72zw().s[47]++;
    this.ctx = managedCanvas.context;
  }
  /**
  * Set original image data for filtering
  */
  setOriginalImage(imageData) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[9]++;
    cov_1q1qip72zw().s[48]++;
    this.originalImageData = new ImageData(new Uint8ClampedArray(imageData.data), imageData.width, imageData.height);
    /* istanbul ignore next */
    cov_1q1qip72zw().s[49]++;
    this.currentImageData = new ImageData(new Uint8ClampedArray(imageData.data), imageData.width, imageData.height);
  }
  /**
  * Apply brightness filter
  */
  applyBrightness(imageData, amount) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[10]++;
    const data =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[50]++, imageData.data);
    const brightnessFactor =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[51]++, amount / 100);
    /* istanbul ignore next */
    cov_1q1qip72zw().s[52]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[53]++, 0); i < data.length; i += 4) {
      /* istanbul ignore next */
      cov_1q1qip72zw().s[54]++;
      data[i] = Math.max(0, Math.min(255, data[i] + brightnessFactor * 255)); // R
      /* istanbul ignore next */
      cov_1q1qip72zw().s[55]++;
      data[i + 1] = Math.max(0, Math.min(255, data[i + 1] + brightnessFactor * 255)); // G
      /* istanbul ignore next */
      cov_1q1qip72zw().s[56]++;
      data[i + 2] = Math.max(0, Math.min(255, data[i + 2] + brightnessFactor * 255)); // B
    }
    /* istanbul ignore next */
    cov_1q1qip72zw().s[57]++;
    return imageData;
  }
  /**
  * Apply contrast filter
  */
  applyContrast(imageData, amount) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[11]++;
    const data =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[58]++, imageData.data);
    const contrastFactor =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[59]++, (amount + 100) / 100);
    /* istanbul ignore next */
    cov_1q1qip72zw().s[60]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[61]++, 0); i < data.length; i += 4) {
      /* istanbul ignore next */
      cov_1q1qip72zw().s[62]++;
      data[i] = Math.max(0, Math.min(255, (data[i] - 128) * contrastFactor + 128)); // R
      /* istanbul ignore next */
      cov_1q1qip72zw().s[63]++;
      data[i + 1] = Math.max(0, Math.min(255, (data[i + 1] - 128) * contrastFactor + 128)); // G
      /* istanbul ignore next */
      cov_1q1qip72zw().s[64]++;
      data[i + 2] = Math.max(0, Math.min(255, (data[i + 2] - 128) * contrastFactor + 128)); // B
    }
    /* istanbul ignore next */
    cov_1q1qip72zw().s[65]++;
    return imageData;
  }
  /**
  * Apply saturation filter
  */
  applySaturation(imageData, amount) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[12]++;
    const data =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[66]++, imageData.data);
    const saturationFactor =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[67]++, (amount + 100) / 100);
    /* istanbul ignore next */
    cov_1q1qip72zw().s[68]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[69]++, 0); i < data.length; i += 4) {
      const r =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[70]++, data[i]);
      const g =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[71]++, data[i + 1]);
      const b =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[72]++, data[i + 2]);
      // Calculate grayscale value
      const gray =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[73]++, 0.299 * r + 0.587 * g + 0.114 * b);
      // Apply saturation
      /* istanbul ignore next */
      cov_1q1qip72zw().s[74]++;
      data[i] = Math.max(0, Math.min(255, gray + saturationFactor * (r - gray)));
      /* istanbul ignore next */
      cov_1q1qip72zw().s[75]++;
      data[i + 1] = Math.max(0, Math.min(255, gray + saturationFactor * (g - gray)));
      /* istanbul ignore next */
      cov_1q1qip72zw().s[76]++;
      data[i + 2] = Math.max(0, Math.min(255, gray + saturationFactor * (b - gray)));
    }
    /* istanbul ignore next */
    cov_1q1qip72zw().s[77]++;
    return imageData;
  }
  /**
  * Apply hue shift filter
  */
  applyHueShift(imageData, angle) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[13]++;
    const data =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[78]++, imageData.data);
    const hueShift =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[79]++, angle * Math.PI / 180);
    /* istanbul ignore next */
    cov_1q1qip72zw().s[80]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[81]++, 0); i < data.length; i += 4) {
      const r =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[82]++, data[i] / 255);
      const g =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[83]++, data[i + 1] / 255);
      const b =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[84]++, data[i + 2] / 255);
      // Convert RGB to HSV
      const max =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[85]++, Math.max(r, g, b));
      const min =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[86]++, Math.min(r, g, b));
      const delta =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[87]++, max - min);
      let h =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[88]++, 0);
      /* istanbul ignore next */
      cov_1q1qip72zw().s[89]++;
      if (delta !== 0) {
        /* istanbul ignore next */
        cov_1q1qip72zw().b[0][0]++;
        cov_1q1qip72zw().s[90]++;
        if (max === r) {
          /* istanbul ignore next */
          cov_1q1qip72zw().b[1][0]++;
          cov_1q1qip72zw().s[91]++;
          h = (g - b) / delta % 6;
        } else {
          /* istanbul ignore next */
          cov_1q1qip72zw().b[1][1]++;
          cov_1q1qip72zw().s[92]++;
          if (max === g) {
            /* istanbul ignore next */
            cov_1q1qip72zw().b[2][0]++;
            cov_1q1qip72zw().s[93]++;
            h = (b - r) / delta + 2;
          } else {
            /* istanbul ignore next */
            cov_1q1qip72zw().b[2][1]++;
            cov_1q1qip72zw().s[94]++;
            h = (r - g) / delta + 4;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_1q1qip72zw().b[0][1]++;
      }
      cov_1q1qip72zw().s[95]++;
      h = (h * 60 + hueShift * 180 / Math.PI) % 360;
      /* istanbul ignore next */
      cov_1q1qip72zw().s[96]++;
      if (h < 0) {
        /* istanbul ignore next */
        cov_1q1qip72zw().b[3][0]++;
        cov_1q1qip72zw().s[97]++;
        h += 360;
      } else
      /* istanbul ignore next */
      {
        cov_1q1qip72zw().b[3][1]++;
      }
      const s =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[98]++, max === 0 ?
      /* istanbul ignore next */
      (cov_1q1qip72zw().b[4][0]++, 0) :
      /* istanbul ignore next */
      (cov_1q1qip72zw().b[4][1]++, delta / max));
      const v =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[99]++, max);
      // Convert HSV back to RGB
      const c =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[100]++, v * s);
      const x =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[101]++, c * (1 - Math.abs(h / 60 % 2 - 1)));
      const m =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[102]++, v - c);
      let rNew =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[103]++, 0),
        gNew =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[104]++, 0),
        bNew =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[105]++, 0);
      /* istanbul ignore next */
      cov_1q1qip72zw().s[106]++;
      if (
      /* istanbul ignore next */
      (cov_1q1qip72zw().b[6][0]++, h >= 0) &&
      /* istanbul ignore next */
      (cov_1q1qip72zw().b[6][1]++, h < 60)) {
        /* istanbul ignore next */
        cov_1q1qip72zw().b[5][0]++;
        cov_1q1qip72zw().s[107]++;
        rNew = c;
        /* istanbul ignore next */
        cov_1q1qip72zw().s[108]++;
        gNew = x;
        /* istanbul ignore next */
        cov_1q1qip72zw().s[109]++;
        bNew = 0;
      } else {
        /* istanbul ignore next */
        cov_1q1qip72zw().b[5][1]++;
        cov_1q1qip72zw().s[110]++;
        if (
        /* istanbul ignore next */
        (cov_1q1qip72zw().b[8][0]++, h >= 60) &&
        /* istanbul ignore next */
        (cov_1q1qip72zw().b[8][1]++, h < 120)) {
          /* istanbul ignore next */
          cov_1q1qip72zw().b[7][0]++;
          cov_1q1qip72zw().s[111]++;
          rNew = x;
          /* istanbul ignore next */
          cov_1q1qip72zw().s[112]++;
          gNew = c;
          /* istanbul ignore next */
          cov_1q1qip72zw().s[113]++;
          bNew = 0;
        } else {
          /* istanbul ignore next */
          cov_1q1qip72zw().b[7][1]++;
          cov_1q1qip72zw().s[114]++;
          if (
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[10][0]++, h >= 120) &&
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[10][1]++, h < 180)) {
            /* istanbul ignore next */
            cov_1q1qip72zw().b[9][0]++;
            cov_1q1qip72zw().s[115]++;
            rNew = 0;
            /* istanbul ignore next */
            cov_1q1qip72zw().s[116]++;
            gNew = c;
            /* istanbul ignore next */
            cov_1q1qip72zw().s[117]++;
            bNew = x;
          } else {
            /* istanbul ignore next */
            cov_1q1qip72zw().b[9][1]++;
            cov_1q1qip72zw().s[118]++;
            if (
            /* istanbul ignore next */
            (cov_1q1qip72zw().b[12][0]++, h >= 180) &&
            /* istanbul ignore next */
            (cov_1q1qip72zw().b[12][1]++, h < 240)) {
              /* istanbul ignore next */
              cov_1q1qip72zw().b[11][0]++;
              cov_1q1qip72zw().s[119]++;
              rNew = 0;
              /* istanbul ignore next */
              cov_1q1qip72zw().s[120]++;
              gNew = x;
              /* istanbul ignore next */
              cov_1q1qip72zw().s[121]++;
              bNew = c;
            } else {
              /* istanbul ignore next */
              cov_1q1qip72zw().b[11][1]++;
              cov_1q1qip72zw().s[122]++;
              if (
              /* istanbul ignore next */
              (cov_1q1qip72zw().b[14][0]++, h >= 240) &&
              /* istanbul ignore next */
              (cov_1q1qip72zw().b[14][1]++, h < 300)) {
                /* istanbul ignore next */
                cov_1q1qip72zw().b[13][0]++;
                cov_1q1qip72zw().s[123]++;
                rNew = x;
                /* istanbul ignore next */
                cov_1q1qip72zw().s[124]++;
                gNew = 0;
                /* istanbul ignore next */
                cov_1q1qip72zw().s[125]++;
                bNew = c;
              } else {
                /* istanbul ignore next */
                cov_1q1qip72zw().b[13][1]++;
                cov_1q1qip72zw().s[126]++;
                if (
                /* istanbul ignore next */
                (cov_1q1qip72zw().b[16][0]++, h >= 300) &&
                /* istanbul ignore next */
                (cov_1q1qip72zw().b[16][1]++, h < 360)) {
                  /* istanbul ignore next */
                  cov_1q1qip72zw().b[15][0]++;
                  cov_1q1qip72zw().s[127]++;
                  rNew = c;
                  /* istanbul ignore next */
                  cov_1q1qip72zw().s[128]++;
                  gNew = 0;
                  /* istanbul ignore next */
                  cov_1q1qip72zw().s[129]++;
                  bNew = x;
                } else
                /* istanbul ignore next */
                {
                  cov_1q1qip72zw().b[15][1]++;
                }
              }
            }
          }
        }
      }
      /* istanbul ignore next */
      cov_1q1qip72zw().s[130]++;
      data[i] = Math.round((rNew + m) * 255);
      /* istanbul ignore next */
      cov_1q1qip72zw().s[131]++;
      data[i + 1] = Math.round((gNew + m) * 255);
      /* istanbul ignore next */
      cov_1q1qip72zw().s[132]++;
      data[i + 2] = Math.round((bNew + m) * 255);
    }
    /* istanbul ignore next */
    cov_1q1qip72zw().s[133]++;
    return imageData;
  }
  /**
  * Apply blur filter
  */
  applyBlur(imageData, radius) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[14]++;
    const data =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[134]++, imageData.data);
    const width =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[135]++, imageData.width);
    const height =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[136]++, imageData.height);
    const newData =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[137]++, new Uint8ClampedArray(data));
    const kernelSize =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[138]++, Math.floor(radius) * 2 + 1);
    const half =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[139]++, Math.floor(kernelSize / 2));
    /* istanbul ignore next */
    cov_1q1qip72zw().s[140]++;
    for (let y =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[141]++, 0); y < height; y++) {
      /* istanbul ignore next */
      cov_1q1qip72zw().s[142]++;
      for (let x =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[143]++, 0); x < width; x++) {
        let r =
          /* istanbul ignore next */
          (cov_1q1qip72zw().s[144]++, 0),
          g =
          /* istanbul ignore next */
          (cov_1q1qip72zw().s[145]++, 0),
          b =
          /* istanbul ignore next */
          (cov_1q1qip72zw().s[146]++, 0),
          a =
          /* istanbul ignore next */
          (cov_1q1qip72zw().s[147]++, 0);
        let count =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[148]++, 0);
        /* istanbul ignore next */
        cov_1q1qip72zw().s[149]++;
        for (let ky =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[150]++, -half); ky <= half; ky++) {
          /* istanbul ignore next */
          cov_1q1qip72zw().s[151]++;
          for (let kx =
          /* istanbul ignore next */
          (cov_1q1qip72zw().s[152]++, -half); kx <= half; kx++) {
            const nx =
            /* istanbul ignore next */
            (cov_1q1qip72zw().s[153]++, x + kx);
            const ny =
            /* istanbul ignore next */
            (cov_1q1qip72zw().s[154]++, y + ky);
            /* istanbul ignore next */
            cov_1q1qip72zw().s[155]++;
            if (
            /* istanbul ignore next */
            (cov_1q1qip72zw().b[18][0]++, nx >= 0) &&
            /* istanbul ignore next */
            (cov_1q1qip72zw().b[18][1]++, nx < width) &&
            /* istanbul ignore next */
            (cov_1q1qip72zw().b[18][2]++, ny >= 0) &&
            /* istanbul ignore next */
            (cov_1q1qip72zw().b[18][3]++, ny < height)) {
              /* istanbul ignore next */
              cov_1q1qip72zw().b[17][0]++;
              const idx =
              /* istanbul ignore next */
              (cov_1q1qip72zw().s[156]++, (ny * width + nx) * 4);
              /* istanbul ignore next */
              cov_1q1qip72zw().s[157]++;
              r += data[idx];
              /* istanbul ignore next */
              cov_1q1qip72zw().s[158]++;
              g += data[idx + 1];
              /* istanbul ignore next */
              cov_1q1qip72zw().s[159]++;
              b += data[idx + 2];
              /* istanbul ignore next */
              cov_1q1qip72zw().s[160]++;
              a += data[idx + 3];
              /* istanbul ignore next */
              cov_1q1qip72zw().s[161]++;
              count++;
            } else
            /* istanbul ignore next */
            {
              cov_1q1qip72zw().b[17][1]++;
            }
          }
        }
        const idx =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[162]++, (y * width + x) * 4);
        /* istanbul ignore next */
        cov_1q1qip72zw().s[163]++;
        newData[idx] = r / count;
        /* istanbul ignore next */
        cov_1q1qip72zw().s[164]++;
        newData[idx + 1] = g / count;
        /* istanbul ignore next */
        cov_1q1qip72zw().s[165]++;
        newData[idx + 2] = b / count;
        /* istanbul ignore next */
        cov_1q1qip72zw().s[166]++;
        newData[idx + 3] = a / count;
      }
    }
    /* istanbul ignore next */
    cov_1q1qip72zw().s[167]++;
    return new ImageData(newData, width, height);
  }
  /**
  * Apply sharpen filter
  */
  applySharpen(imageData, amount) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[15]++;
    const data =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[168]++, imageData.data);
    const width =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[169]++, imageData.width);
    const height =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[170]++, imageData.height);
    const newData =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[171]++, new Uint8ClampedArray(data));
    const kernel =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[172]++, [0, -amount / 100, 0, -amount / 100, 1 + 4 * amount / 100, -amount / 100, 0, -amount / 100, 0]);
    /* istanbul ignore next */
    cov_1q1qip72zw().s[173]++;
    for (let y =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[174]++, 1); y < height - 1; y++) {
      /* istanbul ignore next */
      cov_1q1qip72zw().s[175]++;
      for (let x =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[176]++, 1); x < width - 1; x++) {
        /* istanbul ignore next */
        cov_1q1qip72zw().s[177]++;
        for (let c =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[178]++, 0); c < 3; c++) {
          let sum =
          /* istanbul ignore next */
          (cov_1q1qip72zw().s[179]++, 0);
          /* istanbul ignore next */
          cov_1q1qip72zw().s[180]++;
          for (let ky =
          /* istanbul ignore next */
          (cov_1q1qip72zw().s[181]++, -1); ky <= 1; ky++) {
            /* istanbul ignore next */
            cov_1q1qip72zw().s[182]++;
            for (let kx =
            /* istanbul ignore next */
            (cov_1q1qip72zw().s[183]++, -1); kx <= 1; kx++) {
              const idx =
              /* istanbul ignore next */
              (cov_1q1qip72zw().s[184]++, ((y + ky) * width + (x + kx)) * 4 + c);
              const kernelIdx =
              /* istanbul ignore next */
              (cov_1q1qip72zw().s[185]++, (ky + 1) * 3 + (kx + 1));
              /* istanbul ignore next */
              cov_1q1qip72zw().s[186]++;
              sum += data[idx] * kernel[kernelIdx];
            }
          }
          /* istanbul ignore next */
          cov_1q1qip72zw().s[187]++;
          newData[(y * width + x) * 4 + c] = Math.max(0, Math.min(255, sum));
        }
      }
    }
    /* istanbul ignore next */
    cov_1q1qip72zw().s[188]++;
    return new ImageData(newData, width, height);
  }
  /**
  * Apply sepia filter
  */
  applySepia(imageData, amount) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[16]++;
    const data =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[189]++, imageData.data);
    const intensity =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[190]++, amount / 100);
    /* istanbul ignore next */
    cov_1q1qip72zw().s[191]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[192]++, 0); i < data.length; i += 4) {
      const r =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[193]++, data[i]);
      const g =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[194]++, data[i + 1]);
      const b =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[195]++, data[i + 2]);
      const sepiaR =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[196]++, r * 0.393 + g * 0.769 + b * 0.189);
      const sepiaG =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[197]++, r * 0.349 + g * 0.686 + b * 0.168);
      const sepiaB =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[198]++, r * 0.272 + g * 0.534 + b * 0.131);
      /* istanbul ignore next */
      cov_1q1qip72zw().s[199]++;
      data[i] = Math.min(255, r + intensity * (sepiaR - r));
      /* istanbul ignore next */
      cov_1q1qip72zw().s[200]++;
      data[i + 1] = Math.min(255, g + intensity * (sepiaG - g));
      /* istanbul ignore next */
      cov_1q1qip72zw().s[201]++;
      data[i + 2] = Math.min(255, b + intensity * (sepiaB - b));
    }
    /* istanbul ignore next */
    cov_1q1qip72zw().s[202]++;
    return imageData;
  }
  /**
  * Apply grayscale filter
  */
  applyGrayscale(imageData, method) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[17]++;
    const data =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[203]++, imageData.data);
    /* istanbul ignore next */
    cov_1q1qip72zw().s[204]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[205]++, 0); i < data.length; i += 4) {
      const r =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[206]++, data[i]);
      const g =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[207]++, data[i + 1]);
      const b =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[208]++, data[i + 2]);
      let gray;
      /* istanbul ignore next */
      cov_1q1qip72zw().s[209]++;
      switch (method) {
        case 'average':
          /* istanbul ignore next */
          cov_1q1qip72zw().b[19][0]++;
          cov_1q1qip72zw().s[210]++;
          gray = (r + g + b) / 3;
          /* istanbul ignore next */
          cov_1q1qip72zw().s[211]++;
          break;
        case 'luminance':
          /* istanbul ignore next */
          cov_1q1qip72zw().b[19][1]++;
          cov_1q1qip72zw().s[212]++;
          gray = 0.299 * r + 0.587 * g + 0.114 * b;
          /* istanbul ignore next */
          cov_1q1qip72zw().s[213]++;
          break;
        case 'desaturation':
          /* istanbul ignore next */
          cov_1q1qip72zw().b[19][2]++;
          cov_1q1qip72zw().s[214]++;
          gray = (Math.max(r, g, b) + Math.min(r, g, b)) / 2;
          /* istanbul ignore next */
          cov_1q1qip72zw().s[215]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1q1qip72zw().b[19][3]++;
          cov_1q1qip72zw().s[216]++;
          gray = 0.299 * r + 0.587 * g + 0.114 * b;
      }
      /* istanbul ignore next */
      cov_1q1qip72zw().s[217]++;
      data[i] = gray;
      /* istanbul ignore next */
      cov_1q1qip72zw().s[218]++;
      data[i + 1] = gray;
      /* istanbul ignore next */
      cov_1q1qip72zw().s[219]++;
      data[i + 2] = gray;
    }
    /* istanbul ignore next */
    cov_1q1qip72zw().s[220]++;
    return imageData;
  }
  /**
  * Apply invert filter
  */
  applyInvert(imageData) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[18]++;
    const data =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[221]++, imageData.data);
    /* istanbul ignore next */
    cov_1q1qip72zw().s[222]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[223]++, 0); i < data.length; i += 4) {
      /* istanbul ignore next */
      cov_1q1qip72zw().s[224]++;
      data[i] = 255 - data[i]; // R
      /* istanbul ignore next */
      cov_1q1qip72zw().s[225]++;
      data[i + 1] = 255 - data[i + 1]; // G
      /* istanbul ignore next */
      cov_1q1qip72zw().s[226]++;
      data[i + 2] = 255 - data[i + 2]; // B
    }
    /* istanbul ignore next */
    cov_1q1qip72zw().s[227]++;
    return imageData;
  }
  /**
  * Apply vignette filter
  */
  applyVignette(imageData, strength, size) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[19]++;
    const data =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[228]++, imageData.data);
    const width =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[229]++, imageData.width);
    const height =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[230]++, imageData.height);
    const centerX =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[231]++, width / 2);
    const centerY =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[232]++, height / 2);
    const maxRadius =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[233]++, Math.sqrt(centerX * centerX + centerY * centerY));
    const vignetteRadius =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[234]++, maxRadius * (size / 100));
    const vignetteStrength =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[235]++, strength / 100);
    /* istanbul ignore next */
    cov_1q1qip72zw().s[236]++;
    for (let y =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[237]++, 0); y < height; y++) {
      /* istanbul ignore next */
      cov_1q1qip72zw().s[238]++;
      for (let x =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[239]++, 0); x < width; x++) {
        const distance =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[240]++, Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2));
        const vignetteFactor =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[241]++, Math.max(0, 1 - distance / vignetteRadius * vignetteStrength));
        const idx =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[242]++, (y * width + x) * 4);
        /* istanbul ignore next */
        cov_1q1qip72zw().s[243]++;
        data[idx] *= vignetteFactor; // R
        /* istanbul ignore next */
        cov_1q1qip72zw().s[244]++;
        data[idx + 1] *= vignetteFactor; // G
        /* istanbul ignore next */
        cov_1q1qip72zw().s[245]++;
        data[idx + 2] *= vignetteFactor; // B
      }
    }
    /* istanbul ignore next */
    cov_1q1qip72zw().s[246]++;
    return imageData;
  }
  /**
  * Apply single filter to image data
  */
  applyFilter(filterConfig, sourceImageData) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[20]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[247]++, performance.now());
    /* istanbul ignore next */
    cov_1q1qip72zw().s[248]++;
    try {
      const imageData =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[249]++,
      /* istanbul ignore next */
      (cov_1q1qip72zw().b[20][0]++, sourceImageData) ||
      /* istanbul ignore next */
      (cov_1q1qip72zw().b[20][1]++, this.currentImageData));
      /* istanbul ignore next */
      cov_1q1qip72zw().s[250]++;
      if (!imageData) {
        /* istanbul ignore next */
        cov_1q1qip72zw().b[21][0]++;
        cov_1q1qip72zw().s[251]++;
        return {
          success: false,
          error: 'No image data available',
          processingTime: performance.now() - startTime
        };
      } else
      /* istanbul ignore next */
      {
        cov_1q1qip72zw().b[21][1]++;
      }
      // Create a copy of the image data
      const processedData =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[252]++, new ImageData(new Uint8ClampedArray(imageData.data), imageData.width, imageData.height));
      /* istanbul ignore next */
      cov_1q1qip72zw().s[253]++;
      if (!filterConfig.enabled) {
        /* istanbul ignore next */
        cov_1q1qip72zw().b[22][0]++;
        cov_1q1qip72zw().s[254]++;
        return {
          success: true,
          processedImageData: processedData,
          processingTime: performance.now() - startTime
        };
      } else
      /* istanbul ignore next */
      {
        cov_1q1qip72zw().b[22][1]++;
      }
      // Apply the specific filter based on type
      let result;
      const params =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[255]++, filterConfig.parameters);
      /* istanbul ignore next */
      cov_1q1qip72zw().s[256]++;
      switch (filterConfig.type) {
        case "brightness":
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][0]++;
          cov_1q1qip72zw().s[257]++;
          result = this.applyBrightness(processedData,
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[24][0]++, params.amount?.value) ||
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[24][1]++, 0));
          /* istanbul ignore next */
          cov_1q1qip72zw().s[258]++;
          break;
        case "contrast":
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][1]++;
          cov_1q1qip72zw().s[259]++;
          result = this.applyContrast(processedData,
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[25][0]++, params.amount?.value) ||
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[25][1]++, 0));
          /* istanbul ignore next */
          cov_1q1qip72zw().s[260]++;
          break;
        case "saturation":
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][2]++;
          cov_1q1qip72zw().s[261]++;
          result = this.applySaturation(processedData,
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[26][0]++, params.amount?.value) ||
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[26][1]++, 0));
          /* istanbul ignore next */
          cov_1q1qip72zw().s[262]++;
          break;
        case "hue":
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][3]++;
          cov_1q1qip72zw().s[263]++;
          result = this.applyHueShift(processedData,
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[27][0]++, params.angle?.value) ||
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[27][1]++, 0));
          /* istanbul ignore next */
          cov_1q1qip72zw().s[264]++;
          break;
        case "blur":
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][4]++;
          cov_1q1qip72zw().s[265]++;
          result = this.applyBlur(processedData,
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[28][0]++, params.radius?.value) ||
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[28][1]++, 5));
          /* istanbul ignore next */
          cov_1q1qip72zw().s[266]++;
          break;
        case "sharpen":
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][5]++;
          cov_1q1qip72zw().s[267]++;
          result = this.applySharpen(processedData,
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[29][0]++, params.amount?.value) ||
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[29][1]++, 50));
          /* istanbul ignore next */
          cov_1q1qip72zw().s[268]++;
          break;
        case "sepia":
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][6]++;
          cov_1q1qip72zw().s[269]++;
          result = this.applySepia(processedData,
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[30][0]++, params.amount?.value) ||
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[30][1]++, 100));
          /* istanbul ignore next */
          cov_1q1qip72zw().s[270]++;
          break;
        case "grayscale":
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][7]++;
          cov_1q1qip72zw().s[271]++;
          result = this.applyGrayscale(processedData,
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[31][0]++, params.method?.value) ||
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[31][1]++, 'luminance'));
          /* istanbul ignore next */
          cov_1q1qip72zw().s[272]++;
          break;
        case "invert":
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][8]++;
          cov_1q1qip72zw().s[273]++;
          result = this.applyInvert(processedData);
          /* istanbul ignore next */
          cov_1q1qip72zw().s[274]++;
          break;
        case "vignette":
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][9]++;
          cov_1q1qip72zw().s[275]++;
          result = this.applyVignette(processedData,
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[32][0]++, params.strength?.value) ||
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[32][1]++, 50),
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[33][0]++, params.size?.value) ||
          /* istanbul ignore next */
          (cov_1q1qip72zw().b[33][1]++, 50));
          /* istanbul ignore next */
          cov_1q1qip72zw().s[276]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1q1qip72zw().b[23][10]++;
          cov_1q1qip72zw().s[277]++;
          result = processedData;
          /* istanbul ignore next */
          cov_1q1qip72zw().s[278]++;
          console.warn(`Filter type ${filterConfig.type} not implemented`);
      }
      // Apply opacity if less than 100%
      /* istanbul ignore next */
      cov_1q1qip72zw().s[279]++;
      if (
      /* istanbul ignore next */
      (cov_1q1qip72zw().b[35][0]++, filterConfig.opacity < 1) &&
      /* istanbul ignore next */
      (cov_1q1qip72zw().b[35][1]++, sourceImageData)) {
        /* istanbul ignore next */
        cov_1q1qip72zw().b[34][0]++;
        const originalData =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[280]++, sourceImageData.data);
        const filteredData =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[281]++, result.data);
        /* istanbul ignore next */
        cov_1q1qip72zw().s[282]++;
        for (let i =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[283]++, 0); i < originalData.length; i += 4) {
          /* istanbul ignore next */
          cov_1q1qip72zw().s[284]++;
          filteredData[i] = originalData[i] + filterConfig.opacity * (filteredData[i] - originalData[i]);
          /* istanbul ignore next */
          cov_1q1qip72zw().s[285]++;
          filteredData[i + 1] = originalData[i + 1] + filterConfig.opacity * (filteredData[i + 1] - originalData[i + 1]);
          /* istanbul ignore next */
          cov_1q1qip72zw().s[286]++;
          filteredData[i + 2] = originalData[i + 2] + filterConfig.opacity * (filteredData[i + 2] - originalData[i + 2]);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1q1qip72zw().b[34][1]++;
      }
      cov_1q1qip72zw().s[287]++;
      return {
        success: true,
        processedImageData: result,
        processingTime: performance.now() - startTime
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1q1qip72zw().s[288]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1q1qip72zw().b[36][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1q1qip72zw().b[36][1]++, 'Unknown error'),
        processingTime: performance.now() - startTime
      };
    }
  }
  /**
  * Apply multiple filters in sequence
  */
  applyFilterChain(filters) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[21]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[289]++, performance.now());
    /* istanbul ignore next */
    cov_1q1qip72zw().s[290]++;
    if (!this.originalImageData) {
      /* istanbul ignore next */
      cov_1q1qip72zw().b[37][0]++;
      cov_1q1qip72zw().s[291]++;
      return {
        success: false,
        error: 'No original image data available',
        processingTime: performance.now() - startTime
      };
    } else
    /* istanbul ignore next */
    {
      cov_1q1qip72zw().b[37][1]++;
    }
    cov_1q1qip72zw().s[292]++;
    try {
      let currentData =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[293]++, new ImageData(new Uint8ClampedArray(this.originalImageData.data), this.originalImageData.width, this.originalImageData.height));
      // Sort filters by enabled status and apply only enabled filters
      const enabledFilters =
      /* istanbul ignore next */
      (cov_1q1qip72zw().s[294]++, filters.filter(f => {
        /* istanbul ignore next */
        cov_1q1qip72zw().f[22]++;
        cov_1q1qip72zw().s[295]++;
        return f.enabled;
      }));
      /* istanbul ignore next */
      cov_1q1qip72zw().s[296]++;
      for (const filter of enabledFilters) {
        const result =
        /* istanbul ignore next */
        (cov_1q1qip72zw().s[297]++, this.applyFilter(filter, currentData));
        /* istanbul ignore next */
        cov_1q1qip72zw().s[298]++;
        if (
        /* istanbul ignore next */
        (cov_1q1qip72zw().b[39][0]++, !result.success) ||
        /* istanbul ignore next */
        (cov_1q1qip72zw().b[39][1]++, !result.processedImageData)) {
          /* istanbul ignore next */
          cov_1q1qip72zw().b[38][0]++;
          cov_1q1qip72zw().s[299]++;
          return {
            success: false,
            error: `Failed to apply filter ${filter.name}: ${result.error}`,
            processingTime: performance.now() - startTime
          };
        } else
        /* istanbul ignore next */
        {
          cov_1q1qip72zw().b[38][1]++;
        }
        cov_1q1qip72zw().s[300]++;
        currentData = result.processedImageData;
      }
      /* istanbul ignore next */
      cov_1q1qip72zw().s[301]++;
      this.currentImageData = currentData;
      /* istanbul ignore next */
      cov_1q1qip72zw().s[302]++;
      return {
        success: true,
        processedImageData: currentData,
        processingTime: performance.now() - startTime
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1q1qip72zw().s[303]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1q1qip72zw().b[40][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1q1qip72zw().b[40][1]++, 'Unknown error'),
        processingTime: performance.now() - startTime
      };
    }
  }
  /**
  * Reset to original image
  */
  resetToOriginal() {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[23]++;
    cov_1q1qip72zw().s[304]++;
    if (this.originalImageData) {
      /* istanbul ignore next */
      cov_1q1qip72zw().b[41][0]++;
      cov_1q1qip72zw().s[305]++;
      this.currentImageData = new ImageData(new Uint8ClampedArray(this.originalImageData.data), this.originalImageData.width, this.originalImageData.height);
    } else
    /* istanbul ignore next */
    {
      cov_1q1qip72zw().b[41][1]++;
    }
  }
  /**
  * Get current processed image data
  */
  getCurrentImageData() {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[24]++;
    cov_1q1qip72zw().s[306]++;
    return this.currentImageData;
  }
  /**
  * Render current image data to canvas
  */
  renderToCanvas() {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[25]++;
    cov_1q1qip72zw().s[307]++;
    if (this.currentImageData) {
      /* istanbul ignore next */
      cov_1q1qip72zw().b[42][0]++;
      cov_1q1qip72zw().s[308]++;
      this.ctx.putImageData(this.currentImageData, 0, 0);
    } else
    /* istanbul ignore next */
    {
      cov_1q1qip72zw().b[42][1]++;
    }
  }
}
class FilterPresetLibrary {
  constructor() {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[26]++;
    cov_1q1qip72zw().s[309]++;
    this.presets = new Map();
    /* istanbul ignore next */
    cov_1q1qip72zw().s[310]++;
    this.initializeDefaultPresets();
  }
  /**
  * Initialize default filter presets
  */
  initializeDefaultPresets() {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[27]++;
    cov_1q1qip72zw().s[311]++;
    // Vintage preset
    this.addPreset({
      id: 'vintage',
      name: 'Vintage',
      description: 'Classic vintage film look',
      category: 'Retro',
      tags: ['vintage', 'retro', 'film'],
      filters: [this.createFilterConfig("sepia", {
        amount: {
          ...DEFAULT_FILTER_PARAMETERS["sepia"].amount,
          value: 30
        }
      }), this.createFilterConfig("contrast", {
        amount: {
          ...DEFAULT_FILTER_PARAMETERS["contrast"].amount,
          value: -10
        }
      }), this.createFilterConfig("saturation", {
        amount: {
          ...DEFAULT_FILTER_PARAMETERS["saturation"].amount,
          value: -20
        }
      }), this.createFilterConfig("vignette", {
        strength: {
          ...DEFAULT_FILTER_PARAMETERS["vignette"].strength,
          value: 40
        },
        size: {
          ...DEFAULT_FILTER_PARAMETERS["vignette"].size,
          value: 60
        }
      })]
    });
    // Black and White preset
    /* istanbul ignore next */
    cov_1q1qip72zw().s[312]++;
    this.addPreset({
      id: 'blackwhite',
      name: 'Black & White',
      description: 'Classic black and white with enhanced contrast',
      category: 'Classic',
      tags: ['bw', 'monochrome', 'classic'],
      filters: [this.createFilterConfig("grayscale", {
        method: {
          ...DEFAULT_FILTER_PARAMETERS["grayscale"].method,
          value: 'luminance'
        }
      }), this.createFilterConfig("contrast", {
        amount: {
          ...DEFAULT_FILTER_PARAMETERS["contrast"].amount,
          value: 20
        }
      })]
    });
    // Dramatic preset
    /* istanbul ignore next */
    cov_1q1qip72zw().s[313]++;
    this.addPreset({
      id: 'dramatic',
      name: 'Dramatic',
      description: 'High contrast dramatic effect',
      category: 'Artistic',
      tags: ['dramatic', 'contrast', 'bold'],
      filters: [this.createFilterConfig("contrast", {
        amount: {
          ...DEFAULT_FILTER_PARAMETERS["contrast"].amount,
          value: 40
        }
      }), this.createFilterConfig("saturation", {
        amount: {
          ...DEFAULT_FILTER_PARAMETERS["saturation"].amount,
          value: 20
        }
      }), this.createFilterConfig("sharpen", {
        amount: {
          ...DEFAULT_FILTER_PARAMETERS["sharpen"].amount,
          value: 30
        }
      })]
    });
  }
  /**
  * Create filter configuration helper
  */
  createFilterConfig(type, params) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[28]++;
    cov_1q1qip72zw().s[314]++;
    return {
      id: `filter-${type}-${Date.now()}`,
      type,
      name: type.charAt(0).toUpperCase() + type.slice(1),
      description: `${type} filter`,
      parameters: {
        ...DEFAULT_FILTER_PARAMETERS[type],
        ...params
      },
      enabled: true,
      opacity: 1,
      blendMode: _canvasUtils.BlendMode.Normal
    };
  }
  /**
  * Add preset to library
  */
  addPreset(preset) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[29]++;
    cov_1q1qip72zw().s[315]++;
    this.presets.set(preset.id, preset);
  }
  /**
  * Get preset by ID
  */
  getPreset(id) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[30]++;
    cov_1q1qip72zw().s[316]++;
    return this.presets.get(id);
  }
  /**
  * Get all presets
  */
  getAllPresets() {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[31]++;
    cov_1q1qip72zw().s[317]++;
    return Array.from(this.presets.values());
  }
  /**
  * Get presets by category
  */
  getPresetsByCategory(category) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[32]++;
    cov_1q1qip72zw().s[318]++;
    return this.getAllPresets().filter(preset => {
      /* istanbul ignore next */
      cov_1q1qip72zw().f[33]++;
      cov_1q1qip72zw().s[319]++;
      return preset.category === category;
    });
  }
  /**
  * Search presets by tags
  */
  searchPresets(query) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[34]++;
    const lowerQuery =
    /* istanbul ignore next */
    (cov_1q1qip72zw().s[320]++, query.toLowerCase());
    /* istanbul ignore next */
    cov_1q1qip72zw().s[321]++;
    return this.getAllPresets().filter(preset => {
      /* istanbul ignore next */
      cov_1q1qip72zw().f[35]++;
      cov_1q1qip72zw().s[322]++;
      return /* istanbul ignore next */(cov_1q1qip72zw().b[43][0]++, preset.name.toLowerCase().includes(lowerQuery)) ||
      /* istanbul ignore next */
      (cov_1q1qip72zw().b[43][1]++, preset.description.toLowerCase().includes(lowerQuery)) ||
      /* istanbul ignore next */
      (cov_1q1qip72zw().b[43][2]++, preset.tags.some(tag => {
        /* istanbul ignore next */
        cov_1q1qip72zw().f[36]++;
        cov_1q1qip72zw().s[323]++;
        return tag.toLowerCase().includes(lowerQuery);
      }));
    });
  }
  /**
  * Remove preset
  */
  removePreset(id) {
    /* istanbul ignore next */
    cov_1q1qip72zw().f[37]++;
    cov_1q1qip72zw().s[324]++;
    return this.presets.delete(id);
  }
}
function createImageFilterEngine(managedCanvas) {
  /* istanbul ignore next */
  cov_1q1qip72zw().f[38]++;
  cov_1q1qip72zw().s[325]++;
  return new ImageFilterEngine(managedCanvas);
}
function createFilterPresetLibrary() {
  /* istanbul ignore next */
  cov_1q1qip72zw().f[39]++;
  cov_1q1qip72zw().s[326]++;
  return new FilterPresetLibrary();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,