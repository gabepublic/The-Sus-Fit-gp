b23aa5f39b8a674d9a1f21ff508a8097
'use client';
"use strict";

/* istanbul ignore next */
function cov_1tyz5vt0mf() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/components/ToastProvider.tsx";
  var hash = "d0deabfc38111a21ba489c2b0512f2f293c674b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/components/ToastProvider.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 72
        }
      },
      "8": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 93
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "10": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "11": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "12": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "13": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "15": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "16": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 19
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "19": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 53
        }
      },
      "20": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "22": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "23": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 88
        }
      },
      "24": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "26": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 95
        }
      },
      "27": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "28": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 57
        }
      },
      "29": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "30": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "31": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "32": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 31
        }
      },
      "33": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "34": {
        start: {
          line: 65,
          column: 35
        },
        end: {
          line: 65,
          column: 71
        }
      },
      "35": {
        start: {
          line: 66,
          column: 17
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "36": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 56
        }
      },
      "37": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "38": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 72
        }
      },
      "39": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "40": {
        start: {
          line: 73,
          column: 22
        },
        end: {
          line: 160,
          column: 1
        }
      },
      "41": {
        start: {
          line: 74,
          column: 32
        },
        end: {
          line: 74,
          column: 56
        }
      },
      "42": {
        start: {
          line: 75,
          column: 22
        },
        end: {
          line: 86,
          column: 10
        }
      },
      "43": {
        start: {
          line: 76,
          column: 19
        },
        end: {
          line: 76,
          column: 58
        }
      },
      "44": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "45": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 15
        }
      },
      "46": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "47": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 89,
          column: 10
        }
      },
      "48": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 65
        }
      },
      "49": {
        start: {
          line: 88,
          column: 26
        },
        end: {
          line: 88,
          column: 63
        }
      },
      "50": {
        start: {
          line: 88,
          column: 47
        },
        end: {
          line: 88,
          column: 62
        }
      },
      "51": {
        start: {
          line: 91,
          column: 29
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "52": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "53": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 66
        }
      },
      "54": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 68
        }
      },
      "55": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 64
        }
      },
      "56": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 62
        }
      },
      "57": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 159,
          column: 7
        }
      },
      "58": {
        start: {
          line: 116,
          column: 50
        },
        end: {
          line: 156,
          column: 32
        }
      },
      "59": {
        start: {
          line: 127,
          column: 28
        },
        end: {
          line: 129,
          column: 29
        }
      },
      "60": {
        start: {
          line: 128,
          column: 32
        },
        end: {
          line: 128,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 14
          },
          end: {
            line: 16,
            column: 15
          }
        },
        loc: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 27,
            column: 40
          }
        },
        loc: {
          start: {
            line: 27,
            column: 61
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 34
          }
        },
        loc: {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 66,
            column: 17
          },
          end: {
            line: 66,
            column: 18
          }
        },
        loc: {
          start: {
            line: 66,
            column: 21
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 66
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 73,
            column: 22
          },
          end: {
            line: 73,
            column: 23
          }
        },
        loc: {
          start: {
            line: 73,
            column: 38
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 75,
            column: 46
          },
          end: {
            line: 75,
            column: 47
          }
        },
        loc: {
          start: {
            line: 75,
            column: 76
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 75
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 82,
            column: 18
          },
          end: {
            line: 82,
            column: 19
          }
        },
        loc: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 85,
            column: 13
          }
        },
        line: 82
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 87,
            column: 48
          },
          end: {
            line: 87,
            column: 49
          }
        },
        loc: {
          start: {
            line: 87,
            column: 54
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 87
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 88,
            column: 18
          },
          end: {
            line: 88,
            column: 19
          }
        },
        loc: {
          start: {
            line: 88,
            column: 26
          },
          end: {
            line: 88,
            column: 63
          }
        },
        line: 88
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 88,
            column: 38
          },
          end: {
            line: 88,
            column: 39
          }
        },
        loc: {
          start: {
            line: 88,
            column: 47
          },
          end: {
            line: 88,
            column: 62
          }
        },
        line: 88
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 91,
            column: 29
          },
          end: {
            line: 91,
            column: 30
          }
        },
        loc: {
          start: {
            line: 91,
            column: 40
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 91
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 116,
            column: 27
          },
          end: {
            line: 116,
            column: 28
          }
        },
        loc: {
          start: {
            line: 116,
            column: 50
          },
          end: {
            line: 156,
            column: 32
          }
        },
        line: 116
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 126,
            column: 38
          },
          end: {
            line: 126,
            column: 39
          }
        },
        loc: {
          start: {
            line: 126,
            column: 46
          },
          end: {
            line: 130,
            column: 25
          }
        },
        line: 126
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 65
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 27
          }
        }, {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 45
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 47
          }
        }, {
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 76
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 31
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 53
          }
        }, {
          start: {
            line: 47,
            column: 57
          },
          end: {
            line: 47,
            column: 88
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 29
          }
        }, {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 79
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 88
          }
        }, {
          start: {
            line: 50,
            column: 91
          },
          end: {
            line: 50,
            column: 95
          }
        }],
        line: 50
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 20
          }
        }, {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 33
          }
        }, {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 45
          }
        }],
        line: 51
      },
      "14": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "15": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "16": {
        loc: {
          start: {
            line: 75,
            column: 56
          },
          end: {
            line: 75,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 75,
            column: 66
          },
          end: {
            line: 75,
            column: 73
          }
        }],
        line: 75
      },
      "17": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 94,
            column: 66
          }
        }, {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 96,
            column: 68
          }
        }, {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 98,
            column: 64
          }
        }, {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 99,
            column: 25
          }
        }, {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 101,
            column: 62
          }
        }],
        line: 92
      },
      "18": {
        loc: {
          start: {
            line: 127,
            column: 28
          },
          end: {
            line: 129,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 28
          },
          end: {
            line: 129,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0, 0, 0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/components/ToastProvider.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport * as Toast from '@radix-ui/react-toast';\n\n// Toast item interface\ninterface ToastItem {\n  id: string;\n  message: string;\n  variant: 'error' | 'success' | 'info' | 'warning';\n}\n\n// Context interface\ninterface ToastContextType {\n  showToast: (message: string, variant?: ToastItem['variant']) => void;\n}\n\n// Create context\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\n\n// Hook to use toast context\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n\n// ToastProvider component\ninterface ToastProviderProps {\n  children: React.ReactNode;\n}\n\nexport const ToastProvider: React.FC<ToastProviderProps> = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastItem[]>([]);\n\n  const showToast = useCallback((message: string, variant: ToastItem['variant'] = 'error') => {\n    const id = Math.random().toString(36).substr(2, 9);\n    const newToast: ToastItem = { id, message, variant };\n    \n    setToasts(prev => [...prev, newToast]);\n  }, []);\n\n  const removeToast = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  // Get variant-specific styles\n  const getVariantStyles = (variant: ToastItem['variant']) => {\n    switch (variant) {\n      case 'success':\n        return 'bg-green-500 text-white border-green-600';\n      case 'warning':\n        return 'bg-yellow-500 text-white border-yellow-600';\n      case 'info':\n        return 'bg-blue-500 text-white border-blue-600';\n      case 'error':\n      default:\n        return 'bg-red-500 text-white border-red-600';\n    }\n  };\n\n  return (\n    <ToastContext.Provider value={{ showToast }}>\n      <Toast.Provider\n        swipeDirection=\"right\"\n        duration={5000}\n      >\n        {children}\n        \n        {/* Toast viewport */}\n        <Toast.Viewport className=\"fixed top-4 right-4 z-50 flex flex-col gap-2 w-full max-w-sm\" />\n        \n        {/* Render toasts */}\n        {toasts.map((toast) => (\n          <Toast.Root\n            key={toast.id}\n            className={`\n              flex items-center justify-between p-4 rounded-lg shadow-lg border\n              ${getVariantStyles(toast.variant)}\n              data-[state=open]:animate-slideDown\n              data-[state=closed]:animate-slideUp\n              data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)]\n              data-[swipe=cancel]:translate-x-0\n              data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)]\n            `}\n            onOpenChange={(open) => {\n              if (!open) {\n                removeToast(toast.id);\n              }\n            }}\n          >\n            <div className=\"flex-1\">\n              <Toast.Title className=\"text-sm font-medium\">\n                {toast.message}\n              </Toast.Title>\n            </div>\n            \n            <Toast.Close className=\"ml-4 text-white/80 hover:text-white transition-colors\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                <path\n                  d=\"M12 4L4 12M4 4L12 12\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </Toast.Close>\n          </Toast.Root>\n        ))}\n      </Toast.Provider>\n    </ToastContext.Provider>\n  );\n};\n"],
      names: ["ToastProvider", "useToast", "ToastContext", "createContext", "undefined", "context", "useContext", "Error", "children", "toasts", "setToasts", "useState", "showToast", "useCallback", "message", "variant", "id", "Math", "random", "toString", "substr", "newToast", "prev", "removeToast", "filter", "toast", "getVariantStyles", "Provider", "value", "Toast", "swipeDirection", "duration", "Viewport", "className", "map", "Root", "onOpenChange", "open", "div", "Title", "Close", "svg", "width", "height", "viewBox", "fill", "path", "d", "stroke", "strokeWidth", "strokeLinecap", "strokeLinejoin"],
      mappings: "AAAA;;;;;;;;;;;;IAkCaA,aAAa;eAAbA;;IAbAC,QAAQ;eAARA;;;;+DAnB2D;oEACjD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcvB,iBAAiB;AACjB,MAAMC,6BAAeC,IAAAA,oBAAa,EAA+BC;AAG1D,MAAMH,WAAW;IACtB,MAAMI,UAAUC,IAAAA,iBAAU,EAACJ;IAC3B,IAAI,CAACG,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IACA,OAAOF;AACT;AAOO,MAAML,gBAA8C,CAAC,EAAEQ,QAAQ,EAAE;IACtE,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAc,EAAE;IAEpD,MAAMC,YAAYC,IAAAA,kBAAW,EAAC,CAACC,SAAiBC,UAAgC,OAAO;QACrF,MAAMC,KAAKC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,MAAM,CAAC,GAAG;QAChD,MAAMC,WAAsB;YAAEL;YAAIF;YAASC;QAAQ;QAEnDL,UAAUY,CAAAA,OAAQ;mBAAIA;gBAAMD;aAAS;IACvC,GAAG,EAAE;IAEL,MAAME,cAAcV,IAAAA,kBAAW,EAAC,CAACG;QAC/BN,UAAUY,CAAAA,OAAQA,KAAKE,MAAM,CAACC,CAAAA,QAASA,MAAMT,EAAE,KAAKA;IACtD,GAAG,EAAE;IAEL,8BAA8B;IAC9B,MAAMU,mBAAmB,CAACX;QACxB,OAAQA;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;YACL;gBACE,OAAO;QACX;IACF;IAEA,qBACE,qBAACb,aAAayB,QAAQ;QAACC,OAAO;YAAEhB;QAAU;kBACxC,cAAA,sBAACiB,YAAMF,QAAQ;YACbG,gBAAe;YACfC,UAAU;;gBAETvB;8BAGD,qBAACqB,YAAMG,QAAQ;oBAACC,WAAU;;gBAGzBxB,OAAOyB,GAAG,CAAC,CAACT,sBACX,sBAACI,YAAMM,IAAI;wBAETF,WAAW,CAAC;;cAEV,EAAEP,iBAAiBD,MAAMV,OAAO,EAAE;;;;;;YAMpC,CAAC;wBACDqB,cAAc,CAACC;4BACb,IAAI,CAACA,MAAM;gCACTd,YAAYE,MAAMT,EAAE;4BACtB;wBACF;;0CAEA,qBAACsB;gCAAIL,WAAU;0CACb,cAAA,qBAACJ,YAAMU,KAAK;oCAACN,WAAU;8CACpBR,MAAMX,OAAO;;;0CAIlB,qBAACe,YAAMW,KAAK;gCAACP,WAAU;0CACrB,cAAA,qBAACQ;oCAAIC,OAAM;oCAAKC,QAAO;oCAAKC,SAAQ;oCAAYC,MAAK;8CACnD,cAAA,qBAACC;wCACCC,GAAE;wCACFC,QAAO;wCACPC,aAAY;wCACZC,eAAc;wCACdC,gBAAe;;;;;uBA7BhB1B,MAAMT,EAAE;;;;AAsCzB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d0deabfc38111a21ba489c2b0512f2f293c674b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tyz5vt0mf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tyz5vt0mf();
cov_1tyz5vt0mf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1tyz5vt0mf().f[0]++;
  cov_1tyz5vt0mf().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1tyz5vt0mf().s[3]++;
_export(exports, {
  ToastProvider: function () {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().f[1]++;
    cov_1tyz5vt0mf().s[4]++;
    return ToastProvider;
  },
  useToast: function () {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().f[2]++;
    cov_1tyz5vt0mf().s[5]++;
    return useToast;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1tyz5vt0mf().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1tyz5vt0mf().s[7]++, _interop_require_wildcard(require("react")));
const _reacttoast =
/* istanbul ignore next */
(/*#__PURE__*/cov_1tyz5vt0mf().s[8]++, _interop_require_wildcard(require("@radix-ui/react-toast")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1tyz5vt0mf().f[3]++;
  cov_1tyz5vt0mf().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().b[0][0]++;
    cov_1tyz5vt0mf().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1tyz5vt0mf().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_1tyz5vt0mf().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().f[4]++;
    cov_1tyz5vt0mf().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1tyz5vt0mf().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1tyz5vt0mf().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1tyz5vt0mf().f[5]++;
  cov_1tyz5vt0mf().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().b[2][0]++;
    cov_1tyz5vt0mf().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1tyz5vt0mf().b[2][1]++;
  }
  cov_1tyz5vt0mf().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().b[4][0]++;
    cov_1tyz5vt0mf().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1tyz5vt0mf().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1tyz5vt0mf().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().b[6][0]++;
    cov_1tyz5vt0mf().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1tyz5vt0mf().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().s[23]++,
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1tyz5vt0mf().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_1tyz5vt0mf().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1tyz5vt0mf().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1tyz5vt0mf().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1tyz5vt0mf().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1tyz5vt0mf().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1tyz5vt0mf().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1tyz5vt0mf().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_1tyz5vt0mf().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1tyz5vt0mf().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1tyz5vt0mf().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1tyz5vt0mf().b[12][0]++;
        cov_1tyz5vt0mf().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1tyz5vt0mf().b[12][1]++;
        cov_1tyz5vt0mf().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1tyz5vt0mf().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1tyz5vt0mf().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1tyz5vt0mf().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().b[14][0]++;
    cov_1tyz5vt0mf().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1tyz5vt0mf().b[14][1]++;
  }
  cov_1tyz5vt0mf().s[33]++;
  return newObj;
}
// Create context
const ToastContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_1tyz5vt0mf().s[34]++, (0, _react.createContext)(undefined));
/* istanbul ignore next */
cov_1tyz5vt0mf().s[35]++;
const useToast = () => {
  /* istanbul ignore next */
  cov_1tyz5vt0mf().f[6]++;
  const context =
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().s[36]++, (0, _react.useContext)(ToastContext));
  /* istanbul ignore next */
  cov_1tyz5vt0mf().s[37]++;
  if (!context) {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().b[15][0]++;
    cov_1tyz5vt0mf().s[38]++;
    throw new Error('useToast must be used within a ToastProvider');
  } else
  /* istanbul ignore next */
  {
    cov_1tyz5vt0mf().b[15][1]++;
  }
  cov_1tyz5vt0mf().s[39]++;
  return context;
};
/* istanbul ignore next */
cov_1tyz5vt0mf().s[40]++;
const ToastProvider = ({
  children
}) => {
  /* istanbul ignore next */
  cov_1tyz5vt0mf().f[7]++;
  const [toasts, setToasts] =
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().s[41]++, (0, _react.useState)([]));
  const showToast =
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().s[42]++, (0, _react.useCallback)((message, variant =
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().b[16][0]++, 'error')) => {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().f[8]++;
    const id =
    /* istanbul ignore next */
    (cov_1tyz5vt0mf().s[43]++, Math.random().toString(36).substr(2, 9));
    const newToast =
    /* istanbul ignore next */
    (cov_1tyz5vt0mf().s[44]++, {
      id,
      message,
      variant
    });
    /* istanbul ignore next */
    cov_1tyz5vt0mf().s[45]++;
    setToasts(prev => {
      /* istanbul ignore next */
      cov_1tyz5vt0mf().f[9]++;
      cov_1tyz5vt0mf().s[46]++;
      return [...prev, newToast];
    });
  }, []));
  const removeToast =
  /* istanbul ignore next */
  (cov_1tyz5vt0mf().s[47]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().f[10]++;
    cov_1tyz5vt0mf().s[48]++;
    setToasts(prev => {
      /* istanbul ignore next */
      cov_1tyz5vt0mf().f[11]++;
      cov_1tyz5vt0mf().s[49]++;
      return prev.filter(toast => {
        /* istanbul ignore next */
        cov_1tyz5vt0mf().f[12]++;
        cov_1tyz5vt0mf().s[50]++;
        return toast.id !== id;
      });
    });
  }, []));
  // Get variant-specific styles
  /* istanbul ignore next */
  cov_1tyz5vt0mf().s[51]++;
  const getVariantStyles = variant => {
    /* istanbul ignore next */
    cov_1tyz5vt0mf().f[13]++;
    cov_1tyz5vt0mf().s[52]++;
    switch (variant) {
      case 'success':
        /* istanbul ignore next */
        cov_1tyz5vt0mf().b[17][0]++;
        cov_1tyz5vt0mf().s[53]++;
        return 'bg-green-500 text-white border-green-600';
      case 'warning':
        /* istanbul ignore next */
        cov_1tyz5vt0mf().b[17][1]++;
        cov_1tyz5vt0mf().s[54]++;
        return 'bg-yellow-500 text-white border-yellow-600';
      case 'info':
        /* istanbul ignore next */
        cov_1tyz5vt0mf().b[17][2]++;
        cov_1tyz5vt0mf().s[55]++;
        return 'bg-blue-500 text-white border-blue-600';
      case 'error':
        /* istanbul ignore next */
        cov_1tyz5vt0mf().b[17][3]++;
      default:
        /* istanbul ignore next */
        cov_1tyz5vt0mf().b[17][4]++;
        cov_1tyz5vt0mf().s[56]++;
        return 'bg-red-500 text-white border-red-600';
    }
  };
  /* istanbul ignore next */
  cov_1tyz5vt0mf().s[57]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(ToastContext.Provider, {
    value: {
      showToast
    },
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_reacttoast.Provider, {
      swipeDirection: "right",
      duration: 5000,
      children: [children, /*#__PURE__*/(0, _jsxruntime.jsx)(_reacttoast.Viewport, {
        className: "fixed top-4 right-4 z-50 flex flex-col gap-2 w-full max-w-sm"
      }), toasts.map(toast => {
        /* istanbul ignore next */
        cov_1tyz5vt0mf().f[14]++;
        cov_1tyz5vt0mf().s[58]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)(_reacttoast.Root, {
          className: `
              flex items-center justify-between p-4 rounded-lg shadow-lg border
              ${getVariantStyles(toast.variant)}
              data-[state=open]:animate-slideDown
              data-[state=closed]:animate-slideUp
              data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)]
              data-[swipe=cancel]:translate-x-0
              data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)]
            `,
          onOpenChange: open => {
            /* istanbul ignore next */
            cov_1tyz5vt0mf().f[15]++;
            cov_1tyz5vt0mf().s[59]++;
            if (!open) {
              /* istanbul ignore next */
              cov_1tyz5vt0mf().b[18][0]++;
              cov_1tyz5vt0mf().s[60]++;
              removeToast(toast.id);
            } else
            /* istanbul ignore next */
            {
              cov_1tyz5vt0mf().b[18][1]++;
            }
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex-1",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_reacttoast.Title, {
              className: "text-sm font-medium",
              children: toast.message
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_reacttoast.Close, {
            className: "ml-4 text-white/80 hover:text-white transition-colors",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
              width: "16",
              height: "16",
              viewBox: "0 0 16 16",
              fill: "none",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                d: "M12 4L4 12M4 4L12 12",
                stroke: "currentColor",
                strokeWidth: "2",
                strokeLinecap: "round",
                strokeLinejoin: "round"
              })
            })
          })]
        }, toast.id);
      })]
    })
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,