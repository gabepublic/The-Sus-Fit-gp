{"version":3,"names":["cov_1tyz5vt0mf","actualCoverage","s","ToastProvider","f","useToast","ToastContext","_react","createContext","undefined","context","useContext","b","Error","children","toasts","setToasts","useState","showToast","useCallback","message","variant","id","Math","random","toString","substr","newToast","prev","removeToast","filter","toast","getVariantStyles","_jsxruntime","jsx","Provider","value","jsxs","_reacttoast","swipeDirection","duration","Viewport","className","map","Root","onOpenChange","open","Title","Close","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin"],"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/components/ToastProvider.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport * as Toast from '@radix-ui/react-toast';\n\n// Toast item interface\ninterface ToastItem {\n  id: string;\n  message: string;\n  variant: 'error' | 'success' | 'info' | 'warning';\n}\n\n// Context interface\ninterface ToastContextType {\n  showToast: (message: string, variant?: ToastItem['variant']) => void;\n}\n\n// Create context\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\n\n// Hook to use toast context\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n\n// ToastProvider component\ninterface ToastProviderProps {\n  children: React.ReactNode;\n}\n\nexport const ToastProvider: React.FC<ToastProviderProps> = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastItem[]>([]);\n\n  const showToast = useCallback((message: string, variant: ToastItem['variant'] = 'error') => {\n    const id = Math.random().toString(36).substr(2, 9);\n    const newToast: ToastItem = { id, message, variant };\n    \n    setToasts(prev => [...prev, newToast]);\n  }, []);\n\n  const removeToast = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  // Get variant-specific styles\n  const getVariantStyles = (variant: ToastItem['variant']) => {\n    switch (variant) {\n      case 'success':\n        return 'bg-green-500 text-white border-green-600';\n      case 'warning':\n        return 'bg-yellow-500 text-white border-yellow-600';\n      case 'info':\n        return 'bg-blue-500 text-white border-blue-600';\n      case 'error':\n      default:\n        return 'bg-red-500 text-white border-red-600';\n    }\n  };\n\n  return (\n    <ToastContext.Provider value={{ showToast }}>\n      <Toast.Provider\n        swipeDirection=\"right\"\n        duration={5000}\n      >\n        {children}\n        \n        {/* Toast viewport */}\n        <Toast.Viewport className=\"fixed top-4 right-4 z-50 flex flex-col gap-2 w-full max-w-sm\" />\n        \n        {/* Render toasts */}\n        {toasts.map((toast) => (\n          <Toast.Root\n            key={toast.id}\n            className={`\n              flex items-center justify-between p-4 rounded-lg shadow-lg border\n              ${getVariantStyles(toast.variant)}\n              data-[state=open]:animate-slideDown\n              data-[state=closed]:animate-slideUp\n              data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)]\n              data-[swipe=cancel]:translate-x-0\n              data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)]\n            `}\n            onOpenChange={(open) => {\n              if (!open) {\n                removeToast(toast.id);\n              }\n            }}\n          >\n            <div className=\"flex-1\">\n              <Toast.Title className=\"text-sm font-medium\">\n                {toast.message}\n              </Toast.Title>\n            </div>\n            \n            <Toast.Close className=\"ml-4 text-white/80 hover:text-white transition-colors\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                <path\n                  d=\"M12 4L4 12M4 4L12 12\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </Toast.Close>\n          </Toast.Root>\n        ))}\n      </Toast.Provider>\n    </ToastContext.Provider>\n  );\n};\n"],"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","ignoreList":[]}