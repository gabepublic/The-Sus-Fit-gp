{"version":3,"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/jest.setup.js"],"sourcesContent":["// Polyfill Web APIs for MSW v2 in Node.js environment\nconst { TextEncoder, TextDecoder } = require('util')\nconst { ReadableStream, WritableStream, TransformStream } = require('stream/web')\n\n// Set globals before requiring undici\nglobal.TextEncoder = TextEncoder\nglobal.TextDecoder = TextDecoder\nglobal.ReadableStream = ReadableStream\nglobal.WritableStream = WritableStream\nglobal.TransformStream = TransformStream\n\n// Mock MessagePort for undici\nglobal.MessagePort = class MessagePort {\n  constructor() {}\n  postMessage() {}\n  start() {}\n  close() {}\n}\n\n// Mock BroadcastChannel for MSW\nglobal.BroadcastChannel = class BroadcastChannel {\n  constructor(name) {\n    this.name = name\n  }\n  postMessage() {}\n  close() {}\n  addEventListener() {}\n  removeEventListener() {}\n}\n\n// Now require undici after globals are set\nconst { fetch, Request, Response, Headers } = require('undici')\nglobal.fetch = jest.fn(fetch)\nglobal.Request = Request\nglobal.Response = Response\nglobal.Headers = Headers\n\nimport '@testing-library/jest-dom'\n\n// Mock Next.js router\njest.mock('next/router', () => ({\n  useRouter() {\n    return {\n      route: '/',\n      pathname: '/',\n      query: {},\n      asPath: '/',\n      push: jest.fn(),\n      pop: jest.fn(),\n      reload: jest.fn(),\n      back: jest.fn(),\n      prefetch: jest.fn(),\n      beforePopState: jest.fn(),\n      events: {\n        on: jest.fn(),\n        off: jest.fn(),\n        emit: jest.fn(),\n      },\n    }\n  },\n}))\n\n// Mock Next.js navigation\njest.mock('next/navigation', () => ({\n  useRouter() {\n    return {\n      push: jest.fn(),\n      replace: jest.fn(),\n      prefetch: jest.fn(),\n      back: jest.fn(),\n      forward: jest.fn(),\n      refresh: jest.fn(),\n    }\n  },\n  useSearchParams() {\n    return new URLSearchParams()\n  },\n  usePathname() {\n    return '/'\n  },\n}))\n\n// Next.js response is now part of next/server, so we don't need a separate mock for next/response\n\n// Mock Next.js server (required by subtask)\njest.mock('next/server', () => ({\n  NextRequest: class NextRequest {\n    constructor(input, init = {}) {\n      this.url = typeof input === 'string' ? input : input.url\n      this.method = init.method || 'GET'\n      this.headers = new Headers(init.headers || {})\n      this.body = init.body\n    }\n    \n    json() {\n      return Promise.resolve(JSON.parse(this.body || '{}'))\n    }\n    \n    text() {\n      return Promise.resolve(this.body || '')\n    }\n  },\n  NextResponse: {\n    json: jest.fn((data, init) => ({\n      json: () => Promise.resolve(data),\n      status: init?.status || 200,\n      headers: init?.headers || {},\n    })),\n    redirect: jest.fn((url) => ({\n      status: 302,\n      headers: { location: url },\n    })),\n    rewrite: jest.fn((url) => ({\n      status: 200,\n      headers: { 'x-rewrite-url': url },\n    })),\n  },\n}))\n\n// Mock environment variables\nprocess.env.NEXT_PUBLIC_APP_URL = 'http://localhost:3000'\n\n// Mock browser APIs that are not available in Node.js\nglobal.ResizeObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}))\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = jest.fn().mockImplementation(() => ({\n  observe: jest.fn(),\n  unobserve: jest.fn(),\n  disconnect: jest.fn(),\n}))\n\n// Mock matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n})\n\n// Mock window.scrollTo\nObject.defineProperty(window, 'scrollTo', {\n  writable: true,\n  value: jest.fn(),\n})\n\n// Mock localStorage for business layer services (only for non-jsdom environments)\n// Tests with @jest-environment jsdom should use their own localStorage mock\nif (typeof window === 'undefined') {\n  const localStorageMock = {\n    getItem: jest.fn((key) => null),\n    setItem: jest.fn((key, value) => undefined),\n    removeItem: jest.fn((key) => undefined),\n    clear: jest.fn(() => undefined),\n    length: 0,\n    key: jest.fn((index) => null)\n  }\n\n  // Make localStorage available globally for Node.js environment\n  global.localStorage = localStorageMock\n  \n  // Ensure window object exists in test environment\n  global.window = {\n    localStorage: localStorageMock,\n    // Add other window properties as needed\n    location: {\n      href: 'http://localhost:3000',\n      origin: 'http://localhost:3000',\n      pathname: '/',\n      search: '',\n      hash: ''\n    }\n  }\n}\n\n// Mock localStorage globally for all tests\nObject.defineProperty(global, 'localStorage', {\n  value: {\n    getItem: jest.fn(() => null),\n    setItem: jest.fn(),\n    removeItem: jest.fn(),\n    clear: jest.fn(),\n    length: 0,\n    key: jest.fn(() => null)\n  },\n  writable: true\n});\n\n// Suppress console.error for expected test errors\nconst originalError = console.error\nconsole.error = (...args) => {\n  // Suppress environment validation errors in tests\n  if (typeof args[0] === 'string' && args[0].includes('Environment validation failed:')) {\n    return\n  }\n  // Suppress expected API errors in tests\n  if (typeof args[0] === 'string' && args[0].includes('Try-on API error:')) {\n    return\n  }\n  originalError.call(console, ...args)\n}"],"names":["jest","mock","useRouter","route","pathname","query","asPath","push","fn","pop","reload","back","prefetch","beforePopState","events","on","off","emit","replace","forward","refresh","useSearchParams","URLSearchParams","usePathname","NextRequest","constructor","input","init","url","method","headers","Headers","body","json","Promise","resolve","JSON","parse","text","NextResponse","data","status","redirect","location","rewrite","TextEncoder","TextDecoder","require","ReadableStream","WritableStream","TransformStream","global","MessagePort","postMessage","start","close","BroadcastChannel","name","addEventListener","removeEventListener","fetch","Request","Response","process","env","NEXT_PUBLIC_APP_URL","ResizeObserver","mockImplementation","observe","unobserve","disconnect","IntersectionObserver","Object","defineProperty","window","writable","value","matches","media","onchange","addListener","removeListener","dispatchEvent","localStorageMock","getItem","key","setItem","undefined","removeItem","clear","length","index","localStorage","href","origin","search","hash","originalError","console","error","args","includes","call"],"mappings":"AAAA,sDAAsD;;AAuCtD,sBAAsB;AACtBA,KAAKC,IAAI,CAAC,eAAe,IAAO,CAAA;QAC9BC;YACE,OAAO;gBACLC,OAAO;gBACPC,UAAU;gBACVC,OAAO,CAAC;gBACRC,QAAQ;gBACRC,MAAMP,KAAKQ,EAAE;gBACbC,KAAKT,KAAKQ,EAAE;gBACZE,QAAQV,KAAKQ,EAAE;gBACfG,MAAMX,KAAKQ,EAAE;gBACbI,UAAUZ,KAAKQ,EAAE;gBACjBK,gBAAgBb,KAAKQ,EAAE;gBACvBM,QAAQ;oBACNC,IAAIf,KAAKQ,EAAE;oBACXQ,KAAKhB,KAAKQ,EAAE;oBACZS,MAAMjB,KAAKQ,EAAE;gBACf;YACF;QACF;IACF,CAAA;AAEA,0BAA0B;AAC1BR,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCC;YACE,OAAO;gBACLK,MAAMP,KAAKQ,EAAE;gBACbU,SAASlB,KAAKQ,EAAE;gBAChBI,UAAUZ,KAAKQ,EAAE;gBACjBG,MAAMX,KAAKQ,EAAE;gBACbW,SAASnB,KAAKQ,EAAE;gBAChBY,SAASpB,KAAKQ,EAAE;YAClB;QACF;QACAa;YACE,OAAO,IAAIC;QACb;QACAC;YACE,OAAO;QACT;IACF,CAAA;AAEA,kGAAkG;AAElG,4CAA4C;AAC5CvB,KAAKC,IAAI,CAAC,eAAe,IAAO,CAAA;QAC9BuB,aAAa,MAAMA;YACjBC,YAAYC,KAAK,EAAEC,OAAO,CAAC,CAAC,CAAE;gBAC5B,IAAI,CAACC,GAAG,GAAG,OAAOF,UAAU,WAAWA,QAAQA,MAAME,GAAG;gBACxD,IAAI,CAACC,MAAM,GAAGF,KAAKE,MAAM,IAAI;gBAC7B,IAAI,CAACC,OAAO,GAAG,IAAIC,QAAQJ,KAAKG,OAAO,IAAI,CAAC;gBAC5C,IAAI,CAACE,IAAI,GAAGL,KAAKK,IAAI;YACvB;YAEAC,OAAO;gBACL,OAAOC,QAAQC,OAAO,CAACC,KAAKC,KAAK,CAAC,IAAI,CAACL,IAAI,IAAI;YACjD;YAEAM,OAAO;gBACL,OAAOJ,QAAQC,OAAO,CAAC,IAAI,CAACH,IAAI,IAAI;YACtC;QACF;QACAO,cAAc;YACZN,MAAMjC,KAAKQ,EAAE,CAAC,CAACgC,MAAMb,OAAU,CAAA;oBAC7BM,MAAM,IAAMC,QAAQC,OAAO,CAACK;oBAC5BC,QAAQd,MAAMc,UAAU;oBACxBX,SAASH,MAAMG,WAAW,CAAC;gBAC7B,CAAA;YACAY,UAAU1C,KAAKQ,EAAE,CAAC,CAACoB,MAAS,CAAA;oBAC1Ba,QAAQ;oBACRX,SAAS;wBAAEa,UAAUf;oBAAI;gBAC3B,CAAA;YACAgB,SAAS5C,KAAKQ,EAAE,CAAC,CAACoB,MAAS,CAAA;oBACzBa,QAAQ;oBACRX,SAAS;wBAAE,iBAAiBF;oBAAI;gBAClC,CAAA;QACF;IACF,CAAA;;;;QAhFO;AApCP,MAAM,EAAEiB,WAAW,EAAEC,WAAW,EAAE,GAAGC,QAAQ;AAC7C,MAAM,EAAEC,cAAc,EAAEC,cAAc,EAAEC,eAAe,EAAE,GAAGH,QAAQ;AAEpE,sCAAsC;AACtCI,OAAON,WAAW,GAAGA;AACrBM,OAAOL,WAAW,GAAGA;AACrBK,OAAOH,cAAc,GAAGA;AACxBG,OAAOF,cAAc,GAAGA;AACxBE,OAAOD,eAAe,GAAGA;AAEzB,8BAA8B;AAC9BC,OAAOC,WAAW,GAAG,MAAMA;IACzB3B,aAAc,CAAC;IACf4B,cAAc,CAAC;IACfC,QAAQ,CAAC;IACTC,QAAQ,CAAC;AACX;AAEA,gCAAgC;AAChCJ,OAAOK,gBAAgB,GAAG,MAAMA;IAC9B/B,YAAYgC,IAAI,CAAE;QAChB,IAAI,CAACA,IAAI,GAAGA;IACd;IACAJ,cAAc,CAAC;IACfE,QAAQ,CAAC;IACTG,mBAAmB,CAAC;IACpBC,sBAAsB,CAAC;AACzB;AAEA,2CAA2C;AAC3C,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,QAAQ,EAAE/B,OAAO,EAAE,GAAGgB,QAAQ;AACtDI,OAAOS,KAAK,GAAG5D,KAAKQ,EAAE,CAACoD;AACvBT,OAAOU,OAAO,GAAGA;AACjBV,OAAOW,QAAQ,GAAGA;AAClBX,OAAOpB,OAAO,GAAGA;AAoFjB,6BAA6B;AAC7BgC,QAAQC,GAAG,CAACC,mBAAmB,GAAG;AAElC,sDAAsD;AACtDd,OAAOe,cAAc,GAAGlE,KAAKQ,EAAE,GAAG2D,kBAAkB,CAAC,IAAO,CAAA;QAC1DC,SAASpE,KAAKQ,EAAE;QAChB6D,WAAWrE,KAAKQ,EAAE;QAClB8D,YAAYtE,KAAKQ,EAAE;IACrB,CAAA;AAEA,4BAA4B;AAC5B2C,OAAOoB,oBAAoB,GAAGvE,KAAKQ,EAAE,GAAG2D,kBAAkB,CAAC,IAAO,CAAA;QAChEC,SAASpE,KAAKQ,EAAE;QAChB6D,WAAWrE,KAAKQ,EAAE;QAClB8D,YAAYtE,KAAKQ,EAAE;IACrB,CAAA;AAEA,kBAAkB;AAClBgE,OAAOC,cAAc,CAACC,QAAQ,cAAc;IAC1CC,UAAU;IACVC,OAAO5E,KAAKQ,EAAE,GAAG2D,kBAAkB,CAAC9D,CAAAA,QAAU,CAAA;YAC5CwE,SAAS;YACTC,OAAOzE;YACP0E,UAAU;YACVC,aAAahF,KAAKQ,EAAE;YACpByE,gBAAgBjF,KAAKQ,EAAE;YACvBkD,kBAAkB1D,KAAKQ,EAAE;YACzBmD,qBAAqB3D,KAAKQ,EAAE;YAC5B0E,eAAelF,KAAKQ,EAAE;QACxB,CAAA;AACF;AAEA,uBAAuB;AACvBgE,OAAOC,cAAc,CAACC,QAAQ,YAAY;IACxCC,UAAU;IACVC,OAAO5E,KAAKQ,EAAE;AAChB;AAEA,kFAAkF;AAClF,4EAA4E;AAC5E,IAAI,OAAOkE,WAAW,aAAa;IACjC,MAAMS,mBAAmB;QACvBC,SAASpF,KAAKQ,EAAE,CAAC,CAAC6E,MAAQ;QAC1BC,SAAStF,KAAKQ,EAAE,CAAC,CAAC6E,KAAKT,QAAUW;QACjCC,YAAYxF,KAAKQ,EAAE,CAAC,CAAC6E,MAAQE;QAC7BE,OAAOzF,KAAKQ,EAAE,CAAC,IAAM+E;QACrBG,QAAQ;QACRL,KAAKrF,KAAKQ,EAAE,CAAC,CAACmF,QAAU;IAC1B;IAEA,+DAA+D;IAC/DxC,OAAOyC,YAAY,GAAGT;IAEtB,kDAAkD;IAClDhC,OAAOuB,MAAM,GAAG;QACdkB,cAAcT;QACd,wCAAwC;QACxCxC,UAAU;YACRkD,MAAM;YACNC,QAAQ;YACR1F,UAAU;YACV2F,QAAQ;YACRC,MAAM;QACR;IACF;AACF;AAEA,2CAA2C;AAC3CxB,OAAOC,cAAc,CAACtB,QAAQ,gBAAgB;IAC5CyB,OAAO;QACLQ,SAASpF,KAAKQ,EAAE,CAAC,IAAM;QACvB8E,SAAStF,KAAKQ,EAAE;QAChBgF,YAAYxF,KAAKQ,EAAE;QACnBiF,OAAOzF,KAAKQ,EAAE;QACdkF,QAAQ;QACRL,KAAKrF,KAAKQ,EAAE,CAAC,IAAM;IACrB;IACAmE,UAAU;AACZ;AAEA,kDAAkD;AAClD,MAAMsB,gBAAgBC,QAAQC,KAAK;AACnCD,QAAQC,KAAK,GAAG,CAAC,GAAGC;IAClB,kDAAkD;IAClD,IAAI,OAAOA,IAAI,CAAC,EAAE,KAAK,YAAYA,IAAI,CAAC,EAAE,CAACC,QAAQ,CAAC,mCAAmC;QACrF;IACF;IACA,wCAAwC;IACxC,IAAI,OAAOD,IAAI,CAAC,EAAE,KAAK,YAAYA,IAAI,CAAC,EAAE,CAACC,QAAQ,CAAC,sBAAsB;QACxE;IACF;IACAJ,cAAcK,IAAI,CAACJ,YAAYE;AACjC"}