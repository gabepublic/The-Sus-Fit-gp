67a24db0a011dfc0a75060dfb7717fa7
// Comprehensive Error Handling for Try-On Mutations
// Error classification, user-friendly messages, and recovery suggestions
"use strict";

/* istanbul ignore next */
function cov_2pf6b77u9z() {
  var path = "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/errorHandling.ts";
  var hash = "a0c1f1457e7175e6524972c72ff601eaffe6c474";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/errorHandling.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "2": {
        start: {
          line: 8,
          column: 24
        },
        end: {
          line: 11,
          column: 7
        }
      },
      "3": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 29
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 37
        }
      },
      "9": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 30
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 39
        }
      },
      "11": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 43
        }
      },
      "12": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 32
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 35
        }
      },
      "14": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "15": {
        start: {
          line: 48,
          column: 15
        },
        end: {
          line: 48,
          column: 43
        }
      },
      "16": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "17": {
        start: {
          line: 50,
          column: 34
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "18": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 47
        }
      },
      "19": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 41
        }
      },
      "20": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 41
        }
      },
      "21": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "22": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 59
        }
      },
      "23": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 47
        }
      },
      "24": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 55
        }
      },
      "25": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 41
        }
      },
      "26": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "27": {
        start: {
          line: 61,
          column: 34
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "28": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 33
        }
      },
      "29": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 39
        }
      },
      "30": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 35
        }
      },
      "31": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 43
        }
      },
      "32": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 25
        }
      },
      "33": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "34": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "35": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 56
        }
      },
      "36": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 22
        }
      },
      "37": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 57
        }
      },
      "38": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 22
        }
      },
      "39": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 54
        }
      },
      "40": {
        start: {
          line: 97,
          column: 22
        },
        end: {
          line: 97,
          column: 46
        }
      },
      "41": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 25
        }
      },
      "42": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 23
        }
      },
      "43": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "44": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 122,
          column: 10
        }
      },
      "45": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "46": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "47": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "48": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 162,
          column: 10
        }
      },
      "49": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "50": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "51": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 254,
          column: 5
        }
      },
      "52": {
        start: {
          line: 188,
          column: 30
        },
        end: {
          line: 188,
          column: 35
        }
      },
      "53": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "54": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 208,
          column: 14
        }
      },
      "55": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "56": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 233,
          column: 14
        }
      },
      "57": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "58": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 252,
          column: 14
        }
      },
      "59": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 306,
          column: 5
        }
      },
      "60": {
        start: {
          line: 257,
          column: 24
        },
        end: {
          line: 257,
          column: 51
        }
      },
      "61": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "62": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 280,
          column: 14
        }
      },
      "63": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "64": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 304,
          column: 14
        }
      },
      "65": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 327,
          column: 6
        }
      },
      "66": {
        start: {
          line: 330,
          column: 28
        },
        end: {
          line: 330,
          column: 62
        }
      },
      "67": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 331,
          column: 51
        }
      },
      "68": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 332,
          column: 27
        }
      },
      "69": {
        start: {
          line: 335,
          column: 23
        },
        end: {
          line: 335,
          column: 48
        }
      },
      "70": {
        start: {
          line: 336,
          column: 4
        },
        end: {
          line: 336,
          column: 34
        }
      },
      "71": {
        start: {
          line: 339,
          column: 23
        },
        end: {
          line: 339,
          column: 48
        }
      },
      "72": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 340,
          column: 32
        }
      },
      "73": {
        start: {
          line: 343,
          column: 23
        },
        end: {
          line: 343,
          column: 48
        }
      },
      "74": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 344,
          column: 38
        }
      },
      "75": {
        start: {
          line: 347,
          column: 23
        },
        end: {
          line: 347,
          column: 48
        }
      },
      "76": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 370,
          column: 5
        }
      },
      "77": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 36
        }
      },
      "78": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 352,
          column: 18
        }
      },
      "79": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 39
        }
      },
      "80": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 18
        }
      },
      "81": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 357,
          column: 40
        }
      },
      "82": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 18
        }
      },
      "83": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 35
        }
      },
      "84": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 18
        }
      },
      "85": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 45
        }
      },
      "86": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 18
        }
      },
      "87": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 40
        }
      },
      "88": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 18
        }
      },
      "89": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 369,
          column: 28
        }
      },
      "90": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 376,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 16
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 14,
            column: 25
          }
        },
        loc: {
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 19
          },
          end: {
            line: 17,
            column: 20
          }
        },
        loc: {
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 20,
            column: 20
          }
        },
        loc: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 25
          }
        },
        loc: {
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 27
          },
          end: {
            line: 26,
            column: 28
          }
        },
        loc: {
          start: {
            line: 26,
            column: 38
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 20
          },
          end: {
            line: 29,
            column: 21
          }
        },
        loc: {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 30
          }
        },
        loc: {
          start: {
            line: 32,
            column: 40
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 35,
            column: 34
          }
        },
        loc: {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 23
          }
        },
        loc: {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 26
          }
        },
        loc: {
          start: {
            line: 41,
            column: 36
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 21
          }
        },
        loc: {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 50,
            column: 35
          }
        },
        loc: {
          start: {
            line: 50,
            column: 58
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 50
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 61,
            column: 34
          },
          end: {
            line: 61,
            column: 35
          }
        },
        loc: {
          start: {
            line: 61,
            column: 58
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 61
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 39
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 69
      },
      "15": {
        name: "setErrorLogger",
        decl: {
          start: {
            line: 98,
            column: 9
          },
          end: {
            line: 98,
            column: 23
          }
        },
        loc: {
          start: {
            line: 98,
            column: 32
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 98
      },
      "16": {
        name: "getErrorLogger",
        decl: {
          start: {
            line: 101,
            column: 9
          },
          end: {
            line: 101,
            column: 23
          }
        },
        loc: {
          start: {
            line: 101,
            column: 26
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 101
      },
      "17": {
        name: "classifyTryonError",
        decl: {
          start: {
            line: 104,
            column: 9
          },
          end: {
            line: 104,
            column: 27
          }
        },
        loc: {
          start: {
            line: 104,
            column: 44
          },
          end: {
            line: 328,
            column: 1
          }
        },
        line: 104
      },
      "18": {
        name: "logAndClassifyError",
        decl: {
          start: {
            line: 329,
            column: 9
          },
          end: {
            line: 329,
            column: 28
          }
        },
        loc: {
          start: {
            line: 329,
            column: 45
          },
          end: {
            line: 333,
            column: 1
          }
        },
        line: 329
      },
      "19": {
        name: "getUserFriendlyErrorMessage",
        decl: {
          start: {
            line: 334,
            column: 9
          },
          end: {
            line: 334,
            column: 36
          }
        },
        loc: {
          start: {
            line: 334,
            column: 44
          },
          end: {
            line: 337,
            column: 1
          }
        },
        line: 334
      },
      "20": {
        name: "isErrorRetryable",
        decl: {
          start: {
            line: 338,
            column: 9
          },
          end: {
            line: 338,
            column: 25
          }
        },
        loc: {
          start: {
            line: 338,
            column: 33
          },
          end: {
            line: 341,
            column: 1
          }
        },
        line: 338
      },
      "21": {
        name: "getErrorRecoveryActions",
        decl: {
          start: {
            line: 342,
            column: 9
          },
          end: {
            line: 342,
            column: 32
          }
        },
        loc: {
          start: {
            line: 342,
            column: 40
          },
          end: {
            line: 345,
            column: 1
          }
        },
        line: 342
      },
      "22": {
        name: "formatErrorForDisplay",
        decl: {
          start: {
            line: 346,
            column: 9
          },
          end: {
            line: 346,
            column: 30
          }
        },
        loc: {
          start: {
            line: 346,
            column: 38
          },
          end: {
            line: 377,
            column: 1
          }
        },
        line: 346
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 28
          }
        }, {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 86,
            column: 22
          }
        }, {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 22
          }
        }, {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 91,
            column: 54
          }
        }],
        line: 82
      },
      "1": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "2": {
        loc: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "3": {
        loc: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "4": {
        loc: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "5": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 164,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 164,
            column: 54
          }
        }, {
          start: {
            line: 164,
            column: 58
          },
          end: {
            line: 164,
            column: 112
          }
        }],
        line: 164
      },
      "6": {
        loc: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "7": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 187,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 187,
            column: 13
          }
        }, {
          start: {
            line: 187,
            column: 17
          },
          end: {
            line: 187,
            column: 42
          }
        }, {
          start: {
            line: 187,
            column: 46
          },
          end: {
            line: 187,
            column: 62
          }
        }],
        line: 187
      },
      "8": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "9": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "10": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 32
          }
        }, {
          start: {
            line: 211,
            column: 36
          },
          end: {
            line: 211,
            column: 63
          }
        }],
        line: 211
      },
      "11": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "12": {
        loc: {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 32
          }
        }, {
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 236,
            column: 63
          }
        }, {
          start: {
            line: 236,
            column: 67
          },
          end: {
            line: 236,
            column: 93
          }
        }],
        line: 236
      },
      "13": {
        loc: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "14": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "15": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 258,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 258,
            column: 39
          }
        }, {
          start: {
            line: 258,
            column: 43
          },
          end: {
            line: 258,
            column: 70
          }
        }],
        line: 258
      },
      "16": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "17": {
        loc: {
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 282,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 282,
            column: 39
          }
        }, {
          start: {
            line: 282,
            column: 43
          },
          end: {
            line: 282,
            column: 68
          }
        }, {
          start: {
            line: 282,
            column: 72
          },
          end: {
            line: 282,
            column: 102
          }
        }],
        line: 282
      },
      "18": {
        loc: {
          start: {
            line: 313,
            column: 26
          },
          end: {
            line: 313,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 51
          },
          end: {
            line: 313,
            column: 64
          }
        }, {
          start: {
            line: 313,
            column: 67
          },
          end: {
            line: 313,
            column: 91
          }
        }],
        line: 313
      },
      "19": {
        loc: {
          start: {
            line: 349,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 352,
            column: 18
          }
        }, {
          start: {
            line: 353,
            column: 8
          },
          end: {
            line: 355,
            column: 18
          }
        }, {
          start: {
            line: 356,
            column: 8
          },
          end: {
            line: 358,
            column: 18
          }
        }, {
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 361,
            column: 18
          }
        }, {
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 364,
            column: 18
          }
        }, {
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 367,
            column: 18
          }
        }, {
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 369,
            column: 28
          }
        }],
        line: 349
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/utils/errorHandling.ts"],
      sourcesContent: ["// Comprehensive Error Handling for Try-On Mutations\n// Error classification, user-friendly messages, and recovery suggestions\n\nimport { \n  FileTypeNotSupportedError,\n  FileTooLargeError,\n  CompressionFailedError\n} from '../../utils/image';\nimport {\n  ImageProcessingError,\n  ImageDimensionError\n} from './imageProcessing';\nimport type { TryonMutationError } from '../types/tryon.types';\n\n/**\n * Error categories for classification\n */\nexport enum ErrorCategory {\n  VALIDATION = 'validation',\n  NETWORK = 'network',\n  TIMEOUT = 'timeout',\n  API_SERVER = 'api_server',\n  IMAGE_PROCESSING = 'image_processing',\n  RATE_LIMIT = 'rate_limit',\n  AUTHENTICATION = 'authentication',\n  UNKNOWN = 'unknown'\n}\n\n/**\n * Error severity levels\n */\nexport enum ErrorSeverity {\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  CRITICAL = 'critical'\n}\n\n/**\n * Error recovery suggestions\n */\nexport interface ErrorRecoveryAction {\n  /** Action type identifier */\n  type: 'retry' | 'reduce_image_size' | 'check_connection' | 'contact_support' | 'try_different_image' | 'wait_and_retry';\n  /** User-friendly description of the action */\n  description: string;\n  /** Whether this action can be automated */\n  automated?: boolean;\n  /** Estimated time to wait before retry (in seconds) */\n  waitTime?: number;\n}\n\n/**\n * Comprehensive error information\n */\nexport interface ClassifiedError {\n  /** Original error object */\n  originalError: Error | TryonMutationError | unknown;\n  /** Error category for handling logic */\n  category: ErrorCategory;\n  /** Severity level */\n  severity: ErrorSeverity;\n  /** User-friendly error message */\n  userMessage: string;\n  /** Technical details for developers */\n  technicalMessage: string;\n  /** Suggested recovery actions */\n  recoveryActions: ErrorRecoveryAction[];\n  /** Whether the error is retryable */\n  retryable: boolean;\n  /** Error code for programmatic handling */\n  errorCode: string;\n  /** Additional context data */\n  context?: Record<string, unknown>;\n}\n\n/**\n * Error logging interface\n */\nexport interface ErrorLogger {\n  logError(error: ClassifiedError, additionalContext?: Record<string, unknown>): void;\n}\n\n/**\n * Default console-based error logger\n */\nexport class ConsoleErrorLogger implements ErrorLogger {\n  logError(error: ClassifiedError, additionalContext?: Record<string, unknown>): void {\n    const logData = {\n      timestamp: new Date().toISOString(),\n      category: error.category,\n      severity: error.severity,\n      errorCode: error.errorCode,\n      userMessage: error.userMessage,\n      technicalMessage: error.technicalMessage,\n      retryable: error.retryable,\n      originalError: error.originalError,\n      context: error.context,\n      additionalContext\n    };\n\n    switch (error.severity) {\n      case ErrorSeverity.CRITICAL:\n      case ErrorSeverity.HIGH:\n        console.error('[TryOn Error]', logData);\n        break;\n      case ErrorSeverity.MEDIUM:\n        console.warn('[TryOn Warning]', logData);\n        break;\n      default:\n        console.info('[TryOn Info]', logData);\n    }\n  }\n}\n\n/**\n * Global error logger instance\n */\nlet errorLogger: ErrorLogger = new ConsoleErrorLogger();\n\n/**\n * Set custom error logger\n */\nexport function setErrorLogger(logger: ErrorLogger): void {\n  errorLogger = logger;\n}\n\n/**\n * Get current error logger\n */\nexport function getErrorLogger(): ErrorLogger {\n  return errorLogger;\n}\n\n/**\n * Classify and enhance error with user-friendly information\n */\nexport function classifyTryonError(error: unknown, context?: Record<string, unknown>): ClassifiedError {\n  // Handle known error types\n  if (error instanceof FileTypeNotSupportedError) {\n    return {\n      originalError: error,\n      category: ErrorCategory.VALIDATION,\n      severity: ErrorSeverity.LOW,\n      userMessage: 'Please select a valid image file (JPEG, PNG, WebP, or GIF).',\n      technicalMessage: `File type validation failed: ${error.message}`,\n      errorCode: 'INVALID_FILE_TYPE',\n      retryable: false,\n      recoveryActions: [\n        {\n          type: 'try_different_image',\n          description: 'Select a different image file in JPEG, PNG, WebP, or GIF format'\n        }\n      ],\n      context\n    };\n  }\n\n  if (error instanceof FileTooLargeError) {\n    return {\n      originalError: error,\n      category: ErrorCategory.VALIDATION,\n      severity: ErrorSeverity.MEDIUM,\n      userMessage: 'Image file is too large. Please select an image under 5MB or try compressing it.',\n      technicalMessage: `File size validation failed: ${error.message}`,\n      errorCode: 'FILE_TOO_LARGE',\n      retryable: false,\n      recoveryActions: [\n        {\n          type: 'reduce_image_size',\n          description: 'Compress or resize your image to under 5MB'\n        },\n        {\n          type: 'try_different_image',\n          description: 'Select a smaller image file'\n        }\n      ],\n      context\n    };\n  }\n\n  if (error instanceof ImageDimensionError) {\n    return {\n      originalError: error,\n      category: ErrorCategory.VALIDATION,\n      severity: ErrorSeverity.MEDIUM,\n      userMessage: 'Image dimensions are not suitable. Please use an image that is at least 512x512 pixels.',\n      technicalMessage: `Image dimension validation failed: ${error.message}`,\n      errorCode: 'INVALID_DIMENSIONS',\n      retryable: false,\n      recoveryActions: [\n        {\n          type: 'try_different_image',\n          description: 'Select an image with dimensions of at least 512x512 pixels'\n        }\n      ],\n      context\n    };\n  }\n\n  if (error instanceof CompressionFailedError || error instanceof ImageProcessingError) {\n    return {\n      originalError: error,\n      category: ErrorCategory.IMAGE_PROCESSING,\n      severity: ErrorSeverity.MEDIUM,\n      userMessage: 'Unable to process the image. Please try a different image or reduce the file size.',\n      technicalMessage: `Image processing failed: ${error.message}`,\n      errorCode: 'IMAGE_PROCESSING_FAILED',\n      retryable: false,\n      recoveryActions: [\n        {\n          type: 'try_different_image',\n          description: 'Try selecting a different image'\n        },\n        {\n          type: 'reduce_image_size',\n          description: 'Use a smaller or simpler image'\n        }\n      ],\n      context\n    };\n  }\n\n  // Handle TryonMutationError (API errors)\n  if (error && typeof error === 'object' && 'error' in error) {\n    const mutationError = error as TryonMutationError;\n    \n    // Rate limiting\n    if (mutationError.status === 429) {\n      return {\n        originalError: error,\n        category: ErrorCategory.RATE_LIMIT,\n        severity: ErrorSeverity.MEDIUM,\n        userMessage: 'Too many requests. Please wait a moment before trying again.',\n        technicalMessage: 'Rate limit exceeded',\n        errorCode: 'RATE_LIMITED',\n        retryable: true,\n        recoveryActions: [\n          {\n            type: 'wait_and_retry',\n            description: 'Wait 60 seconds and try again',\n            automated: true,\n            waitTime: 60\n          }\n        ],\n        context\n      };\n    }\n\n    // Server errors\n    if (mutationError.status && mutationError.status >= 500) {\n      return {\n        originalError: error,\n        category: ErrorCategory.API_SERVER,\n        severity: ErrorSeverity.HIGH,\n        userMessage: 'Server is temporarily unavailable. Please try again in a few moments.',\n        technicalMessage: `Server error: ${mutationError.error}`,\n        errorCode: 'SERVER_ERROR',\n        retryable: true,\n        recoveryActions: [\n          {\n            type: 'retry',\n            description: 'Try again in a few moments',\n            automated: true,\n            waitTime: 30\n          },\n          {\n            type: 'check_connection',\n            description: 'Check your internet connection'\n          }\n        ],\n        context\n      };\n    }\n\n    // Client errors (400-499)\n    if (mutationError.status && mutationError.status >= 400 && mutationError.status < 500) {\n      return {\n        originalError: error,\n        category: ErrorCategory.VALIDATION,\n        severity: ErrorSeverity.MEDIUM,\n        userMessage: 'Request could not be processed. Please check your images and try again.',\n        technicalMessage: `Client error: ${mutationError.error}`,\n        errorCode: 'CLIENT_ERROR',\n        retryable: false,\n        recoveryActions: [\n          {\n            type: 'try_different_image',\n            description: 'Try using different images'\n          }\n        ],\n        context\n      };\n    }\n  }\n\n  // Handle network/timeout errors\n  if (error instanceof Error) {\n    const message = error.message.toLowerCase();\n    \n    if (message.includes('timeout') || message.includes('aborted')) {\n      return {\n        originalError: error,\n        category: ErrorCategory.TIMEOUT,\n        severity: ErrorSeverity.MEDIUM,\n        userMessage: 'Request timed out. Please check your connection and try again.',\n        technicalMessage: `Timeout error: ${error.message}`,\n        errorCode: 'REQUEST_TIMEOUT',\n        retryable: true,\n        recoveryActions: [\n          {\n            type: 'check_connection',\n            description: 'Check your internet connection'\n          },\n          {\n            type: 'retry',\n            description: 'Try again with a stable connection',\n            automated: true,\n            waitTime: 10\n          }\n        ],\n        context\n      };\n    }\n\n    if (message.includes('network') || message.includes('fetch') || message.includes('connection')) {\n      return {\n        originalError: error,\n        category: ErrorCategory.NETWORK,\n        severity: ErrorSeverity.MEDIUM,\n        userMessage: 'Network connection issue. Please check your internet and try again.',\n        technicalMessage: `Network error: ${error.message}`,\n        errorCode: 'NETWORK_ERROR',\n        retryable: true,\n        recoveryActions: [\n          {\n            type: 'check_connection',\n            description: 'Check your internet connection'\n          },\n          {\n            type: 'retry',\n            description: 'Try again when connection is stable',\n            automated: true,\n            waitTime: 15\n          }\n        ],\n        context\n      };\n    }\n  }\n\n  // Unknown error fallback\n  return {\n    originalError: error,\n    category: ErrorCategory.UNKNOWN,\n    severity: ErrorSeverity.HIGH,\n    userMessage: 'An unexpected error occurred. Please try again or contact support if the problem persists.',\n    technicalMessage: error instanceof Error ? error.message : 'Unknown error occurred',\n    errorCode: 'UNKNOWN_ERROR',\n    retryable: true,\n    recoveryActions: [\n      {\n        type: 'retry',\n        description: 'Try the operation again'\n      },\n      {\n        type: 'contact_support',\n        description: 'Contact support if the problem continues'\n      }\n    ],\n    context\n  };\n}\n\n/**\n * Log and classify error in one operation\n */\nexport function logAndClassifyError(\n  error: unknown, \n  context?: Record<string, unknown>\n): ClassifiedError {\n  const classifiedError = classifyTryonError(error, context);\n  errorLogger.logError(classifiedError, context);\n  return classifiedError;\n}\n\n/**\n * Get user-friendly error message\n */\nexport function getUserFriendlyErrorMessage(error: unknown): string {\n  const classified = classifyTryonError(error);\n  return classified.userMessage;\n}\n\n/**\n * Check if error is retryable\n */\nexport function isErrorRetryable(error: unknown): boolean {\n  const classified = classifyTryonError(error);\n  return classified.retryable;\n}\n\n/**\n * Get recovery actions for error\n */\nexport function getErrorRecoveryActions(error: unknown): ErrorRecoveryAction[] {\n  const classified = classifyTryonError(error);\n  return classified.recoveryActions;\n}\n\n/**\n * Format error for display in UI\n */\nexport function formatErrorForDisplay(error: unknown): {\n  title: string;\n  message: string;\n  actions: ErrorRecoveryAction[];\n  canRetry: boolean;\n} {\n  const classified = classifyTryonError(error);\n  \n  let title: string;\n  switch (classified.category) {\n    case ErrorCategory.VALIDATION:\n      title = 'Invalid Input';\n      break;\n    case ErrorCategory.NETWORK:\n      title = 'Connection Issue';\n      break;\n    case ErrorCategory.TIMEOUT:\n      title = 'Request Timed Out';\n      break;\n    case ErrorCategory.API_SERVER:\n      title = 'Server Error';\n      break;\n    case ErrorCategory.IMAGE_PROCESSING:\n      title = 'Image Processing Error';\n      break;\n    case ErrorCategory.RATE_LIMIT:\n      title = 'Too Many Requests';\n      break;\n    default:\n      title = 'Error';\n  }\n\n  return {\n    title,\n    message: classified.userMessage,\n    actions: classified.recoveryActions,\n    canRetry: classified.retryable\n  };\n}"],
      names: ["ConsoleErrorLogger", "ErrorCategory", "ErrorSeverity", "classifyTryonError", "formatErrorForDisplay", "getErrorLogger", "getErrorRecoveryActions", "getUserFriendlyErrorMessage", "isErrorRetryable", "logAndClassifyError", "setErrorLogger", "logError", "error", "additionalContext", "logData", "timestamp", "Date", "toISOString", "category", "severity", "errorCode", "userMessage", "technicalMessage", "retryable", "originalError", "context", "console", "warn", "info", "errorLogger", "logger", "FileTypeNotSupportedError", "message", "recoveryActions", "type", "description", "FileTooLargeError", "ImageDimensionError", "CompressionFailedError", "ImageProcessingError", "mutationError", "status", "automated", "waitTime", "Error", "toLowerCase", "includes", "classifiedError", "classified", "title", "actions", "canRetry"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a0c1f1457e7175e6524972c72ff601eaffe6c474"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2pf6b77u9z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2pf6b77u9z();
cov_2pf6b77u9z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[0]++;
  cov_2pf6b77u9z().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2pf6b77u9z().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2pf6b77u9z().s[3]++;
_export(exports, {
  ConsoleErrorLogger: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[1]++;
    cov_2pf6b77u9z().s[4]++;
    return ConsoleErrorLogger;
  },
  ErrorCategory: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[2]++;
    cov_2pf6b77u9z().s[5]++;
    return ErrorCategory;
  },
  ErrorSeverity: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[3]++;
    cov_2pf6b77u9z().s[6]++;
    return ErrorSeverity;
  },
  classifyTryonError: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[4]++;
    cov_2pf6b77u9z().s[7]++;
    return classifyTryonError;
  },
  formatErrorForDisplay: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[5]++;
    cov_2pf6b77u9z().s[8]++;
    return formatErrorForDisplay;
  },
  getErrorLogger: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[6]++;
    cov_2pf6b77u9z().s[9]++;
    return getErrorLogger;
  },
  getErrorRecoveryActions: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[7]++;
    cov_2pf6b77u9z().s[10]++;
    return getErrorRecoveryActions;
  },
  getUserFriendlyErrorMessage: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[8]++;
    cov_2pf6b77u9z().s[11]++;
    return getUserFriendlyErrorMessage;
  },
  isErrorRetryable: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[9]++;
    cov_2pf6b77u9z().s[12]++;
    return isErrorRetryable;
  },
  logAndClassifyError: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[10]++;
    cov_2pf6b77u9z().s[13]++;
    return logAndClassifyError;
  },
  setErrorLogger: function () {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[11]++;
    cov_2pf6b77u9z().s[14]++;
    return setErrorLogger;
  }
});
const _image =
/* istanbul ignore next */
(cov_2pf6b77u9z().s[15]++, require("../../utils/image"));
const _imageProcessing =
/* istanbul ignore next */
(cov_2pf6b77u9z().s[16]++, require("./imageProcessing"));
var ErrorCategory =
/* istanbul ignore next */
(/*#__PURE__*/cov_2pf6b77u9z().s[17]++, function (ErrorCategory) {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[12]++;
  cov_2pf6b77u9z().s[18]++;
  ErrorCategory["VALIDATION"] = "validation";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[19]++;
  ErrorCategory["NETWORK"] = "network";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[20]++;
  ErrorCategory["TIMEOUT"] = "timeout";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[21]++;
  ErrorCategory["API_SERVER"] = "api_server";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[22]++;
  ErrorCategory["IMAGE_PROCESSING"] = "image_processing";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[23]++;
  ErrorCategory["RATE_LIMIT"] = "rate_limit";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[24]++;
  ErrorCategory["AUTHENTICATION"] = "authentication";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[25]++;
  ErrorCategory["UNKNOWN"] = "unknown";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[26]++;
  return ErrorCategory;
}({}));
var ErrorSeverity =
/* istanbul ignore next */
(/*#__PURE__*/cov_2pf6b77u9z().s[27]++, function (ErrorSeverity) {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[13]++;
  cov_2pf6b77u9z().s[28]++;
  ErrorSeverity["LOW"] = "low";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[29]++;
  ErrorSeverity["MEDIUM"] = "medium";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[30]++;
  ErrorSeverity["HIGH"] = "high";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[31]++;
  ErrorSeverity["CRITICAL"] = "critical";
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[32]++;
  return ErrorSeverity;
}({}));
class ConsoleErrorLogger {
  logError(error, additionalContext) {
    /* istanbul ignore next */
    cov_2pf6b77u9z().f[14]++;
    const logData =
    /* istanbul ignore next */
    (cov_2pf6b77u9z().s[33]++, {
      timestamp: new Date().toISOString(),
      category: error.category,
      severity: error.severity,
      errorCode: error.errorCode,
      userMessage: error.userMessage,
      technicalMessage: error.technicalMessage,
      retryable: error.retryable,
      originalError: error.originalError,
      context: error.context,
      additionalContext
    });
    /* istanbul ignore next */
    cov_2pf6b77u9z().s[34]++;
    switch (error.severity) {
      case "critical":
        /* istanbul ignore next */
        cov_2pf6b77u9z().b[0][0]++;
      case "high":
        /* istanbul ignore next */
        cov_2pf6b77u9z().b[0][1]++;
        cov_2pf6b77u9z().s[35]++;
        console.error('[TryOn Error]', logData);
        /* istanbul ignore next */
        cov_2pf6b77u9z().s[36]++;
        break;
      case "medium":
        /* istanbul ignore next */
        cov_2pf6b77u9z().b[0][2]++;
        cov_2pf6b77u9z().s[37]++;
        console.warn('[TryOn Warning]', logData);
        /* istanbul ignore next */
        cov_2pf6b77u9z().s[38]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2pf6b77u9z().b[0][3]++;
        cov_2pf6b77u9z().s[39]++;
        console.info('[TryOn Info]', logData);
    }
  }
}
/**
 * Global error logger instance
 */
let errorLogger =
/* istanbul ignore next */
(cov_2pf6b77u9z().s[40]++, new ConsoleErrorLogger());
function setErrorLogger(logger) {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[15]++;
  cov_2pf6b77u9z().s[41]++;
  errorLogger = logger;
}
function getErrorLogger() {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[16]++;
  cov_2pf6b77u9z().s[42]++;
  return errorLogger;
}
function classifyTryonError(error, context) {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[17]++;
  cov_2pf6b77u9z().s[43]++;
  // Handle known error types
  if (error instanceof _image.FileTypeNotSupportedError) {
    /* istanbul ignore next */
    cov_2pf6b77u9z().b[1][0]++;
    cov_2pf6b77u9z().s[44]++;
    return {
      originalError: error,
      category: "validation",
      severity: "low",
      userMessage: 'Please select a valid image file (JPEG, PNG, WebP, or GIF).',
      technicalMessage: `File type validation failed: ${error.message}`,
      errorCode: 'INVALID_FILE_TYPE',
      retryable: false,
      recoveryActions: [{
        type: 'try_different_image',
        description: 'Select a different image file in JPEG, PNG, WebP, or GIF format'
      }],
      context
    };
  } else
  /* istanbul ignore next */
  {
    cov_2pf6b77u9z().b[1][1]++;
  }
  cov_2pf6b77u9z().s[45]++;
  if (error instanceof _image.FileTooLargeError) {
    /* istanbul ignore next */
    cov_2pf6b77u9z().b[2][0]++;
    cov_2pf6b77u9z().s[46]++;
    return {
      originalError: error,
      category: "validation",
      severity: "medium",
      userMessage: 'Image file is too large. Please select an image under 5MB or try compressing it.',
      technicalMessage: `File size validation failed: ${error.message}`,
      errorCode: 'FILE_TOO_LARGE',
      retryable: false,
      recoveryActions: [{
        type: 'reduce_image_size',
        description: 'Compress or resize your image to under 5MB'
      }, {
        type: 'try_different_image',
        description: 'Select a smaller image file'
      }],
      context
    };
  } else
  /* istanbul ignore next */
  {
    cov_2pf6b77u9z().b[2][1]++;
  }
  cov_2pf6b77u9z().s[47]++;
  if (error instanceof _imageProcessing.ImageDimensionError) {
    /* istanbul ignore next */
    cov_2pf6b77u9z().b[3][0]++;
    cov_2pf6b77u9z().s[48]++;
    return {
      originalError: error,
      category: "validation",
      severity: "medium",
      userMessage: 'Image dimensions are not suitable. Please use an image that is at least 512x512 pixels.',
      technicalMessage: `Image dimension validation failed: ${error.message}`,
      errorCode: 'INVALID_DIMENSIONS',
      retryable: false,
      recoveryActions: [{
        type: 'try_different_image',
        description: 'Select an image with dimensions of at least 512x512 pixels'
      }],
      context
    };
  } else
  /* istanbul ignore next */
  {
    cov_2pf6b77u9z().b[3][1]++;
  }
  cov_2pf6b77u9z().s[49]++;
  if (
  /* istanbul ignore next */
  (cov_2pf6b77u9z().b[5][0]++, error instanceof _image.CompressionFailedError) ||
  /* istanbul ignore next */
  (cov_2pf6b77u9z().b[5][1]++, error instanceof _imageProcessing.ImageProcessingError)) {
    /* istanbul ignore next */
    cov_2pf6b77u9z().b[4][0]++;
    cov_2pf6b77u9z().s[50]++;
    return {
      originalError: error,
      category: "image_processing",
      severity: "medium",
      userMessage: 'Unable to process the image. Please try a different image or reduce the file size.',
      technicalMessage: `Image processing failed: ${error.message}`,
      errorCode: 'IMAGE_PROCESSING_FAILED',
      retryable: false,
      recoveryActions: [{
        type: 'try_different_image',
        description: 'Try selecting a different image'
      }, {
        type: 'reduce_image_size',
        description: 'Use a smaller or simpler image'
      }],
      context
    };
  } else
  /* istanbul ignore next */
  {
    cov_2pf6b77u9z().b[4][1]++;
  }
  // Handle TryonMutationError (API errors)
  cov_2pf6b77u9z().s[51]++;
  if (
  /* istanbul ignore next */
  (cov_2pf6b77u9z().b[7][0]++, error) &&
  /* istanbul ignore next */
  (cov_2pf6b77u9z().b[7][1]++, typeof error === 'object') &&
  /* istanbul ignore next */
  (cov_2pf6b77u9z().b[7][2]++, 'error' in error)) {
    /* istanbul ignore next */
    cov_2pf6b77u9z().b[6][0]++;
    const mutationError =
    /* istanbul ignore next */
    (cov_2pf6b77u9z().s[52]++, error);
    // Rate limiting
    /* istanbul ignore next */
    cov_2pf6b77u9z().s[53]++;
    if (mutationError.status === 429) {
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[8][0]++;
      cov_2pf6b77u9z().s[54]++;
      return {
        originalError: error,
        category: "rate_limit",
        severity: "medium",
        userMessage: 'Too many requests. Please wait a moment before trying again.',
        technicalMessage: 'Rate limit exceeded',
        errorCode: 'RATE_LIMITED',
        retryable: true,
        recoveryActions: [{
          type: 'wait_and_retry',
          description: 'Wait 60 seconds and try again',
          automated: true,
          waitTime: 60
        }],
        context
      };
    } else
    /* istanbul ignore next */
    {
      cov_2pf6b77u9z().b[8][1]++;
    }
    // Server errors
    cov_2pf6b77u9z().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[10][0]++, mutationError.status) &&
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[10][1]++, mutationError.status >= 500)) {
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[9][0]++;
      cov_2pf6b77u9z().s[56]++;
      return {
        originalError: error,
        category: "api_server",
        severity: "high",
        userMessage: 'Server is temporarily unavailable. Please try again in a few moments.',
        technicalMessage: `Server error: ${mutationError.error}`,
        errorCode: 'SERVER_ERROR',
        retryable: true,
        recoveryActions: [{
          type: 'retry',
          description: 'Try again in a few moments',
          automated: true,
          waitTime: 30
        }, {
          type: 'check_connection',
          description: 'Check your internet connection'
        }],
        context
      };
    } else
    /* istanbul ignore next */
    {
      cov_2pf6b77u9z().b[9][1]++;
    }
    // Client errors (400-499)
    cov_2pf6b77u9z().s[57]++;
    if (
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[12][0]++, mutationError.status) &&
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[12][1]++, mutationError.status >= 400) &&
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[12][2]++, mutationError.status < 500)) {
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[11][0]++;
      cov_2pf6b77u9z().s[58]++;
      return {
        originalError: error,
        category: "validation",
        severity: "medium",
        userMessage: 'Request could not be processed. Please check your images and try again.',
        technicalMessage: `Client error: ${mutationError.error}`,
        errorCode: 'CLIENT_ERROR',
        retryable: false,
        recoveryActions: [{
          type: 'try_different_image',
          description: 'Try using different images'
        }],
        context
      };
    } else
    /* istanbul ignore next */
    {
      cov_2pf6b77u9z().b[11][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2pf6b77u9z().b[6][1]++;
  }
  // Handle network/timeout errors
  cov_2pf6b77u9z().s[59]++;
  if (error instanceof Error) {
    /* istanbul ignore next */
    cov_2pf6b77u9z().b[13][0]++;
    const message =
    /* istanbul ignore next */
    (cov_2pf6b77u9z().s[60]++, error.message.toLowerCase());
    /* istanbul ignore next */
    cov_2pf6b77u9z().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[15][0]++, message.includes('timeout')) ||
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[15][1]++, message.includes('aborted'))) {
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[14][0]++;
      cov_2pf6b77u9z().s[62]++;
      return {
        originalError: error,
        category: "timeout",
        severity: "medium",
        userMessage: 'Request timed out. Please check your connection and try again.',
        technicalMessage: `Timeout error: ${error.message}`,
        errorCode: 'REQUEST_TIMEOUT',
        retryable: true,
        recoveryActions: [{
          type: 'check_connection',
          description: 'Check your internet connection'
        }, {
          type: 'retry',
          description: 'Try again with a stable connection',
          automated: true,
          waitTime: 10
        }],
        context
      };
    } else
    /* istanbul ignore next */
    {
      cov_2pf6b77u9z().b[14][1]++;
    }
    cov_2pf6b77u9z().s[63]++;
    if (
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[17][0]++, message.includes('network')) ||
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[17][1]++, message.includes('fetch')) ||
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[17][2]++, message.includes('connection'))) {
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[16][0]++;
      cov_2pf6b77u9z().s[64]++;
      return {
        originalError: error,
        category: "network",
        severity: "medium",
        userMessage: 'Network connection issue. Please check your internet and try again.',
        technicalMessage: `Network error: ${error.message}`,
        errorCode: 'NETWORK_ERROR',
        retryable: true,
        recoveryActions: [{
          type: 'check_connection',
          description: 'Check your internet connection'
        }, {
          type: 'retry',
          description: 'Try again when connection is stable',
          automated: true,
          waitTime: 15
        }],
        context
      };
    } else
    /* istanbul ignore next */
    {
      cov_2pf6b77u9z().b[16][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2pf6b77u9z().b[13][1]++;
  }
  // Unknown error fallback
  cov_2pf6b77u9z().s[65]++;
  return {
    originalError: error,
    category: "unknown",
    severity: "high",
    userMessage: 'An unexpected error occurred. Please try again or contact support if the problem persists.',
    technicalMessage: error instanceof Error ?
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[18][0]++, error.message) :
    /* istanbul ignore next */
    (cov_2pf6b77u9z().b[18][1]++, 'Unknown error occurred'),
    errorCode: 'UNKNOWN_ERROR',
    retryable: true,
    recoveryActions: [{
      type: 'retry',
      description: 'Try the operation again'
    }, {
      type: 'contact_support',
      description: 'Contact support if the problem continues'
    }],
    context
  };
}
function logAndClassifyError(error, context) {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[18]++;
  const classifiedError =
  /* istanbul ignore next */
  (cov_2pf6b77u9z().s[66]++, classifyTryonError(error, context));
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[67]++;
  errorLogger.logError(classifiedError, context);
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[68]++;
  return classifiedError;
}
function getUserFriendlyErrorMessage(error) {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[19]++;
  const classified =
  /* istanbul ignore next */
  (cov_2pf6b77u9z().s[69]++, classifyTryonError(error));
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[70]++;
  return classified.userMessage;
}
function isErrorRetryable(error) {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[20]++;
  const classified =
  /* istanbul ignore next */
  (cov_2pf6b77u9z().s[71]++, classifyTryonError(error));
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[72]++;
  return classified.retryable;
}
function getErrorRecoveryActions(error) {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[21]++;
  const classified =
  /* istanbul ignore next */
  (cov_2pf6b77u9z().s[73]++, classifyTryonError(error));
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[74]++;
  return classified.recoveryActions;
}
function formatErrorForDisplay(error) {
  /* istanbul ignore next */
  cov_2pf6b77u9z().f[22]++;
  const classified =
  /* istanbul ignore next */
  (cov_2pf6b77u9z().s[75]++, classifyTryonError(error));
  let title;
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[76]++;
  switch (classified.category) {
    case "validation":
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[19][0]++;
      cov_2pf6b77u9z().s[77]++;
      title = 'Invalid Input';
      /* istanbul ignore next */
      cov_2pf6b77u9z().s[78]++;
      break;
    case "network":
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[19][1]++;
      cov_2pf6b77u9z().s[79]++;
      title = 'Connection Issue';
      /* istanbul ignore next */
      cov_2pf6b77u9z().s[80]++;
      break;
    case "timeout":
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[19][2]++;
      cov_2pf6b77u9z().s[81]++;
      title = 'Request Timed Out';
      /* istanbul ignore next */
      cov_2pf6b77u9z().s[82]++;
      break;
    case "api_server":
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[19][3]++;
      cov_2pf6b77u9z().s[83]++;
      title = 'Server Error';
      /* istanbul ignore next */
      cov_2pf6b77u9z().s[84]++;
      break;
    case "image_processing":
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[19][4]++;
      cov_2pf6b77u9z().s[85]++;
      title = 'Image Processing Error';
      /* istanbul ignore next */
      cov_2pf6b77u9z().s[86]++;
      break;
    case "rate_limit":
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[19][5]++;
      cov_2pf6b77u9z().s[87]++;
      title = 'Too Many Requests';
      /* istanbul ignore next */
      cov_2pf6b77u9z().s[88]++;
      break;
    default:
      /* istanbul ignore next */
      cov_2pf6b77u9z().b[19][6]++;
      cov_2pf6b77u9z().s[89]++;
      title = 'Error';
  }
  /* istanbul ignore next */
  cov_2pf6b77u9z().s[90]++;
  return {
    title,
    message: classified.userMessage,
    actions: classified.recoveryActions,
    canRetry: classified.retryable
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,