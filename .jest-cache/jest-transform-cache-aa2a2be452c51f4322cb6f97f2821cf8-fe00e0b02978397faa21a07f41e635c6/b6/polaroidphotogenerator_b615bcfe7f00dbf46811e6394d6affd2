d146442cd0313307bd8ca1cee83e185c
"use client";
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "PolaroidPhotoGenerator", {
    enumerable: true,
    get: function() {
        return PolaroidPhotoGenerator;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _utils = require("../../lib/utils");
const _react = require("react");
const _button = require("./button");
const _image = /*#__PURE__*/ _interop_require_default(require("next/image"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function PolaroidPhotoGenerator({ className, onGenerationStart, onGenerationComplete, onClose, onRetry, isGenerating = false, mockImageUrl, generatedImage, isLoading = false, hasError = false }) {
    const [imgLoaded, setImgLoaded] = (0, _react.useState)(false);
    const [showButtons, setShowButtons] = (0, _react.useState)(false);
    const [progress, setProgress] = (0, _react.useState)(0);
    // Debug logging
    console.log('PolaroidPhotoGenerator props:', {
        generatedImage: generatedImage ? `base64 (${generatedImage.length} chars)` : 'null',
        isGenerating,
        isLoading
    });
    // Handle generatedImage changes - show immediately when available
    (0, _react.useEffect)(()=>{
        if (generatedImage != null) {
            console.log('Generated image available, showing immediately');
            setShowButtons(true);
            setImgLoaded(false) // Will be set to true when image loads
            ;
            // Call onGenerationComplete immediately without delay
            if (onGenerationComplete) {
                const fullImageUrl = `data:image/png;base64,${generatedImage}`;
                onGenerationComplete(fullImageUrl);
            }
        } else {
            setShowButtons(false);
        }
    }, [
        generatedImage,
        onGenerationComplete
    ]);
    // Handle generation start and progress
    (0, _react.useEffect)(()=>{
        if (isGenerating && onGenerationStart) {
            onGenerationStart();
            setProgress(0);
            // Start progress animation
            const interval = setInterval(()=>{
                setProgress((prev)=>{
                    if (prev >= 100) {
                        clearInterval(interval);
                        return 100;
                    }
                    return prev + 2;
                });
            }, 60) // Update every 60ms for smooth animation
            ;
            return ()=>clearInterval(interval);
        } else {
            setProgress(0);
        }
    }, [
        isGenerating,
        onGenerationStart
    ]);
    const handleRetry = ()=>{
        setImgLoaded(false);
        setShowButtons(false);
        if (onRetry) {
            onRetry();
        }
    };
    const handleImageLoad = (e)=>{
        const img = e.currentTarget;
        console.log('Image loaded successfully');
        console.log('Image dimensions:', {
            naturalWidth: img.naturalWidth,
            naturalHeight: img.naturalHeight,
            clientWidth: img.clientWidth,
            clientHeight: img.clientHeight
        });
        setImgLoaded(true);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: (0, _utils.cn)("relative flex flex-col items-center", className),
        "data-testid": "polaroid-generator",
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "relative bg-white p-6 w-[475px] h-[550px] flex flex-col shadow-lg rounded-sm",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        className: "relative w-full h-[400px] overflow-hidden rounded-sm bg-gray-100",
                        children: [
                            isGenerating && !generatedImage && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "absolute inset-0 flex items-center justify-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                                        src: mockImageUrl || '/images/demo/WillShalom.jpg',
                                        alt: "Generated try-on preview",
                                        fill: true,
                                        className: "object-contain rounded-sm opacity-50",
                                        "aria-busy": "true",
                                        unoptimized: true
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "absolute inset-0 flex items-center justify-center bg-black bg-opacity-20",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "text-center",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "animate-spin rounded-full h-12 w-12 border-b-2 border-[var(--color-susfit-pink-500)] mx-auto mb-4"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "text-gray-600 font-mono",
                                                    children: "Generating..."
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "mt-4 w-48 h-2 bg-gray-300 rounded-full overflow-hidden",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                        className: "h-full bg-gradient-to-r from-[var(--color-susfit-pink-500)] to-[var(--color-susfit-teal-500)] transition-all duration-300 ease-out",
                                                        style: {
                                                            width: `${progress}%`
                                                        },
                                                        "data-testid": "progress-bar"
                                                    })
                                                })
                                            ]
                                        })
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "absolute inset-0 animate-pulse bg-gray-200 rounded-sm"
                                    })
                                ]
                            }),
                            isLoading && !generatedImage && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                className: "absolute inset-0 flex items-center justify-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                                        src: mockImageUrl || '/images/demo/WillShalom.jpg',
                                        alt: "Generated try-on preview",
                                        fill: true,
                                        className: "object-contain rounded-sm opacity-50",
                                        "aria-busy": "true",
                                        unoptimized: true
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "absolute inset-0 flex items-center justify-center bg-black bg-opacity-20",
                                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                            className: "text-center",
                                            children: [
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "animate-pulse rounded-full h-12 w-12 bg-[var(--color-susfit-pink-500)] mx-auto mb-4"
                                                }),
                                                /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                    className: "text-gray-600 font-mono",
                                                    children: "Loading..."
                                                })
                                            ]
                                        })
                                    })
                                ]
                            }),
                            generatedImage && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "absolute inset-0 flex items-center justify-center",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                                    src: `data:image/png;base64,${generatedImage}`,
                                    alt: "Generated try-on preview",
                                    fill: true,
                                    className: `object-contain rounded-sm transition-opacity duration-300 ${imgLoaded ? 'opacity-100' : 'opacity-0'}`,
                                    onLoad: handleImageLoad,
                                    onError: (e)=>{
                                        console.error('Image failed to load:', e);
                                        console.error('Generated image length:', generatedImage?.length || 0);
                                    },
                                    unoptimized: true,
                                    "data-test": "generated-image"
                                })
                            }),
                            !generatedImage && !isGenerating && !isLoading && mockImageUrl === undefined && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "absolute inset-0 flex items-center justify-center",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_image.default, {
                                    src: "/images/demo/WillShalom.jpg",
                                    alt: "Generated try-on preview",
                                    fill: true,
                                    className: "object-contain rounded-sm",
                                    unoptimized: true
                                })
                            }),
                            !generatedImage && !isGenerating && !isLoading && mockImageUrl !== undefined && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "absolute inset-0 flex items-center justify-center",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "text-gray-400 font-mono text-center",
                                    children: "Ready to generate"
                                })
                            }),
                            hasError && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                className: "absolute inset-0 flex items-center justify-center",
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                    className: "text-red-500 font-mono text-center",
                                    children: "Failed to generate image"
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        className: "h-[70px] bg-white flex items-center justify-center",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "text-lg text-gray-600 font-mono",
                            children: [
                                isGenerating && !generatedImage && !isLoading && "Processing...",
                                isLoading && !isGenerating && !generatedImage && "Loading...",
                                generatedImage && "Complete!",
                                !isGenerating && !isLoading && !generatedImage && "Ready to generate"
                            ]
                        })
                    })
                ]
            }),
            showButtons && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mt-4 flex gap-2 justify-center",
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                        onClick: handleRetry,
                        className: "bg-[var(--color-susfit-pink-500)] hover:bg-[var(--color-susfit-pink-800)] text-black border-2 border-black font-bold text-sm px-3 py-1 transition-all duration-200",
                        "aria-label": "Retry generation",
                        children: "Retry"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)(_button.Button, {
                        onClick: onClose,
                        className: "bg-[var(--color-susfit-teal-500)] hover:bg-[var(--color-susfit-teal-800)] text-white border-2 border-black font-bold text-sm px-3 py-1 transition-all duration-200",
                        "aria-label": "Close polaroid",
                        children: "Close"
                    })
                ]
            }),
            generatedImage && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "mt-4 text-center",
                "aria-live": "polite",
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                    onClick: onRetry,
                    className: "text-sm underline text-blue-600 hover:text-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded px-2 py-1 transition-colors duration-200",
                    "aria-label": "Try another outfit",
                    children: "Try another outfit"
                })
            }),
            process.env.NODE_ENV === 'development' && /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "mt-2 text-xs text-gray-500 font-mono text-center",
                children: [
                    "Loading: ",
                    isLoading ? '✅' : '❌',
                    " | Generating: ",
                    isGenerating ? '✅' : '❌',
                    " | Generated: ",
                    generatedImage ? '✅' : '❌'
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,