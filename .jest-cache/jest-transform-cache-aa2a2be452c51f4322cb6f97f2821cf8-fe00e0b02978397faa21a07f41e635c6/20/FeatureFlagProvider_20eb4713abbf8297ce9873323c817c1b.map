{"version":3,"sources":["/Users/willstreeter/WebstormProjects/vibe-coding/those-people/The-Sus-Fit-gp/src/business-layer/providers/FeatureFlagProvider.tsx"],"sourcesContent":["'use client';\n\nimport React, { useMemo, useCallback } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { FeatureFlagContext } from './FeatureFlagContext';\nimport { ErrorBoundary } from './ErrorBoundary';\nimport type {\n  FeatureFlag,\n  FeatureFlagConfig,\n  FeatureFlagCollection,\n  FeatureFlagProviderConfig,\n  FeatureFlagContextValue,\n  FeatureFlagValue,\n  Environment,\n} from '../types/featureFlag.types';\nimport {\n  DEFAULT_TRYON_FLAGS,\n  DEFAULT_IMAGE_PROCESSING_FLAGS,\n  DEFAULT_UI_FLAGS,\n} from '../types/featureFlag.types';\nimport { QUERY_KEYS } from '../config/constants';\n\ninterface FeatureFlagProviderProps {\n  children: React.ReactNode;\n  config?: Partial<FeatureFlagProviderConfig>;\n  environment?: Environment;\n  initialFlags?: FeatureFlagConfig[];\n  enableRemoteConfig?: boolean;\n  fallbackToDefaults?: boolean;\n  onError?: (error: Error) => void;\n}\n\n// Default configuration\nconst DEFAULT_CONFIG: FeatureFlagProviderConfig = {\n  flags: [...DEFAULT_TRYON_FLAGS, ...DEFAULT_IMAGE_PROCESSING_FLAGS, ...DEFAULT_UI_FLAGS],\n  environment: (process.env.NODE_ENV as Environment) || 'development',\n  enableRemoteConfig: false,\n  refreshInterval: 5 * 60 * 1000, // 5 minutes\n  fallbackToDefaults: true,\n};\n\n// Utility function to create feature flag from config\nconst createFeatureFlagFromConfig = (\n  config: FeatureFlagConfig,\n  environment: Environment\n): FeatureFlag => {\n  // Check if flag is enabled for current environment\n  const isEnabledForEnvironment = !config.environment || \n    config.environment.includes(environment);\n\n  return {\n    key: config.key,\n    description: config.description,\n    category: config.category,\n    defaultValue: config.defaultValue,\n    type: config.type,\n    environment: config.environment,\n    enabled: isEnabledForEnvironment,\n    value: config.defaultValue,\n    lastUpdated: new Date().toISOString(),\n  };\n};\n\n// Mock function for remote config fetching (to be implemented)\nconst fetchRemoteFlags = async (url?: string): Promise<FeatureFlagConfig[]> => {\n  // TODO: Implement actual remote config fetching\n  if (!url) {\n    throw new Error('Remote config URL not provided');\n  }\n  \n  // For now, return empty array - this would be replaced with actual API call\n  return [];\n};\n\n// Environment variable parser for feature flags\nconst parseEnvironmentFlags = (): Partial<Record<string, FeatureFlagValue>> => {\n  const envFlags: Record<string, FeatureFlagValue> = {};\n  \n  // Parse environment variables with FEATURE_FLAG_ prefix\n  Object.entries(process.env).forEach(([key, value]) => {\n    if (key.startsWith('FEATURE_FLAG_') && value !== undefined) {\n      const flagKey = key.replace('FEATURE_FLAG_', '').toLowerCase();\n      \n      // Try to parse as boolean\n      if (value === 'true' || value === 'false') {\n        envFlags[flagKey] = value === 'true';\n      }\n      // Try to parse as number\n      else if (!isNaN(Number(value))) {\n        envFlags[flagKey] = Number(value);\n      }\n      // Treat as string\n      else {\n        envFlags[flagKey] = value;\n      }\n    }\n  });\n  \n  return envFlags;\n};\n\nconst FeatureFlagProviderContent: React.FC<FeatureFlagProviderProps> = ({\n  children,\n  config = {},\n  environment = DEFAULT_CONFIG.environment,\n  initialFlags = DEFAULT_CONFIG.flags,\n  enableRemoteConfig = DEFAULT_CONFIG.enableRemoteConfig,\n  fallbackToDefaults = DEFAULT_CONFIG.fallbackToDefaults,\n  onError,\n}) => {\n  const mergedConfig = useMemo(() => ({\n    ...DEFAULT_CONFIG,\n    ...config,\n    flags: initialFlags,\n    environment,\n    enableRemoteConfig,\n    fallbackToDefaults,\n  }), [config, environment, initialFlags, enableRemoteConfig, fallbackToDefaults]);\n\n  // Query for remote feature flags (if enabled)\n  const {\n    data: remoteFlags = [],\n    isLoading: isLoadingRemote,\n    error: remoteError,\n    refetch: refetchRemoteFlags,\n  } = useQuery({\n    queryKey: [...QUERY_KEYS.FEATURE_FLAGS, 'remote', mergedConfig.remoteConfigUrl],\n    queryFn: () => fetchRemoteFlags(mergedConfig.remoteConfigUrl),\n    enabled: enableRemoteConfig && !!mergedConfig.remoteConfigUrl,\n    staleTime: mergedConfig.refreshInterval,\n    retry: 2,\n    retryDelay: 1000,\n  });\n\n  // Combine local and remote flags with environment overrides\n  const combinedFlags = useMemo((): FeatureFlagCollection => {\n    const envFlags = parseEnvironmentFlags();\n    const allConfigs = [...mergedConfig.flags, ...remoteFlags];\n    const flagMap: FeatureFlagCollection = {};\n\n    // Create flags from configurations\n    allConfigs.forEach((flagConfig) => {\n      const flag = createFeatureFlagFromConfig(flagConfig, environment);\n      \n      // Override with environment variable if available\n      const envValue = envFlags[flagConfig.key.toLowerCase()];\n      if (envValue !== undefined) {\n        flag.value = envValue;\n      }\n      \n      flagMap[flagConfig.key] = flag;\n    });\n\n    return flagMap;\n  }, [mergedConfig.flags, remoteFlags, environment]);\n\n  // Context value implementation\n  const contextValue = useMemo((): FeatureFlagContextValue => {\n    const getFlag = <T extends FeatureFlagValue>(key: string): FeatureFlag<T> | undefined => {\n      const flag = combinedFlags[key];\n      return flag as FeatureFlag<T> | undefined;\n    };\n\n    const isEnabled = (key: string): boolean => {\n      const flag = combinedFlags[key];\n      return flag ? flag.enabled && Boolean(flag.value) : false;\n    };\n\n    const getValue = <T extends FeatureFlagValue>(key: string, defaultValue?: T): T => {\n      const flag = combinedFlags[key];\n      if (!flag || !flag.enabled) {\n        return defaultValue as T;\n      }\n      return flag.value as T;\n    };\n\n    const updateFlag = (key: string, value: FeatureFlagValue): void => {\n      const flag = combinedFlags[key];\n      if (flag) {\n        flag.value = value;\n        flag.lastUpdated = new Date().toISOString();\n      }\n    };\n\n    const refreshFlags = async (): Promise<void> => {\n      if (enableRemoteConfig) {\n        await refetchRemoteFlags();\n      }\n    };\n\n    return {\n      flags: combinedFlags,\n      getFlag,\n      isEnabled,\n      getValue,\n      updateFlag,\n      refreshFlags,\n      isLoading: isLoadingRemote,\n      error: remoteError instanceof Error ? remoteError : null,\n    };\n  }, [combinedFlags, isLoadingRemote, remoteError, refetchRemoteFlags, enableRemoteConfig]);\n\n  // Handle errors\n  React.useEffect(() => {\n    if (remoteError && onError) {\n      onError(remoteError instanceof Error ? remoteError : new Error('Unknown feature flag error'));\n    }\n  }, [remoteError, onError]);\n\n  return (\n    <FeatureFlagContext.Provider value={contextValue}>\n      {children}\n    </FeatureFlagContext.Provider>\n  );\n};\n\n// Main provider component with error boundary\nexport const FeatureFlagProvider: React.FC<FeatureFlagProviderProps> = (props) => {\n  const { onError, fallbackToDefaults = true } = props;\n\n  const handleError = useCallback((error: Error) => {\n    console.error('FeatureFlagProvider Error:', error);\n    onError?.(error);\n  }, [onError]);\n\n  // Fallback component for error boundary\n  const ErrorFallback = useCallback(({ error, resetError }: { error: Error; resetError: () => void }) => {\n    if (!fallbackToDefaults) {\n      return (\n        <div className=\"feature-flag-error\">\n          <h3>Feature Flag Error</h3>\n          <p>{error.message}</p>\n          <button onClick={resetError}>Retry</button>\n        </div>\n      );\n    }\n\n    // Render children with default flags only\n    return (\n      <FeatureFlagProviderContent\n        {...props}\n        enableRemoteConfig={false}\n        config={{ ...props.config, enableRemoteConfig: false }}\n      />\n    );\n  }, [fallbackToDefaults, props]);\n\n  return (\n    <ErrorBoundary onError={handleError} fallback={ErrorFallback}>\n      <FeatureFlagProviderContent {...props} />\n    </ErrorBoundary>\n  );\n};\n\n// Export types for convenience\nexport type { FeatureFlagProviderProps };"],"names":["FeatureFlagProvider","DEFAULT_CONFIG","flags","DEFAULT_TRYON_FLAGS","DEFAULT_IMAGE_PROCESSING_FLAGS","DEFAULT_UI_FLAGS","environment","process","env","NODE_ENV","enableRemoteConfig","refreshInterval","fallbackToDefaults","createFeatureFlagFromConfig","config","isEnabledForEnvironment","includes","key","description","category","defaultValue","type","enabled","value","lastUpdated","Date","toISOString","fetchRemoteFlags","url","Error","parseEnvironmentFlags","envFlags","Object","entries","forEach","startsWith","undefined","flagKey","replace","toLowerCase","isNaN","Number","FeatureFlagProviderContent","children","initialFlags","onError","mergedConfig","useMemo","data","remoteFlags","isLoading","isLoadingRemote","error","remoteError","refetch","refetchRemoteFlags","useQuery","queryKey","QUERY_KEYS","FEATURE_FLAGS","remoteConfigUrl","queryFn","staleTime","retry","retryDelay","combinedFlags","allConfigs","flagMap","flagConfig","flag","envValue","contextValue","getFlag","isEnabled","Boolean","getValue","updateFlag","refreshFlags","React","useEffect","FeatureFlagContext","Provider","props","handleError","useCallback","console","ErrorFallback","resetError","div","className","h3","p","message","button","onClick","ErrorBoundary","fallback"],"mappings":"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"}