<context>
# Feature: Selfie

Selfie helps Gen Z users capture their selfies instantly by providing an intuitive camera interface.

## Users

### Primary Customers

- **Gen Z (Ages 16-24):** Digital natives who prioritize visual self image.

### User Personas

**Jordan (16-20 years old)**
- **Role:** High School Student / Content Creator
- **Context:** Building personal brand through visual content
- **Pain Points:** Complex photo capturing apps with time-consuming workflows
- **Goals:** Create stunning selfies quickly

## The Problem

### Too many steps to take selfie

Many Gen Z users struggle with taking high-quality selfies quickly due to the steps required.

**Our Solution:** Open and Snap instantly 

## Differentiators

### Minimalist but Cool UI

Our interface prioritizes speed and coolness - the core values of Gen Z users. This leads to 3x higher daily active usage.

## Key Features

### Core Features

- **Minimalist Camera Interface**: open and snap a picture; no other distractions.
- **Cool Design**: UI is visually pleasing to look at and never a distraction.
</context>

<PRD>
# Technical Architecture

This feature must be implemented as an extension of the Primary Technical Architecture (PTA) 
defined in the main product specification, @.taskmaster/docs/prd-main.txt. 
It should build upon and integrate with the existing architectureâ€”not override or 
replace any core components or patterns.

## Media & Camera

### Camera Access
- **API:** MediaDevices API

### Image Processing
- **Library:** Canvas API + WebGL
- **Compression:** Browser-native image compression

## Assets & Media

### Image Storage
- **Provider:** local storage only

# Development Roadmap

## Phase 1: Core MVP (4 weeks)

**Goal:** Deliver a functional selfie capture and display application
**Success Criteria:** Users can take selfies and view them

### Must-Have Features

- [ ] Camera Access - Enable device camera through MediaDevices API `M`
- [ ] Basic Photo Capture - Capture and display selfies; do not persist the photo. `S`
- [ ] Responsive Design - Mobile-first responsive interface `M`

### Should-Have Features

- [ ] Photo Download - Allow user to save photo to device `XS`
- [ ] Loading States - Proper loading indicators `XS`

### Dependencies
- None
</PRD>