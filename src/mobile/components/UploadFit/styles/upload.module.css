/**
 * @fileoverview UploadFit CSS Module - Mobile-Only Responsive Design System
 * @version 1.0.0
 * 
 * Mobile-first (and mobile-only) design using the shared brutalist design system.
 * This component is specifically for mobile phones only - tablets use desktop views.
 * 
 * Features:
 * - Phone-only responsive design (320px - 480px)
 * - Media queries for responsive design (container queries not supported in PostCSS)
 * - CSS Grid and Flexbox optimized for mobile
 * - Brutalist design system integration
 * - Performance optimized for mobile devices
 */

/* Import shared design tokens */
@import '../../styles/design-tokens.css';

/* =============================================================================
 * MOBILE RESPONSIVE DESIGN (Using media queries for wider support)
 * ============================================================================= */

/* Container queries not yet fully supported in PostCSS preset */

/* =============================================================================
 * BASE CONTAINER SYSTEM (Mobile-Only)
 * ============================================================================= */

.uploadContainer {
  /* Container setup with design tokens */
  font-family: var(--font-family-system);
  color: var(--color-text);
  background-color: var(--color-background);
  min-height: 100dvh; /* Dynamic viewport height for mobile */
  position: relative;
  
  /* CSS Grid layout optimized for mobile */
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: auto 1fr auto;
  grid-template-areas:
    "header"
    "content"
    "actions";
  gap: var(--spacing-lg);
  padding: var(--spacing-lg);
  
/* Container queries removed for PostCSS compatibility */
}

/* Mobile viewport optimizations */
@media (max-width: 375px) {
  .uploadContainer {
    padding: var(--spacing-md);
    gap: var(--spacing-md);
  }
}

@media (min-width: 376px) and (max-width: 480px) {
  .uploadContainer {
    padding: var(--spacing-xl);
    gap: var(--spacing-xl);
  }
}

/* =============================================================================
 * MOBILE GRID AREAS
 * ============================================================================= */

.headerArea {
  grid-area: header;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-sm) 0;
  text-align: center;
}

.contentArea {
  grid-area: content;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-lg);
  padding: var(--spacing-lg);
  min-height: 280px;
  position: relative;
}

.actionsArea {
  grid-area: actions;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--spacing-lg);
  padding: var(--spacing-sm) 0;
}

/* Responsive grid area adjustments for different phone sizes */
@media (min-width: 375px) {
  .contentArea {
    min-height: 320px;
    padding: var(--spacing-xl);
  }
  
  .actionsArea {
    flex-direction: row;
    justify-content: center;
    flex-wrap: wrap;
  }
}

/* =============================================================================
 * MOBILE-OPTIMIZED FLEXBOX UTILITIES
 * ============================================================================= */

.flexCenter {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flexColumn {
  display: flex;
  flex-direction: column;
}

.flexRow {
  display: flex;
  flex-direction: row;
}

.flexBetween {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.flexWrap {
  flex-wrap: wrap;
}

.flexGap {
  gap: var(--spacing-lg);
}

.flexGapSm {
  gap: var(--spacing-sm);
}

.flexGapMd {
  gap: var(--spacing-md);
}

/* Mobile-specific flex adjustments */
@media (max-width: 375px) {
  .flexGap {
    gap: var(--spacing-md);
  }
}

/* =============================================================================
 * MOBILE PHOTO FRAME COMPONENT
 * ============================================================================= */

.photoFrame {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  border: var(--border-width) solid var(--color-border);
  border-radius: var(--border-radius);
  background-color: var(--color-background);
  box-shadow: var(--shadow-brutalist);
  
  /* Mobile-optimized dimensions */
  width: 100%;
  max-width: 340px;
  min-height: 280px;
  aspect-ratio: 3 / 4; /* Fit photo aspect ratio */
  
  /* Performance optimizations */
  contain: layout style paint;
  cursor: pointer;
  transition: var(--transition-fast);
  
  /* Touch optimizations */
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

.photoFrame:hover {
  transform: var(--transform-hover);
  box-shadow: var(--shadow-brutalist-hover);
}

.photoFrame:active {
  transform: var(--transform-active);
  box-shadow: var(--shadow-brutalist-active);
}

.photoFrame:focus-visible {
  outline: var(--focus-outline);
  outline-offset: var(--focus-outline-offset);
}

/* Mobile size adjustments using media queries */
@media (max-width: 340px) {
  .photoFrame {
    max-width: 90%;
    min-height: 240px;
  }
}

@media (min-width: 400px) {
  .photoFrame {
    max-width: 380px;
    min-height: 320px;
  }
}

/* Photo frame states */
.photoFrameDragActive {
  background-color: var(--color-success) !important;
  border-color: var(--color-border) !important;
  transform: var(--transform-scale-hover);
  box-shadow: var(--shadow-brutalist-large);
}

.photoFrameDragReject {
  background-color: var(--color-error) !important;
  border-color: var(--color-border) !important;
  animation: mobileShake 0.5s ease-in-out;
}

/* =============================================================================
 * MOBILE TYPOGRAPHY SYSTEM
 * ============================================================================= */

.title {
  font-family: var(--font-family-system);
  font-weight: var(--font-weight-black);
  font-size: var(--font-size-xl);
  line-height: var(--line-height-tight);
  text-transform: uppercase;
  letter-spacing: var(--letter-spacing-wider);
  color: var(--color-text);
  margin: 0 0 var(--spacing-md) 0;
  text-align: center;
}

.subtitle {
  font-family: var(--font-family-system);
  font-weight: var(--font-weight-bold);
  font-size: var(--font-size-base);
  line-height: var(--line-height-normal);
  color: var(--color-text-light);
  margin: 0 0 var(--spacing-lg) 0;
  text-align: center;
}

.text {
  font-family: var(--font-family-system);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-regular);
  line-height: var(--line-height-normal);
  color: var(--color-text);
}

.textBold {
  font-weight: var(--font-weight-bold);
}

.textCenter {
  text-align: center;
}

/* Mobile typography scaling */
@media (min-width: 400px) {
  .title {
    font-size: var(--font-size-2xl);
  }
  
  .subtitle {
    font-size: var(--font-size-lg);
  }
  
  .text {
    font-size: var(--font-size-base);
  }
}

/* =============================================================================
 * MOBILE BUTTON SYSTEM (Reusing UploadAngle Design)
 * ============================================================================= */

.uploadButton {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: var(--font-family-system);
  font-weight: var(--font-weight-black);
  font-size: var(--font-size-base);
  line-height: var(--line-height-normal);
  white-space: nowrap;
  cursor: pointer;
  transition: var(--transition-fast);
  text-decoration: none;
  user-select: none;
  outline: none;
  
  /* Brutalist button styling matching UploadAngle */
  border: 2px solid var(--color-black);
  border-radius: 2px;
  background-color: var(--color-pink-button);
  color: var(--color-black);
  box-shadow: var(--shadow-button);
  
  /* Mobile touch target optimization */
  min-width: 120px;
  min-height: var(--touch-target-min);
  padding: 12px 24px;
  gap: 8px;
  
  /* Touch optimizations */
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

.uploadButton:hover:not(.disabled) {
  background-color: var(--color-pink-button-hover);
  transform: var(--transform-hover);
  box-shadow: var(--shadow-button-hover);
}

.uploadButton:active:not(.disabled) {
  transform: translate(6px, 10px);
  box-shadow: var(--shadow-button-active);
}

.uploadButton:focus-visible {
  outline: var(--focus-outline);
  outline-offset: var(--focus-outline-offset);
}

.uploadButton.disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none !important;
  box-shadow: 4px 4px 0px var(--color-disabled) !important;
  background-color: var(--color-disabled) !important;
  border-color: var(--color-disabled-text) !important;
}

/* Mobile button size variants */
@media (max-width: 375px) {
  .uploadButton {
    min-width: 100px;
    padding: 10px 20px;
    font-size: var(--font-size-sm);
  }
}

/* =============================================================================
 * MOBILE LOADING STATES
 * ============================================================================= */

.loadingContainer {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-color: rgba(255, 255, 255, 0.9);
  z-index: var(--z-modal);
  gap: var(--spacing-md);
}

.spinner {
  width: 32px;
  height: 32px;
  border: var(--border-width) solid var(--color-text-light);
  border-top: var(--border-width) solid var(--color-primary);
  border-radius: 50%;
  animation: mobileSpinRotate 1s linear infinite;
}

@keyframes mobileSpinRotate {
  0% { 
    transform: rotate(0deg); 
  }
  100% { 
    transform: rotate(360deg); 
  }
}

/* Mobile shake animation */
@keyframes mobileShake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-4px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(4px);
  }
}

/* =============================================================================
 * MOBILE ACCESSIBILITY FEATURES
 * ============================================================================= */

.srOnly {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.focusVisible:focus-visible {
  outline: var(--focus-outline);
  outline-offset: var(--focus-outline-offset);
  z-index: var(--z-tooltip);
}

/* =============================================================================
 * MOBILE-SPECIFIC MEDIA QUERIES
 * ============================================================================= */

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  .photoFrame:hover,
  .photoFrame:active,
  .uploadButton:hover,
  .uploadButton:active {
    transform: none;
  }
  
  .spinner {
    animation: none;
  }
}

/* High contrast mode adjustments */
@media (prefers-contrast: high) {
  .photoFrame {
    border-width: var(--border-width-thick);
  }
  
  .uploadButton {
    border-width: var(--border-width-thick);
  }
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  .loadingContainer {
    background-color: rgba(26, 26, 26, 0.9);
  }
}

/* =============================================================================
 * PERFORMANCE OPTIMIZATIONS
 * ============================================================================= */

/* GPU acceleration for interactive elements */
.photoFrame,
.uploadButton {
  will-change: transform;
}

/* Remove will-change after interaction */
.photoFrame:not(:hover):not(:active),
.uploadButton:not(:hover):not(:active) {
  will-change: auto;
}

/* CSS containment for performance */
.contentArea {
  contain: layout;
}

.photoFrame {
  contain: layout style paint;
}

/* =============================================================================
 * MOBILE SAFE AREA SUPPORT (For notched devices)
 * ============================================================================= */

@supports (padding: max(0px)) {
  .uploadContainer {
    padding-top: max(var(--spacing-lg), env(safe-area-inset-top));
    padding-bottom: max(var(--spacing-lg), env(safe-area-inset-bottom));
    padding-left: max(var(--spacing-lg), env(safe-area-inset-left));
    padding-right: max(var(--spacing-lg), env(safe-area-inset-right));
  }
}