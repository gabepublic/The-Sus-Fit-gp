---
description: Guidelines for writing clean, maintainable, and human-readable code. Apply these rules when writing or reviewing code to ensure consistency and quality.
globs:
alwaysApply: false
---
# Clean Code Guidelines

## Constants Over Magic Numbers
- Use named constants instead of hard-coded values
- Choose descriptive names that clarify purpose
- Define constants at the top or in a separate file

## Meaningful Names
- Name variables, functions, and classes to reveal intent
- Explain *why* something exists or is used
- Avoid unclear abbreviations

## Smart Comments
- Let code speak for itselfâ€”comment only when necessary
- Explain *why*, not *what*
- Document complex logic, APIs, and side effects

## Single Responsibility
- Each function should do one thing well
- Keep Functions small and focused
- Split if it needs explanation

## DRY (Don't Repeat Yourself)
- Eliminate duplication with reusable functions
- Abstract shared logic
- Maintain single sources of truth

## Clean Structure
- Group related code
- Follow logical file/folder organization
- Use consistent naming

## Encapsulation
- Hide implementation details
- Expose clear, minimal interfaces
- Extract complex logic into named helpers

## Maintainability
- Refactor regularly
- Address technical debt early
- Leave code cleaner than you found it

## Testing
- Write tests before fixing bugs
- Write clear, maintainable tests
- Cover edge cases and error conditions

## Version Control
- Use clear, focused commit messages
- Make small, atomic commits
- Choose descriptive branch names 